[33mcommit 66578fe15831642bbaa0eac0e38d0ff343b4d9a8[m[33m ([m[1;36mHEAD -> [m[1;32mmain[m[33m, [m[1;31morigin/main[m[33m)[m
Author: galih17maliky <galih02maliky@gmail.com>
Date:   Mon Dec 14 00:03:25 2020 +0700

    Initial commit

[1mdiff --git a/.htaccess b/.htaccess[m
[1mnew file mode 100644[m
[1mindex 0000000..e90dff9[m
[1m--- /dev/null[m
[1m+++ b/.htaccess[m
[36m@@ -0,0 +1,4 @@[m
[32m+[m[32mRewriteEngine On[m
[32m+[m[32mRewriteCond %{REQUEST_FILENAME} !-f[m
[32m+[m[32mRewriteCond %{REQUEST_FILENAME} !-d[m
[32m+[m[32mRewriteRule ^(.*)$ index.php/$1 [L][m
[1mdiff --git a/_editorconfig b/_editorconfig[m
[1mnew file mode 100644[m
[1mindex 0000000..39f48d9[m
[1m--- /dev/null[m
[1m+++ b/_editorconfig[m
[36m@@ -0,0 +1,15 @@[m
[32m+[m[32m# top-most EditorConfig file[m
[32m+[m[32mroot = true[m
[32m+[m
[32m+[m[32m# Unix-style newlines with a newline ending every file[m
[32m+[m[32m[*][m
[32m+[m[32mend_of_line = lf[m
[32m+[m[32minsert_final_newline = true[m
[32m+[m
[32m+[m[32m# Matches multiple files with brace expansion notation[m
[32m+[m[32m# Set default charset[m
[32m+[m[32m[*][m
[32m+[m[32mcharset = utf-8[m
[32m+[m
[32m+[m[32m# Tab indentation (no size specified)[m
[32m+[m[32mindent_style = tab[m
[1mdiff --git a/_gitignore b/_gitignore[m
[1mnew file mode 100644[m
[1mindex 0000000..269044e[m
[1m--- /dev/null[m
[1m+++ b/_gitignore[m
[36m@@ -0,0 +1,31 @@[m
[32m+[m[32m.DS_Store[m
[32m+[m
[32m+[m[32mapplication/cache/*[m
[32m+[m[32m!application/cache/index.html[m
[32m+[m
[32m+[m[32mapplication/logs/*[m
[32m+[m[32m!application/logs/index.html[m
[32m+[m
[32m+[m[32m!application/*/.htaccess[m
[32m+[m
[32m+[m[32mcomposer.lock[m
[32m+[m
[32m+[m[32muser_guide_src/build/*[m
[32m+[m[32muser_guide_src/cilexer/build/*[m
[32m+[m[32muser_guide_src/cilexer/dist/*[m
[32m+[m[32muser_guide_src/cilexer/pycilexer.egg-info/*[m
[32m+[m[32m/vendor/[m
[32m+[m
[32m+[m[32m# IDE Files[m
[32m+[m[32m#-------------------------[m
[32m+[m[32m/nbproject/[m
[32m+[m[32m.idea/*[m
[32m+[m
[32m+[m[32m## Sublime Text cache files[m
[32m+[m[32m*.tmlanguage.cache[m
[32m+[m[32m*.tmPreferences.cache[m
[32m+[m[32m*.stTheme.cache[m
[32m+[m[32m*.sublime-workspace[m
[32m+[m[32m*.sublime-project[m
[32m+[m[32m/tests/tests/[m
[32m+[m[32m/tests/results/[m
[1mdiff --git a/application/cache/index.html b/application/cache/index.html[m
[1mnew file mode 100644[m
[1mindex 0000000..b702fbc[m
[1m--- /dev/null[m
[1m+++ b/application/cache/index.html[m
[36m@@ -0,0 +1,11 @@[m
[32m+[m[32m<!DOCTYPE html>[m
[32m+[m[32m<html>[m
[32m+[m[32m<head>[m
[32m+[m	[32m<title>403 Forbidden</title>[m
[32m+[m[32m</head>[m
[32m+[m[32m<body>[m
[32m+[m
[32m+[m[32m<p>Directory access is forbidden.</p>[m
[32m+[m
[32m+[m[32m</body>[m
[32m+[m[32m</html>[m
[1mdiff --git a/application/config/autoload.php b/application/config/autoload.php[m
[1mnew file mode 100644[m
[1mindex 0000000..7612c34[m
[1m--- /dev/null[m
[1m+++ b/application/config/autoload.php[m
[36m@@ -0,0 +1,135 @@[m
[32m+[m[32m<?php[m
[32m+[m[32mdefined('BASEPATH') OR exit('No direct script access allowed');[m
[32m+[m
[32m+[m[32m/*[m
[32m+[m[32m| -------------------------------------------------------------------[m
[32m+[m[32m| AUTO-LOADER[m
[32m+[m[32m| -------------------------------------------------------------------[m
[32m+[m[32m| This file specifies which systems should be loaded by default.[m
[32m+[m[32m|[m
[32m+[m[32m| In order to keep the framework as light-weight as possible only the[m
[32m+[m[32m| absolute minimal resources are loaded by default. For example,[m
[32m+[m[32m| the database is not connected to automatically since no assumption[m
[32m+[m[32m| is made regarding whether you intend to use it.  This file lets[m
[32m+[m[32m| you globally define which systems you would like loaded with every[m
[32m+[m[32m| request.[m
[32m+[m[32m|[m
[32m+[m[32m| -------------------------------------------------------------------[m
[32m+[m[32m| Instructions[m
[32m+[m[32m| -------------------------------------------------------------------[m
[32m+[m[32m|[m
[32m+[m[32m| These are the things you can load automatically:[m
[32m+[m[32m|[m
[32m+[m[32m| 1. Packages[m
[32m+[m[32m| 2. Libraries[m
[32m+[m[32m| 3. Drivers[m
[32m+[m[32m| 4. Helper files[m
[32m+[m[32m| 5. Custom config files[m
[32m+[m[32m| 6. Language files[m
[32m+[m[32m| 7. Models[m
[32m+[m[32m|[m
[32m+[m[32m*/[m
[32m+[m
[32m+[m[32m/*[m
[32m+[m[32m| -------------------------------------------------------------------[m
[32m+[m[32m|  Auto-load Packages[m
[32m+[m[32m| -------------------------------------------------------------------[m
[32m+[m[32m| Prototype:[m
[32m+[m[32m|[m
[32m+[m[32m|  $autoload['packages'] = array(APPPATH.'third_party', '/usr/local/shared');[m
[32m+[m[32m|[m
[32m+[m[32m*/[m
[32m+[m[32m$autoload['packages'] = array();[m
[32m+[m
[32m+[m[32m/*[m
[32m+[m[32m| -------------------------------------------------------------------[m
[32m+[m[32m|  Auto-load Libraries[m
[32m+[m[32m| -------------------------------------------------------------------[m
[32m+[m[32m| These are the classes located in system/libraries/ or your[m
[32m+[m[32m| application/libraries/ directory, with the addition of the[m
[32m+[m[32m| 'database' library, which is somewhat of a special case.[m
[32m+[m[32m|[m
[32m+[m[32m| Prototype:[m
[32m+[m[32m|[m
[32m+[m[32m|	$autoload['libraries'] = array('database', 'email', 'session');[m
[32m+[m[32m|[m
[32m+[m[32m| You can also supply an alternative library name to be assigned[m
[32m+[m[32m| in the controller:[m
[32m+[m[32m|[m
[32m+[m[32m|	$autoload['libraries'] = array('user_agent' => 'ua');[m
[32m+[m[32m*/[m
[32m+[m[32m$autoload['libraries'] = array('database','session','form_validation');[m
[32m+[m
[32m+[m[32m/*[m
[32m+[m[32m| -------------------------------------------------------------------[m
[32m+[m[32m|  Auto-load Drivers[m
[32m+[m[32m| -------------------------------------------------------------------[m
[32m+[m[32m| These classes are located in system/libraries/ or in your[m
[32m+[m[32m| application/libraries/ directory, but are also placed inside their[m
[32m+[m[32m| own subdirectory and they extend the CI_Driver_Library class. They[m
[32m+[m[32m| offer multiple interchangeable driver options.[m
[32m+[m[32m|[m
[32m+[m[32m| Prototype:[m
[32m+[m[32m|[m
[32m+[m[32m|	$autoload['drivers'] = array('cache');[m
[32m+[m[32m|[m
[32m+[m[32m| You can also supply an alternative property name to be assigned in[m
[32m+[m[32m| the controller:[m
[32m+[m[32m|[m
[32m+[m[32m|	$autoload['drivers'] = array('cache' => 'cch');[m
[32m+[m[32m|[m
[32m+[m[32m*/[m
[32m+[m[32m$autoload['drivers'] = array();[m
[32m+[m
[32m+[m[32m/*[m
[32m+[m[32m| -------------------------------------------------------------------[m
[32m+[m[32m|  Auto-load Helper Files[m
[32m+[m[32m| -------------------------------------------------------------------[m
[32m+[m[32m| Prototype:[m
[32m+[m[32m|[m
[32m+[m[32m|	$autoload['helper'] = array('url', 'file');[m
[32m+[m[32m*/[m
[32m+[m[32m$autoload['helper'] = array('url');[m
[32m+[m
[32m+[m[32m/*[m
[32m+[m[32m| -------------------------------------------------------------------[m
[32m+[m[32m|  Auto-load Config files[m
[32m+[m[32m| -------------------------------------------------------------------[m
[32m+[m[32m| Prototype:[m
[32m+[m[32m|[m
[32m+[m[32m|	$autoload['config'] = array('config1', 'config2');[m
[32m+[m[32m|[m
[32m+[m[32m| NOTE: This item is intended for use ONLY if you have created custom[m
[32m+[m[32m| config files.  Otherwise, leave it blank.[m
[32m+[m[32m|[m
[32m+[m[32m*/[m
[32m+[m[32m$autoload['config'] = array();[m
[32m+[m
[32m+[m[32m/*[m
[32m+[m[32m| -------------------------------------------------------------------[m
[32m+[m[32m|  Auto-load Language files[m
[32m+[m[32m| -------------------------------------------------------------------[m
[32m+[m[32m| Prototype:[m
[32m+[m[32m|[m
[32m+[m[32m|	$autoload['language'] = array('lang1', 'lang2');[m
[32m+[m[32m|[m
[32m+[m[32m| NOTE: Do not include the "_lang" part of your file.  For example[m
[32m+[m[32m| "codeigniter_lang.php" would be referenced as array('codeigniter');[m
[32m+[m[32m|[m
[32m+[m[32m*/[m
[32m+[m[32m$autoload['language'] = array();[m
[32m+[m
[32m+[m[32m/*[m
[32m+[m[32m| -------------------------------------------------------------------[m
[32m+[m[32m|  Auto-load Models[m
[32m+[m[32m| -------------------------------------------------------------------[m
[32m+[m[32m| Prototype:[m
[32m+[m[32m|[m
[32m+[m[32m|	$autoload['model'] = array('first_model', 'second_model');[m
[32m+[m[32m|[m
[32m+[m[32m| You can also supply an alternative model name to be assigned[m
[32m+[m[32m| in the controller:[m
[32m+[m[32m|[m
[32m+[m[32m|	$autoload['model'] = array('first_model' => 'first');[m
[32m+[m[32m*/[m
[32m+[m[32m$autoload['model'] = array('M_perpus');[m
[1mdiff --git a/application/config/config.php b/application/config/config.php[m
[1mnew file mode 100644[m
[1mindex 0000000..6cce0ed[m
[1m--- /dev/null[m
[1m+++ b/application/config/config.php[m
[36m@@ -0,0 +1,526 @@[m
[32m+[m[32m<?php[m
[32m+[m[32mdefined('BASEPATH') OR exit('No direct script access allowed');[m
[32m+[m[32mdate_default_timezone_set('Asia/Jakarta');[m
[32m+[m[32m/*[m
[32m+[m[32m|--------------------------------------------------------------------------[m
[32m+[m[32m| Base Site URL[m
[32m+[m[32m|--------------------------------------------------------------------------[m
[32m+[m[32m|[m
[32m+[m[32m| URL to your CodeIgniter root. Typically this will be your base URL,[m
[32m+[m[32m| WITH a trailing slash:[m
[32m+[m[32m|[m
[32m+[m[32m|	http://example.com/[m
[32m+[m[32m|[m
[32m+[m[32m| WARNING: You MUST set this value![m
[32m+[m[32m|[m
[32m+[m[32m| If it is not set, then CodeIgniter will try guess the protocol and path[m
[32m+[m[32m| your installation, but due to security concerns the hostname will be set[m
[32m+[m[32m| to $_SERVER['SERVER_ADDR'] if available, or localhost otherwise.[m
[32m+[m[32m| The auto-detection mechanism exists only for convenience during[m
[32m+[m[32m| development and MUST NOT be used in production![m
[32m+[m[32m|[m
[32m+[m[32m| If you need to allow multiple domains, remember that this file is still[m
[32m+[m[32m| a PHP script and you can easily do that on your own.[m
[32m+[m[32m|[m
[32m+[m[32m*/[m
[32m+[m[32m$root=(isset($_SERVER['HTTPS']) ? "https://" : "http://").$_SERVER['HTTP_HOST'];[m
[32m+[m[32m$root.= str_replace(basename($_SERVER['SCRIPT_NAME']), '', $_SERVER['SCRIPT_NAME']);[m
[32m+[m[32m$config['base_url'] = $root;[m
[32m+[m
[32m+[m
[32m+[m[32m/*[m
[32m+[m[32m|--------------------------------------------------------------------------[m
[32m+[m[32m| Index File[m
[32m+[m[32m|--------------------------------------------------------------------------[m
[32m+[m[32m|[m
[32m+[m[32m| Typically this will be your index.php file, unless you've renamed it to[m
[32m+[m[32m| something else. If you are using mod_rewrite to remove the page set this[m
[32m+[m[32m| variable so that it is blank.[m
[32m+[m[32m|[m
[32m+[m[32m*/[m
[32m+[m[32m$config['index_page'] = '';[m
[32m+[m
[32m+[m[32m/*[m
[32m+[m[32m|--------------------------------------------------------------------------[m
[32m+[m[32m| URI PROTOCOL[m
[32m+[m[32m|--------------------------------------------------------------------------[m
[32m+[m[32m|[m
[32m+[m[32m| This item determines which server global should be used to retrieve the[m
[32m+[m[32m| URI string.  The default setting of 'REQUEST_URI' works for most servers.[m
[32m+[m[32m| If your links do not seem to work, try one of the other delicious flavors:[m
[32m+[m[32m|[m
[32m+[m[32m| 'REQUEST_URI'    Uses $_SERVER['REQUEST_URI'][m
[32m+[m[32m| 'QUERY_STRING'   Uses $_SERVER['QUERY_STRING'][m
[32m+[m[32m| 'PATH_INFO'      Uses $_SERVER['PATH_INFO'][m
[32m+[m[32m|[m
[32m+[m[32m| WARNING: If you set this to 'PATH_INFO', URIs will always be URL-decoded![m
[32m+[m[32m*/[m
[32m+[m[32m$config['uri_protocol']	= 'REQUEST_URI';[m
[32m+[m
[32m+[m[32m/*[m
[32m+[m[32m|--------------------------------------------------------------------------[m
[32m+[m[32m| URL suffix[m
[32m+[m[32m|--------------------------------------------------------------------------[m
[32m+[m[32m|[m
[32m+[m[32m| This option allows you to add a suffix to all URLs generated by CodeIgniter.[m
[32m+[m[32m| For more information please see the user guide:[m
[32m+[m[32m|[m
[32m+[m[32m| https://codeigniter.com/user_guide/general/urls.html[m
[32m+[m[32m*/[m
[32m+[m[32m$config['url_suffix'] = '';[m
[32m+[m
[32m+[m[32m/*[m
[32m+[m[32m|--------------------------------------------------------------------------[m
[32m+[m[32m| Default Language[m
[32m+[m[32m|--------------------------------------------------------------------------[m
[32m+[m[32m|[m
[32m+[m[32m| This determines which set of language files should be used. Make sure[m
[32m+[m[32m| there is an available translation if you intend to use something other[m
[32m+[m[32m| than english.[m
[32m+[m[32m|[m
[32m+[m[32m*/[m
[32m+[m[32m$config['language']	= 'english';[m
[32m+[m
[32m+[m[32m/*[m
[32m+[m[32m|--------------------------------------------------------------------------[m
[32m+[m[32m| Default Character Set[m
[32m+[m[32m|--------------------------------------------------------------------------[m
[32m+[m[32m|[m
[32m+[m[32m| This determines which character set is used by default in various methods[m
[32m+[m[32m| that require a character set to be provided.[m
[32m+[m[32m|[m
[32m+[m[32m| See http://php.net/htmlspecialchars for a list of supported charsets.[m
[32m+[m[32m|[m
[32m+[m[32m*/[m
[32m+[m[32m$config['charset'] = 'UTF-8';[m
[32m+[m
[32m+[m[32m/*[m
[32m+[m[32m|--------------------------------------------------------------------------[m
[32m+[m[32m| Enable/Disable System Hooks[m
[32m+[m[32m|--------------------------------------------------------------------------[m
[32m+[m[32m|[m
[32m+[m[32m| If you would like to use the 'hooks' feature you must enable it by[m
[32m+[m[32m| setting this variable to TRUE (boolean).  See the user guide for details.[m
[32m+[m[32m|[m
[32m+[m[32m*/[m
[32m+[m[32m$config['enable_hooks'] = FALSE;[m
[32m+[m
[32m+[m[32m/*[m
[32m+[m[32m|--------------------------------------------------------------------------[m
[32m+[m[32m| Class Extension Prefix[m
[32m+[m[32m|--------------------------------------------------------------------------[m
[32m+[m[32m|[m
[32m+[m[32m| This item allows you to set the filename/classname prefix when extending[m
[32m+[m[32m| native libraries.  For more information please see the user guide:[m
[32m+[m[32m|[m
[32m+[m[32m| https://codeigniter.com/user_guide/general/core_classes.html[m
[32m+[m[32m| https://codeigniter.com/user_guide/general/creating_libraries.html[m
[32m+[m[32m|[m
[32m+[m[32m*/[m
[32m+[m[32m$config['subclass_prefix'] = 'MY_';[m
[32m+[m
[32m+[m[32m/*[m
[32m+[m[32m|--------------------------------------------------------------------------[m
[32m+[m[32m| Composer auto-loading[m
[32m+[m[32m|--------------------------------------------------------------------------[m
[32m+[m[32m|[m
[32m+[m[32m| Enabling this setting will tell CodeIgniter to look for a Composer[m
[32m+[m[32m| package auto-loader script in application/vendor/autoload.php.[m
[32m+[m[32m|[m
[32m+[m[32m|	$config['composer_autoload'] = TRUE;[m
[32m+[m[32m|[m
[32m+[m[32m| Or if you have your vendor/ directory located somewhere else, you[m
[32m+[m[32m| can opt to set a specific path as well:[m
[32m+[m[32m|[m
[32m+[m[32m|	$config['composer_autoload'] = '/path/to/vendor/autoload.php';[m
[32m+[m[32m|[m
[32m+[m[32m| For more information about Composer, please visit http://getcomposer.org/[m
[32m+[m[32m|[m
[32m+[m[32m| Note: This will NOT disable or override the CodeIgniter-specific[m
[32m+[m[32m|	autoloading (application/config/autoload.php)[m
[32m+[m[32m*/[m
[32m+[m[32m$config['composer_autoload'] = FALSE;[m
[32m+[m
[32m+[m[32m/*[m
[32m+[m[32m|--------------------------------------------------------------------------[m
[32m+[m[32m| Allowed URL Characters[m
[32m+[m[32m|--------------------------------------------------------------------------[m
[32m+[m[32m|[m
[32m+[m[32m| This lets you specify which characters are permitted within your URLs.[m
[32m+[m[32m| When someone tries to submit a URL with disallowed characters they will[m
[32m+[m[32m| get a warning message.[m
[32m+[m[32m|[m
[32m+[m[32m| As a security measure you are STRONGLY encouraged to restrict URLs to[m
[32m+[m[32m| as few characters as possible.  By default only these are allowed: a-z 0-9~%.:_-[m
[32m+[m[32m|[m
[32m+[m[32m| Leave blank to allow all characters -- but only if you are insane.[m
[32m+[m[32m|[m
[32m+[m[32m| The configured value is actually a regular expression character group[m
[32m+[m[32m| and it will be executed as: ! preg_match('/^[<permitted_uri_chars>]+$/i[m
[32m+[m[32m|[m
[32m+[m[32m| DO NOT CHANGE THIS UNLESS YOU FULLY UNDERSTAND THE REPERCUSSIONS!![m
[32m+[m[32m|[m
[32m+[m[32m*/[m
[32m+[m[32m$config['permitted_uri_chars'] = 'a-z 0-9~%.:_\-';[m
[32m+[m
[32m+[m[32m/*[m
[32m+[m[32m|--------------------------------------------------------------------------[m
[32m+[m[32m| Enable Query Strings[m
[32m+[m[32m|--------------------------------------------------------------------------[m
[32m+[m[32m|[m
[32m+[m[32m| By default CodeIgniter uses search-engine friendly segment based URLs:[m
[32m+[m[32m| example.com/who/what/where/[m
[32m+[m[32m|[m
[32m+[m[32m| You can optionally enable standard query string based URLs:[m
[32m+[m[32m| example.com?who=me&what=something&where=here[m
[32m+[m[32m|[m
[32m+[m[32m| Options are: TRUE or FALSE (boolean)[m
[32m+[m[32m|[m
[32m+[m[32m| The other items let you set the query string 'words' that will[m
[32m+[m[32m| invoke your controllers and its functions:[m
[32m+[m[32m| example.com/index.php?c=controller&m=function[m
[32m+[m[32m|[m
[32m+[m[32m| Please note that some of the helpers won't work as expected when[m
[32m+[m[32m| this feature is enabled, since CodeIgniter is designed primarily to[m
[32m+[m[32m| use segment based URLs.[m
[32m+[m[32m|[m
[32m+[m[32m*/[m
[32m+[m[32m$config['enable_query_strings'] = FALSE;[m
[32m+[m[32m$config['controller_trigger'] = 'c';[m
[32m+[m[32m$config['function_trigger'] = 'm';[m
[32m+[m[32m$config['directory_trigger'] = 'd';[m
[32m+[m
[32m+[m[32m/*[m
[32m+[m[32m|--------------------------------------------------------------------------[m
[32m+[m[32m| Allow $_GET array[m
[32m+[m[32m|--------------------------------------------------------------------------[m
[32m+[m[32m|[m
[32m+[m[32m| By default CodeIgniter enables access to the $_GET array.  If for some[m
[32m+[m[32m| reason you would like to disable it, set 'allow_get_array' to FALSE.[m
[32m+[m[32m|[m
[32m+[m[32m| WARNING: This feature is DEPRECATED and currently available only[m
[32m+[m[32m|          for backwards compatibility purposes![m
[32m+[m[32m|[m
[32m+[m[32m*/[m
[32m+[m[32m$config['allow_get_array'] = TRUE;[m
[32m+[m
[32m+[m[32m/*[m
[32m+[m[32m|--------------------------------------------------------------------------[m
[32m+[m[32m| Error Logging Threshold[m
[32m+[m[32m|--------------------------------------------------------------------------[m
[32m+[m[32m|[m
[32m+[m[32m| You can enable error logging by setting a threshold over zero. The[m
[32m+[m[32m| threshold determines what gets logged. Threshold options are:[m
[32m+[m[32m|[m
[32m+[m[32m|	0 = Disables logging, Error logging TURNED OFF[m
[32m+[m[32m|	1 = Error Messages (including PHP errors)[m
[32m+[m[32m|	2 = Debug Messages[m
[32m+[m[32m|	3 = Informational Messages[m
[32m+[m[32m|	4 = All Messages[m
[32m+[m[32m|[m
[32m+[m[32m| You can also pass an array with threshold levels to show individual error types[m
[32m+[m[32m|[m
[32m+[m[32m| 	array(2) = Debug Messages, without Error Messages[m
[32m+[m[32m|[m
[32m+[m[32m| For a live site you'll usually only enable Errors (1) to be logged otherwise[m
[32m+[m[32m| your log files will fill up very fast.[m
[32m+[m[32m|[m
[32m+[m[32m*/[m
[32m+[m[32m$config['log_threshold'] = 0;[m
[32m+[m
[32m+[m[32m/*[m
[32m+[m[32m|--------------------------------------------------------------------------[m
[32m+[m[32m| Error Logging Directory Path[m
[32m+[m[32m|--------------------------------------------------------------------------[m
[32m+[m[32m|[m
[32m+[m[32m| Leave this BLANK unless you would like to set something other than the default[m
[32m+[m[32m| application/logs/ directory. Use a full server path with trailing slash.[m
[32m+[m[32m|[m
[32m+[m[32m*/[m
[32m+[m[32m$config['log_path'] = '';[m
[32m+[m
[32m+[m[32m/*[m
[32m+[m[32m|--------------------------------------------------------------------------[m
[32m+[m[32m| Log File Extension[m
[32m+[m[32m|--------------------------------------------------------------------------[m
[32m+[m[32m|[m
[32m+[m[32m| The default filename extension for log files. The default 'php' allows for[m
[32m+[m[32m| protecting the log files via basic scripting, when they are to be stored[m
[32m+[m[32m| under a publicly accessible directory.[m
[32m+[m[32m|[m
[32m+[m[32m| Note: Leaving it blank will default to 'php'.[m
[32m+[m[32m|[m
[32m+[m[32m*/[m
[32m+[m[32m$config['log_file_extension'] = '';[m
[32m+[m
[32m+[m[32m/*[m
[32m+[m[32m|--------------------------------------------------------------------------[m
[32m+[m[32m| Log File Permissions[m
[32m+[m[32m|--------------------------------------------------------------------------[m
[32m+[m[32m|[m
[32m+[m[32m| The file system permissions to be applied on newly created log files.[m
[32m+[m[32m|[m
[32m+[m[32m| IMPORTANT: This MUST be an integer (no quotes) and you MUST use octal[m
[32m+[m[32m|            integer notation (i.e. 0700, 0644, etc.)[m
[32m+[m[32m*/[m
[32m+[m[32m$config['log_file_permissions'] = 0644;[m
[32m+[m
[32m+[m[32m/*[m
[32m+[m[32m|--------------------------------------------------------------------------[m
[32m+[m[32m| Date Format for Logs[m
[32m+[m[32m|--------------------------------------------------------------------------[m
[32m+[m[32m|[m
[32m+[m[32m| Each item that is logged has an associated date. You can use PHP date[m
[32m+[m[32m| codes to set your own date formatting[m
[32m+[m[32m|[m
[32m+[m[32m*/[m
[32m+[m[32m$config['log_date_format'] = 'Y-m-d H:i:s';[m
[32m+[m
[32m+[m[32m/*[m
[32m+[m[32m|--------------------------------------------------------------------------[m
[32m+[m[32m| Error Views Directory Path[m
[32m+[m[32m|--------------------------------------------------------------------------[m
[32m+[m[32m|[m
[32m+[m[32m| Leave this BLANK unless you would like to set something other than the default[m
[32m+[m[32m| application/views/errors/ directory.  Use a full server path with trailing slash.[m
[32m+[m[32m|[m
[32m+[m[32m*/[m
[32m+[m[32m$config['error_views_path'] = '';[m
[32m+[m
[32m+[m[32m/*[m
[32m+[m[32m|--------------------------------------------------------------------------[m
[32m+[m[32m| Cache Directory Path[m
[32m+[m[32m|--------------------------------------------------------------------------[m
[32m+[m[32m|[m
[32m+[m[32m| Leave this BLANK unless you would like to set something other than the default[m
[32m+[m[32m| application/cache/ directory.  Use a full server path with trailing slash.[m
[32m+[m[32m|[m
[32m+[m[32m*/[m
[32m+[m[32m$config['cache_path'] = '';[m
[32m+[m
[32m+[m[32m/*[m
[32m+[m[32m|--------------------------------------------------------------------------[m
[32m+[m[32m| Cache Include Query String[m
[32m+[m[32m|--------------------------------------------------------------------------[m
[32m+[m[32m|[m
[32m+[m[32m| Whether to take the URL query string into consideration when generating[m
[32m+[m[32m| output cache files. Valid options are:[m
[32m+[m[32m|[m
[32m+[m[32m|	FALSE      = Disabled[m
[32m+[m[32m|	TRUE       = Enabled, take all query parameters into account.[m
[32m+[m[32m|	             Please be aware that this may result in numerous cache[m
[32m+[m[32m|	             files generated for the same page over and over again.[m
[32m+[m[32m|	array('q') = Enabled, but only take into account the specified list[m
[32m+[m[32m|	             of query parameters.[m
[32m+[m[32m|[m
[32m+[m[32m*/[m
[32m+[m[32m$config['cache_query_string'] = FALSE;[m
[32m+[m
[32m+[m[32m/*[m
[32m+[m[32m|--------------------------------------------------------------------------[m
[32m+[m[32m| Encryption Key[m
[32m+[m[32m|--------------------------------------------------------------------------[m
[32m+[m[32m|[m
[32m+[m[32m| If you use the Encryption class, you must set an encryption key.[m
[32m+[m[32m| See the user guide for more info.[m
[32m+[m[32m|[m
[32m+[m[32m| https://codeigniter.com/user_guide/libraries/encryption.html[m
[32m+[m[32m|[m
[32m+[m[32m*/[m
[32m+[m[32m$config['encryption_key'] = '';[m
[32m+[m
[32m+[m[32m/*[m
[32m+[m[32m|--------------------------------------------------------------------------[m
[32m+[m[32m| Session Variables[m
[32m+[m[32m|--------------------------------------------------------------------------[m
[32m+[m[32m|[m
[32m+[m[32m| 'sess_driver'[m
[32m+[m[32m|[m
[32m+[m[32m|	The storage driver to use: files, database, redis, memcached[m
[32m+[m[32m|[m
[32m+[m[32m| 'sess_cookie_name'[m
[32m+[m[32m|[m
[32m+[m[32m|	The session cookie name, must contain only [0-9a-z_-] characters[m
[32m+[m[32m|[m
[32m+[m[32m| 'sess_expiration'[m
[32m+[m[32m|[m
[32m+[m[32m|	The number of SECONDS you want the session to last.[m
[32m+[m[32m|	Setting to 0 (zero) means expire when the browser is closed.[m
[32m+[m[32m|[m
[32m+[m[32m| 'sess_save_path'[m
[32m+[m[32m|[m
[32m+[m[32m|	The location to save sessions to, driver dependent.[m
[32m+[m[32m|[m
[32m+[m[32m|	For the 'files' driver, it's a path to a writable directory.[m
[32m+[m[32m|	WARNING: Only absolute paths are supported![m
[32m+[m[32m|[m
[32m+[m[32m|	For the 'database' driver, it's a table name.[m
[32m+[m[32m|	Please read up the manual for the format with other session drivers.[m
[32m+[m[32m|[m
[32m+[m[32m|	IMPORTANT: You are REQUIRED to set a valid save path![m
[32m+[m[32m|[m
[32m+[m[32m| 'sess_match_ip'[m
[32m+[m[32m|[m
[32m+[m[32m|	Whether to match the user's IP address when reading the session data.[m
[32m+[m[32m|[m
[32m+[m[32m|	WARNING: If you're using the database driver, don't forget to update[m
[32m+[m[32m|	         your session table's PRIMARY KEY when changing this setting.[m
[32m+[m[32m|[m
[32m+[m[32m| 'sess_time_to_update'[m
[32m+[m[32m|[m
[32m+[m[32m|	How many seconds between CI regenerating the session ID.[m
[32m+[m[32m|[m
[32m+[m[32m| 'sess_regenerate_destroy'[m
[32m+[m[32m|[m
[32m+[m[32m|	Whether to destroy session data associated with the old session ID[m
[32m+[m[32m|	when auto-regenerating the session ID. When set to FALSE, the data[m
[32m+[m[32m|	will be later deleted by the garbage collector.[m
[32m+[m[32m|[m
[32m+[m[32m| Other session cookie settings are shared with the rest of the application,[m
[32m+[m[32m| except for 'cookie_prefix' and 'cookie_httponly', which are ignored here.[m
[32m+[m[32m|[m
[32m+[m[32m*/[m
[32m+[m[32m$config['sess_driver'] = 'files';[m
[32m+[m[32m$config['sess_cookie_name'] = 'ci_session';[m
[32m+[m[32m$config['sess_expiration'] = 7200;[m
[32m+[m[32m$config['sess_save_path'] = NULL;[m
[32m+[m[32m$config['sess_match_ip'] = FALSE;[m
[32m+[m[32m$config['sess_time_to_update'] = 300;[m
[32m+[m[32m$config['sess_regenerate_destroy'] = FALSE;[m
[32m+[m
[32m+[m[32m/*[m
[32m+[m[32m|--------------------------------------------------------------------------[m
[32m+[m[32m| Cookie Related Variables[m
[32m+[m[32m|--------------------------------------------------------------------------[m
[32m+[m[32m|[m
[32m+[m[32m| 'cookie_prefix'   = Set a cookie name prefix if you need to avoid collisions[m
[32m+[m[32m| 'cookie_domain'   = Set to .your-domain.com for site-wide cookies[m
[32m+[m[32m| 'cookie_path'     = Typically will be a forward slash[m
[32m+[m[32m| 'cookie_secure'   = Cookie will only be set if a secure HTTPS connection exists.[m
[32m+[m[32m| 'cookie_httponly' = Cookie will only be accessible via HTTP(S) (no javascript)[m
[32m+[m[32m|[m
[32m+[m[32m| Note: These settings (with the exception of 'cookie_prefix' and[m
[32m+[m[32m|       'cookie_httponly') will also affect sessions.[m
[32m+[m[32m|[m
[32m+[m[32m*/[m
[32m+[m[32m$config['cookie_prefix']	= '';[m
[32m+[m[32m$config['cookie_domain']	= '';[m
[32m+[m[32m$config['cookie_path']		= '/';[m
[32m+[m[32m$config['cookie_secure']	= FALSE;[m
[32m+[m[32m$config['cookie_httponly'] 	= FALSE;[m
[32m+[m
[32m+[m[32m/*[m
[32m+[m[32m|--------------------------------------------------------------------------[m
[32m+[m[32m| Standardize newlines[m
[32m+[m[32m|--------------------------------------------------------------------------[m
[32m+[m[32m|[m
[32m+[m[32m| Determines whether to standardize newline characters in input data,[m
[32m+[m[32m| meaning to replace \r\n, \r, \n occurrences with the PHP_EOL value.[m
[32m+[m[32m|[m
[32m+[m[32m| WARNING: This feature is DEPRECATED and currently available only[m
[32m+[m[32m|          for backwards compatibility purposes![m
[32m+[m[32m|[m
[32m+[m[32m*/[m
[32m+[m[32m$config['standardize_newlines'] = FALSE;[m
[32m+[m
[32m+[m[32m/*[m
[32m+[m[32m|--------------------------------------------------------------------------[m
[32m+[m[32m| Global XSS Filtering[m
[32m+[m[32m|--------------------------------------------------------------------------[m
[32m+[m[32m|[m
[32m+[m[32m| Determines whether the XSS filter is always active when GET, POST or[m
[32m+[m[32m| COOKIE data is encountered[m
[32m+[m[32m|[m
[32m+[m[32m| WARNING: This feature is DEPRECATED and currently available only[m
[32m+[m[32m|          for backwards compatibility purposes![m
[32m+[m[32m|[m
[32m+[m[32m*/[m
[32m+[m[32m$config['global_xss_filtering'] = FALSE;[m
[32m+[m
[32m+[m[32m/*[m
[32m+[m[32m|--------------------------------------------------------------------------[m
[32m+[m[32m| Cross Site Request Forgery[m
[32m+[m[32m|--------------------------------------------------------------------------[m
[32m+[m[32m| Enables a CSRF cookie token to be set. When set to TRUE, token will be[m
[32m+[m[32m| checked on a submitted form. If you are accepting user data, it is strongly[m
[32m+[m[32m| recommended CSRF protection be enabled.[m
[32m+[m[32m|[m
[32m+[m[32m| 'csrf_token_name' = The token name[m
[32m+[m[32m| 'csrf_cookie_name' = The cookie name[m
[32m+[m[32m| 'csrf_expire' = The number in seconds the token should expire.[m
[32m+[m[32m| 'csrf_regenerate' = Regenerate token on every submission[m
[32m+[m[32m| 'csrf_exclude_uris' = Array of URIs which ignore CSRF checks[m
[32m+[m[32m*/[m
[32m+[m[32m$config['csrf_protection'] = FALSE;[m
[32m+[m[32m$config['csrf_token_name'] = 'csrf_test_name';[m
[32m+[m[32m$config['csrf_cookie_name'] = 'csrf_cookie_name';[m
[32m+[m[32m$config['csrf_expire'] = 7200;[m
[32m+[m[32m$config['csrf_regenerate'] = TRUE;[m
[32m+[m[32m$config['csrf_exclude_uris'] = array();[m
[32m+[m
[32m+[m[32m/*[m
[32m+[m[32m|--------------------------------------------------------------------------[m
[32m+[m[32m| Output Compression[m
[32m+[m[32m|--------------------------------------------------------------------------[m
[32m+[m[32m|[m
[32m+[m[32m| Enables Gzip output compression for faster page loads.  When enabled,[m
[32m+[m[32m| the output class will test whether your server supports Gzip.[m
[32m+[m[32m| Even if it does, however, not all browsers support compression[m
[32m+[m[32m| so enable only if you are reasonably sure your visitors can handle it.[m
[32m+[m[32m|[m
[32m+[m[32m| Only used if zlib.output_compression is turned off in your php.ini.[m
[32m+[m[32m| Please do not use it together with httpd-level output compression.[m
[32m+[m[32m|[m
[32m+[m[32m| VERY IMPORTANT:  If you are getting a blank page when compression is enabled it[m
[32m+[m[32m| means you are prematurely outputting something to your browser. It could[m
[32m+[m[32m| even be a line of whitespace at the end of one of your scripts.  For[m
[32m+[m[32m| compression to work, nothing can be sent before the output buffer is called[m
[32m+[m[32m| by the output class.  Do not 'echo' any values with compression enabled.[m
[32m+[m[32m|[m
[32m+[m[32m*/[m
[32m+[m[32m$config['compress_output'] = FALSE;[m
[32m+[m
[32m+[m[32m/*[m
[32m+[m[32m|--------------------------------------------------------------------------[m
[32m+[m[32m| Master Time Reference[m
[32m+[m[32m|--------------------------------------------------------------------------[m
[32m+[m[32m|[m
[32m+[m[32m| Options are 'local' or any PHP supported timezone. This preference tells[m
[32m+[m[32m| the system whether to use your server's local time as the master 'now'[m
[32m+[m[32m| reference, or convert it to the configured one timezone. See the 'date[m
[32m+[m[32m| helper' page of the user guide for information regarding date handling.[m
[32m+[m[32m|[m
[32m+[m[32m*/[m
[32m+[m[32m$config['time_reference'] = 'local';[m
[32m+[m
[32m+[m[32m/*[m
[32m+[m[32m|--------------------------------------------------------------------------[m
[32m+[m[32m| Rewrite PHP Short Tags[m
[32m+[m[32m|--------------------------------------------------------------------------[m
[32m+[m[32m|[m
[32m+[m[32m| If your PHP installation does not have short tag support enabled CI[m
[32m+[m[32m| can rewrite the tags on-the-fly, enabling you to utilize that syntax[m
[32m+[m[32m| in your view files.  Options are TRUE or FALSE (boolean)[m
[32m+[m[32m|[m
[32m+[m[32m| Note: You need to have eval() enabled for this to work.[m
[32m+[m[32m|[m
[32m+[m[32m*/[m
[32m+[m[32m$config['rewrite_short_tags'] = FALSE;[m
[32m+[m
[32m+[m[32m/*[m
[32m+[m[32m|--------------------------------------------------------------------------[m
[32m+[m[32m| Reverse Proxy IPs[m
[32m+[m[32m|--------------------------------------------------------------------------[m
[32m+[m[32m|[m
[32m+[m[32m| If your server is behind a reverse proxy, you must whitelist the proxy[m
[32m+[m[32m| IP addresses from which CodeIgniter should trust headers such as[m
[32m+[m[32m| HTTP_X_FORWARDED_FOR and HTTP_CLIENT_IP in order to properly identify[m
[32m+[m[32m| the visitor's IP address.[m
[32m+[m[32m|[m
[32m+[m[32m| You can use both an array or a comma-separated list of proxy addresses,[m
[32m+[m[32m| as well as specifying whole subnets. Here are a few examples:[m
[32m+[m[32m|[m
[32m+[m[32m| Comma-separated:	'10.0.1.200,192.168.5.0/24'[m
[32m+[m[32m| Array:		array('10.0.1.200', '192.168.5.0/24')[m
[32m+[m[32m*/[m
[32m+[m[32m$config['proxy_ips'] = '';[m
[1mdiff --git a/application/config/constants.php b/application/config/constants.php[m
[1mnew file mode 100644[m
[1mindex 0000000..18d3b4b[m
[1m--- /dev/null[m
[1m+++ b/application/config/constants.php[m
[36m@@ -0,0 +1,85 @@[m
[32m+[m[32m<?php[m
[32m+[m[32mdefined('BASEPATH') OR exit('No direct script access allowed');[m
[32m+[m
[32m+[m[32m/*[m
[32m+[m[32m|--------------------------------------------------------------------------[m
[32m+[m[32m| Display Debug backtrace[m
[32m+[m[32m|--------------------------------------------------------------------------[m
[32m+[m[32m|[m
[32m+[m[32m| If set to TRUE, a backtrace will be displayed along with php errors. If[m
[32m+[m[32m| error_reporting is disabled, the backtrace will not display, regardless[m
[32m+[m[32m| of this setting[m
[32m+[m[32m|[m
[32m+[m[32m*/[m
[32m+[m[32mdefined('SHOW_DEBUG_BACKTRACE') OR define('SHOW_DEBUG_BACKTRACE', TRUE);[m
[32m+[m
[32m+[m[32m/*[m
[32m+[m[32m|--------------------------------------------------------------------------[m
[32m+[m[32m| File and Directory Modes[m
[32m+[m[32m|--------------------------------------------------------------------------[m
[32m+[m[32m|[m
[32m+[m[32m| These prefs are used when checking and setting modes when working[m
[32m+[m[32m| with the file system.  The defaults are fine on servers with proper[m
[32m+[m[32m| security, but you may wish (or even need) to change the values in[m
[32m+[m[32m| certain environments (Apache running a separate process for each[m
[32m+[m[32m| user, PHP under CGI with Apache suEXEC, etc.).  Octal values should[m
[32m+[m[32m| always be used to set the mode correctly.[m
[32m+[m[32m|[m
[32m+[m[32m*/[m
[32m+[m[32mdefined('FILE_READ_MODE')  OR define('FILE_READ_MODE', 0644);[m
[32m+[m[32mdefined('FILE_WRITE_MODE') OR define('FILE_WRITE_MODE', 0666);[m
[32m+[m[32mdefined('DIR_READ_MODE')   OR define('DIR_READ_MODE', 0755);[m
[32m+[m[32mdefined('DIR_WRITE_MODE')  OR define('DIR_WRITE_MODE', 0755);[m
[32m+[m
[32m+[m[32m/*[m
[32m+[m[32m|--------------------------------------------------------------------------[m
[32m+[m[32m| File Stream Modes[m
[32m+[m[32m|--------------------------------------------------------------------------[m
[32m+[m[32m|[m
[32m+[m[32m| These modes are used when working with fopen()/popen()[m
[32m+[m[32m|[m
[32m+[m[32m*/[m
[32m+[m[32mdefined('FOPEN_READ')                           OR define('FOPEN_READ', 'rb');[m
[32m+[m[32mdefined('FOPEN_READ_WRITE')                     OR define('FOPEN_READ_WRITE', 'r+b');[m
[32m+[m[32mdefined('FOPEN_WRITE_CREATE_DESTRUCTIVE')       OR define('FOPEN_WRITE_CREATE_DESTRUCTIVE', 'wb'); // truncates existing file data, use with care[m
[32m+[m[32mdefined('FOPEN_READ_WRITE_CREATE_DESTRUCTIVE')  OR define('FOPEN_READ_WRITE_CREATE_DESTRUCTIVE', 'w+b'); // truncates existing file data, use with care[m
[32m+[m[32mdefined('FOPEN_WRITE_CREATE')                   OR define('FOPEN_WRITE_CREATE', 'ab');[m
[32m+[m[32mdefined('FOPEN_READ_WRITE_CREATE')              OR define('FOPEN_READ_WRITE_CREATE', 'a+b');[m
[32m+[m[32mdefined('FOPEN_WRITE_CREATE_STRICT')            OR define('FOPEN_WRITE_CREATE_STRICT', 'xb');[m
[32m+[m[32mdefined('FOPEN_READ_WRITE_CREATE_STRICT')       OR define('FOPEN_READ_WRITE_CREATE_STRICT', 'x+b');[m
[32m+[m
[32m+[m[32m/*[m
[32m+[m[32m|--------------------------------------------------------------------------[m
[32m+[m[32m| Exit Status Codes[m
[32m+[m[32m|--------------------------------------------------------------------------[m
[32m+[m[32m|[m
[32m+[m[32m| Used to indicate the conditions under which the script is exit()ing.[m
[32m+[m[32m| While there is no universal standard for error codes, there are some[m
[32m+[m[32m| broad conventions.  Three such conventions are mentioned below, for[m
[32m+[m[32m| those who wish to make use of them.  The CodeIgniter defaults were[m
[32m+[m[32m| chosen for the least overlap with these conventions, while still[m
[32m+[m[32m| leaving room for others to be defined in future versions and user[m
[32m+[m[32m| applications.[m
[32m+[m[32m|[m
[32m+[m[32m| The three main conventions used for determining exit status codes[m
[32m+[m[32m| are as follows:[m
[32m+[m[32m|[m
[32m+[m[32m|    Standard C/C++ Library (stdlibc):[m
[32m+[m[32m|       http://www.gnu.org/software/libc/manual/html_node/Exit-Status.html[m
[32m+[m[32m|       (This link also contains other GNU-specific conventions)[m
[32m+[m[32m|    BSD sysexits.h:[m
[32m+[m[32m|       http://www.gsp.com/cgi-bin/man.cgi?section=3&topic=sysexits[m
[32m+[m[32m|    Bash scripting:[m
[32m+[m[32m|       http://tldp.org/LDP/abs/html/exitcodes.html[m
[32m+[m[32m|[m
[32m+[m[32m*/[m
[32m+[m[32mdefined('EXIT_SUCCESS')        OR define('EXIT_SUCCESS', 0); // no errors[m
[32m+[m[32mdefined('EXIT_ERROR')          OR define('EXIT_ERROR', 1); // generic error[m
[32m+[m[32mdefined('EXIT_CONFIG')         OR define('EXIT_CONFIG', 3); // configuration error[m
[32m+[m[32mdefined('EXIT_UNKNOWN_FILE')   OR define('EXIT_UNKNOWN_FILE', 4); // file not found[m
[32m+[m[32mdefined('EXIT_UNKNOWN_CLASS')  OR define('EXIT_UNKNOWN_CLASS', 5); // unknown class[m
[32m+[m[32mdefined('EXIT_UNKNOWN_METHOD') OR define('EXIT_UNKNOWN_METHOD', 6); // unknown class member[m
[32m+[m[32mdefined('EXIT_USER_INPUT')     OR define('EXIT_USER_INPUT', 7); // invalid user input[m
[32m+[m[32mdefined('EXIT_DATABASE')       OR define('EXIT_DATABASE', 8); // database error[m
[32m+[m[32mdefined('EXIT__AUTO_MIN')      OR define('EXIT__AUTO_MIN', 9); // lowest automatically-assigned error code[m
[32m+[m[32mdefined('EXIT__AUTO_MAX')      OR define('EXIT__AUTO_MAX', 125); // highest automatically-assigned error code[m
[1mdiff --git a/application/config/database.php b/application/config/database.php[m
[1mnew file mode 100644[m
[1mindex 0000000..bb0cf7f[m
[1m--- /dev/null[m
[1m+++ b/application/config/database.php[m
[36m@@ -0,0 +1,96 @@[m
[32m+[m[32m<?php[m
[32m+[m[32mdefined('BASEPATH') OR exit('No direct script access allowed');[m
[32m+[m
[32m+[m[32m/*[m
[32m+[m[32m| -------------------------------------------------------------------[m
[32m+[m[32m| DATABASE CONNECTIVITY SETTINGS[m
[32m+[m[32m| -------------------------------------------------------------------[m
[32m+[m[32m| This file will contain the settings needed to access your database.[m
[32m+[m[32m|[m
[32m+[m[32m| For complete instructions please consult the 'Database Connection'[m
[32m+[m[32m| page of the User Guide.[m
[32m+[m[32m|[m
[32m+[m[32m| -------------------------------------------------------------------[m
[32m+[m[32m| EXPLANATION OF VARIABLES[m
[32m+[m[32m| -------------------------------------------------------------------[m
[32m+[m[32m|[m
[32m+[m[32m|	['dsn']      The full DSN string describe a connection to the database.[m
[32m+[m[32m|	['hostname'] The hostname of your database server.[m
[32m+[m[32m|	['username'] The username used to connect to the database[m
[32m+[m[32m|	['password'] The password used to connect to the database[m
[32m+[m[32m|	['database'] The name of the database you want to connect to[m
[32m+[m[32m|	['dbdriver'] The database driver. e.g.: mysqli.[m
[32m+[m[32m|			Currently supported:[m
[32m+[m[32m|				 cubrid, ibase, mssql, mysql, mysqli, oci8,[m
[32m+[m[32m|				 odbc, pdo, postgre, sqlite, sqlite3, sqlsrv[m
[32m+[m[32m|	['dbprefix'] You can add an optional prefix, which will be added[m
[32m+[m[32m|				 to the table name when using the  Query Builder class[m
[32m+[m[32m|	['pconnect'] TRUE/FALSE - Whether to use a persistent connection[m
[32m+[m[32m|	['db_debug'] TRUE/FALSE - Whether database errors should be displayed.[m
[32m+[m[32m|	['cache_on'] TRUE/FALSE - Enables/disables query caching[m
[32m+[m[32m|	['cachedir'] The path to the folder where cache files should be stored[m
[32m+[m[32m|	['char_set'] The character set used in communicating with the database[m
[32m+[m[32m|	['dbcollat'] The character collation used in communicating with the database[m
[32m+[m[32m|				 NOTE: For MySQL and MySQLi databases, this setting is only used[m
[32m+[m[32m| 				 as a backup if your server is running PHP < 5.2.3 or MySQL < 5.0.7[m
[32m+[m[32m|				 (and in table creation queries made with DB Forge).[m
[32m+[m[32m| 				 There is an incompatibility in PHP with mysql_real_escape_string() which[m
[32m+[m[32m| 				 can make your site vulnerable to SQL injection if you are using a[m
[32m+[m[32m| 				 multi-byte character set and are running versions lower than these.[m
[32m+[m[32m| 				 Sites using Latin-1 or UTF-8 database character set and collation are unaffected.[m
[32m+[m[32m|	['swap_pre'] A default table prefix that should be swapped with the dbprefix[m
[32m+[m[32m|	['encrypt']  Whether or not to use an encrypted connection.[m
[32m+[m[32m|[m
[32m+[m[32m|			'mysql' (deprecated), 'sqlsrv' and 'pdo/sqlsrv' drivers accept TRUE/FALSE[m
[32m+[m[32m|			'mysqli' and 'pdo/mysql' drivers accept an array with the following options:[m
[32m+[m[32m|[m
[32m+[m[32m|				'ssl_key'    - Path to the private key file[m
[32m+[m[32m|				'ssl_cert'   - Path to the public key certificate file[m
[32m+[m[32m|				'ssl_ca'     - Path to the certificate authority file[m
[32m+[m[32m|				'ssl_capath' - Path to a directory containing trusted CA certificats in PEM format[m
[32m+[m[32m|				'ssl_cipher' - List of *allowed* ciphers to be used for the encryption, separated by colons (':')[m
[32m+[m[32m|				'ssl_verify' - TRUE/FALSE; Whether verify the server certificate or not ('mysqli' only)[m
[32m+[m[32m|[m
[32m+[m[32m|	['compress'] Whether or not to use client compression (MySQL only)[m
[32m+[m[32m|	['stricton'] TRUE/FALSE - forces 'Strict Mode' connections[m
[32m+[m[32m|							- good for ensuring strict SQL while developing[m
[32m+[m[32m|	['ssl_options']	Used to set various SSL options that can be used when making SSL connections.[m
[32m+[m[32m|	['failover'] array - A array with 0 or more data for connections if the main should fail.[m
[32m+[m[32m|	['save_queries'] TRUE/FALSE - Whether to "save" all executed queries.[m
[32m+[m[32m| 				NOTE: Disabling this will also effectively disable both[m
[32m+[m[32m| 				$this->db->last_query() and profiling of DB queries.[m
[32m+[m[32m| 				When you run a query, with this setting set to TRUE (default),[m
[32m+[m[32m| 				CodeIgniter will store the SQL statement for debugging purposes.[m
[32m+[m[32m| 				However, this may cause high memory usage, especially if you run[m
[32m+[m[32m| 				a lot of SQL queries ... disable this to avoid that problem.[m
[32m+[m[32m|[m
[32m+[m[32m| The $active_group variable lets you choose which connection group to[m
[32m+[m[32m| make active.  By default there is only one group (the 'default' group).[m
[32m+[m[32m|[m
[32m+[m[32m| The $query_builder variables lets you determine whether or not to load[m
[32m+[m[32m| the query builder class.[m
[32m+[m[32m*/[m
[32m+[m[32m$active_group = 'default';[m
[32m+[m[32m$query_builder = TRUE;[m
[32m+[m
[32m+[m[32m$db['default'] = array([m
[32m+[m	[32m'dsn'	=> '',[m
[32m+[m	[32m'hostname' => 'localhost',[m
[32m+[m	[32m'username' => 'root',[m
[32m+[m	[32m'password' => '',[m
[32m+[m	[32m'database' => 'perpus',[m
[32m+[m	[32m'dbdriver' => 'mysqli',[m
[32m+[m	[32m'dbprefix' => '',[m
[32m+[m	[32m'pconnect' => FALSE,[m
[32m+[m	[32m'db_debug' => (ENVIRONMENT !== 'production'),[m
[32m+[m	[32m'cache_on' => FALSE,[m
[32m+[m	[32m'cachedir' => '',[m
[32m+[m	[32m'char_set' => 'utf8',[m
[32m+[m	[32m'dbcollat' => 'utf8_general_ci',[m
[32m+[m	[32m'swap_pre' => '',[m
[32m+[m	[32m'encrypt' => FALSE,[m
[32m+[m	[32m'compress' => FALSE,[m
[32m+[m	[32m'stricton' => FALSE,[m
[32m+[m	[32m'failover' => array(),[m
[32m+[m	[32m'save_queries' => TRUE[m
[32m+[m[32m);[m
[1mdiff --git a/application/config/doctypes.php b/application/config/doctypes.php[m
[1mnew file mode 100644[m
[1mindex 0000000..59a7991[m
[1m--- /dev/null[m
[1m+++ b/application/config/doctypes.php[m
[36m@@ -0,0 +1,24 @@[m
[32m+[m[32m<?php[m
[32m+[m[32mdefined('BASEPATH') OR exit('No direct script access allowed');[m
[32m+[m
[32m+[m[32m$_doctypes = array([m
[32m+[m	[32m'xhtml11' => '<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1//EN" "http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd">',[m
[32m+[m	[32m'xhtml1-strict' => '<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">',[m
[32m+[m	[32m'xhtml1-trans' => '<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">',[m
[32m+[m	[32m'xhtml1-frame' => '<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Frameset//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-frameset.dtd">',[m
[32m+[m	[32m'xhtml-basic11' => '<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML Basic 1.1//EN" "http://www.w3.org/TR/xhtml-basic/xhtml-basic11.dtd">',[m
[32m+[m	[32m'html5' => '<!DOCTYPE html>',[m
[32m+[m	[32m'html4-strict' => '<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN" "http://www.w3.org/TR/html4/strict.dtd">',[m
[32m+[m	[32m'html4-trans' => '<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">',[m
[32m+[m	[32m'html4-frame' => '<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Frameset//EN" "http://www.w3.org/TR/html4/frameset.dtd">',[m
[32m+[m	[32m'mathml1' => '<!DOCTYPE math SYSTEM "http://www.w3.org/Math/DTD/mathml1/mathml.dtd">',[m
[32m+[m	[32m'mathml2' => '<!DOCTYPE math PUBLIC "-//W3C//DTD MathML 2.0//EN" "http://www.w3.org/Math/DTD/mathml2/mathml2.dtd">',[m
[32m+[m	[32m'svg10' => '<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.0//EN" "http://www.w3.org/TR/2001/REC-SVG-20010904/DTD/svg10.dtd">',[m
[32m+[m	[32m'svg11' => '<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">',[m
[32m+[m	[32m'svg11-basic' => '<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1 Basic//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11-basic.dtd">',[m
[32m+[m	[32m'svg11-tiny' => '<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1 Tiny//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11-tiny.dtd">',[m
[32m+[m	[32m'xhtml-math-svg-xh' => '<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1 plus MathML 2.0 plus SVG 1.1//EN" "http://www.w3.org/2002/04/xhtml-math-svg/xhtml-math-svg.dtd">',[m
[32m+[m	[32m'xhtml-math-svg-sh' => '<!DOCTYPE svg:svg PUBLIC "-//W3C//DTD XHTML 1.1 plus MathML 2.0 plus SVG 1.1//EN" "http://www.w3.org/2002/04/xhtml-math-svg/xhtml-math-svg.dtd">',[m
[32m+[m	[32m'xhtml-rdfa-1' => '<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML+RDFa 1.0//EN" "http://www.w3.org/MarkUp/DTD/xhtml-rdfa-1.dtd">',[m
[32m+[m	[32m'xhtml-rdfa-2' => '<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML+RDFa 1.1//EN" "http://www.w3.org/MarkUp/DTD/xhtml-rdfa-2.dtd">'[m
[32m+[m[32m);[m
[1mdiff --git a/application/config/foreign_chars.php b/application/config/foreign_chars.php[m
[1mnew file mode 100644[m
[1mindex 0000000..ac406e3[m
[1m--- /dev/null[m
[1m+++ b/application/config/foreign_chars.php[m
[36m@@ -0,0 +1,103 @@[m
[32m+[m[32m<?php[m
[32m+[m[32mdefined('BASEPATH') OR exit('No direct script access allowed');[m
[32m+[m
[32m+[m[32m/*[m
[32m+[m[32m| -------------------------------------------------------------------[m
[32m+[m[32m| Foreign Characters[m
[32m+[m[32m| -------------------------------------------------------------------[m
[32m+[m[32m| This file contains an array of foreign characters for transliteration[m
[32m+[m[32m| conversion used by the Text helper[m
[32m+[m[32m|[m
[32m+[m[32m*/[m
[32m+[m[32m$foreign_characters = array([m
[32m+[m	[32m'/ä|æ|ǽ/' => 'ae',[m
[32m+[m	[32m'/ö|œ/' => 'oe',[m
[32m+[m	[32m'/ü/' => 'ue',[m
[32m+[m	[32m'/Ä/' => 'Ae',[m
[32m+[m	[32m'/Ü/' => 'Ue',[m
[32m+[m	[32m'/Ö/' => 'Oe',[m
[32m+[m	[32m'/À|Á|Â|Ã|Ä|Å|Ǻ|Ā|Ă|Ą|Ǎ|Α|Ά|Ả|Ạ|Ầ|Ẫ|Ẩ|Ậ|Ằ|Ắ|Ẵ|Ẳ|Ặ|А/' => 'A',[m
[32m+[m	[32m'/à|á|â|ã|å|ǻ|ā|ă|ą|ǎ|ª|α|ά|ả|ạ|ầ|ấ|ẫ|ẩ|ậ|ằ|ắ|ẵ|ẳ|ặ|а/' => 'a',[m
[32m+[m	[32m'/Б/' => 'B',[m
[32m+[m	[32m'/б/' => 'b',[m
[32m+[m	[32m'/Ç|Ć|Ĉ|Ċ|Č/' => 'C',[m
[32m+[m	[32m'/ç|ć|ĉ|ċ|č/' => 'c',[m
[32m+[m	[32m'/Д/' => 'D',[m
[32m+[m	[32m'/д/' => 'd',[m
[32m+[m	[32m'/Ð|Ď|Đ|Δ/' => 'Dj',[m
[32m+[m	[32m'/ð|ď|đ|δ/' => 'dj',[m
[32m+[m	[32m'/È|É|Ê|Ë|Ē|Ĕ|Ė|Ę|Ě|Ε|Έ|Ẽ|Ẻ|Ẹ|Ề|Ế|Ễ|Ể|Ệ|Е|Э/' => 'E',[m
[32m+[m	[32m'/è|é|ê|ë|ē|ĕ|ė|ę|ě|έ|ε|ẽ|ẻ|ẹ|ề|ế|ễ|ể|ệ|е|э/' => 'e',[m
[32m+[m	[32m'/Ф/' => 'F',[m
[32m+[m	[32m'/ф/' => 'f',[m
[32m+[m	[32m'/Ĝ|Ğ|Ġ|Ģ|Γ|Г|Ґ/' => 'G',[m
[32m+[m	[32m'/ĝ|ğ|ġ|ģ|γ|г|ґ/' => 'g',[m
[32m+[m	[32m'/Ĥ|Ħ/' => 'H',[m
[32m+[m	[32m'/ĥ|ħ/' => 'h',[m
[32m+[m	[32m'/Ì|Í|Î|Ï|Ĩ|Ī|Ĭ|Ǐ|Į|İ|Η|Ή|Ί|Ι|Ϊ|Ỉ|Ị|И|Ы/' => 'I',[m
[32m+[m	[32m'/ì|í|î|ï|ĩ|ī|ĭ|ǐ|į|ı|η|ή|ί|ι|ϊ|ỉ|ị|и|ы|ї/' => 'i',[m
[32m+[m	[32m'/Ĵ/' => 'J',[m
[32m+[m	[32m'/ĵ/' => 'j',[m
[32m+[m	[32m'/Ķ|Κ|К/' => 'K',[m
[32m+[m	[32m'/ķ|κ|к/' => 'k',[m
[32m+[m	[32m'/Ĺ|Ļ|Ľ|Ŀ|Ł|Λ|Л/' => 'L',[m
[32m+[m	[32m'/ĺ|ļ|ľ|ŀ|ł|λ|л/' => 'l',[m
[32m+[m	[32m'/М/' => 'M',[m
[32m+[m	[32m'/м/' => 'm',[m
[32m+[m	[32m'/Ñ|Ń|Ņ|Ň|Ν|Н/' => 'N',[m
[32m+[m	[32m'/ñ|ń|ņ|ň|ŉ|ν|н/' => 'n',[m
[32m+[m	[32m'/Ò|Ó|Ô|Õ|Ō|Ŏ|Ǒ|Ő|Ơ|Ø|Ǿ|Ο|Ό|Ω|Ώ|Ỏ|Ọ|Ồ|Ố|Ỗ|Ổ|Ộ|Ờ|Ớ|Ỡ|Ở|Ợ|О/' => 'O',[m
[32m+[m	[32m'/ò|ó|ô|õ|ō|ŏ|ǒ|ő|ơ|ø|ǿ|º|ο|ό|ω|ώ|ỏ|ọ|ồ|ố|ỗ|ổ|ộ|ờ|ớ|ỡ|ở|ợ|о/' => 'o',[m
[32m+[m	[32m'/П/' => 'P',[m
[32m+[m	[32m'/п/' => 'p',[m
[32m+[m	[32m'/Ŕ|Ŗ|Ř|Ρ|Р/' => 'R',[m
[32m+[m	[32m'/ŕ|ŗ|ř|ρ|р/' => 'r',[m
[32m+[m	[32m'/Ś|Ŝ|Ş|Ș|Š|Σ|С/' => 'S',[m
[32m+[m	[32m'/ś|ŝ|ş|ș|š|ſ|σ|ς|с/' => 's',[m
[32m+[m	[32m'/Ț|Ţ|Ť|Ŧ|τ|Т/' => 'T',[m
[32m+[m	[32m'/ț|ţ|ť|ŧ|т/' => 't',[m
[32m+[m	[32m'/Þ|þ/' => 'th',[m
[32m+[m	[32m'/Ù|Ú|Û|Ũ|Ū|Ŭ|Ů|Ű|Ų|Ư|Ǔ|Ǖ|Ǘ|Ǚ|Ǜ|Ũ|Ủ|Ụ|Ừ|Ứ|Ữ|Ử|Ự|У/' => 'U',[m
[32m+[m	[32m'/ù|ú|û|ũ|ū|ŭ|ů|ű|ų|ư|ǔ|ǖ|ǘ|ǚ|ǜ|υ|ύ|ϋ|ủ|ụ|ừ|ứ|ữ|ử|ự|у/' => 'u',[m
[32m+[m	[32m'/Ý|Ÿ|Ŷ|Υ|Ύ|Ϋ|Ỳ|Ỹ|Ỷ|Ỵ|Й/' => 'Y',[m
[32m+[m	[32m'/ý|ÿ|ŷ|ỳ|ỹ|ỷ|ỵ|й/' => 'y',[m
[32m+[m	[32m'/В/' => 'V',[m
[32m+[m	[32m'/в/' => 'v',[m
[32m+[m	[32m'/Ŵ/' => 'W',[m
[32m+[m	[32m'/ŵ/' => 'w',[m
[32m+[m	[32m'/Ź|Ż|Ž|Ζ|З/' => 'Z',[m
[32m+[m	[32m'/ź|ż|ž|ζ|з/' => 'z',[m
[32m+[m	[32m'/Æ|Ǽ/' => 'AE',[m
[32m+[m	[32m'/ß/' => 'ss',[m
[32m+[m	[32m'/Ĳ/' => 'IJ',[m
[32m+[m	[32m'/ĳ/' => 'ij',[m
[32m+[m	[32m'/Œ/' => 'OE',[m
[32m+[m	[32m'/ƒ/' => 'f',[m
[32m+[m	[32m'/ξ/' => 'ks',[m
[32m+[m	[32m'/π/' => 'p',[m
[32m+[m	[32m'/β/' => 'v',[m
[32m+[m	[32m'/μ/' => 'm',[m
[32m+[m	[32m'/ψ/' => 'ps',[m
[32m+[m	[32m'/Ё/' => 'Yo',[m
[32m+[m	[32m'/ё/' => 'yo',[m
[32m+[m	[32m'/Є/' => 'Ye',[m
[32m+[m	[32m'/є/' => 'ye',[m
[32m+[m	[32m'/Ї/' => 'Yi',[m
[32m+[m	[32m'/Ж/' => 'Zh',[m
[32m+[m	[32m'/ж/' => 'zh',[m
[32m+[m	[32m'/Х/' => 'Kh',[m
[32m+[m	[32m'/х/' => 'kh',[m
[32m+[m	[32m'/Ц/' => 'Ts',[m
[32m+[m	[32m'/ц/' => 'ts',[m
[32m+[m	[32m'/Ч/' => 'Ch',[m
[32m+[m	[32m'/ч/' => 'ch',[m
[32m+[m	[32m'/Ш/' => 'Sh',[m
[32m+[m	[32m'/ш/' => 'sh',[m
[32m+[m	[32m'/Щ/' => 'Shch',[m
[32m+[m	[32m'/щ/' => 'shch',[m
[32m+[m	[32m'/Ъ|ъ|Ь|ь/' => '',[m
[32m+[m	[32m'/Ю/' => 'Yu',[m
[32m+[m	[32m'/ю/' => 'yu',[m
[32m+[m	[32m'/Я/' => 'Ya',[m
[32m+[m	[32m'/я/' => 'ya'[m
[32m+[m[32m);[m
[1mdiff --git a/application/config/hooks.php b/application/config/hooks.php[m
[1mnew file mode 100644[m
[1mindex 0000000..a8f38a5[m
[1m--- /dev/null[m
[1m+++ b/application/config/hooks.php[m
[36m@@ -0,0 +1,13 @@[m
[32m+[m[32m<?php[m
[32m+[m[32mdefined('BASEPATH') OR exit('No direct script access allowed');[m
[32m+[m
[32m+[m[32m/*[m
[32m+[m[32m| -------------------------------------------------------------------------[m
[32m+[m[32m| Hooks[m
[32m+[m[32m| -------------------------------------------------------------------------[m
[32m+[m[32m| This file lets you define "hooks" to extend CI without hacking the core[m
[32m+[m[32m| files.  Please see the user guide for info:[m
[32m+[m[32m|[m
[32m+[m[32m|	https://codeigniter.com/user_guide/general/hooks.html[m
[32m+[m[32m|[m
[32m+[m[32m*/[m
[1mdiff --git a/application/config/index.html b/application/config/index.html[m
[1mnew file mode 100644[m
[1mindex 0000000..b702fbc[m
[1m--- /dev/null[m
[1m+++ b/application/config/index.html[m
[36m@@ -0,0 +1,11 @@[m
[32m+[m[32m<!DOCTYPE html>[m
[32m+[m[32m<html>[m
[32m+[m[32m<head>[m
[32m+[m	[32m<title>403 Forbidden</title>[m
[32m+[m[32m</head>[m
[32m+[m[32m<body>[m
[32m+[m
[32m+[m[32m<p>Directory access is forbidden.</p>[m
[32m+[m
[32m+[m[32m</body>[m
[32m+[m[32m</html>[m
[1mdiff --git a/application/config/memcached.php b/application/config/memcached.php[m
[1mnew file mode 100644[m
[1mindex 0000000..5c23b39[m
[1m--- /dev/null[m
[1m+++ b/application/config/memcached.php[m
[36m@@ -0,0 +1,19 @@[m
[32m+[m[32m<?php[m
[32m+[m[32mdefined('BASEPATH') OR exit('No direct script access allowed');[m
[32m+[m
[32m+[m[32m/*[m
[32m+[m[32m| -------------------------------------------------------------------------[m
[32m+[m[32m| Memcached settings[m
[32m+[m[32m| -------------------------------------------------------------------------[m
[32m+[m[32m| Your Memcached servers can be specified below.[m
[32m+[m[32m|[m
[32m+[m[32m|	See: https://codeigniter.com/user_guide/libraries/caching.html#memcached[m
[32m+[m[32m|[m
[32m+[m[32m*/[m
[32m+[m[32m$config = array([m
[32m+[m	[32m'default' => array([m
[32m+[m		[32m'hostname' => '127.0.0.1',[m
[32m+[m		[32m'port'     => '11211',[m
[32m+[m		[32m'weight'   => '1',[m
[32m+[m	[32m),[m
[32m+[m[32m);[m
[1mdiff --git a/application/config/migration.php b/application/config/migration.php[m
[1mnew file mode 100644[m
[1mindex 0000000..4b585a6[m
[1m--- /dev/null[m
[1m+++ b/application/config/migration.php[m
[36m@@ -0,0 +1,84 @@[m
[32m+[m[32m<?php[m
[32m+[m[32mdefined('BASEPATH') OR exit('No direct script access allowed');[m
[32m+[m
[32m+[m[32m/*[m
[32m+[m[32m|--------------------------------------------------------------------------[m
[32m+[m[32m| Enable/Disable Migrations[m
[32m+[m[32m|--------------------------------------------------------------------------[m
[32m+[m[32m|[m
[32m+[m[32m| Migrations are disabled by default for security reasons.[m
[32m+[m[32m| You should enable migrations whenever you intend to do a schema migration[m
[32m+[m[32m| and disable it back when you're done.[m
[32m+[m[32m|[m
[32m+[m[32m*/[m
[32m+[m[32m$config['migration_enabled'] = FALSE;[m
[32m+[m
[32m+[m[32m/*[m
[32m+[m[32m|--------------------------------------------------------------------------[m
[32m+[m[32m| Migration Type[m
[32m+[m[32m|--------------------------------------------------------------------------[m
[32m+[m[32m|[m
[32m+[m[32m| Migration file names may be based on a sequential identifier or on[m
[32m+[m[32m| a timestamp. Options are:[m
[32m+[m[32m|[m
[32m+[m[32m|   'sequential' = Sequential migration naming (001_add_blog.php)[m
[32m+[m[32m|   'timestamp'  = Timestamp migration naming (20121031104401_add_blog.php)[m
[32m+[m[32m|                  Use timestamp format YYYYMMDDHHIISS.[m
[32m+[m[32m|[m
[32m+[m[32m| Note: If this configuration value is missing the Migration library[m
[32m+[m[32m|       defaults to 'sequential' for backward compatibility with CI2.[m
[32m+[m[32m|[m
[32m+[m[32m*/[m
[32m+[m[32m$config['migration_type'] = 'timestamp';[m
[32m+[m
[32m+[m[32m/*[m
[32m+[m[32m|--------------------------------------------------------------------------[m
[32m+[m[32m| Migrations table[m
[32m+[m[32m|--------------------------------------------------------------------------[m
[32m+[m[32m|[m
[32m+[m[32m| This is the name of the table that will store the current migrations state.[m
[32m+[m[32m| When migrations runs it will store in a database table which migration[m
[32m+[m[32m| level the system is at. It then compares the migration level in this[m
[32m+[m[32m| table to the $config['migration_version'] if they are not the same it[m
[32m+[m[32m| will migrate up. This must be set.[m
[32m+[m[32m|[m
[32m+[m[32m*/[m
[32m+[m[32m$config['migration_table'] = 'migrations';[m
[32m+[m
[32m+[m[32m/*[m
[32m+[m[32m|--------------------------------------------------------------------------[m
[32m+[m[32m| Auto Migrate To Latest[m
[32m+[m[32m|--------------------------------------------------------------------------[m
[32m+[m[32m|[m
[32m+[m[32m| If this is set to TRUE when you load the migrations class and have[m
[32m+[m[32m| $config['migration_enabled'] set to TRUE the system will auto migrate[m
[32m+[m[32m| to your latest migration (whatever $config['migration_version'] is[m
[32m+[m[32m| set to). This way you do not have to call migrations anywhere else[m
[32m+[m[32m| in your code to have the latest migration.[m
[32m+[m[32m|[m
[32m+[m[32m*/[m
[32m+[m[32m$config['migration_auto_latest'] = FALSE;[m
[32m+[m
[32m+[m[32m/*[m
[32m+[m[32m|--------------------------------------------------------------------------[m
[32m+[m[32m| Migrations version[m
[32m+[m[32m|--------------------------------------------------------------------------[m
[32m+[m[32m|[m
[32m+[m[32m| This is used to set migration version that the file system should be on.[m
[32m+[m[32m| If you run $this->migration->current() this is the version that schema will[m
[32m+[m[32m| be upgraded / downgraded to.[m
[32m+[m[32m|[m
[32m+[m[32m*/[m
[32m+[m[32m$config['migration_version'] = 0;[m
[32m+[m
[32m+[m[32m/*[m
[32m+[m[32m|--------------------------------------------------------------------------[m
[32m+[m[32m| Migrations Path[m
[32m+[m[32m|--------------------------------------------------------------------------[m
[32m+[m[32m|[m
[32m+[m[32m| Path to your migrations folder.[m
[32m+[m[32m| Typically, it will be within your application path.[m
[32m+[m[32m| Also, writing permission is required within the migrations path.[m
[32m+[m[32m|[m
[32m+[m[32m*/[m
[32m+[m[32m$config['migration_path'] = APPPATH.'migrations/';[m
[1mdiff --git a/application/config/mimes.php b/application/config/mimes.php[m
[1mnew file mode 100644[m
[1mindex 0000000..0176533[m
[1m--- /dev/null[m
[1m+++ b/application/config/mimes.php[m
[36m@@ -0,0 +1,183 @@[m
[32m+[m[32m<?php[m
[32m+[m[32mdefined('BASEPATH') OR exit('No direct script access allowed');[m
[32m+[m
[32m+[m[32m/*[m
[32m+[m[32m| -------------------------------------------------------------------[m
[32m+[m[32m| MIME TYPES[m
[32m+[m[32m| -------------------------------------------------------------------[m
[32m+[m[32m| This file contains an array of mime types.  It is used by the[m
[32m+[m[32m| Upload class to help identify allowed file types.[m
[32m+[m[32m|[m
[32m+[m[32m*/[m
[32m+[m[32mreturn array([m
[32m+[m	[32m'hqx'	=>	array('application/mac-binhex40', 'application/mac-binhex', 'application/x-binhex40', 'application/x-mac-binhex40'),[m
[32m+[m	[32m'cpt'	=>	'application/mac-compactpro',[m
[32m+[m	[32m'csv'	=>	array('text/x-comma-separated-values', 'text/comma-separated-values', 'application/octet-stream', 'application/vnd.ms-excel', 'application/x-csv', 'text/x-csv', 'text/csv', 'application/csv', 'application/excel', 'application/vnd.msexcel', 'text/plain'),[m
[32m+[m	[32m'bin'	=>	array('application/macbinary', 'application/mac-binary', 'application/octet-stream', 'application/x-binary', 'application/x-macbinary'),[m
[32m+[m	[32m'dms'	=>	'application/octet-stream',[m
[32m+[m	[32m'lha'	=>	'application/octet-stream',[m
[32m+[m	[32m'lzh'	=>	'application/octet-stream',[m
[32m+[m	[32m'exe'	=>	array('application/octet-stream', 'application/x-msdownload'),[m
[32m+[m	[32m'class'	=>	'application/octet-stream',[m
[32m+[m	[32m'psd'	=>	array('application/x-photoshop', 'image/vnd.adobe.photoshop'),[m
[32m+[m	[32m'so'	=>	'application/octet-stream',[m
[32m+[m	[32m'sea'	=>	'application/octet-stream',[m
[32m+[m	[32m'dll'	=>	'application/octet-stream',[m
[32m+[m	[32m'oda'	=>	'application/oda',[m
[32m+[m	[32m'pdf'	=>	array('application/pdf', 'application/force-download', 'application/x-download', 'binary/octet-stream'),[m
[32m+[m	[32m'ai'	=>	array('application/pdf', 'application/postscript'),[m
[32m+[m	[32m'eps'	=>	'application/postscript',[m
[32m+[m	[32m'ps'	=>	'application/postscript',[m
[32m+[m	[32m'smi'	=>	'application/smil',[m
[32m+[m	[32m'smil'	=>	'application/smil',[m
[32m+[m	[32m'mif'	=>	'application/vnd.mif',[m
[32m+[m	[32m'xls'	=>	array('application/vnd.ms-excel', 'application/msexcel', 'application/x-msexcel', 'application/x-ms-excel', 'application/x-excel', 'application/x-dos_ms_excel', 'application/xls', 'application/x-xls', 'application/excel', 'application/download', 'application/vnd.ms-office', 'application/msword'),[m
[32m+[m	[32m'ppt'	=>	array('application/powerpoint', 'application/vnd.ms-powerpoint', 'application/vnd.ms-office', 'application/msword'),[m
[32m+[m	[32m'pptx'	=> 	array('application/vnd.openxmlformats-officedocument.presentationml.presentation', 'application/x-zip', 'application/zip'),[m
[32m+[m	[32m'wbxml'	=>	'application/wbxml',[m
[32m+[m	[32m'wmlc'	=>	'application/wmlc',[m
[32m+[m	[32m'dcr'	=>	'application/x-director',[m
[32m+[m	[32m'dir'	=>	'application/x-director',[m
[32m+[m	[32m'dxr'	=>	'application/x-director',[m
[32m+[m	[32m'dvi'	=>	'application/x-dvi',[m
[32m+[m	[32m'gtar'	=>	'application/x-gtar',[m
[32m+[m	[32m'gz'	=>	'application/x-gzip',[m
[32m+[m	[32m'gzip'  =>	'application/x-gzip',[m
[32m+[m	[32m'php'	=>	array('application/x-httpd-php', 'application/php', 'application/x-php', 'text/php', 'text/x-php', 'application/x-httpd-php-source'),[m
[32m+[m	[32m'php4'	=>	'application/x-httpd-php',[m
[32m+[m	[32m'php3'	=>	'application/x-httpd-php',[m
[32m+[m	[32m'phtml'	=>	'application/x-httpd-php',[m
[32m+[m	[32m'phps'	=>	'application/x-httpd-php-source',[m
[32m+[m	[32m'js'	=>	array('application/x-javascript', 'text/plain'),[m
[32m+[m	[32m'swf'	=>	'application/x-shockwave-flash',[m
[32m+[m	[32m'sit'	=>	'application/x-stuffit',[m
[32m+[m	[32m'tar'	=>	'application/x-tar',[m
[32m+[m	[32m'tgz'	=>	array('application/x-tar', 'application/x-gzip-compressed'),[m
[32m+[m	[32m'z'	=>	'application/x-compress',[m
[32m+[m	[32m'xhtml'	=>	'application/xhtml+xml',[m
[32m+[m	[32m'xht'	=>	'application/xhtml+xml',[m
[32m+[m	[32m'zip'	=>	array('application/x-zip', 'application/zip', 'application/x-zip-compressed', 'application/s-compressed', 'multipart/x-zip'),[m
[32m+[m	[32m'rar'	=>	array('application/x-rar', 'application/rar', 'application/x-rar-compressed'),[m
[32m+[m	[32m'mid'	=>	'audio/midi',[m
[32m+[m	[32m'midi'	=>	'audio/midi',[m
[32m+[m	[32m'mpga'	=>	'audio/mpeg',[m
[32m+[m	[32m'mp2'	=>	'audio/mpeg',[m
[32m+[m	[32m'mp3'	=>	array('audio/mpeg', 'audio/mpg', 'audio/mpeg3', 'audio/mp3'),[m
[32m+[m	[32m'aif'	=>	array('audio/x-aiff', 'audio/aiff'),[m
[32m+[m	[32m'aiff'	=>	array('audio/x-aiff', 'audio/aiff'),[m
[32m+[m	[32m'aifc'	=>	'audio/x-aiff',[m
[32m+[m	[32m'ram'	=>	'audio/x-pn-realaudio',[m
[32m+[m	[32m'rm'	=>	'audio/x-pn-realaudio',[m
[32m+[m	[32m'rpm'	=>	'audio/x-pn-realaudio-plugin',[m
[32m+[m	[32m'ra'	=>	'audio/x-realaudio',[m
[32m+[m	[32m'rv'	=>	'video/vnd.rn-realvideo',[m
[32m+[m	[32m'wav'	=>	array('audio/x-wav', 'audio/wave', 'audio/wav'),[m
[32m+[m	[32m'bmp'	=>	array('image/bmp', 'image/x-bmp', 'image/x-bitmap', 'image/x-xbitmap', 'image/x-win-bitmap', 'image/x-windows-bmp', 'image/ms-bmp', 'image/x-ms-bmp', 'application/bmp', 'application/x-bmp', 'application/x-win-bitmap'),[m
[32m+[m	[32m'gif'	=>	'image/gif',[m
[32m+[m	[32m'jpeg'	=>	array('image/jpeg', 'image/pjpeg'),[m
[32m+[m	[32m'jpg'	=>	array('image/jpeg', 'image/pjpeg'),[m
[32m+[m	[32m'jpe'	=>	array('image/jpeg', 'image/pjpeg'),[m
[32m+[m	[32m'jp2'	=>	array('image/jp2', 'video/mj2', 'image/jpx', 'image/jpm'),[m
[32m+[m	[32m'j2k'	=>	array('image/jp2', 'video/mj2', 'image/jpx', 'image/jpm'),[m
[32m+[m	[32m'jpf'	=>	array('image/jp2', 'video/mj2', 'image/jpx', 'image/jpm'),[m
[32m+[m	[32m'jpg2'	=>	array('image/jp2', 'video/mj2', 'image/jpx', 'image/jpm'),[m
[32m+[m	[32m'jpx'	=>	array('image/jp2', 'video/mj2', 'image/jpx', 'image/jpm'),[m
[32m+[m	[32m'jpm'	=>	array('image/jp2', 'video/mj2', 'image/jpx', 'image/jpm'),[m
[32m+[m	[32m'mj2'	=>	array('image/jp2', 'video/mj2', 'image/jpx', 'image/jpm'),[m
[32m+[m	[32m'mjp2'	=>	array('image/jp2', 'video/mj2', 'image/jpx', 'image/jpm'),[m
[32m+[m	[32m'png'	=>	array('image/png',  'image/x-png'),[m
[32m+[m	[32m'tiff'	=>	'image/tiff',[m
[32m+[m	[32m'tif'	=>	'image/tiff',[m
[32m+[m	[32m'css'	=>	array('text/css', 'text/plain'),[m
[32m+[m	[32m'html'	=>	array('text/html', 'text/plain'),[m
[32m+[m	[32m'htm'	=>	array('text/html', 'text/plain'),[m
[32m+[m	[32m'shtml'	=>	array('text/html', 'text/plain'),[m
[32m+[m	[32m'txt'	=>	'text/plain',[m
[32m+[m	[32m'text'	=>	'text/plain',[m
[32m+[m	[32m'log'	=>	array('text/plain', 'text/x-log'),[m
[32m+[m	[32m'rtx'	=>	'text/richtext',[m
[32m+[m	[32m'rtf'	=>	'text/rtf',[m
[32m+[m	[32m'xml'	=>	array('application/xml', 'text/xml', 'text/plain'),[m
[32m+[m	[32m'xsl'	=>	array('application/xml', 'text/xsl', 'text/xml'),[m
[32m+[m	[32m'mpeg'	=>	'video/mpeg',[m
[32m+[m	[32m'mpg'	=>	'video/mpeg',[m
[32m+[m	[32m'mpe'	=>	'video/mpeg',[m
[32m+[m	[32m'qt'	=>	'video/quicktime',[m
[32m+[m	[32m'mov'	=>	'video/quicktime',[m
[32m+[m	[32m'avi'	=>	array('video/x-msvideo', 'video/msvideo', 'video/avi', 'application/x-troff-msvideo'),[m
[32m+[m	[32m'movie'	=>	'video/x-sgi-movie',[m
[32m+[m	[32m'doc'	=>	array('application/msword', 'application/vnd.ms-office'),[m
[32m+[m	[32m'docx'	=>	array('application/vnd.openxmlformats-officedocument.wordprocessingml.document', 'application/zip', 'application/msword', 'application/x-zip'),[m
[32m+[m	[32m'dot'	=>	array('application/msword', 'application/vnd.ms-office'),[m
[32m+[m	[32m'dotx'	=>	array('application/vnd.openxmlformats-officedocument.wordprocessingml.document', 'application/zip', 'application/msword'),[m
[32m+[m	[32m'xlsx'	=>	array('application/vnd.openxmlformats-officedocument.spreadsheetml.sheet', 'application/zip', 'application/vnd.ms-excel', 'application/msword', 'application/x-zip'),[m
[32m+[m	[32m'word'	=>	array('application/msword', 'application/octet-stream'),[m
[32m+[m	[32m'xl'	=>	'application/excel',[m
[32m+[m	[32m'eml'	=>	'message/rfc822',[m
[32m+[m	[32m'json'  =>	array('application/json', 'text/json'),[m
[32m+[m	[32m'pem'   =>	array('application/x-x509-user-cert', 'application/x-pem-file', 'application/octet-stream'),[m
[32m+[m	[32m'p10'   =>	array('application/x-pkcs10', 'application/pkcs10'),[m
[32m+[m	[32m'p12'   =>	'application/x-pkcs12',[m
[32m+[m	[32m'p7a'   =>	'application/x-pkcs7-signature',[m
[32m+[m	[32m'p7c'   =>	array('application/pkcs7-mime', 'application/x-pkcs7-mime'),[m
[32m+[m	[32m'p7m'   =>	array('application/pkcs7-mime', 'application/x-pkcs7-mime'),[m
[32m+[m	[32m'p7r'   =>	'application/x-pkcs7-certreqresp',[m
[32m+[m	[32m'p7s'   =>	'application/pkcs7-signature',[m
[32m+[m	[32m'crt'   =>	array('application/x-x509-ca-cert', 'application/x-x509-user-cert', 'application/pkix-cert'),[m
[32m+[m	[32m'crl'   =>	array('application/pkix-crl', 'application/pkcs-crl'),[m
[32m+[m	[32m'der'   =>	'application/x-x509-ca-cert',[m
[32m+[m	[32m'kdb'   =>	'application/octet-stream',[m
[32m+[m	[32m'pgp'   =>	'application/pgp',[m
[32m+[m	[32m'gpg'   =>	'application/gpg-keys',[m
[32m+[m	[32m'sst'   =>	'application/octet-stream',[m
[32m+[m	[32m'csr'   =>	'application/octet-stream',[m
[32m+[m	[32m'rsa'   =>	'application/x-pkcs7',[m
[32m+[m	[32m'cer'   =>	array('application/pkix-cert', 'application/x-x509-ca-cert'),[m
[32m+[m	[32m'3g2'   =>	'video/3gpp2',[m
[32m+[m	[32m'3gp'   =>	array('video/3gp', 'video/3gpp'),[m
[32m+[m	[32m'mp4'   =>	'video/mp4',[m
[32m+[m	[32m'm4a'   =>	'audio/x-m4a',[m
[32m+[m	[32m'f4v'   =>	array('video/mp4', 'video/x-f4v'),[m
[32m+[m	[32m'flv'	=>	'video/x-flv',[m
[32m+[m	[32m'webm'	=>	'video/webm',[m
[32m+[m	[32m'aac'   =>	'audio/x-acc',[m
[32m+[m	[32m'm4u'   =>	'application/vnd.mpegurl',[m
[32m+[m	[32m'm3u'   =>	'text/plain',[m
[32m+[m	[32m'xspf'  =>	'application/xspf+xml',[m
[32m+[m	[32m'vlc'   =>	'application/videolan',[m
[32m+[m	[32m'wmv'   =>	array('video/x-ms-wmv', 'video/x-ms-asf'),[m
[32m+[m	[32m'au'    =>	'audio/x-au',[m
[32m+[m	[32m'ac3'   =>	'audio/ac3',[m
[32m+[m	[32m'flac'  =>	'audio/x-flac',[m
[32m+[m	[32m'ogg'   =>	array('audio/ogg', 'video/ogg', 'application/ogg'),[m
[32m+[m	[32m'kmz'	=>	array('application/vnd.google-earth.kmz', 'application/zip', 'application/x-zip'),[m
[32m+[m	[32m'kml'	=>	array('application/vnd.google-earth.kml+xml', 'application/xml', 'text/xml'),[m
[32m+[m	[32m'ics'	=>	'text/calendar',[m
[32m+[m	[32m'ical'	=>	'text/calendar',[m
[32m+[m	[32m'zsh'	=>	'text/x-scriptzsh',[m
[32m+[m	[32m'7zip'	=>	array('application/x-compressed', 'application/x-zip-compressed', 'application/zip', 'multipart/x-zip'),[m
[32m+[m	[32m'cdr'	=>	array('application/cdr', 'application/coreldraw', 'application/x-cdr', 'application/x-coreldraw', 'image/cdr', 'image/x-cdr', 'zz-application/zz-winassoc-cdr'),[m
[32m+[m	[32m'wma'	=>	array('audio/x-ms-wma', 'video/x-ms-asf'),[m
[32m+[m	[32m'jar'	=>	array('application/java-archive', 'application/x-java-application', 'application/x-jar', 'application/x-compressed'),[m
[32m+[m	[32m'svg'	=>	array('image/svg+xml', 'application/xml', 'text/xml'),[m
[32m+[m	[32m'vcf'	=>	'text/x-vcard',[m
[32m+[m	[32m'srt'	=>	array('text/srt', 'text/plain'),[m
[32m+[m	[32m'vtt'	=>	array('text/vtt', 'text/plain'),[m
[32m+[m	[32m'ico'	=>	array('image/x-icon', 'image/x-ico', 'image/vnd.microsoft.icon'),[m
[32m+[m	[32m'odc'	=>	'application/vnd.oasis.opendocument.chart',[m
[32m+[m	[32m'otc'	=>	'application/vnd.oasis.opendocument.chart-template',[m
[32m+[m	[32m'odf'	=>	'application/vnd.oasis.opendocument.formula',[m
[32m+[m	[32m'otf'	=>	'application/vnd.oasis.opendocument.formula-template',[m
[32m+[m	[32m'odg'	=>	'application/vnd.oasis.opendocument.graphics',[m
[32m+[m	[32m'otg'	=>	'application/vnd.oasis.opendocument.graphics-template',[m
[32m+[m	[32m'odi'	=>	'application/vnd.oasis.opendocument.image',[m
[32m+[m	[32m'oti'	=>	'application/vnd.oasis.opendocument.image-template',[m
[32m+[m	[32m'odp'	=>	'application/vnd.oasis.opendocument.presentation',[m
[32m+[m	[32m'otp'	=>	'application/vnd.oasis.opendocument.presentation-template',[m
[32m+[m	[32m'ods'	=>	'application/vnd.oasis.opendocument.spreadsheet',[m
[32m+[m	[32m'ots'	=>	'application/vnd.oasis.opendocument.spreadsheet-template',[m
[32m+[m	[32m'odt'	=>	'application/vnd.oasis.opendocument.text',[m
[32m+[m	[32m'odm'	=>	'application/vnd.oasis.opendocument.text-master',[m
[32m+[m	[32m'ott'	=>	'application/vnd.oasis.opendocument.text-template',[m
[32m+[m	[32m'oth'	=>	'application/vnd.oasis.opendocument.text-web'[m
[32m+[m[32m);[m
[1mdiff --git a/application/config/profiler.php b/application/config/profiler.php[m
[1mnew file mode 100644[m
[1mindex 0000000..3db22e3[m
[1m--- /dev/null[m
[1m+++ b/application/config/profiler.php[m
[36m@@ -0,0 +1,14 @@[m
[32m+[m[32m<?php[m
[32m+[m[32mdefined('BASEPATH') OR exit('No direct script access allowed');[m
[32m+[m
[32m+[m[32m/*[m
[32m+[m[32m| -------------------------------------------------------------------------[m
[32m+[m[32m| Profiler Sections[m
[32m+[m[32m| -------------------------------------------------------------------------[m
[32m+[m[32m| This file lets you determine whether or not various sections of Profiler[m
[32m+[m[32m| data are displayed when the Profiler is enabled.[m
[32m+[m[32m| Please see the user guide for info:[m
[32m+[m[32m|[m
[32m+[m[32m|	https://codeigniter.com/user_guide/general/profiling.html[m
[32m+[m[32m|[m
[32m+[m[32m*/[m
[1mdiff --git a/application/config/routes.php b/application/config/routes.php[m
[1mnew file mode 100644[m
[1mindex 0000000..1b45740[m
[1m--- /dev/null[m
[1m+++ b/application/config/routes.php[m
[36m@@ -0,0 +1,54 @@[m
[32m+[m[32m<?php[m
[32m+[m[32mdefined('BASEPATH') OR exit('No direct script access allowed');[m
[32m+[m
[32m+[m[32m/*[m
[32m+[m[32m| -------------------------------------------------------------------------[m
[32m+[m[32m| URI ROUTING[m
[32m+[m[32m| -------------------------------------------------------------------------[m
[32m+[m[32m| This file lets you re-map URI requests to specific controller functions.[m
[32m+[m[32m|[m
[32m+[m[32m| Typically there is a one-to-one relationship between a URL string[m
[32m+[m[32m| and its corresponding controller class/method. The segments in a[m
[32m+[m[32m| URL normally follow this pattern:[m
[32m+[m[32m|[m
[32m+[m[32m|	example.com/class/method/id/[m
[32m+[m[32m|[m
[32m+[m[32m| In some instances, however, you may want to remap this relationship[m
[32m+[m[32m| so that a different class/function is called than the one[m
[32m+[m[32m| corresponding to the URL.[m
[32m+[m[32m|[m
[32m+[m[32m| Please see the user guide for complete details:[m
[32m+[m[32m|[m
[32m+[m[32m|	https://codeigniter.com/user_guide/general/routing.html[m
[32m+[m[32m|[m
[32m+[m[32m| -------------------------------------------------------------------------[m
[32m+[m[32m| RESERVED ROUTES[m
[32m+[m[32m| -------------------------------------------------------------------------[m
[32m+[m[32m|[m
[32m+[m[32m| There are three reserved routes:[m
[32m+[m[32m|[m
[32m+[m[32m|	$route['default_controller'] = 'welcome';[m
[32m+[m[32m|[m
[32m+[m[32m| This route indicates which controller class should be loaded if the[m
[32m+[m[32m| URI contains no data. In the above example, the "welcome" class[m
[32m+[m[32m| would be loaded.[m
[32m+[m[32m|[m
[32m+[m[32m|	$route['404_override'] = 'errors/page_missing';[m
[32m+[m[32m|[m
[32m+[m[32m| This route will tell the Router which controller/method to use if those[m
[32m+[m[32m| provided in the URL cannot be matched to a valid route.[m
[32m+[m[32m|[m
[32m+[m[32m|	$route['translate_uri_dashes'] = FALSE;[m
[32m+[m[32m|[m
[32m+[m[32m| This is not exactly a route, but allows you to automatically route[m
[32m+[m[32m| controller and method names that contain dashes. '-' isn't a valid[m
[32m+[m[32m| class or method name character, so it requires translation.[m
[32m+[m[32m| When you set this option to TRUE, it will replace ALL dashes in the[m
[32m+[m[32m| controller and method URI segments.[m
[32m+[m[32m|[m
[32m+[m[32m| Examples:	my-controller/index	-> my_controller/index[m
[32m+[m[32m|		my-controller/my-method	-> my_controller/my_method[m
[32m+[m[32m*/[m
[32m+[m[32m$route['default_controller'] = 'welcome';[m
[32m+[m[32m$route['404_override'] = '';[m
[32m+[m[32m$route['translate_uri_dashes'] = FALSE;[m
[1mdiff --git a/application/config/smileys.php b/application/config/smileys.php[m
[1mnew file mode 100644[m
[1mindex 0000000..abf9a89[m
[1m--- /dev/null[m
[1m+++ b/application/config/smileys.php[m
[36m@@ -0,0 +1,64 @@[m
[32m+[m[32m<?php[m
[32m+[m[32mdefined('BASEPATH') OR exit('No direct script access allowed');[m
[32m+[m
[32m+[m[32m/*[m
[32m+[m[32m| -------------------------------------------------------------------[m
[32m+[m[32m| SMILEYS[m
[32m+[m[32m| -------------------------------------------------------------------[m
[32m+[m[32m| This file contains an array of smileys for use with the emoticon helper.[m
[32m+[m[32m| Individual images can be used to replace multiple smileys.  For example:[m
[32m+[m[32m| :-) and :) use the same image replacement.[m
[32m+[m[32m|[m
[32m+[m[32m| Please see user guide for more info:[m
[32m+[m[32m| https://codeigniter.com/user_guide/helpers/smiley_helper.html[m
[32m+[m[32m|[m
[32m+[m[32m*/[m
[32m+[m[32m$smileys = array([m
[32m+[m
[32m+[m[32m//	smiley			image name						width	height	alt[m
[32m+[m
[32m+[m	[32m':-)'			=>	array('grin.gif',			'19',	'19',	'grin'),[m
[32m+[m	[32m':lol:'			=>	array('lol.gif',			'19',	'19',	'LOL'),[m
[32m+[m	[32m':cheese:'		=>	array('cheese.gif',			'19',	'19',	'cheese'),[m
[32m+[m	[32m':)'			=>	array('smile.gif',			'19',	'19',	'smile'),[m
[32m+[m	[32m';-)'			=>	array('wink.gif',			'19',	'19',	'wink'),[m
[32m+[m	[32m';)'			=>	array('wink.gif',			'19',	'19',	'wink'),[m
[32m+[m	[32m':smirk:'		=>	array('smirk.gif',			'19',	'19',	'smirk'),[m
[32m+[m	[32m':roll:'		=>	array('rolleyes.gif',		'19',	'19',	'rolleyes'),[m
[32m+[m	[32m':-S'			=>	array('confused.gif',		'19',	'19',	'confused'),[m
[32m+[m	[32m':wow:'			=>	array('surprise.gif',		'19',	'19',	'surprised'),[m
[32m+[m	[32m':bug:'			=>	array('bigsurprise.gif',	'19',	'19',	'big surprise'),[m
[32m+[m	[32m':-P'			=>	array('tongue_laugh.gif',	'19',	'19',	'tongue laugh'),[m
[32m+[m	[32m'%-P'			=>	array('tongue_rolleye.gif',	'19',	'19',	'tongue rolleye'),[m
[32m+[m	[32m';-P'			=>	array('tongue_wink.gif',	'19',	'19',	'tongue wink'),[m
[32m+[m	[32m':P'			=>	array('raspberry.gif',		'19',	'19',	'raspberry'),[m
[32m+[m	[32m':blank:'		=>	array('blank.gif',			'19',	'19',	'blank stare'),[m
[32m+[m	[32m':long:'		=>	array('longface.gif',		'19',	'19',	'long face'),[m
[32m+[m	[32m':ohh:'			=>	array('ohh.gif',			'19',	'19',	'ohh'),[m
[32m+[m	[32m':grrr:'		=>	array('grrr.gif',			'19',	'19',	'grrr'),[m
[32m+[m	[32m':gulp:'		=>	array('gulp.gif',			'19',	'19',	'gulp'),[m
[32m+[m	[32m'8-/'			=>	array('ohoh.gif',			'19',	'19',	'oh oh'),[m
[32m+[m	[32m':down:'		=>	array('downer.gif',			'19',	'19',	'downer'),[m
[32m+[m	[32m':red:'			=>	array('embarrassed.gif',	'19',	'19',	'red face'),[m
[32m+[m	[32m':sick:'		=>	array('sick.gif',			'19',	'19',	'sick'),[m
[32m+[m	[32m':shut:'		=>	array('shuteye.gif',		'19',	'19',	'shut eye'),[m
[32m+[m	[32m':-/'			=>	array('hmm.gif',			'19',	'19',	'hmmm'),[m
[32m+[m	[32m'>:('			=>	array('mad.gif',			'19',	'19',	'mad'),[m
[32m+[m	[32m':mad:'			=>	array('mad.gif',			'19',	'19',	'mad'),[m
[32m+[m	[32m'>:-('			=>	array('angry.gif',			'19',	'19',	'angry'),[m
[32m+[m	[32m':angry:'		=>	array('angry.gif',			'19',	'19',	'angry'),[m
[32m+[m	[32m':zip:'			=>	array('zip.gif',			'19',	'19',	'zipper'),[m
[32m+[m	[32m':kiss:'		=>	array('kiss.gif',			'19',	'19',	'kiss'),[m
[32m+[m	[32m':ahhh:'		=>	array('shock.gif',			'19',	'19',	'shock'),[m
[32m+[m	[32m':coolsmile:'	=>	array('shade_smile.gif',	'19',	'19',	'cool smile'),[m
[32m+[m	[32m':coolsmirk:'	=>	array('shade_smirk.gif',	'19',	'19',	'cool smirk'),[m
[32m+[m	[32m':coolgrin:'	=>	array('shade_grin.gif',		'19',	'19',	'cool grin'),[m
[32m+[m	[32m':coolhmm:'		=>	array('shade_hmm.gif',		'19',	'19',	'cool hmm'),[m
[32m+[m	[32m':coolmad:'		=>	array('shade_mad.gif',		'19',	'19',	'cool mad'),[m
[32m+[m	[32m':coolcheese:'	=>	array('shade_cheese.gif',	'19',	'19',	'cool cheese'),[m
[32m+[m	[32m':vampire:'		=>	array('vampire.gif',		'19',	'19',	'vampire'),[m
[32m+[m	[32m':snake:'		=>	array('snake.gif',			'19',	'19',	'snake'),[m
[32m+[m	[32m':exclaim:'		=>	array('exclaim.gif',		'19',	'19',	'exclaim'),[m
[32m+[m	[32m':question:'	=>	array('question.gif',		'19',	'19',	'question')[m
[32m+[m
[32m+[m[32m);[m
[1mdiff --git a/application/config/user_agents.php b/application/config/user_agents.php[m
[1mnew file mode 100644[m
[1mindex 0000000..798086b[m
[1m--- /dev/null[m
[1m+++ b/application/config/user_agents.php[m
[36m@@ -0,0 +1,214 @@[m
[32m+[m[32m<?php[m
[32m+[m[32mdefined('BASEPATH') OR exit('No direct script access allowed');[m
[32m+[m
[32m+[m[32m/*[m
[32m+[m[32m| -------------------------------------------------------------------[m
[32m+[m[32m| USER AGENT TYPES[m
[32m+[m[32m| -------------------------------------------------------------------[m
[32m+[m[32m| This file contains four arrays of user agent data. It is used by the[m
[32m+[m[32m| User Agent Class to help identify browser, platform, robot, and[m
[32m+[m[32m| mobile device data. The array keys are used to identify the device[m
[32m+[m[32m| and the array values are used to set the actual name of the item.[m
[32m+[m[32m*/[m
[32m+[m[32m$platforms = array([m
[32m+[m	[32m'windows nt 10.0'	=> 'Windows 10',[m
[32m+[m	[32m'windows nt 6.3'	=> 'Windows 8.1',[m
[32m+[m	[32m'windows nt 6.2'	=> 'Windows 8',[m
[32m+[m	[32m'windows nt 6.1'	=> 'Windows 7',[m
[32m+[m	[32m'windows nt 6.0'	=> 'Windows Vista',[m
[32m+[m	[32m'windows nt 5.2'	=> 'Windows 2003',[m
[32m+[m	[32m'windows nt 5.1'	=> 'Windows XP',[m
[32m+[m	[32m'windows nt 5.0'	=> 'Windows 2000',[m
[32m+[m	[32m'windows nt 4.0'	=> 'Windows NT 4.0',[m
[32m+[m	[32m'winnt4.0'			=> 'Windows NT 4.0',[m
[32m+[m	[32m'winnt 4.0'			=> 'Windows NT',[m
[32m+[m	[32m'winnt'				=> 'Windows NT',[m
[32m+[m	[32m'windows 98'		=> 'Windows 98',[m
[32m+[m	[32m'win98'				=> 'Windows 98',[m
[32m+[m	[32m'windows 95'		=> 'Windows 95',[m
[32m+[m	[32m'win95'				=> 'Windows 95',[m
[32m+[m	[32m'windows phone'			=> 'Windows Phone',[m
[32m+[m	[32m'windows'			=> 'Unknown Windows OS',[m
[32m+[m	[32m'android'			=> 'Android',[m
[32m+[m	[32m'blackberry'		=> 'BlackBerry',[m
[32m+[m	[32m'iphone'			=> 'iOS',[m
[32m+[m	[32m'ipad'				=> 'iOS',[m
[32m+[m	[32m'ipod'				=> 'iOS',[m
[32m+[m	[32m'os x'				=> 'Mac OS X',[m
[32m+[m	[32m'ppc mac'			=> 'Power PC Mac',[m
[32m+[m	[32m'freebsd'			=> 'FreeBSD',[m
[32m+[m	[32m'ppc'				=> 'Macintosh',[m
[32m+[m	[32m'linux'				=> 'Linux',[m
[32m+[m	[32m'debian'			=> 'Debian',[m
[32m+[m	[32m'sunos'				=> 'Sun Solaris',[m
[32m+[m	[32m'beos'				=> 'BeOS',[m
[32m+[m	[32m'apachebench'		=> 'ApacheBench',[m
[32m+[m	[32m'aix'				=> 'AIX',[m
[32m+[m	[32m'irix'				=> 'Irix',[m
[32m+[m	[32m'osf'				=> 'DEC OSF',[m
[32m+[m	[32m'hp-ux'				=> 'HP-UX',[m
[32m+[m	[32m'netbsd'			=> 'NetBSD',[m
[32m+[m	[32m'bsdi'				=> 'BSDi',[m
[32m+[m	[32m'openbsd'			=> 'OpenBSD',[m
[32m+[m	[32m'gnu'				=> 'GNU/Linux',[m
[32m+[m	[32m'unix'				=> 'Unknown Unix OS',[m
[32m+[m	[32m'symbian' 			=> 'Symbian OS'[m
[32m+[m[32m);[m
[32m+[m
[32m+[m
[32m+[m[32m// The order of this array should NOT be changed. Many browsers return[m
[32m+[m[32m// multiple browser types so we want to identify the sub-type first.[m
[32m+[m[32m$browsers = array([m
[32m+[m	[32m'OPR'			=> 'Opera',[m
[32m+[m	[32m'Flock'			=> 'Flock',[m
[32m+[m	[32m'Edge'			=> 'Spartan',[m
[32m+[m	[32m'Chrome'		=> 'Chrome',[m
[32m+[m	[32m// Opera 10+ always reports Opera/9.80 and appends Version/<real version> to the user agent string[m
[32m+[m	[32m'Opera.*?Version'	=> 'Opera',[m
[32m+[m	[32m'Opera'			=> 'Opera',[m
[32m+[m	[32m'MSIE'			=> 'Internet Explorer',[m
[32m+[m	[32m'Internet Explorer'	=> 'Internet Explorer',[m
[32m+[m	[32m'Trident.* rv'	=> 'Internet Explorer',[m
[32m+[m	[32m'Shiira'		=> 'Shiira',[m
[32m+[m	[32m'Firefox'		=> 'Firefox',[m
[32m+[m	[32m'Chimera'		=> 'Chimera',[m
[32m+[m	[32m'Phoenix'		=> 'Phoenix',[m
[32m+[m	[32m'Firebird'		=> 'Firebird',[m
[32m+[m	[32m'Camino'		=> 'Camino',[m
[32m+[m	[32m'Netscape'		=> 'Netscape',[m
[32m+[m	[32m'OmniWeb'		=> 'OmniWeb',[m
[32m+[m	[32m'Safari'		=> 'Safari',[m
[32m+[m	[32m'Mozilla'		=> 'Mozilla',[m
[32m+[m	[32m'Konqueror'		=> 'Konqueror',[m
[32m+[m	[32m'icab'			=> 'iCab',[m
[32m+[m	[32m'Lynx'			=> 'Lynx',[m
[32m+[m	[32m'Links'			=> 'Links',[m
[32m+[m	[32m'hotjava'		=> 'HotJava',[m
[32m+[m	[32m'amaya'			=> 'Amaya',[m
[32m+[m	[32m'IBrowse'		=> 'IBrowse',[m
[32m+[m	[32m'Maxthon'		=> 'Maxthon',[m
[32m+[m	[32m'Ubuntu'		=> 'Ubuntu Web Browser'[m
[32m+[m[32m);[m
[32m+[m
[32m+[m[32m$mobiles = array([m
[32m+[m	[32m// legacy array, old values commented out[m
[32m+[m	[32m'mobileexplorer'	=> 'Mobile Explorer',[m
[32m+[m[32m//  'openwave'			=> 'Open Wave',[m
[32m+[m[32m//	'opera mini'		=> 'Opera Mini',[m
[32m+[m[32m//	'operamini'			=> 'Opera Mini',[m
[32m+[m[32m//	'elaine'			=> 'Palm',[m
[32m+[m	[32m'palmsource'		=> 'Palm',[m
[32m+[m[32m//	'digital paths'		=> 'Palm',[m
[32m+[m[32m//	'avantgo'			=> 'Avantgo',[m
[32m+[m[32m//	'xiino'				=> 'Xiino',[m
[32m+[m	[32m'palmscape'			=> 'Palmscape',[m
[32m+[m[32m//	'nokia'				=> 'Nokia',[m
[32m+[m[32m//	'ericsson'			=> 'Ericsson',[m
[32m+[m[32m//	'blackberry'		=> 'BlackBerry',[m
[32m+[m[32m//	'motorola'			=> 'Motorola'[m
[32m+[m
[32m+[m	[32m// Phones and Manufacturers[m
[32m+[m	[32m'motorola'		=> 'Motorola',[m
[32m+[m	[32m'nokia'			=> 'Nokia',[m
[32m+[m	[32m'palm'			=> 'Palm',[m
[32m+[m	[32m'iphone'		=> 'Apple iPhone',[m
[32m+[m	[32m'ipad'			=> 'iPad',[m
[32m+[m	[32m'ipod'			=> 'Apple iPod Touch',[m
[32m+[m	[32m'sony'			=> 'Sony Ericsson',[m
[32m+[m	[32m'ericsson'		=> 'Sony Ericsson',[m
[32m+[m	[32m'blackberry'	=> 'BlackBerry',[m
[32m+[m	[32m'cocoon'		=> 'O2 Cocoon',[m
[32m+[m	[32m'blazer'		=> 'Treo',[m
[32m+[m	[32m'lg'			=> 'LG',[m
[32m+[m	[32m'amoi'			=> 'Amoi',[m
[32m+[m	[32m'xda'			=> 'XDA',[m
[32m+[m	[32m'mda'			=> 'MDA',[m
[32m+[m	[32m'vario'			=> 'Vario',[m
[32m+[m	[32m'htc'			=> 'HTC',[m
[32m+[m	[32m'samsung'		=> 'Samsung',[m
[32m+[m	[32m'sharp'			=> 'Sharp',[m
[32m+[m	[32m'sie-'			=> 'Siemens',[m
[32m+[m	[32m'alcatel'		=> 'Alcatel',[m
[32m+[m	[32m'benq'			=> 'BenQ',[m
[32m+[m	[32m'ipaq'			=> 'HP iPaq',[m
[32m+[m	[32m'mot-'			=> 'Motorola',[m
[32m+[m	[32m'playstation portable'	=> 'PlayStation Portable',[m
[32m+[m	[32m'playstation 3'		=> 'PlayStation 3',[m
[32m+[m	[32m'playstation vita'  	=> 'PlayStation Vita',[m
[32m+[m	[32m'hiptop'		=> 'Danger Hiptop',[m
[32m+[m	[32m'nec-'			=> 'NEC',[m
[32m+[m	[32m'panasonic'		=> 'Panasonic',[m
[32m+[m	[32m'philips'		=> 'Philips',[m
[32m+[m	[32m'sagem'			=> 'Sagem',[m
[32m+[m	[32m'sanyo'			=> 'Sanyo',[m
[32m+[m	[32m'spv'			=> 'SPV',[m
[32m+[m	[32m'zte'			=> 'ZTE',[m
[32m+[m	[32m'sendo'			=> 'Sendo',[m
[32m+[m	[32m'nintendo dsi'	=> 'Nintendo DSi',[m
[32m+[m	[32m'nintendo ds'	=> 'Nintendo DS',[m
[32m+[m	[32m'nintendo 3ds'	=> 'Nintendo 3DS',[m
[32m+[m	[32m'wii'			=> 'Nintendo Wii',[m
[32m+[m	[32m'open web'		=> 'Open Web',[m
[32m+[m	[32m'openweb'		=> 'OpenWeb',[m
[32m+[m
[32m+[m	[32m// Operating Systems[m
[32m+[m	[32m'android'		=> 'Android',[m
[32m+[m	[32m'symbian'		=> 'Symbian',[m
[32m+[m	[32m'SymbianOS'		=> 'SymbianOS',[m
[32m+[m	[32m'elaine'		=> 'Palm',[m
[32m+[m	[32m'series60'		=> 'Symbian S60',[m
[32m+[m	[32m'windows ce'	=> 'Windows CE',[m
[32m+[m
[32m+[m	[32m// Browsers[m
[32m+[m	[32m'obigo'			=> 'Obigo',[m
[32m+[m	[32m'netfront'		=> 'Netfront Browser',[m
[32m+[m	[32m'openwave'		=> 'Openwave Browser',[m
[32m+[m	[32m'mobilexplorer'	=> 'Mobile Explorer',[m
[32m+[m	[32m'operamini'		=> 'Opera Mini',[m
[32m+[m	[32m'opera mini'	=> 'Opera Mini',[m
[32m+[m	[32m'opera mobi'	=> 'Opera Mobile',[m
[32m+[m	[32m'fennec'		=> 'Firefox Mobile',[m
[32m+[m
[32m+[m	[32m// Other[m
[32m+[m	[32m'digital paths'	=> 'Digital Paths',[m
[32m+[m	[32m'avantgo'		=> 'AvantGo',[m
[32m+[m	[32m'xiino'			=> 'Xiino',[m
[32m+[m	[32m'novarra'		=> 'Novarra Transcoder',[m
[32m+[m	[32m'vodafone'		=> 'Vodafone',[m
[32m+[m	[32m'docomo'		=> 'NTT DoCoMo',[m
[32m+[m	[32m'o2'			=> 'O2',[m
[32m+[m
[32m+[m	[32m// Fallback[m
[32m+[m	[32m'mobile'		=> 'Generic Mobile',[m
[32m+[m	[32m'wireless'		=> 'Generic Mobile',[m
[32m+[m	[32m'j2me'			=> 'Generic Mobile',[m
[32m+[m	[32m'midp'			=> 'Generic Mobile',[m
[32m+[m	[32m'cldc'			=> 'Generic Mobile',[m
[32m+[m	[32m'up.link'		=> 'Generic Mobile',[m
[32m+[m	[32m'up.browser'	=> 'Generic Mobile',[m
[32m+[m	[32m'smartphone'	=> 'Generic Mobile',[m
[32m+[m	[32m'cellphone'		=> 'Generic Mobile'[m
[32m+[m[32m);[m
[32m+[m
[32m+[m[32m// There are hundreds of bots but these are the most common.[m
[32m+[m[32m$robots = array([m
[32m+[m	[32m'googlebot'		=> 'Googlebot',[m
[32m+[m	[32m'msnbot'		=> 'MSNBot',[m
[32m+[m	[32m'baiduspider'		=> 'Baiduspider',[m
[32m+[m	[32m'bingbot'		=> 'Bing',[m
[32m+[m	[32m'slurp'			=> 'Inktomi Slurp',[m
[32m+[m	[32m'yahoo'			=> 'Yahoo',[m
[32m+[m	[32m'ask jeeves'		=> 'Ask Jeeves',[m
[32m+[m	[32m'fastcrawler'		=> 'FastCrawler',[m
[32m+[m	[32m'infoseek'		=> 'InfoSeek Robot 1.0',[m
[32m+[m	[32m'lycos'			=> 'Lycos',[m
[32m+[m	[32m'yandex'		=> 'YandexBot',[m
[32m+[m	[32m'mediapartners-google'	=> 'MediaPartners Google',[m
[32m+[m	[32m'CRAZYWEBCRAWLER'	=> 'Crazy Webcrawler',[m
[32m+[m	[32m'adsbot-google'		=> 'AdsBot Google',[m
[32m+[m	[32m'feedfetcher-google'	=> 'Feedfetcher Google',[m
[32m+[m	[32m'curious george'	=> 'Curious George',[m
[32m+[m	[32m'ia_archiver'		=> 'Alexa Crawler',[m
[32m+[m	[32m'MJ12bot'		=> 'Majestic-12',[m
[32m+[m	[32m'Uptimebot'		=> 'Uptimebot'[m
[32m+[m[32m);[m
[1mdiff --git a/application/controllers/Admin.php b/application/controllers/Admin.php[m
[1mnew file mode 100644[m
[1mindex 0000000..dabb7e0[m
[1m--- /dev/null[m
[1m+++ b/application/controllers/Admin.php[m
[36m@@ -0,0 +1,547 @@[m
[32m+[m[32m<?php[m
[32m+[m[32mdefined('BASEPATH') or exit('No direct script access allowed');[m
[32m+[m
[32m+[m[32mclass Admin extends CI_Controller{[m
[32m+[m[32m  function __construct(){[m
[32m+[m[32m    parent::__construct();[m
[32m+[m[32m    //cek Login[m
[32m+[m[32m    if($this->session->userdata('status') != "login"){[m
[32m+[m[32m      redirect(base_url().'welcome?pesan=belumlogin');[m
[32m+[m[32m    }[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  function index(){[m
[32m+[m[32m    // Menampilkan Jumlah Transaksi Di Menu Dashboard[m
[32m+[m[32m    $data['transaksi'] = $this->db->query("select * from transaksi order by id_pinjam desc limit 10")->result();[m
[32m+[m[32m    // Menampilkan Jumlah Orderan Di Menu Dashboard[m
[32m+[m[32m    // $data['orderan'] = $this->db->query("select * from orderan order by id_pinjam desc limit 10")->result();[m
[32m+[m[32m    // Menampilkan Jumlah Anggota Di Menu Dashboard[m
[32m+[m[32m    $data['anggota'] = $this->db->query("select * from anggota order by id_anggota desc limit 5")->result();[m
[32m+[m[32m    // Menampilkan Jumlah Buku Di Menu Dashboard[m
[32m+[m[32m    $data['buku'] = $this->db->query("select * from buku order by id_buku desc limit 5")->result();[m
[32m+[m
[32m+[m[32m    $this->load->view('admin/header');[m
[32m+[m[32m    $this->load->view('admin/index',$data);[m
[32m+[m[32m    $this->load->view('admin/footer');[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  function logout(){[m
[32m+[m[32m    $this->session->sess_destroy();[m
[32m+[m[32m    redirect(base_url().'welcome?pesan=logout');[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  function ganti_password(){[m
[32m+[m[32m    $this->load->view('admin/header');[m
[32m+[m[32m    $this->load->view('admin/ganti_password');[m
[32m+[m[32m    $this->load->view('admin/footer');[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  function ganti_password_act(){[m
[32m+[m[32m    $pass_baru = $this->input->post('pass_baru');[m
[32m+[m[32m    $ulang_pass = $this->input->post('ulang_pass');[m
[32m+[m
[32m+[m[32m    $this->form_validation->set_rules('pass_baru','Password Baru','required|matches[ulang_pass]');[m
[32m+[m[32m    $this->form_validation->set_rules('ulang_pass','Ulangi Password Baru','required');[m
[32m+[m[32m    if($this->form_validation->run() != false){[m
[32m+[m[32m      $data = array('password' => md5($pass_baru));[m
[32m+[m[32m      $w = array('id_admin' => $this->session->userdata('id'));[m
[32m+[m[32m      $this->M_perpus->update_data('admin',$data,$w);[m
[32m+[m[32m      redirect(base_url().'admin/ganti_password?pesan=berhasil');[m
[32m+[m[32m    }else{[m
[32m+[m[32m      $this->load->view('admin/header');[m
[32m+[m[32m      $this->load->view('admin/ganti_password');[m
[32m+[m[32m      $this->load->view('admin/footer');[m
[32m+[m[32m    }[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m    // Function CRUD Buku[m
[32m+[m[32m    function buku(){[m
[32m+[m[32m      $data['buku'] = $this->M_perpus->get_data('buku')->result();[m
[32m+[m[32m      $data['kategori'] = $this->M_perpus->get_data('kategori')->result();[m
[32m+[m
[32m+[m[32m      $this->load->view('admin/header');[m
[32m+[m[32m      $this->load->view('admin/buku',$data);[m
[32m+[m[32m      $this->load->view('admin/footer');[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    function tambah_buku_act(){[m
[32m+[m[32m      $tgl_input = date('Y-m-d');[m
[32m+[m[32m      $id_kategori = $this->input->post('id_kategori');[m
[32m+[m[32m      $judul = $this->input->post('judul_buku');[m
[32m+[m[32m      $pengarang = $this->input->post('pengarang');[m
[32m+[m[32m      $penerbit = $this->input->post('penerbit');[m
[32m+[m[32m      $thn_terbit = $this->input->post('thn_terbit');[m
[32m+[m[32m      $isbn = $this->input->post('isbn');[m
[32m+[m[32m      $jumlah_buku = $this->input->post('jumlah_buku');[m
[32m+[m[32m      $lokasi = $this->input->post('lokasi');[m
[32m+[m[32m      $status = $this->input->post('status');[m
[32m+[m[32m      $this->form_validation->set_rules('id_kategori','Kategori','required');[m
[32m+[m[32m      $this->form_validation->set_rules('judul_buku','Judul Buku','required');[m
[32m+[m[32m      $this->form_validation->set_rules('status','Status Buku','required');[m
[32m+[m[32m      if($this->form_validation->run() != false){[m
[32m+[m[32m        //configurasi upload Gambar[m
[32m+[m[32m        $config['upload_path'] = './assets/upload/';[m
[32m+[m[32m        $config['allowed_types'] = 'jpg|png|jpeg';[m
[32m+[m[32m        $config['max_size'] = '2048';[m
[32m+[m[32m        $config['file_name'] = 'gambar'.time();[m
[32m+[m
[32m+[m[32m        $this->load->library('upload',$config);[m
[32m+[m
[32m+[m[32m        if($this->upload->do_upload('foto')){[m
[32m+[m[32m          $image = $this->upload->data();[m
[32m+[m
[32m+[m[32m          $data = array([m
[32m+[m[32m            'id_kategori' => $id_kategori,[m
[32m+[m[32m            'judul_buku' => $judul,[m
[32m+[m[32m            'pengarang' => $pengarang,[m
[32m+[m[32m            'penerbit' => $penerbit,[m
[32m+[m[32m            'thn_terbit' => $thn_terbit,[m
[32m+[m[32m            'isbn' => $isbn,[m
[32m+[m[32m            'jumlah_buku' => $jumlah_buku,[m
[32m+[m[32m            'lokasi' => $lokasi,[m
[32m+[m[32m            'gambar' => $image['file_name'],[m
[32m+[m[32m            'tgl_input' => $tgl_input,[m
[32m+[m[32m            'status_buku' => $status[m
[32m+[m[32m          );[m
[32m+[m[32m          $this->M_perpus->insert_data($data,'buku');[m
[32m+[m[32m          redirect(base_url().'admin/buku');[m
[32m+[m[32m        }else{[m
[32m+[m[32m          $this->load->view('admin/header');[m
[32m+[m[32m          $this->load->view('admin/buku');[m
[32m+[m[32m          $this->load->view('admin/footer');[m
[32m+[m[32m        }[m
[32m+[m[32m      }[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m      function hapus_buku($id){[m
[32m+[m[32m        $where = array('id_buku' => $id);[m
[32m+[m[32m        $this->M_perpus->delete_data($where,'buku');[m
[32m+[m[32m        redirect(base_url().'admin/buku');[m
[32m+[m[32m      }[m
[32m+[m
[32m+[m[32m    function edit_buku($id){[m
[32m+[m[32m      $where = array('id_buku' => $id);[m
[32m+[m[32m      $data['buku'] = $this->db->query("select * from buku B, kategori K where B.id_kategori=K.id_kategori and B.id_buku='$id'")->result();[m
[32m+[m[32m      $data['kategori'] = $this->M_perpus->get_data('kategori')->result();[m
[32m+[m
[32m+[m[32m      $this->load->view('admin/header');[m
[32m+[m[32m      $this->load->view('admin/editbuku',$data);[m
[32m+[m[32m      $this->load->view('admin/footer');[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    function update_buku(){[m
[32m+[m[32m      $id = $this->input->post('id');[m
[32m+[m[32m      $id_kategori = $this->input->post('id_kategori');[m
[32m+[m[32m      $judul = $this->input->post('judul_buku');[m
[32m+[m[32m      $pengarang = $this->input->post('pengarang');[m
[32m+[m[32m      $penerbit = $this->input->post('penerbit');[m
[32m+[m[32m      $thn_terbit = $this->input->post('thn_terbit');[m
[32m+[m[32m      $isbn = $this->input->post('isbn');[m
[32m+[m[32m      $jumlah_buku = $this->input->post('jumlah_buku');[m
[32m+[m[32m      $lokasi = $this->input->post('lokasi');[m
[32m+[m[32m      $status = $this->input->post('status');[m
[32m+[m
[32m+[m[32m      $this->form_validation->set_rules('id_kategori','ID Kategori','required');[m
[32m+[m[32m      $this->form_validation->set_rules('judul_buku','Judul Buku','required|min_length[4]');[m
[32m+[m[32m      $this->form_validation->set_rules('pengarang','Pengarang','required|min_length[4]');[m
[32m+[m[32m      $this->form_validation->set_rules('penerbit','Penerbit','required|min_length[4]');[m
[32m+[m[32m      $this->form_validation->set_rules('thn_terbit','Tahun Terbit','required|min_length[4]');[m
[32m+[m[32m      $this->form_validation->set_rules('isbn','Nomor ISBN','required|numeric');[m
[32m+[m[32m      $this->form_validation->set_rules('jumlah_buku','Jumlah Buku','required|numeric');[m
[32m+[m[32m      $this->form_validation->set_rules('lokasi','Lokasi Buku','required|min_length[4]');[m
[32m+[m[32m      $this->form_validation->set_rules('status','Status Buku','required');[m
[32m+[m
[32m+[m[32m      if($this->form_validation->run() != false){[m
[32m+[m[32m          $config['upload_path'] = './assets/upload/';[m
[32m+[m[32m          $config['allowed_types'] = 'jpg|png|jpeg';[m
[32m+[m[32m          $config['max_size'] = '2048';[m
[32m+[m[32m          $config['file_name'] = 'gambar'.time();[m
[32m+[m
[32m+[m[32m          $this->load->library('upload',$config);[m
[32m+[m
[32m+[m[32m          $where = array('id_buku' => $id);[m
[32m+[m[32m          $data = array([m
[32m+[m[32m            'id_kategori' =>$id_kategori,[m
[32m+[m[32m            'judul_buku' =>$judul,[m
[32m+[m[32m            'pengarang' =>$pengarang,[m
[32m+[m[32m            'penerbit' =>$penerbit,[m
[32m+[m[32m            'thn_terbit' =>$thn_terbit,[m
[32m+[m[32m            'isbn' =>$isbn,[m
[32m+[m[32m            'jumlah_buku' =>$jumlah_buku,[m
[32m+[m[32m            'lokasi' =>$lokasi,[m
[32m+[m[32m            'gambar' =>$image['file_name'],[m
[32m+[m[32m            'status_buku' =>$status[m
[32m+[m[32m          );[m
[32m+[m
[32m+[m[32m           if($this->upload->do_upload('foto')){[m
[32m+[m[32m              //proses upload Gambar[m
[32m+[m[32m              $image = $this->upload->data();[m
[32m+[m[32m              unlink('assets/upload/'.$this->input->post('old_pict',TRUE));[m
[32m+[m[32m              $data['gambar'] = $image['file_name'];[m
[32m+[m
[32m+[m[32m              $this->M_perpus->update_data('buku',$data,$where);[m
[32m+[m[32m            } else{[m
[32m+[m[32m              $this->M_perpus->update_data('buku',$data,$where);[m
[32m+[m[32m            }[m
[32m+[m
[32m+[m[32m          $this->M_perpus->update_data('buku',$data,$where);[m
[32m+[m[32m          redirect(base_url().'admin/buku');[m
[32m+[m[32m        } else{[m
[32m+[m[32m            $where = array('id_buku' =>$id);[m
[32m+[m[32m            $data['buku'] = $this->db->query("select * from buku B, kategori K where B.id_kategori=K.id_kategori and B.id_buku='$id'")->result();[m
[32m+[m[32m            $data['kategori'] = $this->M_perpus->get_data('kategori')->result();[m
[32m+[m[32m            $this->load->view('admin/header');[m
[32m+[m[32m            $this->load->view('admin/editbuku',$data);[m
[32m+[m[32m            $this->load->view('admin/footer');[m
[32m+[m[32m        }[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    // Function CRUD Anggota[m
[32m+[m[32m    function anggota(){[m
[32m+[m[32m      $data['anggota'] = $this->M_perpus->get_data('anggota')->result();[m
[32m+[m[32m      $this->load->view('admin/header');[m
[32m+[m[32m      $this->load->view('admin/anggota',$data);[m
[32m+[m[32m      $this->load->view('admin/footer');[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    function tambah_anggota_act(){[m
[32m+[m[32m      $nama_anggota = $this->input->post('nama_anggota');[m
[32m+[m[32m      $gender = $this->input->post('gender');[m
[32m+[m[32m      $no_telp = $this->input->post('no_telp');[m
[32m+[m[32m      $alamat = $this->input->post('alamat');[m
[32m+[m[32m      $email = $this->input->post('email');[m
[32m+[m[32m      $password = $this->input->post('password');[m
[32m+[m[32m      $this->form_validation->set_rules('nama_anggota','Nama Anggota','required');[m
[32m+[m[32m      $this->form_validation->set_rules('no_telp','No.Telpon','required');[m
[32m+[m[32m      $this->form_validation->set_rules('alamat','Alamat','required');[m
[32m+[m[32m      $this->form_validation->set_rules('email','Email','required');[m
[32m+[m[32m      $this->form_validation->set_rules('password','Password','required');[m
[32m+[m[32m      if($this->form_validation->run() != false){[m
[32m+[m[32m          $data = array([m
[32m+[m[32m            'nama_anggota' => $nama_anggota,[m
[32m+[m[32m            'gender' => $gender,[m
[32m+[m[32m            'no_telp' => $no_telp,[m
[32m+[m[32m            'alamat' => $alamat,[m
[32m+[m[32m            'email' => $email,[m
[32m+[m[32m            'password' => $password,[m
[32m+[m[32m          );[m
[32m+[m[32m          $this->M_perpus->insert_data($data,'anggota');[m
[32m+[m[32m          redirect(base_url().'admin/anggota');[m
[32m+[m[32m        }else{[m
[32m+[m[32m          $this->load->view('admin/header');[m
[32m+[m[32m          $this->load->view('admin/anggota');[m
[32m+[m[32m          $this->load->view('admin/footer');[m
[32m+[m[32m        }[m
[32m+[m[32m      }[m
[32m+[m
[32m+[m[32m      function edit_anggota($id){[m
[32m+[m[32m        $where = array('id_anggota' => $id);[m
[32m+[m[32m        $data['anggota'] = $this->db->query("select * from anggota where id_anggota='$id'")->result();[m
[32m+[m
[32m+[m[32m        $this->load->view('admin/header');[m
[32m+[m[32m        $this->load->view('admin/anggota',$data);[m
[32m+[m[32m        $this->load->view('admin/footer');[m
[32m+[m[32m      }[m
[32m+[m
[32m+[m[32m      function update_anggota(){[m
[32m+[m[32m        $id = $this->input->post('id');[m
[32m+[m[32m        $nama_anggota = $this->input->post('nama_anggota');[m
[32m+[m[32m        $gender = $this->input->post('gender');[m
[32m+[m[32m        $penerbit = $this->input->post('penerbit');[m
[32m+[m[32m        $no_telp = $this->input->post('no_telp');[m
[32m+[m[32m        $alamat = $this->input->post('alamat');[m
[32m+[m[32m        $email = $this->input->post('email');[m
[32m+[m[32m        $password = $this->input->post('password');[m
[32m+[m
[32m+[m[32m        $this->form_validation->set_rules('nama_anggota','Nama Anggota','required');[m
[32m+[m[32m        $this->form_validation->set_rules('no_telp','No.Telpon','required');[m
[32m+[m[32m        $this->form_validation->set_rules('alamat','Alamat','required');[m
[32m+[m[32m        $this->form_validation->set_rules('email','Email','required');[m
[32m+[m[32m        $this->form_validation->set_rules('password','Password','required');[m
[32m+[m
[32m+[m[32m        if($this->form_validation->run() != false){[m
[32m+[m[32m            $where = array('id_anggota' => $id);[m
[32m+[m[32m            $data = array([m
[32m+[m[32m              'nama_anggota' => $nama_anggota,[m
[32m+[m[32m              'gender' => $gender,[m
[32m+[m[32m              'no_telp' => $no_telp,[m
[32m+[m[32m              'alamat' => $alamat,[m
[32m+[m[32m              'email' => $email,[m
[32m+[m[32m              'password' => $password,[m
[32m+[m[32m            );[m
[32m+[m
[32m+[m[32m            $this->M_perpus->update_data('anggota',$data,$where);[m
[32m+[m[32m            redirect(base_url().'admin/anggota');[m
[32m+[m[32m          } else{[m
[32m+[m[32m              $where = array('id_anggota' =>$id);[m
[32m+[m[32m              $data['anggota'] = $this->db->query("select * from anggota where id_anggota='$id'")->result();[m
[32m+[m[32m              $this->load->view('admin/header');[m
[32m+[m[32m              $this->load->view('admin/anggota',$data);[m
[32m+[m[32m              $this->load->view('admin/footer');[m
[32m+[m[32m          }[m
[32m+[m[32m      }[m
[32m+[m[41m      [m
[32m+[m[32m      function hapus_anggota($id){[m
[32m+[m[32m        $where = array('id_anggota' => $id);[m
[32m+[m[32m        $this->M_perpus->delete_data($where,'anggota');[m
[32m+[m[32m        redirect(base_url().'admin/anggota');[m
[32m+[m[32m      }[m
[32m+[m
[32m+[m[32m      function peminjaman(){[m
[32m+[m[32m        $w = array('status_buku'=>'1');[m
[32m+[m[32m        $data['buku'] = $this->M_perpus->edit_data($w,'buku')->result();[m
[32m+[m[32m        $data['anggota'] = $this->M_perpus->get_data('anggota')->result();[m
[32m+[m[32m        $data['peminjaman'] = $this->db->query("SELECT * FROM transaksi T, buku B, anggota A WHERE T.id_buku=B.id_buku and T.id_anggota=A.id_anggota")->result();[m
[32m+[m
[32m+[m[32m        $this->load->view('admin/header');[m
[32m+[m[32m        $this->load->view('admin/peminjaman',$data);[m
[32m+[m[32m        $this->load->view('admin/footer');[m
[32m+[m[32m      }[m
[32m+[m
[32m+[m[32m      function tambah_peminjaman_act(){[m
[32m+[m[32m        $tgl_pencatatan = date('Y-m-d H:i:s');[m
[32m+[m[32m        $anggota = $this->input->post('anggota');[m
[32m+[m[32m        $buku = $this->input->post('buku');[m
[32m+[m[32m        $tgl_pinjam = $this->input->post('tgl_pinjam');[m
[32m+[m[32m        $tgl_kembali = $this->input->post('tgl_kembali');[m
[32m+[m[32m        $denda = $this->input->post('denda');[m
[32m+[m[32m        $this->form_validation->set_rules('anggota','Anggota','required');[m
[32m+[m[32m        $this->form_validation->set_rules('buku','Buku','required');[m
[32m+[m[32m        $this->form_validation->set_rules('tgl_pinjam','Tanggal Pinjam','required');[m
[32m+[m[32m        $this->form_validation->set_rules('tgl_kembali','Tanggal Kembali','required');[m
[32m+[m[32m        $this->form_validation->set_rules('denda','Denda','required');[m
[32m+[m[32m        if($this->form_validation->run() != false){[m
[32m+[m[32m            $data = array([m
[32m+[m[32m              'tgl_pencatatan' => $tgl_pencatatan,[m
[32m+[m[32m              'id_anggota' => $anggota,[m
[32m+[m[32m              'id_buku' => $buku,[m
[32m+[m[32m              'tgl_pinjam' => $tgl_pinjam,[m
[32m+[m[32m              'tgl_kembali' => $tgl_kembali,[m
[32m+[m[32m              'denda' => $denda,[m
[32m+[m[32m              'tgl_pengembalian' => '0000-00-00',[m
[32m+[m[32m              'total_denda' => '0',[m
[32m+[m[32m              'status_pengembalian' =>'0',[m
[32m+[m[32m              'status_peminjaman' =>'0'[m
[32m+[m[32m            );[m
[32m+[m[32m            $this->M_perpus->insert_data($data,'transaksi');[m
[32m+[m
[32m+[m[32m            $d = array('status_buku' =>'0','tgl_input' => substr($tgl_pencatatan,0,10));[m
[32m+[m[32m            $w = array('id_buku' => $buku);[m
[32m+[m[32m            $this->M_perpus->update_data('buku',$d,$w);[m
[32m+[m[32m            redirect(base_url().'admin/peminjaman');[m
[32m+[m[32m          }else{[m
[32m+[m[32m            $w = array('status_buku' => '1');[m
[32m+[m[32m            $data['buku'] = $this->M_perpus->edit_data($w,'buku')->result();[m
[32m+[m[32m            $data['anggota'] = $this->M_perpus->get_data('anggota')->result();[m
[32m+[m
[32m+[m[32m            $this->load->view('admin/header');[m
[32m+[m[32m            $this->load->view('admin/tambah_peminjaman',$data);[m
[32m+[m[32m            $this->load->view('admin/footer');[m
[32m+[m[32m          }[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m  function transaksi_hapus($id)[m
[32m+[m[32m  {[m
[32m+[m[32m    $w = array('id_pinjam' => $id);[m
[32m+[m[32m    $data = $this->M_perpus->edit_data($w, 'transaksi')->row();[m
[32m+[m[32m    $ww = array('id_buku' => $data->id_buku);[m
[32m+[m[32m    echo json_encode($ww);[m
[32m+[m[32m    $data2 = array('status_buku' => '1');[m
[32m+[m[32m    $this->db->query("UPDATE buku SET status_buku = 1 WHERE id_buku = $data->id_buku");[m
[32m+[m[32m    $this->db->query("DELETE FROM transaksi WHERE id_buku = $data->id_buku");[m
[32m+[m[32m    $this->M_perpus->update_data('buku', $data2, $ww);[m
[32m+[m[32m    $this->M_perpus->delete_data($w, 'transaksi');[m[41m [m
[32m+[m[32m    redirect(base_url() . 'admin/peminjaman');[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m        function transaksi_selesai($id){[m
[32m+[m[32m          $data['buku'] = $this->M_perpus->get_data('buku')->result();[m
[32m+[m[32m          $data['anggota'] = $this->M_perpus->get_data('anggota')->result();[m
[32m+[m[32m          $data['peminjaman'] = $this->db->query("select * from transaksi t, anggota a, buku b where t.id_buku = b.id_buku and t.id_anggota=a.id_anggota and t.id_pinjam='$id'")->result();[m
[32m+[m
[32m+[m[32m          $this->load->view('admin/header');[m
[32m+[m[32m          $this->load->view('admin/transaksi_selesai',$data);[m
[32m+[m[32m          $this->load->view('admin/footer');[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        function transaksi_selesai_act(){[m
[32m+[m[32m          $id = $this->input->post('id');[m
[32m+[m[32m          $tgl_dikembalikan = $this->input->post('tgl_dikembalikan');[m
[32m+[m[32m          $tgl_kembali = $this->input->post('tgl_kembali');[m
[32m+[m[32m          $buku = $this->input->post('buku');[m
[32m+[m[32m          $denda = $this->input->post('denda');[m
[32m+[m[32m          $this->form_validation->set_rules('tgl_dikembalikan','Tanggal dikembalkan','required');[m
[32m+[m
[32m+[m[32m          if($this->form_validation->run() !=false){[m
[32m+[m[32m            // echo $id;[m
[32m+[m[32m            $this->db->where('id_pinjam', $id);[m
[32m+[m[32m            $query = $this->db->get('transaksi')->result();[m
[32m+[m[32m            foreach ($query as $row)[m
[32m+[m[32m            {[m
[32m+[m[32m              $tgl = $row->tgl_kembali;[m
[32m+[m[32m              $d = $row->denda;[m
[32m+[m[32m            }[m
[32m+[m[32m            // Hitung Selisih Hari[m
[32m+[m[32m            $SLS = ((strtotime($this->input->post('tgl_dikembalikan'))-strtotime($tgl))/(60*60*24));[m
[32m+[m[32m            if ($SLS > 0) {[m
[32m+[m[32m              //Hitung Jumlah Denda[m
[32m+[m[32m              $jumlahdenda = $d*$SLS;[m
[32m+[m[32m              $telat = $SLS;[m
[32m+[m[32m            }[m
[32m+[m[32m            else[m
[32m+[m[32m            {[m
[32m+[m[32m              $SLS = 0;[m
[32m+[m[32m              $jumlahdenda = 0;[m
[32m+[m[32m            }[m
[32m+[m[32m            $jumlahdenda;[m
[32m+[m[32m            //Update status[m
[32m+[m[32m            $data = array('status_peminjaman' => '1','total_denda' => $jumlahdenda ,'tgl_pengembalian' => $tgl_dikembalikan,'status_pengembalian' => '1');[m
[32m+[m[32m            $w = array('id_pinjam' =>$id);[m
[32m+[m[32m            $this->M_perpus->update_data('transaksi',$data,$w);[m
[32m+[m[32m            $this->M_perpus->update_data('peminjaman',$data,$w);[m
[32m+[m[32m            //update status Buku[m
[32m+[m[32m            $data2 = array('status_buku' => '1');[m
[32m+[m[32m            $w2 = array('id_buku' => $buku);[m
[32m+[m[32m            $this->M_perpus->update_data('buku',$data2,$w2);[m
[32m+[m
[32m+[m[32m            redirect(base_url().'admin/peminjaman');[m
[32m+[m[32m          }else{[m
[32m+[m[32m            $data['buku'] = $this->M_perpus->get_data('buku')->result();[m
[32m+[m[32m            $data['anggota'] = $this->M_perpus->get_data('anggota')->result();[m
[32m+[m[32m            $data['peminjaman'] = $this->db->query("select * from peminjaman p, anggota a, detail_pinjam d, buku b where p.id_anggota = a.id_anggota and p.id_pinjam=d.id_pinjam and d.id_buku=b.id_buku and p.id_pinjam='$id'")->result();[m
[32m+[m
[32m+[m[32m            $this->load->view('admin/header');[m
[32m+[m[32m            $this->load->view('admin/transaksi_selesai',$data);[m
[32m+[m[32m            $this->load->view('admin/footer');[m
[32m+[m[32m          }[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        // Laporan Buku[m
[32m+[m[32m        function cetak_laporan_buku(){[m
[32m+[m[32m            $data['buku'] = $this->M_perpus->get_data('buku')->result();[m
[32m+[m
[32m+[m[32m            $this->load->view('admin/header');[m
[32m+[m[32m            $this->load->view('admin/laporan_buku', $data);[m
[32m+[m[32m            $this->load->view('admin/footer');[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        function laporan_print_buku(){[m
[32m+[m[32m          $data['buku'] = $this->M_perpus->get_data('buku')->result();[m
[32m+[m
[32m+[m[32m          $this->load->view('admin/laporan_print_buku', $data);[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        function laporan_pdf_buku(){[m
[32m+[m[32m          $this->load->library('dompdf_gen');[m
[32m+[m
[32m+[m[32m          $data['buku'] = $this->M_perpus->get_data('buku')->result();[m
[32m+[m
[32m+[m[32m          $this->load->view('admin/laporan_pdf_buku', $data);[m
[32m+[m
[32m+[m[32m          $paper_size = 'A4'; // Ukuran Kertas[m
[32m+[m[32m          $orientation = 'landscape'; // Tipe Format[m
[32m+[m[32m          $html = $this->output->get_output();[m
[32m+[m
[32m+[m[32m          $this->dompdf->set_paper($paper_size, $orientation);[m
[32m+[m[32m          // Convert to PDF[m
[32m+[m[32m          $this->dompdf->load_html($html);[m
[32m+[m[32m          $this->dompdf->render();[m
[32m+[m[32m          $this->dompdf->stream("laporan_data_buku.pdf", array('Attachment'=>0));[m
[32m+[m[32m          // Nama File pdf[m[41m [m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        // Laporan Anggota[m
[32m+[m[32m        function cetak_laporan_anggota(){[m
[32m+[m[32m            $data['anggota'] = $this->M_perpus->get_data('anggota')->result();[m
[32m+[m
[32m+[m[32m            $this->load->view('admin/header');[m
[32m+[m[32m            $this->load->view('admin/laporan_anggota', $data);[m
[32m+[m[32m            $this->load->view('admin/footer');[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        function laporan_print_anggota(){[m
[32m+[m[32m          $data['anggota'] = $this->M_perpus->get_data('anggota')->result();[m
[32m+[m
[32m+[m[32m          $this->load->view('admin/laporan_print_anggota', $data);[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        function laporan_pdf_anggota(){[m
[32m+[m[32m          $this->load->library('dompdf_gen');[m
[32m+[m
[32m+[m[32m          $data['anggota'] = $this->M_perpus->get_data('anggota')->result();[m
[32m+[m
[32m+[m[32m          $this->load->view('admin/laporan_pdf_anggota', $data);[m
[32m+[m
[32m+[m[32m          $paper_size = 'A4'; // Ukuran Kertas[m
[32m+[m[32m          $orientation = 'landscape'; // Tipe Format[m
[32m+[m[32m          $html = $this->output->get_output();[m
[32m+[m
[32m+[m[32m          $this->dompdf->set_paper($paper_size, $orientation);[m
[32m+[m[32m          // Convert to PDF[m
[32m+[m[32m          $this->dompdf->load_html($html);[m
[32m+[m[32m          $this->dompdf->render();[m
[32m+[m[32m          $this->dompdf->stream("laporan_data_anggota.pdf", array('Attachment'=>0));[m
[32m+[m[32m          // Nama File pdf[m[41m [m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        // Laporan Peminjaman[m
[32m+[m[32m        function cetak_laporan_peminjaman(){[m
[32m+[m[32m            $data['peminjaman'] = $this->M_perpus->get_data('peminjaman')->result();[m
[32m+[m
[32m+[m[32m            $this->load->view('admin/header');[m
[32m+[m[32m            $this->load->view('admin/laporan_peminjaman', $data);[m
[32m+[m[32m            $this->load->view('admin/footer');[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        function laporan_print_peminjaman(){[m
[32m+[m[32m          $dari = $this->input->get('dari');[m
[32m+[m[32m          $sampai = $this->input->get('sampai');[m
[32m+[m
[32m+[m[32m          if ($dari != "" && $sampai != ""){[m
[32m+[m[32m            $data['laporan'] = $this->db->query("SELECT * from transaksi t, buku b, anggota a where t.id_buku and t.id_anggota=a.id_anggota and date(tgl_pencatatan) >= '$dari'")->result();[m
[32m+[m[32m            $this->load->view('admin/laporan_print_peminjaman', $data);[m
[32m+[m[32m          }else{[m
[32m+[m[32m            redirect('admin/laporan_peminjaman');[m
[32m+[m[32m          }[m
[32m+[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        function laporan_peminjaman(){[m
[32m+[m[32m          $dari = $this->input->post('dari');[m
[32m+[m[32m          $sampai = $this->input->post('sampai');[m
[32m+[m[32m          $this->form_validation->set_rules('dari','Dari Tanggal','required');[m
[32m+[m[32m          $this->form_validation->set_rules('sampai','Sampai Tanggal','required');[m
[32m+[m
[32m+[m[32m          if ($this->form_validation->run() != false){[m
[32m+[m[32m            $data['laporan'] = $this->db->query("SELECT * FROM transaksi t, buku b, anggota a WHERE t.id_buku=b.id_buku AND t.id_anggota=a.id_anggota AND date(tgl_pencatatan) >= '$dari'")->result();[m
[32m+[m
[32m+[m[32m            $this->load->view('admin/header');[m
[32m+[m[32m            $this->load->view('admin/laporan_filter_transaksi',$data);[m
[32m+[m[32m            $this->load->view('admin/footer');[m
[32m+[m[32m          } else {[m
[32m+[m[32m            $this->load->view('admin/header');[m
[32m+[m[32m            $this->load->view('admin/laporan_peminjaman');[m
[32m+[m[32m            $this->load->view('admin/footer');[m
[32m+[m[32m          }[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        function laporan_pdf_peminjaman(){[m
[32m+[m[32m          $this->load->library('dompdf_gen');[m
[32m+[m[32m          $dari = $this->input->get('dari');[m
[32m+[m[32m          $sampai = $this->input->get('sampai');[m
[32m+[m
[32m+[m[32m          $data['laporan'] = $this->db->query("SELECT * FROM transaksi t, buku b, anggota a WHERE t.id_buku=b.id_buku AND t.id_anggota=a.id_anggota AND date(tgl_pencatatan) >= '$dari'")->result();[m
[32m+[m
[32m+[m[32m          $this->load->view('admin/laporan_pdf_peminjaman', $data);[m
[32m+[m
[32m+[m[32m          $paper_size = 'A4'; // Ukuran Kertas[m
[32m+[m[32m          $orientation = 'landscape'; // Tipe Format[m
[32m+[m[32m          $html = $this->output->get_output();[m
[32m+[m
[32m+[m[32m          $this->dompdf->set_paper($paper_size, $orientation);[m
[32m+[m[32m          // Convert to PDF[m
[32m+[m[32m          $this->dompdf->load_html($html);[m
[32m+[m[32m          $this->dompdf->render();[m
[32m+[m[32m          $this->dompdf->stream("laporan_data_peminjaman.pdf", array('Attachment'=>0));[m
[32m+[m[32m        }[m
[32m+[m[32m}[m
\ No newline at end of file[m
[1mdiff --git a/application/controllers/Buku.php b/application/controllers/Buku.php[m
[1mnew file mode 100644[m
[1mindex 0000000..544163b[m
[1m--- /dev/null[m
[1m+++ b/application/controllers/Buku.php[m
[36m@@ -0,0 +1,31 @@[m
[32m+[m[32m<?php[m
[32m+[m[32mdefined('BASEPATH') OR exit('No direct script access allowed');[m
[32m+[m
[32m+[m[32mclass Buku extends CI_Controller {[m
[32m+[m[41m	[m
[32m+[m	[32mfunction katalog_detail(){[m
[32m+[m		[32m$id = $this->uri->segment(3);[m
[32m+[m		[32m$id_buku = $_GET['id_buku'];[m
[32m+[m		[32mif ($id_buku!=null) {[m
[32m+[m			[32m$buku = $this->db->query("SELECT * FROM buku b, kategori k WHERE b.id_kategori=k.id_kategori AND b.id_buku=".$id_buku)->result();[m
[32m+[m[41m		[m
[32m+[m		[32mforeach($buku as $fields){[m
[32m+[m			[32m$data['judul'] = $fields->judul_buku;[m
[32m+[m			[32m$data['pengarang'] = $fields->pengarang;[m
[32m+[m			[32m$data['penerbit'] = $fields->penerbit;[m
[32m+[m			[32m$data['kategori'] = $fields->nama_kategori;[m
[32m+[m			[32m$data['tahun'] = $fields->thn_terbit;[m
[32m+[m			[32m$data['isbn'] = $fields->isbn;[m
[32m+[m			[32m$data['gambar'] = $fields->gambar;[m
[32m+[m			[32m$data['id'] = $fields->id_buku;[m
[32m+[m		[32m}[m
[32m+[m[41m		[m
[32m+[m		[32m$this->load->view('desain');[m
[32m+[m		[32m$this->load->view('toplayout');[m
[32m+[m		[32m$this->load->view('detail_buku', $data);[m
[32m+[m		[32m$this->load->view('footer');[m
[32m+[m		[32m}[m
[32m+[m	[32m}[m
[32m+[m[32m}[m
[32m+[m[32m/* End of file Buku.php */[m
[32m+[m[32m/* Location: ./application/controllers/Buku.php */[m
\ No newline at end of file[m
[1mdiff --git a/application/controllers/Member.php b/application/controllers/Member.php[m
[1mnew file mode 100644[m
[1mindex 0000000..3d9b2ad[m
[1m--- /dev/null[m
[1m+++ b/application/controllers/Member.php[m
[36m@@ -0,0 +1,29 @@[m
[32m+[m[32m<?php[m
[32m+[m[32mdefined('BASEPATH') OR exit('No direct script access allowed');[m
[32m+[m
[32m+[m[32mclass Member extends CI_Controller {[m
[32m+[m	[32mfunction __contruct(){[m
[32m+[m		[32mparent::__construct();[m
[32m+[m		[32m// Cek Login[m
[32m+[m		[32mif($this->session->userdata('status') != "login"){[m
[32m+[m			[32m$alert = $this->session->set_flashdata('alert','Anda Belum Login');[m
[32m+[m			[32mredirect(base_url());[m
[32m+[m		[32m}[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32mpublic function index()[m
[32m+[m	[32m{[m
[32m+[m		[32m$data['anggota'] = $this->M_perpus->get_data('anggota')->result();[m
[32m+[m		[32m$data['buku'] = $this->M_perpus->get_data('buku')->result();[m
[32m+[m
[32m+[m		[32m$data['header'] = 'Katalog Buku';[m
[32m+[m		[32m$data['title'] = 'Daftar Buku';[m
[32m+[m
[32m+[m		[32m$this->load->view('daftarbuku', $data);[m[41m	[m
[32m+[m		[32m$this->load->view('footer');[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m/* End of file Member.php */[m
[32m+[m[32m/* Location: ./application/controllers/Member.php */[m
\ No newline at end of file[m
[1mdiff --git a/application/controllers/Peminjaman.php b/application/controllers/Peminjaman.php[m
[1mnew file mode 100644[m
[1mindex 0000000..a59b59a[m
[1m--- /dev/null[m
[1m+++ b/application/controllers/Peminjaman.php[m
[36m@@ -0,0 +1,120 @@[m
[32m+[m[32m<?php[m
[32m+[m[32mdefined('BASEPATH') OR exit('No direct script access allowed');[m
[32m+[m
[32m+[m[32mclass Peminjaman extends CI_Controller {[m
[32m+[m	[32mfunction __construct(){[m
[32m+[m		[32mparent::__construct();[m
[32m+[m		[32m// Cek Login[m
[32m+[m		[32mif($this->session->userdata('status') !="login"){[m
[32m+[m			[32m$alert=$this->session->set_flashdata('alert','Anda Belum Login');[m
[32m+[m			[32mredirect(base_url());[m
[32m+[m		[32m}[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32mfunction index(){[m
[32m+[m		[32m$data['peminjaman'] = $this->db->query("SELECT * FROM detail_pinjam D, peminjaman P, buku B, anggota A WHERE B.id_buku=D.id_buku AND A.id_anggota=P.id_anggota")->result();[m
[32m+[m
[32m+[m		[32m$this->load->view('admin/header');[m
[32m+[m		[32m$this->load->view('admin/peminjaman', $data);[m
[32m+[m		[32m$this->load->view('admin/footer');[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m// One to many[m
[32m+[m
[32m+[m	[32mfunction tambah_peminjaman($id){[m
[32m+[m		[32mif($this->session->userdata('status') != "login"){[m
[32m+[m			[32m$alert=$this->session->set_flashdata('alert','Anda belum Login');[m
[32m+[m			[32mredirect(base_url());[m
[32m+[m		[32m}else{[m
[32m+[m			[32m$d = $this->M_perpus->find($id, 'buku');[m
[32m+[m			[32m$tujuh_hari = mktime(0,0,0,date("n"),date("j")+14,date("Y"));[m
[32m+[m			[32m$isi = array([m
[32m+[m				[32m'id_pinjam' => $this->M_perpus->kode_otomatis(),[m
[32m+[m				[32m'tgl_pencatatan' => date('Y-m-d'),[m
[32m+[m				[32m'id_anggota' => $this->session->userdata('id_agt'),[m
[32m+[m				[32m'id_buku' => $id,[m
[32m+[m				[32m'tgl_pinjam' => date('Y-m-d'),[m
[32m+[m				[32m'tgl_kembali' => date('Y-m-d', $tujuh_hari),[m
[32m+[m				[32m'denda' => '1000',[m
[32m+[m				[32m'tgl_pengembalian' => '-',[m
[32m+[m				[32m'total_denda' => '0',[m
[32m+[m				[32m'status_pengembalian' => 'Belum Selesai',[m
[32m+[m				[32m'status_peminjaman' => 'Belum Kembali'[m
[32m+[m			[32m);[m
[32m+[m
[32m+[m			[32m$o = $this->M_perpus->edit_data(array('id_buku'=>$id),'transaksi')->num_rows();[m
[32m+[m			[32mif($o > 0){[m
[32m+[m				[32m$this->session->set_flashdata('alert','Buku ini sudah ada di keranjang');[m
[32m+[m				[32mredirect(base_url().'member');[m
[32m+[m			[32m}[m
[32m+[m			[32m$this->M_perpus->insert_data($isi, 'transaksi');[m
[32m+[m			[32m// $this->M_perpus->insert_data($isi, 'orderan');[m
[32m+[m			[32m$jml_buku = $d->jumlah_buku-1;[m
[32m+[m			[32m$w = array('id_buku'=>$id);[m
[32m+[m			[32m$data = array('jumlah_buku'=>$jml_buku);[m
[32m+[m			[32m$this->M_perpus->update_data('buku', $data,$w);[m
[32m+[m			[32mredirect(base_url().'member');[m
[32m+[m		[32m}[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32mfunction lihat_keranjang(){[m
[32m+[m		[32m$data['anggota'] = $this->M_perpus->edit_data(array('id_anggota' => $this->session->userdata('id_agt')),'anggota')->result();[m
[32m+[m		[32m$where = $this->session->userdata('id_agt');[m
[32m+[m		[32m$data['peminjaman'] = $this->db->query("SELECT * FROM transaksi T,buku B,anggota A WHERE B.id_buku=T.id_buku AND A.id_anggota=T.id_anggota AND A.id_anggota=$where")->result();[m
[32m+[m		[32m$d=$this->M_perpus->edit_data(array('id_anggota' => $this->session->userdata('id_agt')), 'transaksi')->num_rows();[m
[32m+[m		[32mif($d > 0){[m
[32m+[m			[32m$this->load->view('desain');[m
[32m+[m			[32m$this->load->view('toplayout', $data);[m
[32m+[m			[32m$this->load->view('keranjang', $data);[m
[32m+[m		[32m}else{[m
[32m+[m			[32mredirect('member');[m
[32m+[m		[32m}[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32mfunction hapus_keranjang($nomor){[m
[32m+[m		[32m$w = array('id_buku' => $nomor);[m
[32m+[m		[32m$data = $this->M_perpus->edit_data($w,'transaksi')->row();[m
[32m+[m		[32m$ww = array('id_buku' => $data->id_buku);[m
[32m+[m		[32m$data2 = array('status_buku' => '1');[m
[32m+[m		[32m$this->M_perpus->update_data('buku',$data2,$ww);[m
[32m+[m		[32m$this->M_perpus->delete_data($w,'transaksi');[m
[32m+[m		[32mredirect(base_url().'peminjaman/lihat_keranjang');[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32mpublic function selesai_booking($where){[m
[32m+[m		[32m$d = $this->M_perpus->find($where, 'transaksi');[m
[32m+[m		[32m$tujuh_hari = mktime(0,0,0,date("n"),date("j")+14,date("Y"));[m
[32m+[m		[32m$isi = array([m
[32m+[m			[32m'id_pinjam' => $this->M_perpus->kode_otomatis(),[m
[32m+[m			[32m'tanggal_input' => date('Y-m-d H:m:s'),[m
[32m+[m			[32m'id_anggota' => $where,[m
[32m+[m			[32m'tgl_pinjam' => date('Y-m-d'),[m
[32m+[m			[32m'tgl_kembali' => date('Y-m-d', $tujuh_hari),[m
[32m+[m			[32m'total_denda' => '0',[m
[32m+[m			[32m'status_peminjaman' => 'Booking',[m
[32m+[m			[32m'status_pengembalian' => 'Belum Kembali'[m
[32m+[m		[32m);[m
[32m+[m
[32m+[m		[32m$this->M_perpus->insert_data($isi,'peminjaman');[m
[32m+[m		[32m$this->M_perpus->insert_detail($where);[m
[32m+[m		[32m$data['useraktif'] = $this->M_perpus->edit_data(array('id_anggota' => $this->session->userdata('id_agt')),'anggota')->result();[m
[32m+[m		[32m$data['items'] = $this->db->query("SELECT * FROM peminjaman p, detail_pinjam d, buku b WHERE b.id_buku=d.id_buku AND d.id_pinjam=p.id_pinjam AND p.id_anggota=$where")->result();[m[41m	[m
[32m+[m		[32m$this->load->view('desain');[m
[32m+[m		[32m$this->load->view('toplayout', $data);[m
[32m+[m		[32m$this->load->view('info', $data);[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32mfunction peminjaman_selesai($where){[m
[32m+[m		[32m$d = $this->M_perpus->find($where, 'transaksi');[m
[32m+[m		[32m$data['useraktif'] = $this->M_perpus->edit_data(array('id_anggota' => $this->session->userdata('id_agt')),'anggota')->result();[m
[32m+[m		[32m$data['items'] = $this->db->query("SELECT * FROM peminjaman p, detail_pinjam d, buku b WHERE b.id_buku=d.id_buku AND d.id_pinjam=p.id_pinjam AND p.id_anggota=$where")->result();[m
[32m+[m		[32m$this->M_perpus->kosongkan_data('detail_pinjam');[m
[32m+[m		[32m$this->M_perpus->kosongkan_data('transaksi');[m
[32m+[m		[32m$this->load->view('desain');[m
[32m+[m		[32m$this->load->view('toplayout', $data);[m
[32m+[m		[32m$this->load->view('selesai', $data);[m
[32m+[m	[32m}[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m/* End of file Peminjaman.php */[m
[32m+[m[32m/* Location: ./application/controllers/Peminjaman.php */[m
\ No newline at end of file[m
[1mdiff --git a/application/controllers/Welcome.php b/application/controllers/Welcome.php[m
[1mnew file mode 100644[m
[1mindex 0000000..23f6deb[m
[1m--- /dev/null[m
[1m+++ b/application/controllers/Welcome.php[m
[36m@@ -0,0 +1,58 @@[m
[32m+[m[32m<?php[m
[32m+[m[32mdefined('BASEPATH') OR exit('No direct script access allowed');[m
[32m+[m
[32m+[m[32mclass Welcome extends CI_Controller {[m
[32m+[m	[32mfunction __construct(){[m
[32m+[m		[32mparent::__construct();[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32mpublic function index(){[m
[32m+[m		[32m$data = array([m
[32m+[m			[32m'login_title' => 'Login - Aplikasi E-Library',[m
[32m+[m		[32m);[m
[32m+[m		[32m$this->load->view('login',$data);[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32mpublic function login(){[m
[32m+[m		[32m// Array Untuk Judul Title dan Footer[m
[32m+[m		[32m$data = array([m
[32m+[m			[32m'login_tile' => 'Login - Aplikasi E-Library',[m
[32m+[m			[32m'footer_title' => ' ',[m[41m [m
[32m+[m		[32m);[m
[32m+[m
[32m+[m		[32m$username = $this->input->post('admin_username');[m
[32m+[m		[32m$password = $this->input->post('admin_password');[m
[32m+[m		[32m$this->form_validation->set_rules('admin_username','Username','trim|required');[m
[32m+[m		[32m$this->form_validation->set_rules('admin_password','Password','trim|required');[m
[32m+[m
[32m+[m		[32mif($this->form_validation->run() != false){[m
[32m+[m			[32m$where = array('username'=>$username, 'password'=>md5($password));[m
[32m+[m
[32m+[m			[32m$data = $this->M_perpus->edit_data($where,'admin');[m
[32m+[m			[32m$d = $this->M_perpus->edit_data($where,'admin')->row();[m
[32m+[m			[32m$cek = $data->num_rows();[m
[32m+[m
[32m+[m			[32mif($cek > 0){[m
[32m+[m				[32m$session = array('id' => $d->id_admin,'nama' => $d->nama_admin,'status' =>'login');[m
[32m+[m				[32m$this->session->set_userdata($session);[m
[32m+[m				[32mredirect(base_url().'admin');[m
[32m+[m			[32m}else{[m
[32m+[m				[32m$dt = $this->M_perpus->edit_data($where,'anggota');[m
[32m+[m				[32m$hasil = $this->M_perpus->edit_data($where, 'anggota')->row();[m
[32m+[m				[32m$proses = $dt->num_rows();[m
[32m+[m
[32m+[m				[32mif($proses > 0){[m
[32m+[m						[32m$session = array('id_agt' => $hasil->id_anggota, 'nama_agt' => $hasil->nama_anggota, 'status' => 'login');[m
[32m+[m						[32m$this->session->set_userdata($session);[m
[32m+[m						[32mredirect(base_url().'member');[m
[32m+[m					[32m}else{[m
[32m+[m					[32m$this->session->set_flashdata('alert','Login Gagal! Username atau Password Salah');[m
[32m+[m					[32mredirect(base_url());[m
[32m+[m					[32m}[m[41m	[m
[32m+[m				[32m}[m
[32m+[m		[32m} else {[m
[32m+[m				[32m$this->session->set_flashdata('alert','Anda Belum mengisi username atau password');[m
[32m+[m				[32m$this->load->view('login',$data);[m
[32m+[m			[32m}[m
[32m+[m	[32m}[m
[32m+[m[32m}[m
[1mdiff --git a/application/controllers/index.html b/application/controllers/index.html[m
[1mnew file mode 100644[m
[1mindex 0000000..b702fbc[m
[1m--- /dev/null[m
[1m+++ b/application/controllers/index.html[m
[36m@@ -0,0 +1,11 @@[m
[32m+[m[32m<!DOCTYPE html>[m
[32m+[m[32m<html>[m
[32m+[m[32m<head>[m
[32m+[m	[32m<title>403 Forbidden</title>[m
[32m+[m[32m</head>[m
[32m+[m[32m<body>[m
[32m+[m
[32m+[m[32m<p>Directory access is forbidden.</p>[m
[32m+[m
[32m+[m[32m</body>[m
[32m+[m[32m</html>[m
[1mdiff --git a/application/core/index.html b/application/core/index.html[m
[1mnew file mode 100644[m
[1mindex 0000000..b702fbc[m
[1m--- /dev/null[m
[1m+++ b/application/core/index.html[m
[36m@@ -0,0 +1,11 @@[m
[32m+[m[32m<!DOCTYPE html>[m
[32m+[m[32m<html>[m
[32m+[m[32m<head>[m
[32m+[m	[32m<title>403 Forbidden</title>[m
[32m+[m[32m</head>[m
[32m+[m[32m<body>[m
[32m+[m
[32m+[m[32m<p>Directory access is forbidden.</p>[m
[32m+[m
[32m+[m[32m</body>[m
[32m+[m[32m</html>[m
[1mdiff --git a/application/helpers/index.html b/application/helpers/index.html[m
[1mnew file mode 100644[m
[1mindex 0000000..b702fbc[m
[1m--- /dev/null[m
[1m+++ b/application/helpers/index.html[m
[36m@@ -0,0 +1,11 @@[m
[32m+[m[32m<!DOCTYPE html>[m
[32m+[m[32m<html>[m
[32m+[m[32m<head>[m
[32m+[m	[32m<title>403 Forbidden</title>[m
[32m+[m[32m</head>[m
[32m+[m[32m<body>[m
[32m+[m
[32m+[m[32m<p>Directory access is forbidden.</p>[m
[32m+[m
[32m+[m[32m</body>[m
[32m+[m[32m</html>[m
[1mdiff --git a/application/hooks/index.html b/application/hooks/index.html[m
[1mnew file mode 100644[m
[1mindex 0000000..b702fbc[m
[1m--- /dev/null[m
[1m+++ b/application/hooks/index.html[m
[36m@@ -0,0 +1,11 @@[m
[32m+[m[32m<!DOCTYPE html>[m
[32m+[m[32m<html>[m
[32m+[m[32m<head>[m
[32m+[m	[32m<title>403 Forbidden</title>[m
[32m+[m[32m</head>[m
[32m+[m[32m<body>[m
[32m+[m
[32m+[m[32m<p>Directory access is forbidden.</p>[m
[32m+[m
[32m+[m[32m</body>[m
[32m+[m[32m</html>[m
[1mdiff --git a/application/index.html b/application/index.html[m
[1mnew file mode 100644[m
[1mindex 0000000..b702fbc[m
[1m--- /dev/null[m
[1m+++ b/application/index.html[m
[36m@@ -0,0 +1,11 @@[m
[32m+[m[32m<!DOCTYPE html>[m
[32m+[m[32m<html>[m
[32m+[m[32m<head>[m
[32m+[m	[32m<title>403 Forbidden</title>[m
[32m+[m[32m</head>[m
[32m+[m[32m<body>[m
[32m+[m
[32m+[m[32m<p>Directory access is forbidden.</p>[m
[32m+[m
[32m+[m[32m</body>[m
[32m+[m[32m</html>[m
[1mdiff --git a/application/language/english/index.html b/application/language/english/index.html[m
[1mnew file mode 100644[m
[1mindex 0000000..b702fbc[m
[1m--- /dev/null[m
[1m+++ b/application/language/english/index.html[m
[36m@@ -0,0 +1,11 @@[m
[32m+[m[32m<!DOCTYPE html>[m
[32m+[m[32m<html>[m
[32m+[m[32m<head>[m
[32m+[m	[32m<title>403 Forbidden</title>[m
[32m+[m[32m</head>[m
[32m+[m[32m<body>[m
[32m+[m
[32m+[m[32m<p>Directory access is forbidden.</p>[m
[32m+[m
[32m+[m[32m</body>[m
[32m+[m[32m</html>[m
[1mdiff --git a/application/language/index.html b/application/language/index.html[m
[1mnew file mode 100644[m
[1mindex 0000000..b702fbc[m
[1m--- /dev/null[m
[1m+++ b/application/language/index.html[m
[36m@@ -0,0 +1,11 @@[m
[32m+[m[32m<!DOCTYPE html>[m
[32m+[m[32m<html>[m
[32m+[m[32m<head>[m
[32m+[m	[32m<title>403 Forbidden</title>[m
[32m+[m[32m</head>[m
[32m+[m[32m<body>[m
[32m+[m
[32m+[m[32m<p>Directory access is forbidden.</p>[m
[32m+[m
[32m+[m[32m</body>[m
[32m+[m[32m</html>[m
[1mdiff --git a/application/libraries/dompdf_gen.php b/application/libraries/dompdf_gen.php[m
[1mnew file mode 100644[m
[1mindex 0000000..f2637a8[m
[1m--- /dev/null[m
[1m+++ b/application/libraries/dompdf_gen.php[m
[36m@@ -0,0 +1,34 @@[m
[32m+[m[32m<?php if ( ! defined('BASEPATH')) exit('No direct script access allowed');[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m* Name:  DOMPDF[m
[32m+[m[32m*[m[41m [m
[32m+[m[32m* Author: Jd Fiscus[m
[32m+[m[32m* 	 	  jdfiscus@gmail.com[m
[32m+[m[32m*         @iamfiscus[m
[32m+[m[32m*[m[41m          [m
[32m+[m[32m*[m
[32m+[m[32m* Origin API Class: http://code.google.com/p/dompdf/[m
[32m+[m[32m*[m[41m [m
[32m+[m[32m* Location: http://github.com/iamfiscus/Codeigniter-DOMPDF/[m
[32m+[m[32m*[m[41m          [m
[32m+[m[32m* Created:  06.22.2010[m[41m [m
[32m+[m[32m*[m[41m [m
[32m+[m[32m* Description:  This is a Codeigniter library which allows you to convert HTML to PDF with the DOMPDF library[m
[32m+[m[32m*[m[41m [m
[32m+[m[32m*/[m
[32m+[m
[32m+[m[32mclass Dompdf_gen {[m
[32m+[m[41m		[m
[32m+[m	[32mpublic function __construct() {[m
[32m+[m[41m		[m
[32m+[m		[32mrequire_once APPPATH.'third_party/dompdf/dompdf_config.inc.php';[m
[32m+[m[41m		[m
[32m+[m		[32m$pdf = new DOMPDF();[m
[32m+[m[41m		[m
[32m+[m		[32m$CI =& get_instance();[m
[32m+[m		[32m$CI->dompdf = $pdf;[m
[32m+[m[41m		[m
[32m+[m	[32m}[m
[32m+[m[41m	[m
[32m+[m[32m}[m
\ No newline at end of file[m
[1mdiff --git a/application/libraries/index.html b/application/libraries/index.html[m
[1mnew file mode 100644[m
[1mindex 0000000..b702fbc[m
[1m--- /dev/null[m
[1m+++ b/application/libraries/index.html[m
[36m@@ -0,0 +1,11 @@[m
[32m+[m[32m<!DOCTYPE html>[m
[32m+[m[32m<html>[m
[32m+[m[32m<head>[m
[32m+[m	[32m<title>403 Forbidden</title>[m
[32m+[m[32m</head>[m
[32m+[m[32m<body>[m
[32m+[m
[32m+[m[32m<p>Directory access is forbidden.</p>[m
[32m+[m
[32m+[m[32m</body>[m
[32m+[m[32m</html>[m
[1mdiff --git a/application/logs/index.html b/application/logs/index.html[m
[1mnew file mode 100644[m
[1mindex 0000000..b702fbc[m
[1m--- /dev/null[m
[1m+++ b/application/logs/index.html[m
[36m@@ -0,0 +1,11 @@[m
[32m+[m[32m<!DOCTYPE html>[m
[32m+[m[32m<html>[m
[32m+[m[32m<head>[m
[32m+[m	[32m<title>403 Forbidden</title>[m
[32m+[m[32m</head>[m
[32m+[m[32m<body>[m
[32m+[m
[32m+[m[32m<p>Directory access is forbidden.</p>[m
[32m+[m
[32m+[m[32m</body>[m
[32m+[m[32m</html>[m
[1mdiff --git a/application/models/M_perpus.php b/application/models/M_perpus.php[m
[1mnew file mode 100644[m
[1mindex 0000000..eaee33e[m
[1m--- /dev/null[m
[1m+++ b/application/models/M_perpus.php[m
[36m@@ -0,0 +1,63 @@[m
[32m+[m[32m  <?php[m
[32m+[m[32mdefined('BASEPATH') or exit('No direct Script access allowed');[m
[32m+[m
[32m+[m[32mclass M_perpus extends CI_Model {[m
[32m+[m[32m    function edit_data($where,$table){[m
[32m+[m[32m      return $this->db->get_where($table,$where);[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    function get_data($table){[m
[32m+[m[32m      return $this->db->get($table);[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    function insert_data($data,$table){[m
[32m+[m[32m      $this->db->insert($table,$data);[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    function update_data($table,$data,$where){[m
[32m+[m[32m      $this->db->update($table,$data,$where);[m[41m [m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    function delete_data($where,$table){[m
[32m+[m[32m      $this->db->where($where);[m
[32m+[m[32m      $this->db->delete($table);[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    public function insert_detail($where){[m
[32m+[m[32m      $sql = "INSERT INTO detail_pinjam (id_pinjam,id_buku,denda,id_anggota) SELECT transaksi.id_pinjam,transaksi.id_buku,transaksi.denda,transaksi.id_anggota FROM transaksi WHERE transaksi.id_anggota='$where'";[m
[32m+[m[32m      $this->db->query($sql);[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    public function find($where, $table){[m
[32m+[m[32m      //Query mencari record berdasarkan ID nya[m
[32m+[m[32m      $hasil = $this->db->where('id_buku', $where)->limit(1)->get($table);[m
[32m+[m[32m      if($hasil->num_rows() > 0){[m
[32m+[m[32m        return $hasil->row();[m
[32m+[m[32m      }else{[m
[32m+[m[32m        return array();[m
[32m+[m[32m      }[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    public function kosongkan_data($table){[m
[32m+[m[32m      return $this->db->truncate($table);[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    public function kode_otomatis(){[m
[32m+[m[32m      $this->db->select('right(id_pinjam,3) as kode', false);[m
[32m+[m[32m      $this->db->order_by('id_pinjam', 'desc');[m
[32m+[m[32m      $this->db->limit(1);[m
[32m+[m[32m      $query=$this->db->get('peminjaman');[m
[32m+[m[32m      if($query->num_rows()<>0){[m
[32m+[m[32m        $data = $query->row();[m
[32m+[m[32m        $kode = intval($data->kode)+1;[m
[32m+[m[32m      }else{[m
[32m+[m[32m        $kode = 1;[m
[32m+[m[32m      }[m
[32m+[m
[32m+[m[32m      $kodemax = str_pad($kode,3,"0", STR_PAD_LEFT);[m
[32m+[m[32m      $kodejadi ='PJ'.$kodemax;[m
[32m+[m
[32m+[m[32m      return $kodejadi;[m
[32m+[m[32m    }[m
[32m+[m[32m  }[m
[32m+[m[32m?>[m
\ No newline at end of file[m
[1mdiff --git a/application/models/index.html b/application/models/index.html[m
[1mnew file mode 100644[m
[1mindex 0000000..b702fbc[m
[1m--- /dev/null[m
[1m+++ b/application/models/index.html[m
[36m@@ -0,0 +1,11 @@[m
[32m+[m[32m<!DOCTYPE html>[m
[32m+[m[32m<html>[m
[32m+[m[32m<head>[m
[32m+[m	[32m<title>403 Forbidden</title>[m
[32m+[m[32m</head>[m
[32m+[m[32m<body>[m
[32m+[m
[32m+[m[32m<p>Directory access is forbidden.</p>[m
[32m+[m
[32m+[m[32m</body>[m
[32m+[m[32m</html>[m
[1mdiff --git a/application/third_party/dompdf/LICENSE.LGPL b/application/third_party/dompdf/LICENSE.LGPL[m
[1mnew file mode 100644[m
[1mindex 0000000..6ef5de8[m
[1m--- /dev/null[m
[1m+++ b/application/third_party/dompdf/LICENSE.LGPL[m
[36m@@ -0,0 +1,456 @@[m
[32m+[m		[32m  GNU LESSER GENERAL PUBLIC LICENSE[m
[32m+[m		[32m       Version 2.1, February 1999[m
[32m+[m
[32m+[m[32m Copyright (C) 1991, 1999 Free Software Foundation, Inc.[m
[32m+[m[32m     59 Temple Place, Suite 330, Boston, MA  02111-1307  USA[m
[32m+[m[32m Everyone is permitted to copy and distribute verbatim copies[m
[32m+[m[32m of this license document, but changing it is not allowed.[m
[32m+[m
[32m+[m[32m[This is the first released version of the Lesser GPL.  It also counts[m
[32m+[m[32m as the successor of the GNU Library Public License, version 2, hence[m
[32m+[m[32m the version number 2.1.][m
[32m+[m
[32m+[m			[32m    Preamble[m
[32m+[m
[32m+[m[32m  The licenses for most software are designed to take away your[m
[32m+[m[32mfreedom to share and change it.  By contrast, the GNU General Public[m
[32m+[m[32mLicenses are intended to guarantee your freedom to share and change[m
[32m+[m[32mfree software--to make sure the software is free for all its users.[m
[32m+[m
[32m+[m[32m  This license, the Lesser General Public License, applies to some[m
[32m+[m[32mspecially designated software packages--typically libraries--of the[m
[32m+[m[32mFree Software Foundation and other authors who decide to use it.  You[m
[32m+[m[32mcan use it too, but we suggest you first think carefully about whether[m
[32m+[m[32mthis license or the ordinary General Public License is the better[m
[32m+[m[32mstrategy to use in any particular case, based on the explanations below.[m
[32m+[m
[32m+[m[32m  When we speak of free software, we are referring to freedom of use,[m
[32m+[m[32mnot price.  Our General Public Licenses are designed to make sure that[m
[32m+[m[32myou have the freedom to distribute copies of free software (and charge[m
[32m+[m[32mfor this service if you wish); that you receive source code or can get[m
[32m+[m[32mit if you want it; that you can change the software and use pieces of[m
[32m+[m[32mit in new free programs; and that you are informed that you can do[m
[32m+[m[32mthese things.[m
[32m+[m
[32m+[m[32m  To protect your rights, we need to make restrictions that forbid[m
[32m+[m[32mdistributors to deny you these rights or to ask you to surrender these[m
[32m+[m[32mrights.  These restrictions translate to certain responsibilities for[m
[32m+[m[32myou if you distribute copies of the library or if you modify it.[m
[32m+[m
[32m+[m[32m  For example, if you distribute copies of the library, whether gratis[m
[32m+[m[32mor for a fee, you must give the recipients all the rights that we gave[m
[32m+[m[32myou.  You must make sure that they, too, receive or can get the source[m
[32m+[m[32mcode.  If you link other code with the library, you must provide[m
[32m+[m[32mcomplete object files to the recipients, so that they can relink them[m
[32m+[m[32mwith the library after making changes to the library and recompiling[m
[32m+[m[32mit.  And you must show them these terms so they know their rights.[m
[32m+[m
[32m+[m[32m  We protect your rights with a two-step method: (1) we copyright the[m
[32m+[m[32mlibrary, and (2) we offer you this license, which gives you legal[m
[32m+[m[32mpermission to copy, distribute and/or modify the library.[m
[32m+[m
[32m+[m[32m  To protect each distributor, we want to make it very clear that[m
[32m+[m[32mthere is no warranty for the free library.  Also, if the library is[m
[32m+[m[32mmodified by someone else and passed on, the recipients should know[m
[32m+[m[32mthat what they have is not the original version, so that the original[m
[32m+[m[32mauthor's reputation will not be affected by problems that might be[m
[32m+[m[32mintroduced by others.[m
[32m+[m[32m[m
[32m+[m[32m  Finally, software patents pose a constant threat to the existence of[m
[32m+[m[32many free program.  We wish to make sure that a company cannot[m
[32m+[m[32meffectively restrict the users of a free program by obtaining a[m
[32m+[m[32mrestrictive license from a patent holder.  Therefore, we insist that[m
[32m+[m[32many patent license obtained for a version of the library must be[m
[32m+[m[32mconsistent with the full freedom of use specified in this license.[m
[32m+[m
[32m+[m[32m  Most GNU software, including some libraries, is covered by the[m
[32m+[m[32mordinary GNU General Public License.  This license, the GNU Lesser[m
[32m+[m[32mGeneral Public License, applies to certain designated libraries, and[m
[32m+[m[32mis quite different from the ordinary General Public License.  We use[m
[32m+[m[32mthis license for certain libraries in order to permit linking those[m
[32m+[m[32mlibraries into non-free programs.[m
[32m+[m
[32m+[m[32m  When a program is linked with a library, whether statically or using[m
[32m+[m[32ma shared library, the combination of the two is legally speaking a[m
[32m+[m[32mcombined work, a derivative of the original library.  The ordinary[m
[32m+[m[32mGeneral Public License therefore permits such linking only if the[m
[32m+[m[32mentire combination fits its criteria of freedom.  The Lesser General[m
[32m+[m[32mPublic License permits more lax criteria for linking other code with[m
[32m+[m[32mthe library.[m
[32m+[m
[32m+[m[32m  We call this license the "Lesser" General Public License because it[m
[32m+[m[32mdoes Less to protect the user's freedom than the ordinary General[m
[32m+[m[32mPublic License.  It also provides other free software developers Less[m
[32m+[m[32mof an advantage over competing non-free programs.  These disadvantages[m
[32m+[m[32mare the reason we use the ordinary General Public License for many[m
[32m+[m[32mlibraries.  However, the Lesser license provides advantages in certain[m
[32m+[m[32mspecial circumstances.[m
[32m+[m
[32m+[m[32m  For example, on rare occasions, there may be a special need to[m
[32m+[m[32mencourage the widest possible use of a certain library, so that it becomes[m
[32m+[m[32ma de-facto standard.  To achieve this, non-free programs must be[m
[32m+[m[32mallowed to use the library.  A more frequent case is that a free[m
[32m+[m[32mlibrary does the same job as widely used non-free libraries.  In this[m
[32m+[m[32mcase, there is little to gain by limiting the free library to free[m
[32m+[m[32msoftware only, so we use the Lesser General Public License.[m
[32m+[m
[32m+[m[32m  In other cases, permission to use a particular library in non-free[m
[32m+[m[32mprograms enables a greater number of people to use a large body of[m
[32m+[m[32mfree software.  For example, permission to use the GNU C Library in[m
[32m+[m[32mnon-free programs enables many more people to use the whole GNU[m
[32m+[m[32moperating system, as well as its variant, the GNU/Linux operating[m
[32m+[m[32msystem.[m
[32m+[m
[32m+[m[32m  Although the Lesser General Public License is Less protective of the[m
[32m+[m[32musers' freedom, it does ensure that the user of a program that is[m
[32m+[m[32mlinked with the Library has the freedom and the wherewithal to run[m
[32m+[m[32mthat program using a modified version of the Library.[m
[32m+[m
[32m+[m[32m  The precise terms and conditions for copying, distribution and[m
[32m+[m[32mmodification follow.  Pay close attention to the difference between a[m
[32m+[m[32m"work based on the library" and a "work that uses the library".  The[m
[32m+[m[32mformer contains code derived from the library, whereas the latter must[m
[32m+[m[32mbe combined with the library in order to run.[m
[32m+[m[32m[m
[32m+[m		[32m  GNU LESSER GENERAL PUBLIC LICENSE[m
[32m+[m[32m   TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION[m
[32m+[m
[32m+[m[32m  0. This License Agreement applies to any software library or other[m
[32m+[m[32mprogram which contains a notice placed by the copyright holder or[m
[32m+[m[32mother authorized party saying it may be distributed under the terms of[m
[32m+[m[32mthis Lesser General Public License (also called "this License").[m
[32m+[m[32mEach licensee is addressed as "you".[m
[32m+[m
[32m+[m[32m  A "library" means a collection of software functions and/or data[m
[32m+[m[32mprepared so as to be conveniently linked with application programs[m
[32m+[m[32m(which use some of those functions and data) to form executables.[m
[32m+[m
[32m+[m[32m  The "Library", below, refers to any such software library or work[m
[32m+[m[32mwhich has been distributed under these terms.  A "work based on the[m
[32m+[m[32mLibrary" means either the Library or any derivative work under[m
[32m+[m[32mcopyright law: that is to say, a work containing the Library or a[m
[32m+[m[32mportion of it, either verbatim or with modifications and/or translated[m
[32m+[m[32mstraightforwardly into another language.  (Hereinafter, translation is[m
[32m+[m[32mincluded without limitation in the term "modification".)[m
[32m+[m
[32m+[m[32m  "Source code" for a work means the preferred form of the work for[m
[32m+[m[32mmaking modifications to it.  For a library, complete source code means[m
[32m+[m[32mall the source code for all modules it contains, plus any associated[m
[32m+[m[32minterface definition files, plus the scripts used to control compilation[m
[32m+[m[32mand installation of the library.[m
[32m+[m
[32m+[m[32m  Activities other than copying, distribution and modification are not[m
[32m+[m[32mcovered by this License; they are outside its scope.  The act of[m
[32m+[m[32mrunning a program using the Library is not restricted, and output from[m
[32m+[m[32msuch a program is covered only if its contents constitute a work based[m
[32m+[m[32mon the Library (independent of the use of the Library in a tool for[m
[32m+[m[32mwriting it).  Whether that is true depends on what the Library does[m
[32m+[m[32mand what the program that uses the Library does.[m
[32m+[m[41m  [m
[32m+[m[32m  1. You may copy and distribute verbatim copies of the Library's[m
[32m+[m[32mcomplete source code as you receive it, in any medium, provided that[m
[32m+[m[32myou conspicuously and appropriately publish on each copy an[m
[32m+[m[32mappropriate copyright notice and disclaimer of warranty; keep intact[m
[32m+[m[32mall the notices that refer to this License and to the absence of any[m
[32m+[m[32mwarranty; and distribute a copy of this License along with the[m
[32m+[m[32mLibrary.[m
[32m+[m
[32m+[m[32m  You may charge a fee for the physical act of transferring a copy,[m
[32m+[m[32mand you may at your option offer warranty protection in exchange for a[m
[32m+[m[32mfee.[m
[32m+[m[32m[m
[32m+[m[32m  2. You may modify your copy or copies of the Library or any portion[m
[32m+[m[32mof it, thus forming a work based on the Library, and copy and[m
[32m+[m[32mdistribute such modifications or work under the terms of Section 1[m
[32m+[m[32mabove, provided that you also meet all of these conditions:[m
[32m+[m
[32m+[m[32m    a) The modified work must itself be a software library.[m
[32m+[m
[32m+[m[32m    b) You must cause the files modified to carry prominent notices[m
[32m+[m[32m    stating that you changed the files and the date of any change.[m
[32m+[m
[32m+[m[32m    c) You must cause the whole of the work to be licensed at no[m
[32m+[m[32m    charge to all third parties under the terms of this License.[m
[32m+[m
[32m+[m[32m    d) If a facility in the modified Library refers to a function or a[m
[32m+[m[32m    table of data to be supplied by an application program that uses[m
[32m+[m[32m    the facility, other than as an argument passed when the facility[m
[32m+[m[32m    is invoked, then you must make a good faith effort to ensure that,[m
[32m+[m[32m    in the event an application does not supply such function or[m
[32m+[m[32m    table, the facility still operates, and performs whatever part of[m
[32m+[m[32m    its purpose remains meaningful.[m
[32m+[m
[32m+[m[32m    (For example, a function in a library to compute square roots has[m
[32m+[m[32m    a purpose that is entirely well-defined independent of the[m
[32m+[m[32m    application.  Therefore, Subsection 2d requires that any[m
[32m+[m[32m    application-supplied function or table used by this function must[m
[32m+[m[32m    be optional: if the application does not supply it, the square[m
[32m+[m[32m    root function must still compute square roots.)[m
[32m+[m
[32m+[m[32mThese requirements apply to the modified work as a whole.  If[m
[32m+[m[32midentifiable sections of that work are not derived from the Library,[m
[32m+[m[32mand can be reasonably considered independent and separate works in[m
[32m+[m[32mthemselves, then this License, and its terms, do not apply to those[m
[32m+[m[32msections when you distribute them as separate works.  But when you[m
[32m+[m[32mdistribute the same sections as part of a whole which is a work based[m
[32m+[m[32mon the Library, the distribution of the whole must be on the terms of[m
[32m+[m[32mthis License, whose permissions for other licensees extend to the[m
[32m+[m[32mentire whole, and thus to each and every part regardless of who wrote[m
[32m+[m[32mit.[m
[32m+[m
[32m+[m[32mThus, it is not the intent of this section to claim rights or contest[m
[32m+[m[32myour rights to work written entirely by you; rather, the intent is to[m
[32m+[m[32mexercise the right to control the distribution of derivative or[m
[32m+[m[32mcollective works based on the Library.[m
[32m+[m
[32m+[m[32mIn addition, mere aggregation of another work not based on the Library[m
[32m+[m[32mwith the Library (or with a work based on the Library) on a volume of[m
[32m+[m[32ma storage or distribution medium does not bring the other work under[m
[32m+[m[32mthe scope of this License.[m
[32m+[m
[32m+[m[32m  3. You may opt to apply the terms of the ordinary GNU General Public[m
[32m+[m[32mLicense instead of this License to a given copy of the Library.  To do[m
[32m+[m[32mthis, you must alter all the notices that refer to this License, so[m
[32m+[m[32mthat they refer to the ordinary GNU General Public License, version 2,[m
[32m+[m[32minstead of to this License.  (If a newer version than version 2 of the[m
[32m+[m[32mordinary GNU General Public License has appeared, then you can specify[m
[32m+[m[32mthat version instead if you wish.)  Do not make any other change in[m
[32m+[m[32mthese notices.[m
[32m+[m[32m[m
[32m+[m[32m  Once this change is made in a given copy, it is irreversible for[m
[32m+[m[32mthat copy, so the ordinary GNU General Public License applies to all[m
[32m+[m[32msubsequent copies and derivative works made from that copy.[m
[32m+[m
[32m+[m[32m  This option is useful when you wish to copy part of the code of[m
[32m+[m[32mthe Library into a program that is not a library.[m
[32m+[m
[32m+[m[32m  4. You may copy and distribute the Library (or a portion or[m
[32m+[m[32mderivative of it, under Section 2) in object code or executable form[m
[32m+[m[32munder the terms of Sections 1 and 2 above provided that you accompany[m
[32m+[m[32mit with the complete corresponding machine-readable source code, which[m
[32m+[m[32mmust be distributed under the terms of Sections 1 and 2 above on a[m
[32m+[m[32mmedium customarily used for software interchange.[m
[32m+[m
[32m+[m[32m  If distribution of object code is made by offering access to copy[m
[32m+[m[32mfrom a designated place, then offering equivalent access to copy the[m
[32m+[m[32msource code from the same place satisfies the requirement to[m
[32m+[m[32mdistribute the source code, even though third parties are not[m
[32m+[m[32mcompelled to copy the source along with the object code.[m
[32m+[m
[32m+[m[32m  5. A program that contains no derivative of any portion of the[m
[32m+[m[32mLibrary, but is designed to work with the Library by being compiled or[m
[32m+[m[32mlinked with it, is called a "work that uses the Library".  Such a[m
[32m+[m[32mwork, in isolation, is not a derivative work of the Library, and[m
[32m+[m[32mtherefore falls outside the scope of this License.[m
[32m+[m
[32m+[m[32m  However, linking a "work that uses the Library" with the Library[m
[32m+[m[32mcreates an executable that is a derivative of the Library (because it[m
[32m+[m[32mcontains portions of the Library), rather than a "work that uses the[m
[32m+[m[32mlibrary".  The executable is therefore covered by this License.[m
[32m+[m[32mSection 6 states terms for distribution of such executables.[m
[32m+[m
[32m+[m[32m  When a "work that uses the Library" uses material from a header file[m
[32m+[m[32mthat is part of the Library, the object code for the work may be a[m
[32m+[m[32mderivative work of the Library even though the source code is not.[m
[32m+[m[32mWhether this is true is especially significant if the work can be[m
[32m+[m[32mlinked without the Library, or if the work is itself a library.  The[m
[32m+[m[32mthreshold for this to be true is not precisely defined by law.[m
[32m+[m
[32m+[m[32m  If such an object file uses only numerical parameters, data[m
[32m+[m[32mstructure layouts and accessors, and small macros and small inline[m
[32m+[m[32mfunctions (ten lines or less in length), then the use of the object[m
[32m+[m[32mfile is unrestricted, regardless of whether it is legally a derivative[m
[32m+[m[32mwork.  (Executables containing this object code plus portions of the[m
[32m+[m[32mLibrary will still fall under Section 6.)[m
[32m+[m
[32m+[m[32m  Otherwise, if the work is a derivative of the Library, you may[m
[32m+[m[32mdistribute the object code for the work under the terms of Section 6.[m
[32m+[m[32mAny executables containing that work also fall under Section 6,[m
[32m+[m[32mwhether or not they are linked directly with the Library itself.[m
[32m+[m[32m[m
[32m+[m[32m  6. As an exception to the Sections above, you may also combine or[m
[32m+[m[32mlink a "work that uses the Library" with the Library to produce a[m
[32m+[m[32mwork containing portions of the Library, and distribute that work[m
[32m+[m[32munder terms of your choice, provided that the terms permit[m
[32m+[m[32mmodification of the work for the customer's own use and reverse[m
[32m+[m[32mengineering for debugging such modifications.[m
[32m+[m
[32m+[m[32m  You must give prominent notice with each copy of the work that the[m
[32m+[m[32mLibrary is used in it and that the Library and its use are covered by[m
[32m+[m[32mthis License.  You must supply a copy of this License.  If the work[m
[32m+[m[32mduring execution displays copyright notices, you must include the[m
[32m+[m[32mcopyright notice for the Library among them, as well as a reference[m
[32m+[m[32mdirecting the user to the copy of this License.  Also, you must do one[m
[32m+[m[32mof these things:[m
[32m+[m
[32m+[m[32m    a) Accompany the work with the complete corresponding[m
[32m+[m[32m    machine-readable source code for the Library including whatever[m
[32m+[m[32m    changes were used in the work (which must be distributed under[m
[32m+[m[32m    Sections 1 and 2 above); and, if the work is an executable linked[m
[32m+[m[32m    with the Library, with the complete machine-readable "work that[m
[32m+[m[32m    uses the Library", as object code and/or source code, so that the[m
[32m+[m[32m    user can modify the Library and then relink to produce a modified[m
[32m+[m[32m    executable containing the modified Library.  (It is understood[m
[32m+[m[32m    that the user who changes the contents of definitions files in the[m
[32m+[m[32m    Library will not necessarily be able to recompile the application[m
[32m+[m[32m    to use the modified definitions.)[m
[32m+[m
[32m+[m[32m    b) Use a suitable shared library mechanism for linking with the[m
[32m+[m[32m    Library.  A suitable mechanism is one that (1) uses at run time a[m
[32m+[m[32m    copy of the library already present on the user's computer system,[m
[32m+[m[32m    rather than copying library functions into the executable, and (2)[m
[32m+[m[32m    will operate properly with a modified version of the library, if[m
[32m+[m[32m    the user installs one, as long as the modified version is[m
[32m+[m[32m    interface-compatible with the version that the work was made with.[m
[32m+[m
[32m+[m[32m    c) Accompany the work with a written offer, valid for at[m
[32m+[m[32m    least three years, to give the same user the materials[m
[32m+[m[32m    specified in Subsection 6a, above, for a charge no more[m
[32m+[m[32m    than the cost of performing this distribution.[m
[32m+[m
[32m+[m[32m    d) If distribution of the work is made by offering access to copy[m
[32m+[m[32m    from a designated place, offer equivalent access to copy the above[m
[32m+[m[32m    specified materials from the same place.[m
[32m+[m
[32m+[m[32m    e) Verify that the user has already received a copy of these[m
[32m+[m[32m    materials or that you have already sent this user a copy.[m
[32m+[m
[32m+[m[32m  For an executable, the required form of the "work that uses the[m
[32m+[m[32mLibrary" must include any data and utility programs needed for[m
[32m+[m[32mreproducing the executable from it.  However, as a special exception,[m
[32m+[m[32mthe materials to be distributed need not include anything that is[m
[32m+[m[32mnormally distributed (in either source or binary form) with the major[m
[32m+[m[32mcomponents (compiler, kernel, and so on) of the operating system on[m
[32m+[m[32mwhich the executable runs, unless that component itself accompanies[m
[32m+[m[32mthe executable.[m
[32m+[m
[32m+[m[32m  It may happen that this requirement contradicts the license[m
[32m+[m[32mrestrictions of other proprietary libraries that do not normally[m
[32m+[m[32maccompany the operating system.  Such a contradiction means you cannot[m
[32m+[m[32muse both them and the Library together in an executable that you[m
[32m+[m[32mdistribute.[m
[32m+[m[32m[m
[32m+[m[32m  7. You may place library facilities that are a work based on the[m
[32m+[m[32mLibrary side-by-side in a single library together with other library[m
[32m+[m[32mfacilities not covered by this License, and distribute such a combined[m
[32m+[m[32mlibrary, provided that the separate distribution of the work based on[m
[32m+[m[32mthe Library and of the other library facilities is otherwise[m
[32m+[m[32mpermitted, and provided that you do these two things:[m
[32m+[m
[32m+[m[32m    a) Accompany the combined library with a copy of the same work[m
[32m+[m[32m    based on the Library, uncombined with any other library[m
[32m+[m[32m    facilities.  This must be distributed under the terms of the[m
[32m+[m[32m    Sections above.[m
[32m+[m
[32m+[m[32m    b) Give prominent notice with the combined library of the fact[m
[32m+[m[32m    that part of it is a work based on the Library, and explaining[m
[32m+[m[32m    where to find the accompanying uncombined form of the same work.[m
[32m+[m
[32m+[m[32m  8. You may not copy, modify, sublicense, link with, or distribute[m
[32m+[m[32mthe Library except as expressly provided under this License.  Any[m
[32m+[m[32mattempt otherwise to copy, modify, sublicense, link with, or[m
[32m+[m[32mdistribute the Library is void, and will automatically terminate your[m
[32m+[m[32mrights under this License.  However, parties who have received copies,[m
[32m+[m[32mor rights, from you under this License will not have their licenses[m
[32m+[m[32mterminated so long as such parties remain in full compliance.[m
[32m+[m
[32m+[m[32m  9. You are not required to accept this License, since you have not[m
[32m+[m[32msigned it.  However, nothing else grants you permission to modify or[m
[32m+[m[32mdistribute the Library or its derivative works.  These actions are[m
[32m+[m[32mprohibited by law if you do not accept this License.  Therefore, by[m
[32m+[m[32mmodifying or distributing the Library (or any work based on the[m
[32m+[m[32mLibrary), you indicate your acceptance of this License to do so, and[m
[32m+[m[32mall its terms and conditions for copying, distributing or modifying[m
[32m+[m[32mthe Library or works based on it.[m
[32m+[m
[32m+[m[32m  10. Each time you redistribute the Library (or any work based on the[m
[32m+[m[32mLibrary), the recipient automatically receives a license from the[m
[32m+[m[32moriginal licensor to copy, distribute, link with or modify the Library[m
[32m+[m[32msubject to these terms and conditions.  You may not impose any further[m
[32m+[m[32mrestrictions on the recipients' exercise of the rights granted herein.[m
[32m+[m[32mYou are not responsible for enforcing compliance by third parties with[m
[32m+[m[32mthis License.[m
[32m+[m[32m[m
[32m+[m[32m  11. If, as a consequence of a court judgment or allegation of patent[m
[32m+[m[32minfringement or for any other reason (not limited to patent issues),[m
[32m+[m[32mconditions are imposed on you (whether by court order, agreement or[m
[32m+[m[32motherwise) that contradict the conditions of this License, they do not[m
[32m+[m[32mexcuse you from the conditions of this License.  If you cannot[m
[32m+[m[32mdistribute so as to satisfy simultaneously your obligations under this[m
[32m+[m[32mLicense and any other pertinent obligations, then as a consequence you[m
[32m+[m[32mmay not distribute the Library at all.  For example, if a patent[m
[32m+[m[32mlicense would not permit royalty-free redistribution of the Library by[m
[32m+[m[32mall those who receive copies directly or indirectly through you, then[m
[32m+[m[32mthe only way you could satisfy both it and this License would be to[m
[32m+[m[32mrefrain entirely from distribution of the Library.[m
[32m+[m
[32m+[m[32mIf any portion of this section is held invalid or unenforceable under any[m
[32m+[m[32mparticular circumstance, the balance of the section is intended to apply,[m
[32m+[m[32mand the section as a whole is intended to apply in other circumstances.[m
[32m+[m
[32m+[m[32mIt is not the purpose of this section to induce you to infringe any[m
[32m+[m[32mpatents or other property right claims or to contest validity of any[m
[32m+[m[32msuch claims; this section has the sole purpose of protecting the[m
[32m+[m[32mintegrity of the free software distribution system which is[m
[32m+[m[32mimplemented by public license practices.  Many people have made[m
[32m+[m[32mgenerous contributions to the wide range of software distributed[m
[32m+[m[32mthrough that system in reliance on consistent application of that[m
[32m+[m[32msystem; it is up to the author/donor to decide if he or she is willing[m
[32m+[m[32mto distribute software through any other system and a licensee cannot[m
[32m+[m[32mimpose that choice.[m
[32m+[m
[32m+[m[32mThis section is intended to make thoroughly clear what is believed to[m
[32m+[m[32mbe a consequence of the rest of this License.[m
[32m+[m
[32m+[m[32m  12. If the distribution and/or use of the Library is restricted in[m
[32m+[m[32mcertain countries either by patents or by copyrighted interfaces, the[m
[32m+[m[32moriginal copyright holder who places the Library under this License may add[m
[32m+[m[32man explicit geographical distribution limitation excluding those countries,[m
[32m+[m[32mso that distribution is permitted only in or among countries not thus[m
[32m+[m[32mexcluded.  In such case, this License incorporates the limitation as if[m
[32m+[m[32mwritten in the body of this License.[m
[32m+[m
[32m+[m[32m  13. The Free Software Foundation may publish revised and/or new[m
[32m+[m[32mversions of the Lesser General Public License from time to time.[m
[32m+[m[32mSuch new versions will be similar in spirit to the present version,[m
[32m+[m[32mbut may differ in detail to address new problems or concerns.[m
[32m+[m
[32m+[m[32mEach version is given a distinguishing version number.  If the Library[m
[32m+[m[32mspecifies a version number of this License which applies to it and[m
[32m+[m[32m"any later version", you have the option of following the terms and[m
[32m+[m[32mconditions either of that version or of any later version published by[m
[32m+[m[32mthe Free Software Foundation.  If the Library does not specify a[m
[32m+[m[32mlicense version number, you may choose any version ever published by[m
[32m+[m[32mthe Free Software Foundation.[m
[32m+[m[32m[m
[32m+[m[32m  14. If you wish to incorporate parts of the Library into other free[m
[32m+[m[32mprograms whose distribution conditions are incompatible with these,[m
[32m+[m[32mwrite to the author to ask for permission.  For software which is[m
[32m+[m[32mcopyrighted by the Free Software Foundation, write to the Free[m
[32m+[m[32mSoftware Foundation; we sometimes make exceptions for this.  Our[m
[32m+[m[32mdecision will be guided by the two goals of preserving the free status[m
[32m+[m[32mof all derivatives of our free software and of promoting the sharing[m
[32m+[m[32mand reuse of software generally.[m
[32m+[m
[32m+[m			[32m    NO WARRANTY[m
[32m+[m
[32m+[m[32m  15. BECAUSE THE LIBRARY IS LICENSED FREE OF CHARGE, THERE IS NO[m
[32m+[m[32mWARRANTY FOR THE LIBRARY, TO THE EXTENT PERMITTED BY APPLICABLE LAW.[m
[32m+[m[32mEXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR[m
[32m+[m[32mOTHER PARTIES PROVIDE THE LIBRARY "AS IS" WITHOUT WARRANTY OF ANY[m
[32m+[m[32mKIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE[m
[32m+[m[32mIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR[m
[32m+[m[32mPURPOSE.  THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE[m
[32m+[m[32mLIBRARY IS WITH YOU.  SHOULD THE LIBRARY PROVE DEFECTIVE, YOU ASSUME[m
[32m+[m[32mTHE COST OF ALL NECESSARY SERVICING, REPAIR OR CORRECTION.[m
[32m+[m
[32m+[m[32m  16. IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN[m
[32m+[m[32mWRITING WILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MAY MODIFY[m
[32m+[m[32mAND/OR REDISTRIBUTE THE LIBRARY AS PERMITTED ABOVE, BE LIABLE TO YOU[m
[32m+[m[32mFOR DAMAGES, INCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR[m
[32m+[m[32mCONSEQUENTIAL DAMAGES ARISING OUT OF THE USE OR INABILITY TO USE THE[m
[32m+[m[32mLIBRARY (INCLUDING BUT NOT LIMITED TO LOSS OF DATA OR DATA BEING[m
[32m+[m[32mRENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD PARTIES OR A[m
[32m+[m[32mFAILURE OF THE LIBRARY TO OPERATE WITH ANY OTHER SOFTWARE), EVEN IF[m
[32m+[m[32mSUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH[m
[32m+[m[32mDAMAGES.[m
\ No newline at end of file[m
[1mdiff --git a/application/third_party/dompdf/dompdf.php b/application/third_party/dompdf/dompdf.php[m
[1mnew file mode 100644[m
[1mindex 0000000..73310f2[m
[1m--- /dev/null[m
[1m+++ b/application/third_party/dompdf/dompdf.php[m
[36m@@ -0,0 +1,328 @@[m
[32m+[m[32m<?php[m
[32m+[m[32m/**[m
[32m+[m[32m * DOMPDF - PHP5 HTML to PDF renderer[m
[32m+[m[32m *[m
[32m+[m[32m * File: $RCSfile: dompdf.php,v $[m
[32m+[m[32m * Created on: 2004-06-22[m
[32m+[m[32m *[m
[32m+[m[32m * Copyright (c) 2004 - Benj Carson <benjcarson@digitaljunkies.ca>[m
[32m+[m[32m *[m
[32m+[m[32m * This library is free software; you can redistribute it and/or[m
[32m+[m[32m * modify it under the terms of the GNU Lesser General Public[m
[32m+[m[32m * License as published by the Free Software Foundation; either[m
[32m+[m[32m * version 2.1 of the License, or (at your option) any later version.[m
[32m+[m[32m *[m
[32m+[m[32m * This library is distributed in the hope that it will be useful,[m
[32m+[m[32m * but WITHOUT ANY WARRANTY; without even the implied warranty of[m
[32m+[m[32m * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU[m
[32m+[m[32m * Lesser General Public License for more details.[m
[32m+[m[32m *[m
[32m+[m[32m * You should have received a copy of the GNU Lesser General Public License[m
[32m+[m[32m * along with this library in the file LICENSE.LGPL; if not, write to the[m
[32m+[m[32m * Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA[m
[32m+[m[32m * 02111-1307 USA[m
[32m+[m[32m *[m
[32m+[m[32m * Alternatively, you may distribute this software under the terms of the[m
[32m+[m[32m * PHP License, version 3.0 or later.  A copy of this license should have[m
[32m+[m[32m * been distributed with this file in the file LICENSE.PHP .  If this is not[m
[32m+[m[32m * the case, you can obtain a copy at http://www.php.net/license/3_0.txt.[m
[32m+[m[32m *[m
[32m+[m[32m * The latest version of DOMPDF might be available at:[m
[32m+[m[32m * http://www.dompdf.com/[m
[32m+[m[32m *[m
[32m+[m[32m * dompdf.php is a simple script to drive DOMPDF.  It can be executed from[m
[32m+[m[32m * a browser or from the command line.[m
[32m+[m[32m *[m
[32m+[m[32m * @link http://www.dompdf.com/[m
[32m+[m[32m * @copyright 2004 Benj Carson[m
[32m+[m[32m * @author Benj Carson <benjcarson@digitaljunkies.ca>[m
[32m+[m[32m * @package dompdf[m
[32m+[m
[32m+[m[32m */[m
[32m+[m
[32m+[m[32m/* $Id: dompdf.php 301 2010-08-23 21:00:51Z fabien.menager $ */[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Display command line usage:[m
[32m+[m[32m *[m
[32m+[m[32m * Usage: ./dompdf.php [options] html_file[m
[32m+[m[32m *[m
[32m+[m[32m * html_file can be a filename, a url if fopen_wrappers are enabled, or the '-'[m
[32m+[m[32m * character to read from standard input.[m
[32m+[m[32m *[m
[32m+[m[32m * Options:[m
[32m+[m[32m *  -h             Show this message[m
[32m+[m[32m *  -l             list available paper sizes[m
[32m+[m[32m *  -p size        paper size; something like 'letter', 'A4', 'legal', etc.  The default is[m
[32m+[m[32m *                 'letter'[m
[32m+[m[32m *  -o orientation either 'portrait' or 'landscape'.  Default is 'portrait'.[m
[32m+[m[32m *  -b path        set the 'document root' of the html_file.  Relative urls (for[m
[32m+[m[32m *                 stylesheets) are resolved using this directory.  Default is the[m
[32m+[m[32m *                 directory of html_file.[m
[32m+[m[32m *  -f file        the output filename.  Default is the input [html_file].pdf.[m
[32m+[m[32m *  -v             verbose: display html parsing warnings and file not found errors.[m
[32m+[m[32m *  -d             very verbose: display oodles of debugging output: every frame in the[m
[32m+[m[32m *                 tree is printed to stdout.[m
[32m+[m[32m *  -t             comma separated list of debugging types (page-break,reflow,split)[m
[32m+[m[32m *  -r             write the render time to the log file[m
[32m+[m[32m *[m
[32m+[m[32m *[m
[32m+[m[32m */[m
[32m+[m[32mfunction dompdf_usage() {[m
[32m+[m[32m  echo[m
[32m+[m[32m    "\nUsage: {$_SERVER["argv"][0]} [options] html_file\n\n".[m
[32m+[m[32m    "html_file can be a filename, a url if fopen_wrappers are enabled, or the '-' \n".[m
[32m+[m[32m    "character to read from standard input.\n\n".[m
[32m+[m[32m    "Options:\n".[m
[32m+[m[32m    " -h\t\tShow this message\n".[m
[32m+[m[32m    " -l\t\tlist available paper sizes\n".[m
[32m+[m[32m    " -p size\tpaper size; something like 'letter', 'A4', 'legal', etc.  The default is\n".[m
[32m+[m[32m    "   \t\t'" . DOMPDF_DEFAULT_PAPER_SIZE . "'\n".[m
[32m+[m[32m    " -o orientation\teither 'portrait' or 'landscape'.  Default is 'portrait'.\n".[m
[32m+[m[32m    " -b path\tset the 'document root' of the html_file.  Relative urls (for \n".[m
[32m+[m[32m    "        \tstylesheets) are resolved using this directory.  Default is the \n".[m
[32m+[m[32m    "        \tdirectory of html_file.\n".[m
[32m+[m[32m    " -f file\tthe output filename.  Default is the input [html_file].pdf.\n".[m
[32m+[m[32m    " -v     \tverbose: display html parsing warnings and file not found errors.\n".[m
[32m+[m[32m    " -d     \tvery verbose:  display oodles of debugging output: every frame\n".[m
[32m+[m[32m    "        \tin the tree printed to stdout.\n".[m
[32m+[m[32m    " -t             comma separated list of debugging types (page-break,reflow,split)\n\n";[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mfunction getoptions() {[m
[32m+[m
[32m+[m[32m  $opts = array();[m
[32m+[m
[32m+[m[32m  if ( $_SERVER["argc"] == 1 )[m
[32m+[m[32m    return $opts;[m
[32m+[m
[32m+[m[32m  $i = 1;[m
[32m+[m[32m  while ($i < $_SERVER["argc"]) {[m
[32m+[m
[32m+[m[32m    switch ($_SERVER["argv"][$i]) {[m
[32m+[m
[32m+[m[32m    case "--help":[m
[32m+[m[32m    case "-h":[m
[32m+[m[32m      $opts["h"] = true;[m
[32m+[m[32m      $i++;[m
[32m+[m[32m      break;[m
[32m+[m
[32m+[m[32m    case "-l":[m
[32m+[m[32m      $opts["l"] = true;[m
[32m+[m[32m      $i++;[m
[32m+[m[32m      break;[m
[32m+[m
[32m+[m[32m    case "-p":[m
[32m+[m[32m      if ( !isset($_SERVER["argv"][$i+1]) )[m
[32m+[m[32m        die("-p switch requires a size parameter\n");[m
[32m+[m[32m      $opts["p"] = $_SERVER["argv"][$i+1];[m
[32m+[m[32m      $i += 2;[m
[32m+[m[32m      break;[m
[32m+[m
[32m+[m[32m    case "-o":[m
[32m+[m[32m      if ( !isset($_SERVER["argv"][$i+1]) )[m
[32m+[m[32m        die("-o switch requires an orientation parameter\n");[m
[32m+[m[32m      $opts["o"] = $_SERVER["argv"][$i+1];[m
[32m+[m[32m      $i += 2;[m
[32m+[m[32m      break;[m
[32m+[m
[32m+[m[32m    case "-b":[m
[32m+[m[32m      if ( !isset($_SERVER["argv"][$i+1]) )[m
[32m+[m[32m        die("-b switch requires a path parameter\n");[m
[32m+[m[32m      $opts["b"] = $_SERVER["argv"][$i+1];[m
[32m+[m[32m      $i += 2;[m
[32m+[m[32m      break;[m
[32m+[m
[32m+[m[32m    case "-f":[m
[32m+[m[32m      if ( !isset($_SERVER["argv"][$i+1]) )[m
[32m+[m[32m        die("-f switch requires a filename parameter\n");[m
[32m+[m[32m      $opts["f"] = $_SERVER["argv"][$i+1];[m
[32m+[m[32m      $i += 2;[m
[32m+[m[32m      break;[m
[32m+[m
[32m+[m[32m    case "-v":[m
[32m+[m[32m      $opts["v"] = true;[m
[32m+[m[32m      $i++;[m
[32m+[m[32m      break;[m
[32m+[m
[32m+[m[32m    case "-d":[m
[32m+[m[32m      $opts["d"] = true;[m
[32m+[m[32m      $i++;[m
[32m+[m[32m      break;[m
[32m+[m
[32m+[m[32m    case "-t":[m
[32m+[m[32m      if ( !isset($_SERVER['argv'][$i + 1]) )[m
[32m+[m[32m        die("-t switch requires a comma separated list of types\n");[m
[32m+[m[32m      $opts["t"] = $_SERVER['argv'][$i+1];[m
[32m+[m[32m      $i += 2;[m
[32m+[m[32m      break;[m
[32m+[m
[32m+[m[32m   default:[m
[32m+[m[32m      $opts["filename"] = $_SERVER["argv"][$i];[m
[32m+[m[32m      $i++;[m
[32m+[m[32m      break;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m  }[m
[32m+[m[32m  return $opts;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mrequire_once("dompdf_config.inc.php");[m
[32m+[m[32mglobal $_dompdf_show_warnings, $_dompdf_debug, $_DOMPDF_DEBUG_TYPES;[m
[32m+[m
[32m+[m[32m$sapi = php_sapi_name();[m
[32m+[m[32m$options = array();[m
[32m+[m
[32m+[m[32mswitch ( $sapi ) {[m
[32m+[m
[32m+[m[32m case "cli":[m
[32m+[m
[32m+[m[32m  $opts = getoptions();[m
[32m+[m
[32m+[m[32m  if ( isset($opts["h"]) || (!isset($opts["filename"]) && !isset($opts["l"])) ) {[m
[32m+[m[32m    dompdf_usage();[m
[32m+[m[32m    exit;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  if ( isset($opts["l"]) ) {[m
[32m+[m[32m    echo "\nUnderstood paper sizes:\n";[m
[32m+[m
[32m+[m[32m    foreach (array_keys(CPDF_Adapter::$PAPER_SIZES) as $size)[m
[32m+[m[32m      echo "  " . mb_strtoupper($size) . "\n";[m
[32m+[m[32m    exit;[m
[32m+[m[32m  }[m
[32m+[m[32m  $file = $opts["filename"];[m
[32m+[m
[32m+[m[32m  if ( isset($opts["p"]) )[m
[32m+[m[32m    $paper = $opts["p"];[m
[32m+[m[32m  else[m
[32m+[m[32m    $paper = DOMPDF_DEFAULT_PAPER_SIZE;[m
[32m+[m
[32m+[m[32m  if ( isset($opts["o"]) )[m
[32m+[m[32m    $orientation = $opts["o"];[m
[32m+[m[32m  else[m
[32m+[m[32m    $orientation = "portrait";[m
[32m+[m
[32m+[m[32m  if ( isset($opts["b"]) )[m
[32m+[m[32m    $base_path = $opts["b"];[m
[32m+[m
[32m+[m[32m  if ( isset($opts["f"]) )[m
[32m+[m[32m    $outfile = $opts["f"];[m
[32m+[m[32m  else {[m
[32m+[m[32m    if ( $file === "-" )[m
[32m+[m[32m      $outfile = "dompdf_out.pdf";[m
[32m+[m[32m    else[m
[32m+[m[32m      $outfile = str_ireplace(array(".html", ".htm", ".php"), "", $file) . ".pdf";[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  if ( isset($opts["v"]) )[m
[32m+[m[32m    $_dompdf_show_warnings = true;[m
[32m+[m
[32m+[m[32m  if ( isset($opts["d"]) ) {[m
[32m+[m[32m    $_dompdf_show_warnings = true;[m
[32m+[m[32m    $_dompdf_debug = true;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  if ( isset($opts['t']) ) {[m
[32m+[m[32m    $arr = split(',',$opts['t']);[m
[32m+[m[32m    $types = array();[m
[32m+[m[32m    foreach ($arr as $type)[m
[32m+[m[32m      $types[ trim($type) ] = 1;[m
[32m+[m[32m    $_DOMPDF_DEBUG_TYPES = $types;[m
[32m+[m[32m  }[m
[32m+[m[41m  [m
[32m+[m[32m  $save_file = true;[m
[32m+[m
[32m+[m[32m  break;[m
[32m+[m
[32m+[m[32m default:[m
[32m+[m
[32m+[m[32m  if ( isset($_GET["input_file"]) )[m
[32m+[m[32m    $file = rawurldecode($_GET["input_file"]);[m
[32m+[m[32m  else[m
[32m+[m[32m    throw new DOMPDF_Exception("An input file is required (i.e. input_file _GET variable).");[m
[32m+[m[41m  [m
[32m+[m[32m  if ( isset($_GET["paper"]) )[m
[32m+[m[32m    $paper = rawurldecode($_GET["paper"]);[m
[32m+[m[32m  else[m
[32m+[m[32m    $paper = DOMPDF_DEFAULT_PAPER_SIZE;[m
[32m+[m[41m  [m
[32m+[m[32m  if ( isset($_GET["orientation"]) )[m
[32m+[m[32m    $orientation = rawurldecode($_GET["orientation"]);[m
[32m+[m[32m  else[m
[32m+[m[32m    $orientation = "portrait";[m
[32m+[m[41m  [m
[32m+[m[32m  if ( isset($_GET["base_path"]) ) {[m
[32m+[m[32m    $base_path = rawurldecode($_GET["base_path"]);[m
[32m+[m[32m    $file = $base_path . $file; # Set the input file[m
[32m+[m[32m  }[m[41m  [m
[32m+[m[41m  [m
[32m+[m[32m  if ( isset($_GET["options"]) ) {[m
[32m+[m[32m    $options = $_GET["options"];[m
[32m+[m[32m  }[m
[32m+[m[41m  [m
[32m+[m[32m  $file_parts = explode_url($file);[m
[32m+[m[32m  /* Check to see if the input file is local and, if so, that the base path falls within that specified by DOMDPF_CHROOT */[m
[32m+[m[32m  if(($file_parts['protocol'] == '' || $file_parts['protocol'] === 'file://')) {[m
[32m+[m[32m    $file = realpath($file);[m
[32m+[m[32m    if (strpos($file, DOMPDF_CHROOT) !== 0) {[m
[32m+[m[32m      throw new DOMPDF_Exception("Permission denied on $file.");[m
[32m+[m[32m    }[m
[32m+[m[32m  }[m
[32m+[m[41m  [m
[32m+[m[32m  $outfile = "dompdf_out.pdf"; # Don't allow them to set the output file[m
[32m+[m[32m  $save_file = false; # Don't save the file[m
[32m+[m[41m  [m
[32m+[m[32m  break;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m$dompdf = new DOMPDF();[m
[32m+[m
[32m+[m[32mif ( $file === "-" ) {[m
[32m+[m[32m  $str = "";[m
[32m+[m[32m  while ( !feof(STDIN) )[m
[32m+[m[32m    $str .= fread(STDIN, 4096);[m
[32m+[m
[32m+[m[32m  $dompdf->load_html($str);[m
[32m+[m
[32m+[m[32m} else[m
[32m+[m[32m  $dompdf->load_html_file($file);[m
[32m+[m
[32m+[m[32mif ( isset($base_path) ) {[m
[32m+[m[32m  $dompdf->set_base_path($base_path);[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m$dompdf->set_paper($paper, $orientation);[m
[32m+[m
[32m+[m[32m$dompdf->render();[m
[32m+[m
[32m+[m[32mif ( $_dompdf_show_warnings ) {[m
[32m+[m[32m  global $_dompdf_warnings;[m
[32m+[m[32m  foreach ($_dompdf_warnings as $msg)[m
[32m+[m[32m    echo $msg . "\n";[m
[32m+[m[32m  echo $dompdf->get_canvas()->get_cpdf()->messages;[m
[32m+[m[32m  flush();[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mif ( $save_file ) {[m
[32m+[m[32m//   if ( !is_writable($outfile) )[m
[32m+[m[32m//     throw new DOMPDF_Exception("'$outfile' is not writable.");[m
[32m+[m[32m  if ( strtolower(DOMPDF_PDF_BACKEND) === "gd" )[m
[32m+[m[32m    $outfile = str_replace(".pdf", ".png", $outfile);[m
[32m+[m
[32m+[m[32m  list($proto, $host, $path, $file) = explode_url($outfile);[m
[32m+[m[32m  if ( $proto != "" ) // i.e. not file://[m
[32m+[m[32m    $outfile = $file; // just save it locally, FIXME? could save it like wget: ./host/basepath/file[m
[32m+[m
[32m+[m[32m  $outfile = realpath(dirname($outfile)) . DIRECTORY_SEPARATOR . basename($outfile);[m
[32m+[m
[32m+[m[32m  if ( strpos($outfile, DOMPDF_CHROOT) !== 0 )[m
[32m+[m[32m    throw new DOMPDF_Exception("Permission denied.");[m
[32m+[m
[32m+[m[32m  file_put_contents($outfile, $dompdf->output( array("compress" => 0) ));[m
[32m+[m[32m  exit(0);[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mif ( !headers_sent() ) {[m
[32m+[m[32m  $dompdf->stream($outfile, $options);[m
[32m+[m[32m}[m
[1mdiff --git a/application/third_party/dompdf/dompdf_config.custom.inc.php b/application/third_party/dompdf/dompdf_config.custom.inc.php[m
[1mnew file mode 100644[m
[1mindex 0000000..122465c[m
[1m--- /dev/null[m
[1m+++ b/application/third_party/dompdf/dompdf_config.custom.inc.php[m
[36m@@ -0,0 +1,24 @@[m
[32m+[m[32m<?php[m[41m [m
[32m+[m[32m//define("DOMPDF_TEMP_DIR", "/tmp");[m
[32m+[m[32m//define("DOMPDF_CHROOT", DOMPDF_DIR);[m
[32m+[m[32m//define("DOMPDF_UNICODE_ENABLED", false);[m
[32m+[m[32m//define("TTF2AFM", "C:/Program Files (x86)/GnuWin32/bin/ttf2pt1.exe");[m
[32m+[m[32m//define("DOMPDF_PDF_BACKEND", "PDFLib");[m
[32m+[m[32m//define("DOMPDF_DEFAULT_MEDIA_TYPE", "print");[m
[32m+[m[32m//define("DOMPDF_DEFAULT_PAPER_SIZE", "letter");[m
[32m+[m[32m//define("DOMPDF_DEFAULT_FONT", "serif");[m
[32m+[m[32m//define("DOMPDF_DPI", 72);[m
[32m+[m[32m//define("DOMPDF_ENABLE_PHP", true);[m
[32m+[m[32m//define("DOMPDF_ENABLE_REMOTE", true);[m
[32m+[m[32m//define("DOMPDF_ENABLE_CSS_FLOAT", true);[m
[32m+[m[32m//define("DOMPDF_ENABLE_JAVASCRIPT", false);[m
[32m+[m[32m//define("DEBUGPNG", true);[m
[32m+[m[32m//define("DEBUGKEEPTEMP", true);[m
[32m+[m[32m//define("DEBUGCSS", true);[m
[32m+[m[32m//define("DEBUG_LAYOUT", true);[m
[32m+[m[32m//define("DEBUG_LAYOUT_LINES", false);[m
[32m+[m[32m//define("DEBUG_LAYOUT_BLOCKS", false);[m
[32m+[m[32m//define("DEBUG_LAYOUT_INLINE", false);[m
[32m+[m[32m//define("DOMPDF_FONT_HEIGHT_RATIO", 1.0);[m
[32m+[m[32m//define("DEBUG_LAYOUT_PADDINGBOX", false);[m
[32m+[m[32m//define("DOMPDF_LOG_OUTPUT_FILE", DOMPDF_FONT_DIR."log.htm");[m
\ No newline at end of file[m
[1mdiff --git a/application/third_party/dompdf/dompdf_config.inc.php b/application/third_party/dompdf/dompdf_config.inc.php[m
[1mnew file mode 100644[m
[1mindex 0000000..1e105ef[m
[1m--- /dev/null[m
[1m+++ b/application/third_party/dompdf/dompdf_config.inc.php[m
[36m@@ -0,0 +1,497 @@[m
[32m+[m[32m<?php[m
[32m+[m[32m/**[m
[32m+[m[32m * DOMPDF - PHP5 HTML to PDF renderer[m
[32m+[m[32m *[m
[32m+[m[32m * File: $RCSfile: dompdf_config.inc.php,v $[m
[32m+[m[32m * Created on: 2004-08-04[m
[32m+[m[32m *[m
[32m+[m[32m * Copyright (c) 2004 - Benj Carson <benjcarson@digitaljunkies.ca>[m
[32m+[m[32m *[m
[32m+[m[32m * This library is free software; you can redistribute it and/or[m
[32m+[m[32m * modify it under the terms of the GNU Lesser General Public[m
[32m+[m[32m * License as published by the Free Software Foundation; either[m
[32m+[m[32m * version 2.1 of the License, or (at your option) any later version.[m
[32m+[m[32m *[m
[32m+[m[32m * This library is distributed in the hope that it will be useful,[m
[32m+[m[32m * but WITHOUT ANY WARRANTY; without even the implied warranty of[m
[32m+[m[32m * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU[m
[32m+[m[32m * Lesser General Public License for more details.[m
[32m+[m[32m *[m
[32m+[m[32m * You should have received a copy of the GNU Lesser General Public License[m
[32m+[m[32m * along with this library in the file LICENSE.LGPL; if not, write to the[m
[32m+[m[32m * Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA[m
[32m+[m[32m * 02111-1307 USA[m
[32m+[m[32m *[m
[32m+[m[32m * Alternatively, you may distribute this software under the terms of the[m
[32m+[m[32m * PHP License, version 3.0 or later.  A copy of this license should have[m
[32m+[m[32m * been distributed with this file in the file LICENSE.PHP .  If this is not[m
[32m+[m[32m * the case, you can obtain a copy at http://www.php.net/license/3_0.txt.[m
[32m+[m[32m *[m
[32m+[m[32m * The latest version of DOMPDF might be available at:[m
[32m+[m[32m * http://www.dompdf.com/[m
[32m+[m[32m *[m
[32m+[m[32m * @link http://www.dompdf.com/[m
[32m+[m[32m * @copyright 2004 Benj Carson[m
[32m+[m[32m * @author Benj Carson <benjcarson@digitaljunkies.ca>[m
[32m+[m[32m * @contributor Helmut Tischer <htischer@weihenstephan.org>[m
[32m+[m[32m * @package dompdf[m
[32m+[m[32m *[m
[32m+[m[32m * Changes[m
[32m+[m[32m * @contributor Helmut Tischer <htischer@weihenstephan.org>[m
[32m+[m[32m * @version 0.5.1.htischer.20090507[m
[32m+[m[32m * - Allow overriding of configuration settings by calling php script.[m
[32m+[m[32m *   This allows replacing of dompdf by a new version in an application[m
[32m+[m[32m *   without any modification,[m
[32m+[m[32m * - Optionally separate font cache folder from font folder.[m
[32m+[m[32m *   This allows write protecting the entire installation[m
[32m+[m[32m * - Add settings to enable/disable additional debug output categories[m
[32m+[m[32m * - Change some defaults to more practical values[m
[32m+[m[32m * - Add comments about configuration parameter implications[m
[32m+[m[32m */[m
[32m+[m
[32m+[m[32m/* $Id: dompdf_config.inc.php 363 2011-02-17 21:18:25Z fabien.menager $ */[m
[32m+[m
[32m+[m[32m//error_reporting(E_STRICT | E_ALL | E_DEPRECATED);[m
[32m+[m[32m//ini_set("display_errors", 1);[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * The root of your DOMPDF installation[m
[32m+[m[32m */[m
[32m+[m[32mdefine("DOMPDF_DIR", str_replace(DIRECTORY_SEPARATOR, '/', realpath(dirname(__FILE__))));[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * The location of the DOMPDF include directory[m
[32m+[m[32m */[m
[32m+[m[32mdefine("DOMPDF_INC_DIR", DOMPDF_DIR . "/include");[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * The location of the DOMPDF lib directory[m
[32m+[m[32m */[m
[32m+[m[32mdefine("DOMPDF_LIB_DIR", DOMPDF_DIR . "/lib");[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Some installations don't have $_SERVER['DOCUMENT_ROOT'][m
[32m+[m[32m * http://fyneworks.blogspot.com/2007/08/php-documentroot-in-iis-windows-servers.html[m
[32m+[m[32m */[m
[32m+[m[32mif( !isset($_SERVER['DOCUMENT_ROOT']) ) {[m
[32m+[m[32m  $path = "";[m
[32m+[m[41m  [m
[32m+[m[32m  if ( isset($_SERVER['SCRIPT_FILENAME']) )[m
[32m+[m[32m    $path = $_SERVER['SCRIPT_FILENAME'];[m
[32m+[m[32m  elseif ( isset($_SERVER['PATH_TRANSLATED']) )[m
[32m+[m[32m    $path = str_replace('\\\\', '\\', $_SERVER['PATH_TRANSLATED']);[m
[32m+[m[41m    [m
[32m+[m[32m  $_SERVER['DOCUMENT_ROOT'] = str_replace( '\\', '/', substr($path, 0, 0-strlen($_SERVER['PHP_SELF'])));[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m/** Include the custom config file if it exists */[m
[32m+[m[32mif ( file_exists(DOMPDF_DIR . "/dompdf_config.custom.inc.php") ){[m
[32m+[m[32m  require_once(DOMPDF_DIR . "/dompdf_config.custom.inc.php");[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m//FIXME: Some function definitions rely on the constants defined by DOMPDF. However, might this location prove problematic?[m
[32m+[m[32mrequire_once(DOMPDF_INC_DIR . "/functions.inc.php");[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * The location of the DOMPDF font directory[m
[32m+[m[32m *[m
[32m+[m[32m * If DOMPDF_FONT_DIR identical to DOMPDF_FONT_CACHE or user executing DOMPDF from the CLI,[m
[32m+[m[32m * this directory must be writable by the webserver process ().[m
[32m+[m[32m * *Please note the trailing slash.*[m
[32m+[m[32m *[m
[32m+[m[32m * Notes regarding fonts:[m
[32m+[m[32m * Additional .afm font metrics can be added by executing load_font.php from command line.[m
[32m+[m[32m * Converting ttf fonts to afm requires the external tool referenced by TTF2AFM[m
[32m+[m[32m *[m
[32m+[m[32m * Only the original "Base 14 fonts" are present on all pdf viewers. Additional fonts must[m
[32m+[m[32m * be embedded in the pdf file or the PDF may not display correctly. This can significantly[m
[32m+[m[32m * increase file size and could violate copyright provisions of a font. Font embedding is[m
[32m+[m[32m * not currently supported (? via HT).[m
[32m+[m[32m *[m
[32m+[m[32m * Any font specification in the source HTML is translated to the closest font available[m
[32m+[m[32m * in the font directory.[m
[32m+[m[32m *[m
[32m+[m[32m * The pdf standard "Base 14 fonts" are:[m
[32m+[m[32m * Courier, Courier-Bold, Courier-BoldOblique, Courier-Oblique,[m
[32m+[m[32m * Helvetica, Helvetica-Bold, Helvetica-BoldOblique, Helvetica-Oblique,[m
[32m+[m[32m * Times-Roman, Times-Bold, Times-BoldItalic, Times-Italic,[m
[32m+[m[32m * Symbol,[m
[32m+[m[32m * ZapfDingbats,[m
[32m+[m[32m *[m
[32m+[m[32m * *Please note the trailing slash.*[m
[32m+[m[32m */[m
[32m+[m[32mdef("DOMPDF_FONT_DIR", DOMPDF_DIR . "/lib/fonts/");[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * The location of the DOMPDF font cache directory[m
[32m+[m[32m *[m
[32m+[m[32m * Note this directory must be writable by the webserver process[m
[32m+[m[32m * This folder must already exist![m
[32m+[m[32m * It contains the .afm files, on demand parsed, converted to php syntax and cached[m
[32m+[m[32m * This folder can be the same as DOMPDF_FONT_DIR[m
[32m+[m[32m */[m
[32m+[m[32mdef("DOMPDF_FONT_CACHE", DOMPDF_FONT_DIR);[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * The location of a temporary directory.[m
[32m+[m[32m *[m
[32m+[m[32m * The directory specified must be writeable by the webserver process.[m
[32m+[m[32m * The temporary directory is required to download remote images and when[m
[32m+[m[32m * using the PFDLib back end.[m
[32m+[m[32m */[m
[32m+[m[32mdef("DOMPDF_TEMP_DIR", sys_get_temp_dir());[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * ==== IMPORTANT ====[m
[32m+[m[32m *[m
[32m+[m[32m * dompdf's "chroot": Prevents dompdf from accessing system files or other[m
[32m+[m[32m * files on the webserver.  All local files opened by dompdf must be in a[m
[32m+[m[32m * subdirectory of this directory.  DO NOT set it to '/' since this could[m
[32m+[m[32m * allow an attacker to use dompdf to read any files on the server.  This[m
[32m+[m[32m * should be an absolute path.[m
[32m+[m[32m * This is only checked on command line call by dompdf.php, but not by[m
[32m+[m[32m * direct class use like:[m
[32m+[m[32m * $dompdf = new DOMPDF();	$dompdf->load_html($htmldata); $dompdf->render(); $pdfdata = $dompdf->output();[m
[32m+[m[32m */[m
[32m+[m[32mdef("DOMPDF_CHROOT", realpath(DOMPDF_DIR));[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Whether to use Unicode fonts or not.[m
[32m+[m[32m *[m
[32m+[m[32m * When set to true the PDF backend must be set to "CPDF" and fonts must be[m
[32m+[m[32m * loaded via the modified ttf2ufm tool included with dompdf (see below).[m
[32m+[m[32m * Unicode font metric files (with .ufm extensions) must be created with[m
[32m+[m[32m * ttf2ufm.  load_font.php should do this for you if the TTF2AFM define below[m
[32m+[m[32m * points to the modified ttf2ufm tool included with dompdf.[m
[32m+[m[32m *[m
[32m+[m[32m * When enabled, dompdf can support all Unicode glyphs.  Any glyphs used in a[m
[32m+[m[32m * document must be present in your fonts, however.[m
[32m+[m[32m */[m
[32m+[m[32mdef("DOMPDF_UNICODE_ENABLED", true);[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * The path to the tt2pt1 utility (used to convert ttf to afm)[m
[32m+[m[32m *[m
[32m+[m[32m * Not strictly necessary, but useful if you would like to install[m
[32m+[m[32m * additional fonts using the {@link load_font.php} utility.[m
[32m+[m[32m *[m
[32m+[m[32m * Windows users should use something like this:[m
[32m+[m[32m * define("TTF2AFM", "C:\\Program Files\\Ttf2Pt1\\bin\\ttf2pt1.exe");[m
[32m+[m[32m *[m
[32m+[m[32m * @link http://ttf2pt1.sourceforge.net/[m
[32m+[m[32m */[m
[32m+[m[32mif ( strpos(PHP_OS, "WIN") === false )[m
[32m+[m[32m  def("TTF2AFM", DOMPDF_LIB_DIR ."/ttf2ufm/ttf2ufm-src/ttf2pt1");[m
[32m+[m[32melse[m[41m [m
[32m+[m[32m  def("TTF2AFM", "C:\\Program Files\\GnuWin32\\bin\\ttf2pt1.exe");[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * The PDF rendering backend to use[m
[32m+[m[32m *[m
[32m+[m[32m * Valid settings are 'PDFLib', 'CPDF' (the bundled R&OS PDF class), 'GD' and[m
[32m+[m[32m * 'auto'.  'auto' will look for PDFLib and use it if found, or if not it will[m
[32m+[m[32m * fall back on CPDF.  'GD' renders PDFs to graphic files.  {@link[m
[32m+[m[32m * Canvas_Factory} ultimately determines which rendering class to instantiate[m
[32m+[m[32m * based on this setting.[m
[32m+[m[32m *[m
[32m+[m[32m * Both PDFLib & CPDF rendering backends provide sufficient rendering[m
[32m+[m[32m * capabilities for dompdf, however additional features (e.g. object,[m
[32m+[m[32m * image and font support, etc.) differ between backends.  Please see[m
[32m+[m[32m * {@link PDFLib_Adapter} for more information on the PDFLib backend[m
[32m+[m[32m * and {@link CPDF_Adapter} and lib/class.pdf.php for more information[m
[32m+[m[32m * on CPDF.  Also see the documentation for each backend at the links[m
[32m+[m[32m * below.[m
[32m+[m[32m *[m
[32m+[m[32m * The GD rendering backend is a little different than PDFLib and[m
[32m+[m[32m * CPDF.  Several features of CPDF and PDFLib are not supported or do[m
[32m+[m[32m * not make any sense when creating image files.  For example,[m
[32m+[m[32m * multiple pages are not supported, nor are PDF 'objects'.  Have a[m
[32m+[m[32m * look at {@link GD_Adapter} for more information.  GD support is new[m
[32m+[m[32m * and experimental, so use it at your own risk.[m
[32m+[m[32m *[m
[32m+[m[32m * @link http://www.pdflib.com[m
[32m+[m[32m * @link http://www.ros.co.nz/pdf[m
[32m+[m[32m * @link http://www.php.net/image[m
[32m+[m[32m */[m
[32m+[m[32mdef("DOMPDF_PDF_BACKEND", "CPDF");[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * PDFlib license key[m
[32m+[m[32m *[m
[32m+[m[32m * If you are using a licensed, commercial version of PDFlib, specify[m
[32m+[m[32m * your license key here.  If you are using PDFlib-Lite or are evaluating[m
[32m+[m[32m * the commercial version of PDFlib, comment out this setting.[m
[32m+[m[32m *[m
[32m+[m[32m * @link http://www.pdflib.com[m
[32m+[m[32m *[m
[32m+[m[32m * If pdflib present in web server and auto or selected explicitely above,[m
[32m+[m[32m * a real license code must exist![m
[32m+[m[32m */[m
[32m+[m[32m#def("DOMPDF_PDFLIB_LICENSE", "your license key here");[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * html target media view which should be rendered into pdf.[m
[32m+[m[32m * List of types and parsing rules for future extensions:[m
[32m+[m[32m * http://www.w3.org/TR/REC-html40/types.html[m
[32m+[m[32m *   screen, tty, tv, projection, handheld, print, braille, aural, all[m
[32m+[m[32m * Note: aural is deprecated in CSS 2.1 because it is replaced by speech in CSS 3.[m
[32m+[m[32m * Note, even though the generated pdf file is intended for print output,[m
[32m+[m[32m * the desired content might be different (e.g. screen or projection view of html file).[m
[32m+[m[32m * Therefore allow specification of content here.[m
[32m+[m[32m */[m
[32m+[m[32mdef("DOMPDF_DEFAULT_MEDIA_TYPE", "screen");[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * The default paper size.[m
[32m+[m[32m *[m
[32m+[m[32m * North America standard is "letter"; other countries generally "a4"[m
[32m+[m[32m *[m
[32m+[m[32m * @see CPDF_Adapter::PAPER_SIZES for valid sizes[m
[32m+[m[32m */[m
[32m+[m[32mdef("DOMPDF_DEFAULT_PAPER_SIZE", "letter");[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * The default font family[m
[32m+[m[32m *[m
[32m+[m[32m * Used if no suitable fonts can be found. This must exist in the font folder.[m
[32m+[m[32m * @var string[m
[32m+[m[32m */[m
[32m+[m[32mdef("DOMPDF_DEFAULT_FONT", "serif");[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Image DPI setting[m
[32m+[m[32m *[m
[32m+[m[32m * This setting determines the default DPI setting for images and fonts.  The[m
[32m+[m[32m * DPI may be overridden for inline images by explictly setting the[m
[32m+[m[32m * image's width & height style attributes (i.e. if the image's native[m
[32m+[m[32m * width is 600 pixels and you specify the image's width as 72 points,[m
[32m+[m[32m * the image will have a DPI of 600 in the rendered PDF.  The DPI of[m
[32m+[m[32m * background images can not be overridden and is controlled entirely[m
[32m+[m[32m * via this parameter.[m
[32m+[m[32m *[m
[32m+[m[32m * For the purposes of DOMPDF, pixels per inch (PPI) = dots per inch (DPI).[m
[32m+[m[32m * If a size in html is given as px (or without unit as image size),[m
[32m+[m[32m * this tells the corresponding size in pt.[m
[32m+[m[32m * This adjusts the relative sizes to be similar to the rendering of the[m
[32m+[m[32m * html page in a reference browser.[m
[32m+[m[32m *[m
[32m+[m[32m * In pdf, always 1 pt = 1/72 inch[m
[32m+[m[32m *[m
[32m+[m[32m * Rendering resolution of various browsers in px per inch:[m
[32m+[m[32m * Windows Firefox and Internet Explorer:[m
[32m+[m[32m *   SystemControl->Display properties->FontResolution: Default:96, largefonts:120, custom:?[m
[32m+[m[32m * Linux Firefox:[m
[32m+[m[32m *   about:config *resolution: Default:96[m
[32m+[m[32m *   (xorg screen dimension in mm and Desktop font dpi settings are ignored)[m
[32m+[m[32m *[m
[32m+[m[32m * Take care about extra font/image zoom factor of browser.[m
[32m+[m[32m *[m
[32m+[m[32m * In images, <img> size in pixel attribute, img css style, are overriding[m
[32m+[m[32m * the real image dimension in px for rendering.[m
[32m+[m[32m *[m
[32m+[m[32m * @var int[m
[32m+[m[32m */[m
[32m+[m[32mdef("DOMPDF_DPI", 96);[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Enable inline PHP[m
[32m+[m[32m *[m
[32m+[m[32m * If this setting is set to true then DOMPDF will automatically evaluate[m
[32m+[m[32m * inline PHP contained within <script type="text/php"> ... </script> tags.[m
[32m+[m[32m *[m
[32m+[m[32m * Enabling this for documents you do not trust (e.g. arbitrary remote html[m
[32m+[m[32m * pages) is a security risk.  Set this option to false if you wish to process[m
[32m+[m[32m * untrusted documents.[m
[32m+[m[32m *[m
[32m+[m[32m * @var bool[m
[32m+[m[32m */[m
[32m+[m[32mdef("DOMPDF_ENABLE_PHP", false);[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Enable inline Javascript[m
[32m+[m[32m *[m
[32m+[m[32m * If this setting is set to true then DOMPDF will automatically insert[m
[32m+[m[32m * JavaScript code contained within <script type="text/javascript"> ... </script> tags.[m
[32m+[m[32m *[m
[32m+[m[32m * @var bool[m
[32m+[m[32m */[m
[32m+[m[32mdef("DOMPDF_ENABLE_JAVASCRIPT", true);[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Enable remote file access[m
[32m+[m[32m *[m
[32m+[m[32m * If this setting is set to true, DOMPDF will access remote sites for[m
[32m+[m[32m * images and CSS files as required.[m
[32m+[m[32m * This is required for part of test case www/test/image_variants.html through www/examples.php[m
[32m+[m[32m *[m
[32m+[m[32m * Attention![m
[32m+[m[32m * This can be a security risk, in particular in combination with DOMPDF_ENABLE_PHP and[m
[32m+[m[32m * allowing remote access to dompdf.php or on allowing remote html code to be passed to[m
[32m+[m[32m * $dompdf = new DOMPDF(); $dompdf->load_html(...);[m
[32m+[m[32m * This allows anonymous users to download legally doubtful internet content which on[m
[32m+[m[32m * tracing back appears to being downloaded by your server, or allows malicious php code[m
[32m+[m[32m * in remote html pages to be executed by your server with your account privileges.[m
[32m+[m[32m *[m
[32m+[m[32m * @var bool[m
[32m+[m[32m */[m
[32m+[m[32mdef("DOMPDF_ENABLE_REMOTE", false);[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * The debug output log[m
[32m+[m[32m * @var string[m
[32m+[m[32m */[m
[32m+[m[32mdef("DOMPDF_LOG_OUTPUT_FILE", DOMPDF_FONT_DIR."log.htm");[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * A ratio applied to the fonts height to be more like browsers' line height[m
[32m+[m[32m */[m
[32m+[m[32mdef("DOMPDF_FONT_HEIGHT_RATIO", 1.1);[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Enable CSS float[m
[32m+[m[32m *[m
[32m+[m[32m * Allows people to disabled CSS float support[m
[32m+[m[32m * @var bool[m
[32m+[m[32m */[m
[32m+[m[32mdef("DOMPDF_ENABLE_CSS_FLOAT", false);[m
[32m+[m[41m [m
[32m+[m[32m/**[m
[32m+[m[32m * DOMPDF autoload function[m
[32m+[m[32m *[m
[32m+[m[32m * If you have an existing autoload function, add a call to this function[m
[32m+[m[32m * from your existing __autoload() implementation.[m
[32m+[m[32m *[m
[32m+[m[32m * @param string $class[m
[32m+[m[32m */[m
[32m+[m[32mfunction DOMPDF_autoload($class) {[m
[32m+[m[32m  $filename = DOMPDF_INC_DIR . "/" . mb_strtolower($class) . ".cls.php";[m
[32m+[m[41m  [m
[32m+[m[32m  if ( is_file($filename) )[m
[32m+[m[32m    require_once($filename);[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m// If SPL autoload functions are available (PHP >= 5.1.2)[m
[32m+[m[32mif ( function_exists("spl_autoload_register") ) {[m
[32m+[m[32m  $autoload = "DOMPDF_autoload";[m
[32m+[m[32m  $funcs = spl_autoload_functions();[m
[32m+[m[41m  [m
[32m+[m[32m  // No functions currently in the stack.[m[41m [m
[32m+[m[32m  if ( $funcs === false ) {[m[41m [m
[32m+[m[32m    spl_autoload_register($autoload);[m[41m [m
[32m+[m[32m  }[m
[32m+[m[41m  [m
[32m+[m[32m  // If PHP >= 5.3 the $prepend argument is available[m
[32m+[m[32m  else if ( version_compare(PHP_VERSION, '5.3', '>=') ) {[m
[32m+[m[32m    spl_autoload_register($autoload, true, true);[m[41m [m
[32m+[m[32m  }[m
[32m+[m[41m  [m
[32m+[m[32m  else {[m
[32m+[m[32m    // Unregister existing autoloaders...[m[41m [m
[32m+[m[32m    $compat = version_compare(PHP_VERSION, '5.1.2', '<=') &&[m[41m [m
[32m+[m[32m              version_compare(PHP_VERSION, '5.1.0', '>=');[m
[32m+[m[41m              [m
[32m+[m[32m    foreach ($funcs as $func) {[m[41m [m
[32m+[m[32m      if (is_array($func)) {[m[41m [m
[32m+[m[32m        // :TRICKY: There are some compatibility issues and some[m[41m [m
[32m+[m[32m        // places where we need to error out[m[41m [m
[32m+[m[32m        $reflector = new ReflectionMethod($func[0], $func[1]);[m[41m [m
[32m+[m[32m        if (!$reflector->isStatic()) {[m[41m [m
[32m+[m[32m          throw new Exception('This function is not compatible with non-static object methods due to PHP Bug #44144.');[m[41m [m
[32m+[m[32m        }[m
[32m+[m[41m        [m
[32m+[m[32m        // Suprisingly, spl_autoload_register supports the[m[41m [m
[32m+[m[32m        // Class::staticMethod callback format, although call_user_func doesn't[m[41m [m
[32m+[m[32m        if ($compat) $func = implode('::', $func);[m[41m [m
[32m+[m[32m      }[m
[32m+[m[41m      [m
[32m+[m[32m      spl_autoload_unregister($func);[m[41m [m
[32m+[m[32m    }[m[41m [m
[32m+[m[41m    [m
[32m+[m[32m    // Register the new one, thus putting it at the front of the stack...[m[41m [m
[32m+[m[32m    spl_autoload_register($autoload);[m[41m [m
[32m+[m[41m    [m
[32m+[m[32m    // Now, go back and re-register all of our old ones.[m[41m [m
[32m+[m[32m    foreach ($funcs as $func) {[m[41m [m
[32m+[m[32m      spl_autoload_register($func);[m[41m [m
[32m+[m[32m    }[m
[32m+[m[41m    [m
[32m+[m[32m    // Be polite and ensure that userland autoload gets retained[m
[32m+[m[32m    if ( function_exists("__autoload") ) {[m
[32m+[m[32m      spl_autoload_register("__autoload");[m
[32m+[m[32m    }[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32melse if ( !function_exists("__autoload") ) {[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Default __autoload() function[m
[32m+[m[32m   *[m
[32m+[m[32m   * @param string $class[m
[32m+[m[32m   */[m
[32m+[m[32m  function __autoload($class) {[m
[32m+[m[32m    DOMPDF_autoload($class);[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m// ### End of user-configurable options ###[m
[32m+[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Ensure that PHP is working with text internally using UTF8 character encoding.[m
[32m+[m[32m */[m
[32m+[m[32mmb_internal_encoding('UTF-8');[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Global array of warnings generated by DomDocument parser and[m
[32m+[m[32m * stylesheet class[m
[32m+[m[32m *[m
[32m+[m[32m * @var array[m
[32m+[m[32m */[m
[32m+[m[32mglobal $_dompdf_warnings;[m
[32m+[m[32m$_dompdf_warnings = array();[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * If true, $_dompdf_warnings is dumped on script termination when using[m
[32m+[m[32m * dompdf/dompdf.php or after rendering when using the DOMPDF class.[m
[32m+[m[32m * When using the class, setting this value to true will prevent you from[m
[32m+[m[32m * streaming the PDF.[m
[32m+[m[32m *[m
[32m+[m[32m * @var bool[m
[32m+[m[32m */[m
[32m+[m[32mglobal $_dompdf_show_warnings;[m
[32m+[m[32m$_dompdf_show_warnings = false;[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * If true, the entire tree is dumped to stdout in dompdf.cls.php.[m
[32m+[m[32m * Setting this value to true will prevent you from streaming the PDF.[m
[32m+[m[32m *[m
[32m+[m[32m * @var bool[m
[32m+[m[32m */[m
[32m+[m[32mglobal $_dompdf_debug;[m
[32m+[m[32m$_dompdf_debug = false;[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Array of enabled debug message types[m
[32m+[m[32m *[m
[32m+[m[32m * @var array[m
[32m+[m[32m */[m
[32m+[m[32mglobal $_DOMPDF_DEBUG_TYPES;[m
[32m+[m[32m$_DOMPDF_DEBUG_TYPES = array(); //array("page-break" => 1);[m
[32m+[m
[32m+[m[32m/* Optionally enable different classes of debug output before the pdf content.[m
[32m+[m[32m * Visible if displaying pdf as text,[m
[32m+[m[32m * E.g. on repeated display of same pdf in browser when pdf is not taken out of[m
[32m+[m[32m * the browser cache and the premature output prevents setting of the mime type.[m
[32m+[m[32m */[m
[32m+[m[32mdef('DEBUGPNG', false);[m
[32m+[m[32mdef('DEBUGKEEPTEMP', false);[m
[32m+[m[32mdef('DEBUGCSS', false);[m
[32m+[m
[32m+[m[32m/* Layout debugging. Will display rectangles around different block levels.[m
[32m+[m[32m * Visible in the PDF itself.[m
[32m+[m[32m */[m
[32m+[m[32mdef('DEBUG_LAYOUT', false);[m
[32m+[m[32mdef('DEBUG_LAYOUT_LINES', true);[m
[32m+[m[32mdef('DEBUG_LAYOUT_BLOCKS', true);[m
[32m+[m[32mdef('DEBUG_LAYOUT_INLINE', true);[m
[32m+[m[32mdef('DEBUG_LAYOUT_PADDINGBOX', true);[m
[1mdiff --git a/application/third_party/dompdf/include/absolute_positioner.cls.php b/application/third_party/dompdf/include/absolute_positioner.cls.php[m
[1mnew file mode 100644[m
[1mindex 0000000..ff8b6fa[m
[1m--- /dev/null[m
[1m+++ b/application/third_party/dompdf/include/absolute_positioner.cls.php[m
[36m@@ -0,0 +1,85 @@[m
[32m+[m[32m<?php[m
[32m+[m[32m/**[m
[32m+[m[32m * DOMPDF - PHP5 HTML to PDF renderer[m
[32m+[m[32m *[m
[32m+[m[32m * File: $RCSfile: absolute_positioner.cls.php,v $[m
[32m+[m[32m * Created on: 2004-06-08[m
[32m+[m[32m *[m
[32m+[m[32m * Copyright (c) 2004 - Benj Carson <benjcarson@digitaljunkies.ca>[m
[32m+[m[32m *[m
[32m+[m[32m * This library is free software; you can redistribute it and/or[m
[32m+[m[32m * modify it under the terms of the GNU Lesser General Public[m
[32m+[m[32m * License as published by the Free Software Foundation; either[m
[32m+[m[32m * version 2.1 of the License, or (at your option) any later version.[m
[32m+[m[32m *[m
[32m+[m[32m * This library is distributed in the hope that it will be useful,[m
[32m+[m[32m * but WITHOUT ANY WARRANTY; without even the implied warranty of[m
[32m+[m[32m * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU[m
[32m+[m[32m * Lesser General Public License for more details.[m
[32m+[m[32m *[m
[32m+[m[32m * You should have received a copy of the GNU Lesser General Public License[m
[32m+[m[32m * along with this library in the file LICENSE.LGPL; if not, write to the[m
[32m+[m[32m * Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA[m
[32m+[m[32m * 02111-1307 USA[m
[32m+[m[32m *[m
[32m+[m[32m * Alternatively, you may distribute this software under the terms of the[m
[32m+[m[32m * PHP License, version 3.0 or later.  A copy of this license should have[m
[32m+[m[32m * been distributed with this file in the file LICENSE.PHP .  If this is not[m
[32m+[m[32m * the case, you can obtain a copy at http://www.php.net/license/3_0.txt.[m
[32m+[m[32m *[m
[32m+[m[32m * The latest version of DOMPDF might be available at:[m
[32m+[m[32m * http://www.dompdf.com/[m
[32m+[m[32m *[m
[32m+[m[32m * @link http://www.dompdf.com/[m
[32m+[m[32m * @copyright 2004 Benj Carson[m
[32m+[m[32m * @author Benj Carson <benjcarson@digitaljunkies.ca>[m
[32m+[m[32m * @package dompdf[m
[32m+[m
[32m+[m[32m */[m
[32m+[m
[32m+[m[32m/* $Id */[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Positions absolutly positioned frames[m
[32m+[m[32m */[m
[32m+[m[32mclass Absolute_Positioner extends Positioner {[m
[32m+[m
[32m+[m[32m  function __construct(Frame_Decorator $frame) { parent::__construct($frame); }[m
[32m+[m
[32m+[m[32m  function position() {[m
[32m+[m
[32m+[m[32m    $frame = $this->_frame;[m
[32m+[m[32m    $style = $frame->get_style();[m
[32m+[m[32m    $cb = $frame->get_containing_block();[m
[32m+[m
[32m+[m[32m    $top =    $style->length_in_pt($style->top,    $cb["h"]);[m
[32m+[m[32m    $right =  $style->length_in_pt($style->right,  $cb["w"]);[m
[32m+[m[32m    $bottom = $style->length_in_pt($style->bottom, $cb["h"]);[m
[32m+[m[32m    $left =   $style->length_in_pt($style->left,   $cb["w"]);[m
[32m+[m[41m    [m
[32m+[m[32m    $p = $frame->find_positionned_parent();[m
[32m+[m
[32m+[m[32m    if ( $p ) {[m
[32m+[m[32m      // Get the parent's padding box (see http://www.w3.org/TR/CSS21/visuren.html#propdef-top)[m
[32m+[m[32m      list($x, $y, $w, $h) = $p->get_padding_box();[m
[32m+[m[32m    } else {[m
[32m+[m[32m      $x = $cb["x"];[m
[32m+[m[32m      $y = $cb["y"];[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    if ( $top !== "auto" ) {[m
[32m+[m[32m      $y += $top;[m
[32m+[m[32m    } else if ( $bottom !== "auto" ) {[m
[32m+[m[32m      // FIXME: need to know this frame's height before we can do this correctly[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    if ( $left !== "auto" ) {[m
[32m+[m[32m      $x += $left;[m
[32m+[m[32m    } else if ( $right !== "auto" ) {[m
[32m+[m[32m      // FIXME: need to know this frame's width before we can do this correctly[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    $frame->set_position($x, $y);[m
[32m+[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
\ No newline at end of file[m
[1mdiff --git a/application/third_party/dompdf/include/abstract_renderer.cls.php b/application/third_party/dompdf/include/abstract_renderer.cls.php[m
[1mnew file mode 100644[m
[1mindex 0000000..979e30e[m
[1m--- /dev/null[m
[1m+++ b/application/third_party/dompdf/include/abstract_renderer.cls.php[m
[36m@@ -0,0 +1,890 @@[m
[32m+[m[32m<?php[m
[32m+[m[32m/**[m
[32m+[m[32m * DOMPDF - PHP5 HTML to PDF renderer[m
[32m+[m[32m *[m
[32m+[m[32m * File: $RCSfile: abstract_renderer.cls.php,v $[m
[32m+[m[32m * Created on: 2004-06-01[m
[32m+[m[32m *[m
[32m+[m[32m * Copyright (c) 2004 - Benj Carson <benjcarson@digitaljunkies.ca>[m
[32m+[m[32m *[m
[32m+[m[32m * This library is free software; you can redistribute it and/or[m
[32m+[m[32m * modify it under the terms of the GNU Lesser General Public[m
[32m+[m[32m * License as published by the Free Software Foundation; either[m
[32m+[m[32m * version 2.1 of the License, or (at your option) any later version.[m
[32m+[m[32m *[m
[32m+[m[32m * This library is distributed in the hope that it will be useful,[m
[32m+[m[32m * but WITHOUT ANY WARRANTY; without even the implied warranty of[m
[32m+[m[32m * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU[m
[32m+[m[32m * Lesser General Public License for more details.[m
[32m+[m[32m *[m
[32m+[m[32m * You should have received a copy of the GNU Lesser General Public License[m
[32m+[m[32m * along with this library in the file LICENSE.LGPL; if not, write to the[m
[32m+[m[32m * Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA[m
[32m+[m[32m * 02111-1307 USA[m
[32m+[m[32m *[m
[32m+[m[32m * Alternatively, you may distribute this software under the terms of the[m
[32m+[m[32m * PHP License, version 3.0 or later.  A copy of this license should have[m
[32m+[m[32m * been distributed with this file in the file LICENSE.PHP .  If this is not[m
[32m+[m[32m * the case, you can obtain a copy at http://www.php.net/license/3_0.txt.[m
[32m+[m[32m *[m
[32m+[m[32m * The latest version of DOMPDF might be available at:[m
[32m+[m[32m * http://www.dompdf.com/[m
[32m+[m[32m *[m
[32m+[m[32m * @link http://www.dompdf.com/[m
[32m+[m[32m * @copyright 2004 Benj Carson[m
[32m+[m[32m * @author Benj Carson <benjcarson@digitaljunkies.ca>[m
[32m+[m[32m * @contributor Helmut Tischer <htischer@weihenstephan.org>[m
[32m+[m[32m * @package dompdf[m
[32m+[m[32m *[m
[32m+[m[32m * Changes[m
[32m+[m[32m * @contributor Helmut Tischer <htischer@weihenstephan.org>[m
[32m+[m[32m * @version 0.5.1.htischer.20090507[m
[32m+[m[32m * - On background image[m
[32m+[m[32m *   - Clip invisible areas from background images, then merge identical[m
[32m+[m[32m *     image/size/offset to a single image.[m
[32m+[m[32m *   - Fix rounding of background image size.[m
[32m+[m[32m *   - Fix background image position given as percent[m
[32m+[m[32m *   - Check if identical image is already cached by cpdf. Then do not create[m
[32m+[m[32m *     duplicates to save memory and CPU time[m
[32m+[m[32m *   - Fix skipping of image repetition if area is too small[m
[32m+[m[32m *   - Do not create temporary files, but pass gd object directly[m
[32m+[m[32m */[m
[32m+[m
[32m+[m[32m/* $Id: abstract_renderer.cls.php 361 2011-02-16 21:03:05Z fabien.menager $ */[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Base renderer class[m
[32m+[m[32m *[m
[32m+[m[32m * @access private[m
[32m+[m[32m * @package dompdf[m
[32m+[m[32m */[m
[32m+[m[32mabstract class Abstract_Renderer {[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Rendering backend[m
[32m+[m[32m   *[m
[32m+[m[32m   * @var Canvas[m
[32m+[m[32m   */[m
[32m+[m[32m  protected $_canvas;[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Current dompdf instance[m
[32m+[m[32m   *[m
[32m+[m[32m   * @var DOMPDF[m
[32m+[m[32m   */[m
[32m+[m[32m  protected $_dompdf;[m
[32m+[m[41m  [m
[32m+[m[32m  /**[m
[32m+[m[32m   * Class constructor[m
[32m+[m[32m   *[m
[32m+[m[32m   * @param DOMPDF $dompdf The current dompdf instance[m
[32m+[m[32m   */[m
[32m+[m[32m  function __construct(DOMPDF $dompdf) {[m
[32m+[m[32m    $this->_dompdf = $dompdf;[m
[32m+[m[32m    $this->_canvas = $dompdf->get_canvas();[m
[32m+[m[32m  }[m
[32m+[m[41m  [m
[32m+[m[32m  /**[m
[32m+[m[32m   * Render a frame.[m
[32m+[m[32m   *[m
[32m+[m[32m   * Specialized in child classes[m
[32m+[m[32m   *[m
[32m+[m[32m   * @param Frame $frame The frame to render[m
[32m+[m[32m   */[m
[32m+[m[32m  abstract function render(Frame $frame);[m
[32m+[m
[32m+[m[32m  //........................................................................[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Render a background image over a rectangular area[m
[32m+[m[32m   *[m
[32m+[m[32m   * @param string $img      The background image to load[m
[32m+[m[32m   * @param float  $x        The left edge of the rectangular area[m
[32m+[m[32m   * @param float  $y        The top edge of the rectangular area[m
[32m+[m[32m   * @param float  $width    The width of the rectangular area[m
[32m+[m[32m   * @param float  $height   The height of the rectangular area[m
[32m+[m[32m   * @param Style  $style    The associated Style object[m
[32m+[m[32m   */[m
[32m+[m[32m  protected function _background_image($url, $x, $y, $width, $height, $style) {[m
[32m+[m[32m    $sheet = $style->get_stylesheet();[m
[32m+[m
[32m+[m[32m    // Skip degenerate cases[m
[32m+[m[32m    if ( $width == 0 || $height == 0 )[m
[32m+[m[32m      return;[m
[32m+[m
[32m+[m[32m    //debugpng[m
[32m+[m[32m    if (DEBUGPNG) print '[_background_image '.$url.']';[m
[32m+[m
[32m+[m[32m    list($img, $ext) = Image_Cache::resolve_url($url,[m
[32m+[m[32m                                                $sheet->get_protocol(),[m
[32m+[m[32m                                                $sheet->get_host(),[m
[32m+[m[32m                                                $sheet->get_base_path());[m
[32m+[m
[32m+[m[32m    // Bail if the image is no good[m
[32m+[m[32m    if ( $img === DOMPDF_LIB_DIR . "/res/broken_image.png" )[m
[32m+[m[32m      return;[m
[32m+[m
[32m+[m[32m    //Try to optimize away reading and composing of same background multiple times[m
[32m+[m[32m    //Postponing read with imagecreatefrom   ...()[m
[32m+[m[32m    //final composition paramters and name not known yet[m
[32m+[m[32m    //Therefore read dimension directly from file, instead of creating gd object first.[m
[32m+[m[32m    //$img_w = imagesx($src); $img_h = imagesy($src);[m
[32m+[m
[32m+[m[32m    list($img_w, $img_h) = dompdf_getimagesize($img);[m
[32m+[m[32m    if (!isset($img_w) || $img_w == 0 || !isset($img_h) || $img_h == 0) {[m
[32m+[m[32m      return;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    $repeat = $style->background_repeat;[m
[32m+[m[32m    $bg_color = $style->background_color;[m
[32m+[m
[32m+[m[32m    //Increase background resolution and dependent box size according to image resolution to be placed in[m
[32m+[m[32m    //Then image can be copied in without resize[m
[32m+[m[32m    $bg_width = round((float)($width * DOMPDF_DPI) / 72);[m
[32m+[m[32m    $bg_height = round((float)($height * DOMPDF_DPI) / 72);[m
[32m+[m
[32m+[m[32m    //Need %bg_x, $bg_y as background pos, where img starts, converted to pixel[m
[32m+[m
[32m+[m[32m    list($bg_x, $bg_y) = $style->background_position;[m
[32m+[m
[32m+[m[32m    if ( is_percent($bg_x) ) {[m
[32m+[m[32m      // The point $bg_x % from the left edge of the image is placed[m
[32m+[m[32m      // $bg_x % from the left edge of the background rectangle[m
[32m+[m[32m      $p = ((float)$bg_x)/100.0;[m
[32m+[m[32m      $x1 = $p * $img_w;[m
[32m+[m[32m      $x2 = $p * $bg_width;[m
[32m+[m
[32m+[m[32m      $bg_x = round($x2 - $x1);[m
[32m+[m[32m    } else {[m
[32m+[m[32m      $bg_x = round((float)($style->length_in_pt($bg_x)*DOMPDF_DPI) / 72);[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    if ( is_percent($bg_y) ) {[m
[32m+[m[32m      // The point $bg_y % from the left edge of the image is placed[m
[32m+[m[32m      // $bg_y % from the left edge of the background rectangle[m
[32m+[m[32m      $p = ((float)$bg_y)/100.0;[m
[32m+[m[32m      $y1 = $p * $img_h;[m
[32m+[m[32m      $y2 = $p * $bg_height;[m
[32m+[m
[32m+[m[32m      $bg_y = round($y2 - $y1);[m
[32m+[m[32m    } else {[m
[32m+[m[32m      $bg_y = round((float)($style->length_in_pt($bg_y)*DOMPDF_DPI) / 72);[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    //clip background to the image area on partial repeat. Nothing to do if img off area[m
[32m+[m[32m    //On repeat, normalize start position to the tile at immediate left/top or 0/0 of area[m
[32m+[m[32m    //On no repeat with positive offset: move size/start to have offset==0[m
[32m+[m[32m    //Handle x/y Dimensions separately[m
[32m+[m
[32m+[m[32m    if ( $repeat !== "repeat" && $repeat !== "repeat-x" ) {[m
[32m+[m[32m      //No repeat x[m
[32m+[m[32m      if ($bg_x < 0) {[m
[32m+[m[32m        $bg_width = $img_w + $bg_x;[m
[32m+[m[32m      } else {[m
[32m+[m[32m        $x += ($bg_x * 72)/DOMPDF_DPI;[m
[32m+[m[32m        $bg_width = $bg_width - $bg_x;[m
[32m+[m[32m        if ($bg_width > $img_w) {[m
[32m+[m[32m          $bg_width = $img_w;[m
[32m+[m[32m        }[m
[32m+[m[32m        $bg_x = 0;[m
[32m+[m[32m      }[m
[32m+[m[32m      if ($bg_width <= 0) {[m
[32m+[m[32m          return;[m
[32m+[m[32m      }[m
[32m+[m[32m      $width = (float)($bg_width * 72)/DOMPDF_DPI;[m
[32m+[m[32m    } else {[m
[32m+[m[32m      //repeat x[m
[32m+[m[32m      if ($bg_x < 0) {[m
[32m+[m[32m        $bg_x = - ((-$bg_x) % $img_w);[m
[32m+[m[32m      } else {[m
[32m+[m[32m        $bg_x = $bg_x % $img_w;[m
[32m+[m[32m        if ($bg_x > 0) {[m
[32m+[m[32m          $bg_x -= $img_w;[m
[32m+[m[32m        }[m
[32m+[m[32m      }[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    if ( $repeat !== "repeat" && $repeat !== "repeat-y" ) {[m
[32m+[m[32m      //no repeat y[m
[32m+[m[32m      if ($bg_y < 0) {[m
[32m+[m[32m        $bg_height = $img_h + $bg_y;[m
[32m+[m[32m      } else {[m
[32m+[m[32m        $y += ($bg_y * 72)/DOMPDF_DPI;[m
[32m+[m[32m        $bg_height = $bg_height - $bg_y;[m
[32m+[m[32m        if ($bg_height > $img_h) {[m
[32m+[m[32m          $bg_height = $img_h;[m
[32m+[m[32m        }[m
[32m+[m[32m        $bg_y = 0;[m
[32m+[m[32m      }[m
[32m+[m[32m      if ($bg_height <= 0) {[m
[32m+[m[32m          return;[m
[32m+[m[32m      }[m
[32m+[m[32m      $height = (float)($bg_height * 72)/DOMPDF_DPI;[m
[32m+[m[32m    } else {[m
[32m+[m[32m      //repeat y[m
[32m+[m[32m      if ($bg_y < 0) {[m
[32m+[m[32m        $bg_y = - ((-$bg_y) % $img_h);[m
[32m+[m[32m      } else {[m
[32m+[m[32m        $bg_y = $bg_y % $img_h;[m
[32m+[m[32m        if ($bg_y > 0) {[m
[32m+[m[32m          $bg_y -= $img_h;[m
[32m+[m[32m        }[m
[32m+[m[32m      }[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    //Optimization, if repeat has no effect[m
[32m+[m[32m    if ( $repeat === "repeat" && $bg_y <= 0 && $img_h+$bg_y >= $bg_height ) {[m
[32m+[m[32m      $repeat = "repeat-x";[m
[32m+[m[32m    }[m
[32m+[m[32m    if ( $repeat === "repeat" && $bg_x <= 0 && $img_w+$bg_x >= $bg_width ) {[m
[32m+[m[32m      $repeat = "repeat-y";[m
[32m+[m[32m    }[m
[32m+[m[32m    if ( ($repeat === "repeat-x" && $bg_x <= 0 && $img_w+$bg_x >= $bg_width) ||[m
[32m+[m[32m         ($repeat === "repeat-y" && $bg_y <= 0 && $img_h+$bg_y >= $bg_height) ) {[m
[32m+[m[32m      $repeat = "no-repeat";[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    //Use filename as indicator only[m
[32m+[m[32m    //different names for different variants to have different copies in the pdf[m
[32m+[m[32m    //This is not dependent of background color of box! .'_'.(is_array($bg_color) ? $bg_color["hex"] : $bg_color)[m
[32m+[m[32m    //Note: Here, bg_* are the start values, not end values after going through the tile loops![m
[32m+[m
[32m+[m[32m    $filedummy = $img;[m
[32m+[m
[32m+[m[32m    /*[m[41m [m
[32m+[m[32m    //Make shorter strings with limited characters for cache associative array index - needed?[m[41m    [m
[32m+[m[32m    //Strip common base path - server root, explicite temp, default temp; remove unwanted characters;[m
[32m+[m[32m    $filedummy = strtr($filedummy,"\\:","//");[m
[32m+[m[32m    $p = strtr($_SERVER["DOCUMENT_ROOT"],"\\:","//");[m
[32m+[m[32m    $l = strlen($p);[m
[32m+[m[32m    if ( substr($filedummy,0,$l) == $p) {[m
[32m+[m[32m      $filedummy = substr($filedummy,$l);[m
[32m+[m[32m    } else {[m
[32m+[m[32m      $p = strtr(DOMPDF_TEMP_DIR,"\\:","//");[m
[32m+[m[32m      $l = strlen($p);[m
[32m+[m[32m      if ( substr($filedummy,0,$l) == $p) {[m
[32m+[m[32m        $filedummy = substr($filedummy,$l);[m
[32m+[m[32m      } else {[m
[32m+[m[32m        $p = strtr(sys_get_temp_dir(),"\\:","//");[m
[32m+[m[32m        $l = strlen($p);[m
[32m+[m[32m        if ( substr($filedummy,0,$l) == $p) {[m
[32m+[m[32m          $filedummy = substr($filedummy,$l);[m
[32m+[m[32m        }[m
[32m+[m[32m      }[m
[32m+[m[32m    }[m
[32m+[m[32m    */[m
[32m+[m[41m    [m
[32m+[m[32m    $filedummy .= '_'.$bg_width.'_'.$bg_height.'_'.$bg_x.'_'.$bg_y.'_'.$repeat;[m
[32m+[m[32m    //debugpng[m
[32m+[m[32m    //if (DEBUGPNG) print '<pre>[_background_image name '.$filedummy.']</pre>';[m
[32m+[m
[32m+[m[32m    //Optimization to avoid multiple times rendering the same image.[m
[32m+[m[32m    //If check functions are existing and identical image already cached,[m
[32m+[m[32m    //then skip creation of duplicate, because it is not needed by addImagePng[m
[32m+[m[32m    if ( method_exists( $this->_canvas, "get_cpdf" ) &&[m
[32m+[m[32m         method_exists( $this->_canvas->get_cpdf(), "addImagePng" ) &&[m
[32m+[m[32m         method_exists( $this->_canvas->get_cpdf(), "image_iscached" ) &&[m
[32m+[m[32m         $this->_canvas->get_cpdf()->image_iscached($filedummy) ) {[m
[32m+[m[32m       $bg = null;[m
[32m+[m
[32m+[m[32m      //debugpng[m
[32m+[m[32m      //if (DEBUGPNG) print '[_background_image skip]';[m
[32m+[m[32m    }[m[41m [m
[32m+[m[41m    [m
[32m+[m[32m    else {[m
[32m+[m
[32m+[m[32m    // Create a new image to fit over the background rectangle[m
[32m+[m[32m    $bg = imagecreatetruecolor($bg_width, $bg_height);[m
[32m+[m[41m    [m
[32m+[m[32m    //anyway default[m
[32m+[m[32m    //imagealphablending($img, true);[m
[32m+[m
[32m+[m[32m    switch (strtolower($ext)) {[m
[32m+[m[32m      case "png":[m
[32m+[m[32m        $src = imagecreatefrompng($img);[m
[32m+[m[32m        break;[m
[32m+[m[41m  [m
[32m+[m[32m      case "jpg":[m
[32m+[m[32m      case "jpeg":[m
[32m+[m[32m        $src = imagecreatefromjpeg($img);[m
[32m+[m[32m        break;[m
[32m+[m[41m  [m
[32m+[m[32m      case "gif":[m
[32m+[m[32m        $src = imagecreatefromgif($img);[m
[32m+[m[32m        break;[m
[32m+[m[41m        [m
[32m+[m[32m      case "bmp":[m
[32m+[m[32m        $src = imagecreatefrombmp($img);[m
[32m+[m[32m        break;[m
[32m+[m[41m  [m
[32m+[m[32m      default: return; // Unsupported image type[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    if ($src == null) {[m
[32m+[m[32m      return;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    //Background color if box is not relevant here[m
[32m+[m[32m    //Non transparent image: box clipped to real size. Background non relevant.[m
[32m+[m[32m    //Transparent image: The image controls the transparency and lets shine through whatever background.[m
[32m+[m[32m    //However on transparent imaage preset the composed image with the transparency color,[m
[32m+[m[32m    //to keep the transparency when copying over the non transparent parts of the tiles.[m
[32m+[m[32m    $ti = imagecolortransparent($src);[m
[32m+[m[41m    [m
[32m+[m[32m    if ($ti >= 0) {[m
[32m+[m[32m      $tc = imagecolorsforindex($src,$ti);[m
[32m+[m[32m      $ti = imagecolorallocate($bg,$tc['red'],$tc['green'],$tc['blue']);[m
[32m+[m[32m      imagefill($bg,0,0,$ti);[m
[32m+[m[32m      imagecolortransparent($bg, $ti);[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    //This has only an effect for the non repeatable dimension.[m
[32m+[m[32m    //compute start of src and dest coordinates of the single copy[m
[32m+[m[32m    if ( $bg_x < 0 ) {[m
[32m+[m[32m      $dst_x = 0;[m
[32m+[m[32m      $src_x = -$bg_x;[m
[32m+[m[32m    } else {[m
[32m+[m[32m      $src_x = 0;[m
[32m+[m[32m      $dst_x = $bg_x;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    if ( $bg_y < 0 ) {[m
[32m+[m[32m      $dst_y = 0;[m
[32m+[m[32m      $src_y = -$bg_y;[m
[32m+[m[32m    } else {[m
[32m+[m[32m      $src_y = 0;[m
[32m+[m[32m      $dst_y = $bg_y;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    //For historical reasons exchange meanings of variables:[m
[32m+[m[32m    //start_* will be the start values, while bg_* will be the temporary start values in the loops[m
[32m+[m[32m    $start_x = $bg_x;[m
[32m+[m[32m    $start_y = $bg_y;[m
[32m+[m
[32m+[m[32m    // Copy regions from the source image to the background[m
[32m+[m[32m    if ( $repeat === "no-repeat" ) {[m
[32m+[m
[32m+[m[32m      // Simply place the image on the background[m
[32m+[m[32m      imagecopy($bg, $src, $dst_x, $dst_y, $src_x, $src_y, $img_w, $img_h);[m
[32m+[m
[32m+[m[32m    } else if ( $repeat === "repeat-x" ) {[m
[32m+[m
[32m+[m[32m      for ( $bg_x = $start_x; $bg_x < $bg_width; $bg_x += $img_w ) {[m
[32m+[m[32m        if ( $bg_x < 0 ) {[m
[32m+[m[32m          $dst_x = 0;[m
[32m+[m[32m          $src_x = -$bg_x;[m
[32m+[m[32m          $w = $img_w + $bg_x;[m
[32m+[m[32m        } else {[m
[32m+[m[32m          $dst_x = $bg_x;[m
[32m+[m[32m          $src_x = 0;[m
[32m+[m[32m          $w = $img_w;[m
[32m+[m[32m        }[m
[32m+[m[32m        imagecopy($bg, $src, $dst_x, $dst_y, $src_x, $src_y, $w, $img_h);[m
[32m+[m[32m      }[m
[32m+[m
[32m+[m[32m    } else if ( $repeat === "repeat-y" ) {[m
[32m+[m
[32m+[m[32m      for ( $bg_y = $start_y; $bg_y < $bg_height; $bg_y += $img_h ) {[m
[32m+[m[32m        if ( $bg_y < 0 ) {[m
[32m+[m[32m          $dst_y = 0;[m
[32m+[m[32m          $src_y = -$bg_y;[m
[32m+[m[32m          $h = $img_h + $bg_y;[m
[32m+[m[32m        } else {[m
[32m+[m[32m          $dst_y = $bg_y;[m
[32m+[m[32m          $src_y = 0;[m
[32m+[m[32m          $h = $img_h;[m
[32m+[m[32m        }[m
[32m+[m[32m        imagecopy($bg, $src, $dst_x, $dst_y, $src_x, $src_y, $img_w, $h);[m
[32m+[m
[32m+[m[32m      }[m
[32m+[m
[32m+[m[32m    } else if ( $repeat === "repeat" ) {[m
[32m+[m
[32m+[m[32m      for ( $bg_y = $start_y; $bg_y < $bg_height; $bg_y += $img_h ) {[m
[32m+[m[32m        for ( $bg_x = $start_x; $bg_x < $bg_width; $bg_x += $img_w ) {[m
[32m+[m
[32m+[m[32m          if ( $bg_x < 0 ) {[m
[32m+[m[32m            $dst_x = 0;[m
[32m+[m[32m            $src_x = -$bg_x;[m
[32m+[m[32m            $w = $img_w + $bg_x;[m
[32m+[m[32m          } else {[m
[32m+[m[32m            $dst_x = $bg_x;[m
[32m+[m[32m            $src_x = 0;[m
[32m+[m[32m            $w = $img_w;[m
[32m+[m[32m          }[m
[32m+[m
[32m+[m[32m          if ( $bg_y < 0 ) {[m
[32m+[m[32m            $dst_y = 0;[m
[32m+[m[32m            $src_y = -$bg_y;[m
[32m+[m[32m            $h = $img_h + $bg_y;[m
[32m+[m[32m          } else {[m
[32m+[m[32m            $dst_y = $bg_y;[m
[32m+[m[32m            $src_y = 0;[m
[32m+[m[32m            $h = $img_h;[m
[32m+[m[32m          }[m
[32m+[m[32m          imagecopy($bg, $src, $dst_x, $dst_y, $src_x, $src_y, $w, $h);[m
[32m+[m[32m        }[m
[32m+[m[32m      }[m
[32m+[m[32m    }[m
[32m+[m[41m    [m
[32m+[m[32m    else {[m
[32m+[m[32m      print 'Unknown repeat!';[m
[32m+[m[32m    }[m
[32m+[m[41m    [m
[32m+[m[32m    imagedestroy($src);[m
[32m+[m
[32m+[m[32m    } /* End optimize away creation of duplicates */[m
[32m+[m
[32m+[m[32m    //img: image url string[m
[32m+[m[32m    //img_w, img_h: original image size in px[m
[32m+[m[32m    //width, height: box size in pt[m
[32m+[m[32m    //bg_width, bg_height: box size in px[m
[32m+[m[32m    //x, y: left/top edge of box on page in pt[m
[32m+[m[32m    //start_x, start_y: placement of image relativ to pattern[m
[32m+[m[32m    //$repeat: repeat mode[m
[32m+[m[32m    //$bg: GD object of result image[m
[32m+[m[32m    //$src: GD object of original image[m
[32m+[m[32m    //When using cpdf and optimization to direct png creation from gd object is available,[m
[32m+[m[32m    //don't create temp file, but place gd object directly into the pdf[m
[32m+[m[32m    if ( method_exists( $this->_canvas, "get_cpdf" ) &&[m[41m [m
[32m+[m[32m         method_exists( $this->_canvas->get_cpdf(), "addImagePng" ) ) {[m
[32m+[m[32m      // Note: CPDF_Adapter image converts y position[m
[32m+[m[32m      $this->_canvas->get_cpdf()->addImagePng($filedummy, $x, $this->_canvas->get_height() - $y - $height, $width, $height, $bg);[m
[32m+[m[32m    }[m[41m [m
[32m+[m[41m    [m
[32m+[m[32m    else {[m
[32m+[m[32m      $tmp_file = tempnam(DOMPDF_TEMP_DIR, "bg_dompdf_img_").'.png';[m
[32m+[m[32m      //debugpng[m
[32m+[m[32m      if (DEBUGPNG) print '[_background_image '.$tmp_file.']';[m
[32m+[m
[32m+[m[32m      imagepng($bg, $tmp_file);[m
[32m+[m[32m      $this->_canvas->image($tmp_file, "png", $x, $y, $width, $height);[m
[32m+[m[32m      imagedestroy($bg);[m
[32m+[m
[32m+[m[32m      //debugpng[m
[32m+[m[32m      if (DEBUGPNG) print '[_background_image unlink '.$tmp_file.']';[m
[32m+[m
[32m+[m[32m      if (!DEBUGKEEPTEMP)[m
[32m+[m[32m        unlink($tmp_file);[m
[32m+[m[32m    }[m
[32m+[m[32m  }[m
[32m+[m[41m  [m
[32m+[m[32m  protected function _get_dash_pattern($style, $width) {[m
[32m+[m[32m    $pattern = array();[m
[32m+[m[41m    [m
[32m+[m[32m    switch ($style) {[m
[32m+[m[32m      default:[m
[32m+[m[32m      /*case "solid":[m
[32m+[m[32m      case "double":[m
[32m+[m[32m      case "groove":[m
[32m+[m[32m      case "inset":[m
[32m+[m[32m      case "outset":[m
[32m+[m[32m      case "ridge":*/[m
[32m+[m[32m      case "none": break;[m
[32m+[m[41m      [m
[32m+[m[32m      case "dotted":[m[41m [m
[32m+[m[32m        if ( $width < 2 )[m
[32m+[m[32m          $pattern = array($width, 2);[m
[32m+[m[32m        else[m
[32m+[m[32m          $pattern = array($width);[m
[32m+[m[32m      break;[m
[32m+[m[41m      [m
[32m+[m[32m      case "dashed":[m[41m [m
[32m+[m[32m        $pattern = array(3 * $width);[m
[32m+[m[32m      break;[m
[32m+[m[32m    }[m
[32m+[m[41m    [m
[32m+[m[32m    return $pattern;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  protected function _border_none($x, $y, $length, $color, $widths, $side, $corner_style = "bevel") {[m
[32m+[m[32m    return;[m
[32m+[m[32m  }[m
[32m+[m[41m  [m
[32m+[m[32m  // Border rendering functions[m
[32m+[m[32m  protected function _border_dotted($x, $y, $length, $color, $widths, $side, $corner_style = "bevel") {[m
[32m+[m[32m    list($top, $right, $bottom, $left) = $widths;[m
[32m+[m
[32m+[m[32m    $pattern = $this->_get_dash_pattern("dotted", $$side);[m
[32m+[m[41m    [m
[32m+[m[32m    switch ($side) {[m
[32m+[m
[32m+[m[32m    case "top":[m
[32m+[m[32m      $delta = $top / 2;[m
[32m+[m[32m    case "bottom":[m
[32m+[m[32m      $delta = isset($delta) ? $delta : -$bottom / 2;[m
[32m+[m[32m      $this->_canvas->line($x, $y + $delta, $x + $length, $y + $delta, $color, $$side, $pattern);[m
[32m+[m[32m      break;[m
[32m+[m
[32m+[m[32m    case "left":[m
[32m+[m[32m      $delta = $left / 2;[m
[32m+[m[32m    case "right":[m
[32m+[m[32m      $delta = isset($delta) ? $delta : - $right / 2;[m
[32m+[m[32m      $this->_canvas->line($x + $delta, $y, $x + $delta, $y + $length, $color, $$side, $pattern);[m
[32m+[m[32m      break;[m
[32m+[m
[32m+[m[32m    default:[m
[32m+[m[32m      return;[m
[32m+[m
[32m+[m[32m    }[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[41m  [m
[32m+[m[32m  protected function _border_dashed($x, $y, $length, $color, $widths, $side, $corner_style = "bevel") {[m
[32m+[m[32m    list($top, $right, $bottom, $left) = $widths;[m
[32m+[m
[32m+[m[32m    $pattern = $this->_get_dash_pattern("dashed", $$side);[m
[32m+[m[41m    [m
[32m+[m[32m    switch ($side) {[m
[32m+[m
[32m+[m[32m    case "top":[m
[32m+[m[32m      $delta = $top / 2;[m
[32m+[m[32m    case "bottom":[m
[32m+[m[32m      $delta = isset($delta) ? $delta : -$bottom / 2;[m
[32m+[m[32m      $this->_canvas->line($x, $y + $delta, $x + $length, $y + $delta, $color, $$side, $pattern);[m
[32m+[m[32m      break;[m
[32m+[m
[32m+[m[32m    case "left":[m
[32m+[m[32m      $delta = $left / 2;[m
[32m+[m[32m    case "right":[m
[32m+[m[32m      $delta = isset($delta) ? $delta : - $right / 2;[m
[32m+[m[32m      $this->_canvas->line($x + $delta, $y, $x + $delta, $y + $length, $color, $$side, $pattern);[m
[32m+[m[32m      break;[m
[32m+[m
[32m+[m[32m    default:[m
[32m+[m[32m      return;[m
[32m+[m[32m    }[m
[32m+[m[41m    [m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[41m  [m
[32m+[m[32m  protected function _border_solid($x, $y, $length, $color, $widths, $side, $corner_style = "bevel") {[m
[32m+[m[32m    list($top, $right, $bottom, $left) = $widths;[m
[32m+[m
[32m+[m[32m    // All this polygon business is for beveled corners...[m
[32m+[m[32m    switch ($side) {[m
[32m+[m
[32m+[m[32m    case "top":[m
[32m+[m[32m      if ( $corner_style === "bevel" ) {[m
[32m+[m[41m        [m
[32m+[m[32m        $points = array($x, $y,[m
[32m+[m[32m                        $x + $length, $y,[m
[32m+[m[32m                        $x + $length - $right, $y + $top,[m
[32m+[m[32m                        $x + $left, $y + $top);[m
[32m+[m[32m        $this->_canvas->polygon($points, $color, null, null, true);[m
[32m+[m[32m      } else[m
[32m+[m[32m        $this->_canvas->filled_rectangle($x, $y, $length, $top, $color);[m
[32m+[m[41m      [m
[32m+[m[32m      break;[m
[32m+[m[41m      [m
[32m+[m[32m    case "bottom":[m
[32m+[m[32m      if ( $corner_style === "bevel" ) {[m
[32m+[m[32m        $points = array($x, $y,[m
[32m+[m[32m                        $x + $length, $y,[m
[32m+[m[32m                        $x + $length - $right, $y - $bottom,[m
[32m+[m[32m                        $x + $left, $y - $bottom);[m
[32m+[m[32m        $this->_canvas->polygon($points, $color, null, null, true);[m
[32m+[m[32m      } else[m
[32m+[m[32m        $this->_canvas->filled_rectangle($x, $y - $bottom, $length, $bottom, $color);[m
[32m+[m[41m      [m
[32m+[m[32m      break;[m
[32m+[m[41m      [m
[32m+[m[32m    case "left":[m
[32m+[m[32m      if ( $corner_style === "bevel" ) {[m
[32m+[m[32m        $points = array($x, $y,[m
[32m+[m[32m                        $x, $y + $length,[m
[32m+[m[32m                        $x + $left, $y + $length - $bottom,[m
[32m+[m[32m                        $x + $left, $y + $top);[m
[32m+[m[32m        $this->_canvas->polygon($points, $color, null, null, true);[m
[32m+[m[32m      } else[m
[32m+[m[32m        $this->_canvas->filled_rectangle($x, $y, $left, $length, $color);[m
[32m+[m[41m      [m
[32m+[m[32m      break;[m
[32m+[m[41m      [m
[32m+[m[32m    case "right":[m
[32m+[m[32m      if ( $corner_style === "bevel" ) {[m
[32m+[m[32m        $points = array($x, $y,[m
[32m+[m[32m                        $x, $y + $length,[m
[32m+[m[32m                        $x - $right, $y + $length - $bottom,[m
[32m+[m[32m                        $x - $right, $y + $top);[m
[32m+[m[32m        $this->_canvas->polygon($points, $color, null, null, true);[m
[32m+[m[32m      } else[m
[32m+[m[32m        $this->_canvas->filled_rectangle($x - $right, $y, $right, $length, $color);[m
[32m+[m
[32m+[m[32m      break;[m
[32m+[m
[32m+[m[32m    default:[m
[32m+[m[32m      return;[m
[32m+[m
[32m+[m[32m    }[m
[32m+[m[41m        [m
[32m+[m[32m  }[m
[32m+[m
[32m+[m
[32m+[m[32m  protected function _border_double($x, $y, $length, $color, $widths, $side, $corner_style = "bevel") {[m
[32m+[m[32m    list($top, $right, $bottom, $left) = $widths;[m
[32m+[m[41m    [m
[32m+[m[32m    $line_width = $$side / 4;[m
[32m+[m[41m    [m
[32m+[m[32m    // We draw the outermost edge first. Points are ordered: outer left,[m
[32m+[m[32m    // outer right, inner right, inner left, or outer top, outer bottom,[m
[32m+[m[32m    // inner bottom, inner top.[m
[32m+[m[32m    switch ($side) {[m
[32m+[m
[32m+[m[32m    case "top":[m
[32m+[m[32m      if ( $corner_style === "bevel" ) {[m
[32m+[m[32m        $left_line_width = $left / 4;[m
[32m+[m[32m        $right_line_width = $right / 4;[m
[32m+[m[41m        [m
[32m+[m[32m        $points = array($x, $y,[m
[32m+[m[32m                        $x + $length, $y,[m
[32m+[m[32m                        $x + $length - $right_line_width, $y + $line_width,[m
[32m+[m[32m                        $x + $left_line_width, $y + $line_width,);[m
[32m+[m[32m        $this->_canvas->polygon($points, $color, null, null, true);[m
[32m+[m[41m        [m
[32m+[m[32m        $points = array($x + $left - $left_line_width, $y + $top - $line_width,[m
[32m+[m[32m                        $x + $length - $right + $right_line_width, $y + $top - $line_width,[m
[32m+[m[32m                        $x + $length - $right, $y + $top,[m
[32m+[m[32m                        $x + $left, $y + $top);[m
[32m+[m[32m        $this->_canvas->polygon($points, $color, null, null, true);[m
[32m+[m
[32m+[m[32m      } else {[m
[32m+[m[32m        $this->_canvas->filled_rectangle($x, $y, $length, $line_width, $color);[m
[32m+[m[32m        $this->_canvas->filled_rectangle($x, $y + $top - $line_width, $length, $line_width, $color);[m
[32m+[m
[32m+[m[32m      }[m
[32m+[m[32m      break;[m
[32m+[m[41m      [m
[32m+[m[32m    case "bottom":[m
[32m+[m[32m      if ( $corner_style === "bevel" ) {[m
[32m+[m[32m        $left_line_width = $left / 4;[m
[32m+[m[32m        $right_line_width = $right / 4;[m
[32m+[m[41m        [m
[32m+[m[32m        $points = array($x, $y,[m
[32m+[m[32m                        $x + $length, $y,[m
[32m+[m[32m                        $x + $length - $right_line_width, $y - $line_width,[m
[32m+[m[32m                        $x + $left_line_width, $y - $line_width);[m
[32m+[m[32m        $this->_canvas->polygon($points, $color, null, null, true);[m
[32m+[m[41m        [m
[32m+[m[32m        $points = array($x + $left - $left_line_width, $y - $bottom + $line_width,[m
[32m+[m[32m                        $x + $length - $right + $right_line_width, $y - $bottom + $line_width,[m
[32m+[m[32m                        $x + $length - $right, $y - $bottom,[m
[32m+[m[32m                        $x + $left, $y - $bottom);[m
[32m+[m[32m        $this->_canvas->polygon($points, $color, null, null, true);[m
[32m+[m
[32m+[m[32m      } else {[m
[32m+[m[32m        $this->_canvas->filled_rectangle($x, $y - $line_width, $length, $line_width, $color);[m
[32m+[m[32m        $this->_canvas->filled_rectangle($x, $y - $bottom, $length, $line_width, $color);[m
[32m+[m[32m      }[m
[32m+[m[41m          [m
[32m+[m[32m      break;[m
[32m+[m
[32m+[m[32m    case "left":[m
[32m+[m[32m      if ( $corner_style === "bevel" ) {[m
[32m+[m[32m        $top_line_width = $top / 4;[m
[32m+[m[32m        $bottom_line_width = $bottom / 4;[m
[32m+[m[41m        [m
[32m+[m[32m        $points = array($x, $y,[m
[32m+[m[32m                        $x, $y + $length,[m
[32m+[m[32m                        $x + $line_width, $y + $length - $bottom_line_width,[m
[32m+[m[32m                        $x + $line_width, $y + $top_line_width);[m
[32m+[m[32m        $this->_canvas->polygon($points, $color, null, null, true);[m
[32m+[m
[32m+[m[32m        $points = array($x + $left - $line_width, $y + $top - $top_line_width,[m
[32m+[m[32m                        $x + $left - $line_width, $y + $length - $bottom + $bottom_line_width,[m
[32m+[m[32m                        $x + $left, $y + $length - $bottom,[m
[32m+[m[32m                        $x + $left, $y + $top);[m
[32m+[m[32m        $this->_canvas->polygon($points, $color, null, null, true);[m
[32m+[m
[32m+[m[32m      } else {[m
[32m+[m[32m        $this->_canvas->filled_rectangle($x, $y, $line_width, $length, $color);[m
[32m+[m[32m        $this->_canvas->filled_rectangle($x + $left - $line_width, $y, $line_width, $length, $color);[m
[32m+[m[32m      }[m
[32m+[m[41m      [m
[32m+[m[32m      break;[m
[32m+[m[41m                      [m
[32m+[m[32m    case "right":[m
[32m+[m[32m      if ( $corner_style === "bevel" ) {[m
[32m+[m[32m        $top_line_width = $top / 4;[m
[32m+[m[32m        $bottom_line_width = $bottom / 4;[m
[32m+[m[41m        [m
[32m+[m[41m      [m
[32m+[m[32m        $points = array($x, $y,[m
[32m+[m[32m                      $x, $y + $length,[m
[32m+[m[32m                        $x - $line_width, $y + $length - $bottom_line_width,[m
[32m+[m[32m                        $x - $line_width, $y + $top_line_width);[m
[32m+[m[32m        $this->_canvas->polygon($points, $color, null, null, true);[m
[32m+[m[41m        [m
[32m+[m[32m        $points = array($x - $right + $line_width, $y + $top - $top_line_width,[m
[32m+[m[32m                        $x - $right + $line_width, $y + $length - $bottom + $bottom_line_width,[m
[32m+[m[32m                        $x - $right, $y + $length - $bottom,[m
[32m+[m[32m                        $x - $right, $y + $top);[m
[32m+[m[32m        $this->_canvas->polygon($points, $color, null, null, true);[m
[32m+[m
[32m+[m[32m      } else {[m
[32m+[m[32m        $this->_canvas->filled_rectangle($x - $line_width, $y, $line_width, $length, $color);[m
[32m+[m[32m        $this->_canvas->filled_rectangle($x - $right, $y, $line_width, $length, $color);[m
[32m+[m[32m      }[m
[32m+[m[41m      [m
[32m+[m[32m      break;[m
[32m+[m
[32m+[m[32m    default:[m
[32m+[m[32m      return;[m
[32m+[m
[32m+[m[32m    }[m
[32m+[m[41m        [m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  protected function _border_groove($x, $y, $length, $color, $widths, $side, $corner_style = "bevel") {[m
[32m+[m[32m    list($top, $right, $bottom, $left) = $widths;[m
[32m+[m[41m      [m
[32m+[m[32m    $half_widths = array($top / 2, $right / 2, $bottom / 2, $left / 2);[m
[32m+[m[41m    [m
[32m+[m[32m    $this->_border_inset($x, $y, $length, $color, $half_widths, $side);[m
[32m+[m
[32m+[m[32m    switch ($side) {[m
[32m+[m
[32m+[m[32m    case "top":[m
[32m+[m[32m      $x += $left / 2;[m
[32m+[m[32m      $y += $top / 2;[m
[32m+[m[32m      $length -= $left / 2 + $right / 2;[m
[32m+[m[32m      break;[m
[32m+[m
[32m+[m[32m    case "bottom":[m
[32m+[m[32m      $x += $left / 2;[m
[32m+[m[32m      $y -= $bottom / 2;[m
[32m+[m[32m      $length -= $left / 2 + $right / 2;[m
[32m+[m[32m      break;[m
[32m+[m
[32m+[m[32m    case "left":[m
[32m+[m[32m      $x += $left / 2;[m
[32m+[m[32m      $y += $top / 2;[m
[32m+[m[32m      $length -= $top / 2 + $bottom / 2;[m
[32m+[m[32m      break;[m
[32m+[m
[32m+[m[32m    case "right":[m
[32m+[m[32m      $x -= $right / 2;[m
[32m+[m[32m      $y += $top / 2;[m
[32m+[m[32m      $length -= $top / 2 + $bottom / 2;[m
[32m+[m[32m      break;[m
[32m+[m
[32m+[m[32m    default:[m
[32m+[m[32m      return;[m
[32m+[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    $this->_border_outset($x, $y, $length, $color, $half_widths, $side);[m
[32m+[m[41m    [m
[32m+[m[32m  }[m
[32m+[m[41m  [m
[32m+[m[32m  protected function _border_ridge($x, $y, $length, $color, $widths, $side, $corner_style = "bevel") {[m
[32m+[m[32m    list($top, $right, $bottom, $left) = $widths;[m
[32m+[m[41m     [m
[32m+[m[32m    $half_widths = array($top / 2, $right / 2, $bottom / 2, $left / 2);[m
[32m+[m[41m    [m
[32m+[m[32m    $this->_border_outset($x, $y, $length, $color, $half_widths, $side);[m
[32m+[m
[32m+[m[32m    switch ($side) {[m
[32m+[m
[32m+[m[32m    case "top":[m
[32m+[m[32m      $x += $left / 2;[m
[32m+[m[32m      $y += $top / 2;[m
[32m+[m[32m      $length -= $left / 2 + $right / 2;[m
[32m+[m[32m      break;[m
[32m+[m
[32m+[m[32m    case "bottom":[m
[32m+[m[32m      $x += $left / 2;[m
[32m+[m[32m      $y -= $bottom / 2;[m
[32m+[m[32m      $length -= $left / 2 + $right / 2;[m
[32m+[m[32m      break;[m
[32m+[m
[32m+[m[32m    case "left":[m
[32m+[m[32m      $x += $left / 2;[m
[32m+[m[32m      $y += $top / 2;[m
[32m+[m[32m      $length -= $top / 2 + $bottom / 2;[m
[32m+[m[32m      break;[m
[32m+[m
[32m+[m[32m    case "right":[m
[32m+[m[32m      $x -= $right / 2;[m
[32m+[m[32m      $y += $top / 2;[m
[32m+[m[32m      $length -= $top / 2 + $bottom / 2;[m
[32m+[m[32m      break;[m
[32m+[m
[32m+[m[32m    default:[m
[32m+[m[32m      return;[m
[32m+[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    $this->_border_inset($x, $y, $length, $color, $half_widths, $side);[m
[32m+[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  protected function _tint($c) {[m
[32m+[m[32m    if ( !is_numeric($c) )[m
[32m+[m[32m      return $c;[m
[32m+[m[41m    [m
[32m+[m[32m    return min(1, $c + 0.16);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  protected function _shade($c) {[m
[32m+[m[32m    if ( !is_numeric($c) )[m
[32m+[m[32m      return $c;[m
[32m+[m[41m    [m
[32m+[m[32m    return max(0, $c - 0.33);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  protected function _border_inset($x, $y, $length, $color, $widths, $side, $corner_style = "bevel") {[m
[32m+[m[32m    list($top, $right, $bottom, $left) = $widths;[m
[32m+[m[41m    [m
[32m+[m[32m    switch ($side) {[m
[32m+[m
[32m+[m[32m    case "top":[m
[32m+[m[32m    case "left":[m
[32m+[m[32m      $shade = array_map(array($this, "_shade"), $color);[m
[32m+[m[32m      $this->_border_solid($x, $y, $length, $shade, $widths, $side);[m
[32m+[m[32m      break;[m
[32m+[m
[32m+[m[32m    case "bottom":[m
[32m+[m[32m    case "right":[m
[32m+[m[32m      $tint = array_map(array($this, "_tint"), $color);[m
[32m+[m[32m      $this->_border_solid($x, $y, $length, $tint, $widths, $side);[m
[32m+[m[32m      break;[m
[32m+[m
[32m+[m[32m    default:[m
[32m+[m[32m      return;[m
[32m+[m[32m    }[m
[32m+[m[32m  }[m
[32m+[m[41m  [m
[32m+[m[32m  protected function _border_outset($x, $y, $length, $color, $widths, $side, $corner_style = "bevel") {[m
[32m+[m[32m    list($top, $right, $bottom, $left) = $widths;[m
[32m+[m[41m    [m
[32m+[m[32m    switch ($side) {[m
[32m+[m[32m    case "top":[m
[32m+[m[32m    case "left":[m
[32m+[m[32m      $tint = array_map(array($this, "_tint"), $color);[m
[32m+[m[32m      $this->_border_solid($x, $y, $length, $tint, $widths, $side);[m
[32m+[m[32m      break;[m
[32m+[m
[32m+[m[32m    case "bottom":[m
[32m+[m[32m    case "right":[m
[32m+[m[32m      $shade = array_map(array($this, "_shade"), $color);[m
[32m+[m[32m      $this->_border_solid($x, $y, $length, $shade, $widths, $side);[m
[32m+[m[32m      break;[m
[32m+[m
[32m+[m[32m    default:[m
[32m+[m[32m      return;[m
[32m+[m
[32m+[m[32m    }[m
[32m+[m[32m  }[m
[32m+[m[41m  [m
[32m+[m[32m  protected function _set_opacity($opacity) {[m
[32m+[m[32m    if ( is_numeric($opacity) && $opacity <= 1.0 && $opacity >= 0.0 ) {[m
[32m+[m[32m      $this->_canvas->set_opacity( $opacity );[m
[32m+[m[32m    }[m
[32m+[m[32m  }[m
[32m+[m[41m  [m
[32m+[m[32m  protected function _debug_layout($box, $color = "red", $style = array()) {[m
[32m+[m[32m    $this->_canvas->rectangle($box[0], $box[1], $box[2], $box[3], CSS_Color::parse($color), 0.1, $style);[m
[32m+[m[32m  }[m
[32m+[m[32m  //........................................................................[m
[32m+[m[32m}[m
[1mdiff --git a/application/third_party/dompdf/include/attribute_translator.cls.php b/application/third_party/dompdf/include/attribute_translator.cls.php[m
[1mnew file mode 100644[m
[1mindex 0000000..87503fe[m
[1m--- /dev/null[m
[1m+++ b/application/third_party/dompdf/include/attribute_translator.cls.php[m
[36m@@ -0,0 +1,481 @@[m
[32m+[m[32m<?php[m
[32m+[m[32m/**[m
[32m+[m[32m * DOMPDF - PHP5 HTML to PDF renderer[m
[32m+[m[32m *[m
[32m+[m[32m * File: $RCSfile: attribute_translator.cls.php,v $[m
[32m+[m[32m * Created on: 2004-09-13[m
[32m+[m[32m *[m
[32m+[m[32m * Copyright (c) 2004 - Benj Carson <benjcarson@digitaljunkies.ca>[m
[32m+[m[32m *[m
[32m+[m[32m * This library is free software; you can redistribute it and/or[m
[32m+[m[32m * modify it under the terms of the GNU Lesser General Public[m
[32m+[m[32m * License as published by the Free Software Foundation; either[m
[32m+[m[32m * version 2.1 of the License, or (at your option) any later version.[m
[32m+[m[32m *[m
[32m+[m[32m * This library is distributed in the hope that it will be useful,[m
[32m+[m[32m * but WITHOUT ANY WARRANTY; without even the implied warranty of[m
[32m+[m[32m * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU[m
[32m+[m[32m * Lesser General Public License for more details.[m
[32m+[m[32m *[m
[32m+[m[32m * You should have received a copy of the GNU Lesser General Public License[m
[32m+[m[32m * along with this library in the file LICENSE.LGPL; if not, write to the[m
[32m+[m[32m * Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA[m
[32m+[m[32m * 02111-1307 USA[m
[32m+[m[32m *[m
[32m+[m[32m * Alternatively, you may distribute this software under the terms of the[m
[32m+[m[32m * PHP License, version 3.0 or later.  A copy of this license should have[m
[32m+[m[32m * been distributed with this file in the file LICENSE.PHP .  If this is not[m
[32m+[m[32m * the case, you can obtain a copy at http://www.php.net/license/3_0.txt.[m
[32m+[m[32m *[m
[32m+[m[32m * The latest version of DOMPDF might be available at:[m
[32m+[m[32m * http://www.dompdf.com/[m
[32m+[m[32m *[m
[32m+[m[32m * @link http://www.dompdf.com/[m
[32m+[m[32m * @copyright 2004 Benj Carson[m
[32m+[m[32m * @author Benj Carson <benjcarson@digitaljunkies.ca>[m
[32m+[m[32m * @package dompdf[m
[32m+[m
[32m+[m[32m */[m
[32m+[m
[32m+[m[32m/* $Id: attribute_translator.cls.php 346 2011-01-09 13:23:22Z fabien.menager $ */[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Translates HTML 4.0 attributes into CSS rules[m
[32m+[m[32m *[m
[32m+[m[32m * @access private[m
[32m+[m[32m * @package dompdf[m
[32m+[m[32m */[m
[32m+[m[32mclass Attribute_Translator {[m
[32m+[m[41m  [m
[32m+[m[32m  // Munged data originally from[m
[32m+[m[32m  // http://www.w3.org/TR/REC-html40/index/attributes.html[m
[32m+[m[32m  //[m
[32m+[m[32m  // thank you var_export() :D[m
[32m+[m[32m  static private $__ATTRIBUTE_LOOKUP = array([m
[32m+[m[32m    //'caption' => array ( 'align' => '', ),[m
[32m+[m[32m    'img' => array([m
[32m+[m[32m      'align' => array([m
[32m+[m[32m        'bottom' => 'vertical-align: baseline;',[m
[32m+[m[32m        'middle' => 'vertical-align: middle;',[m
[32m+[m[32m        'top'    => 'vertical-align: top;',[m
[32m+[m[32m        'left'   => 'float: left;',[m
[32m+[m[32m        'right'  => 'float: right;'[m
[32m+[m[32m      ),[m
[32m+[m[32m      'border' => 'border-width: %0.2F px;',[m
[32m+[m[32m      'height' => 'height: %s px;',[m
[32m+[m[32m      'hspace' => 'padding-left: %1$0.2F px; padding-right: %1$0.2F px;',[m
[32m+[m[32m      'vspace' => 'padding-top: %1$0.2F px; padding-bottom: %1$0.2F px;',[m
[32m+[m[32m      'width'  => 'width: %s px;',[m
[32m+[m[32m    ),[m
[32m+[m[32m    'table' => array([m
[32m+[m[32m      'align' => array([m
[32m+[m[32m        'left'   => 'margin-left: 0; margin-right: auto;',[m
[32m+[m[32m        'center' => 'margin-left: auto; margin-right: auto;',[m
[32m+[m[32m        'right'  => 'margin-left: auto; margin-right: 0;'[m
[32m+[m[32m      ),[m
[32m+[m[32m      'bgcolor' => 'background-color: %s;',[m
[32m+[m[32m      'border' => '!set_table_border',[m
[32m+[m[32m      'cellpadding' => '!set_table_cellpadding',[m
[32m+[m[32m      'cellspacing' => 'border-spacing: %0.2F; border-collapse: separate;',[m
[32m+[m[32m      'frame' => array([m
[32m+[m[32m        'void'   => 'border-style: none;',[m
[32m+[m[32m        'above'  => 'border-top-style: solid;',[m
[32m+[m[32m        'below'  => 'border-bottom-style: solid;',[m
[32m+[m[32m        'hsides' => 'border-left-style: solid; border-right-style: solid;',[m
[32m+[m[32m        'vsides' => 'border-top-style: solid; border-bottom-style: solid;',[m
[32m+[m[32m        'lhs'    => 'border-left-style: solid;',[m
[32m+[m[32m        'rhs'    => 'border-right-style: solid;',[m
[32m+[m[32m        'box'    => 'border-style: solid;',[m
[32m+[m[32m        'border' => 'border-style: solid;'[m
[32m+[m[32m      ),[m
[32m+[m[32m      'rules' => '!set_table_rules',[m
[32m+[m[32m      'width' => 'width: %s;',[m
[32m+[m[32m    ),[m
[32m+[m[32m    'hr' => array([m
[32m+[m[32m      'align' => '!set_hr_align', // Need to grab width to set 'left' & 'right' correctly[m
[32m+[m[32m      'noshade' => 'border-style: solid;',[m
[32m+[m[32m      'size' => 'border-width: %0.2F px;',[m
[32m+[m[32m      'width' => 'width: %s;',[m
[32m+[m[32m    ),[m
[32m+[m[32m    'div' => array([m
[32m+[m[32m      'align' => 'text-align: %s;',[m
[32m+[m[32m    ),[m
[32m+[m[32m    'h1' => array([m
[32m+[m[32m      'align' => 'text-align: %s;',[m
[32m+[m[32m    ),[m
[32m+[m[32m    'h2' => array([m
[32m+[m[32m      'align' => 'text-align: %s;',[m
[32m+[m[32m    ),[m
[32m+[m[32m    'h3' => array([m
[32m+[m[32m      'align' => 'text-align: %s;',[m
[32m+[m[32m    ),[m
[32m+[m[32m    'h4' => array([m
[32m+[m[32m      'align' => 'text-align: %s;',[m
[32m+[m[32m    ),[m
[32m+[m[32m    'h5' => array([m
[32m+[m[32m      'align' => 'text-align: %s;',[m
[32m+[m[32m    ),[m
[32m+[m[32m    'h6' => array([m
[32m+[m[32m      'align' => 'text-align: %s;',[m
[32m+[m[32m    ),[m
[32m+[m[32m    'p' => array([m
[32m+[m[32m      'align' => 'text-align: %s;',[m
[32m+[m[32m    ),[m
[32m+[m[32m//    'col' => array([m
[32m+[m[32m//      'align'  => '',[m
[32m+[m[32m//      'valign' => '',[m
[32m+[m[32m//    ),[m
[32m+[m[32m//    'colgroup' => array([m
[32m+[m[32m//      'align'  => '',[m
[32m+[m[32m//      'valign' => '',[m
[32m+[m[32m//    ),[m
[32m+[m[32m    'tbody' => array([m
[32m+[m[32m      'align'  => '!set_table_row_align',[m
[32m+[m[32m      'valign' => '!set_table_row_valign',[m
[32m+[m[32m    ),[m
[32m+[m[32m    'td' => array([m
[32m+[m[32m      'align'   => 'text-align: %s;',[m
[32m+[m[32m      'bgcolor' => 'background-color: %s;',[m
[32m+[m[32m      'height'  => 'height: %s;',[m
[32m+[m[32m      'nowrap'  => 'white-space: nowrap;',[m
[32m+[m[32m      'valign'  => 'vertical-align: %s;',[m
[32m+[m[32m      'width'   => 'width: %s;',[m
[32m+[m[32m    ),[m
[32m+[m[32m    'tfoot' => array([m
[32m+[m[32m      'align'   => '!set_table_row_align',[m
[32m+[m[32m      'valign'  => '!set_table_row_valign',[m
[32m+[m[32m    ),[m
[32m+[m[32m    'th' => array([m
[32m+[m[32m      'align'   => 'text-align: %s;',[m
[32m+[m[32m      'bgcolor' => 'background-color: %s;',[m
[32m+[m[32m      'height'  => 'height: %s;',[m
[32m+[m[32m      'nowrap'  => 'white-space: nowrap;',[m
[32m+[m[32m      'valign'  => 'vertical-align: %s;',[m
[32m+[m[32m      'width'   => 'width: %s;',[m
[32m+[m[32m    ),[m
[32m+[m[32m    'thead' => array([m
[32m+[m[32m      'align'   => '!set_table_row_align',[m
[32m+[m[32m      'valign'  => '!set_table_row_valign',[m
[32m+[m[32m    ),[m
[32m+[m[32m    'tr' => array([m
[32m+[m[32m      'align'   => '!set_table_row_align',[m
[32m+[m[32m      'bgcolor' => '!set_table_row_bgcolor',[m
[32m+[m[32m      'valign'  => '!set_table_row_valign',[m
[32m+[m[32m    ),[m
[32m+[m[32m    'body' => array([m
[32m+[m[32m      'background' => 'background-image: url(%s);',[m
[32m+[m[32m      'bgcolor'    => 'background-color: %s;',[m
[32m+[m[32m      'link'       => '!set_body_link',[m
[32m+[m[32m      'text'       => 'color: %s;',[m
[32m+[m[32m    ),[m
[32m+[m[32m    'br' => array([m
[32m+[m[32m      'clear' => 'clear: %s;',[m
[32m+[m[32m    ),[m
[32m+[m[32m    'basefont' => array([m
[32m+[m[32m      'color' => 'color: %s;',[m
[32m+[m[32m      'face'  => 'font-family: %s;',[m
[32m+[m[32m      'size'  => '!set_basefont_size',[m
[32m+[m[32m    ),[m
[32m+[m[32m    'font' => array([m
[32m+[m[32m      'color' => 'color: %s;',[m
[32m+[m[32m      'face'  => 'font-family: %s;',[m
[32m+[m[32m      'size'  => '!set_font_size',[m
[32m+[m[32m    ),[m
[32m+[m[32m    'dir' => array([m
[32m+[m[32m      'compact' => 'margin: 0.5em 0;',[m
[32m+[m[32m    ),[m
[32m+[m[32m    'dl' => array([m
[32m+[m[32m      'compact' => 'margin: 0.5em 0;',[m
[32m+[m[32m    ),[m
[32m+[m[32m    'menu' => array([m
[32m+[m[32m      'compact' => 'margin: 0.5em 0;',[m
[32m+[m[32m    ),[m
[32m+[m[32m    'ol' => array([m
[32m+[m[32m      'compact' => 'margin: 0.5em 0;',[m
[32m+[m[32m      'start'   => 'counter-reset: -dompdf-default-counter %d;',[m
[32m+[m[32m      'type'    => 'list-style-type: %s;',[m
[32m+[m[32m    ),[m
[32m+[m[32m    'ul' => array([m
[32m+[m[32m      'compact' => 'margin: 0.5em 0;',[m
[32m+[m[32m      'type'    => 'list-style-type: %s;',[m
[32m+[m[32m    ),[m
[32m+[m[32m    'li' => array([m
[32m+[m[32m      'type'    => 'list-style-type: %s;',[m
[32m+[m[32m      'value'   => 'counter-reset: -dompdf-default-counter %d;',[m
[32m+[m[32m    ),[m
[32m+[m[32m    'pre' => array([m
[32m+[m[32m      'width' => 'width: %s;',[m
[32m+[m[32m    ),[m
[32m+[m[32m  );[m
[32m+[m
[32m+[m[41m  [m
[32m+[m[32m  static protected $_last_basefont_size = 3;[m
[32m+[m[32m  static protected $_font_size_lookup = array([m
[32m+[m[32m    // For basefont support[m
[32m+[m[32m    -3 => "4pt",[m[41m [m
[32m+[m[32m    -2 => "5pt",[m[41m [m
[32m+[m[32m    -1 => "6pt",[m[41m [m
[32m+[m[32m     0 => "7pt",[m[41m [m
[32m+[m[41m    [m
[32m+[m[32m     1 => "8pt",[m
[32m+[m[32m     2 => "10pt",[m
[32m+[m[32m     3 => "12pt",[m
[32m+[m[32m     4 => "14pt",[m
[32m+[m[32m     5 => "18pt",[m
[32m+[m[32m     6 => "24pt",[m
[32m+[m[32m     7 => "34pt",[m
[32m+[m[41m     [m
[32m+[m[32m    // For basefont support[m
[32m+[m[32m     8 => "48pt",[m[41m [m
[32m+[m[32m     9 => "44pt",[m[41m [m
[32m+[m[32m    10 => "52pt",[m[41m [m
[32m+[m[32m    11 => "60pt",[m[41m [m
[32m+[m[32m  );[m
[32m+[m[41m  [m
[32m+[m[41m  [m
[32m+[m[32m  static function translate_attributes($frame) {[m
[32m+[m[32m    $node = $frame->get_node();[m
[32m+[m[32m    $tag = $node->tagName;[m
[32m+[m
[32m+[m[32m    if ( !isset(self::$__ATTRIBUTE_LOOKUP[$tag]) )[m
[32m+[m[32m      return;[m
[32m+[m
[32m+[m[32m    $valid_attrs = self::$__ATTRIBUTE_LOOKUP[$tag];[m
[32m+[m[32m    $attrs = $node->attributes;[m
[32m+[m[32m    $style = rtrim($node->getAttribute("style"), "; ");[m
[32m+[m[32m    if ( $style != "" )[m
[32m+[m[32m      $style .= ";";[m
[32m+[m
[32m+[m[32m    foreach ($attrs as $attr => $attr_node ) {[m
[32m+[m[32m      if ( !isset($valid_attrs[$attr]) )[m
[32m+[m[32m        continue;[m
[32m+[m
[32m+[m[32m      $value = $attr_node->value;[m
[32m+[m
[32m+[m[32m      $target = $valid_attrs[$attr];[m
[32m+[m[41m      [m
[32m+[m[32m      // Look up $value in $target, if $target is an array:[m
[32m+[m[32m      if ( is_array($target) ) {[m
[32m+[m
[32m+[m[32m        if ( isset($target[$value]) )[m
[32m+[m[32m          $style .= " " . self::_resolve_target($node, $target[$value], $value);[m
[32m+[m
[32m+[m[32m      } else {[m
[32m+[m[32m        // otherwise use target directly[m
[32m+[m[32m        $style .= " " . self::_resolve_target($node, $target, $value);[m
[32m+[m[32m      }[m
[32m+[m[32m    }[m
[32m+[m[32m    if ( !is_null($style) ) {[m
[32m+[m[32m      $style = ltrim($style);[m
[32m+[m[32m      $node->setAttribute("style", $style);[m
[32m+[m[32m    }[m
[32m+[m[41m    [m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  static protected function _resolve_target($node, $target, $value) {[m
[32m+[m[32m    if ( $target[0] === "!" ) {[m
[32m+[m[32m      // Function call[m
[32m+[m[32m      $func = "_" . mb_substr($target, 1);[m
[32m+[m[32m      return self::$func($node, $value);[m
[32m+[m[32m    }[m
[32m+[m[41m    [m
[32m+[m[32m    return $value ? sprintf($target, $value) : "";[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  //.....................................................................[m
[32m+[m
[32m+[m[32m  static protected function _set_table_cellpadding($node, $value) {[m
[32m+[m[32m    $td_list = $node->getElementsByTagName("td");[m
[32m+[m[32m    foreach ($td_list as $td) {[m
[32m+[m[32m      $style = rtrim($td->getAttribute("style"), ";");[m
[32m+[m[32m      $style .= "; padding: $value" . "px;";[m
[32m+[m[32m      $style = ltrim($style, ";");[m
[32m+[m[32m      $td->setAttribute("style", $style);[m
[32m+[m[32m    }[m
[32m+[m[32m    return null;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  static protected function _set_table_border($node, $value) {[m
[32m+[m[32m    $td_list = $node->getElementsByTagName("td");[m
[32m+[m[32m    foreach ($td_list as $td) {[m
[32m+[m[32m      $style = $td->getAttribute("style");[m
[32m+[m[32m      if ( strpos($style, "border") !== false )[m
[32m+[m[32m        continue;[m
[32m+[m[32m      $style = rtrim($style, ";");[m
[32m+[m[32m      $style .= "; border-width: " . ($value > 0 ? 1 : 0) . "pt; border-style: inset;";[m
[32m+[m[32m      $style = ltrim($style, ";");[m
[32m+[m[32m      $td->setAttribute("style", $style);[m
[32m+[m[32m    }[m
[32m+[m[41m    [m
[32m+[m[32m    $th_list = $node->getElementsByTagName("th");[m
[32m+[m[32m    foreach ($th_list as $th) {[m
[32m+[m[32m      $style = $th->getAttribute("style");[m
[32m+[m[32m      if ( strpos($style, "border") !== false )[m
[32m+[m[32m        continue;[m
[32m+[m[32m      $style = rtrim($style, ";");[m
[32m+[m[32m      $style .= "; border-width: " . ($value > 0 ? 1 : 0) . "pt; border-style: inset;";[m
[32m+[m[32m      $style = ltrim($style, ";");[m
[32m+[m[32m      $th->setAttribute("style", $style);[m
[32m+[m[32m    }[m
[32m+[m[41m    [m
[32m+[m[32m    $style = rtrim($node->getAttribute("style"),";");[m
[32m+[m[32m    $style .= "; border-width: $value" . "px; ";[m
[32m+[m[32m    return ltrim($style, "; ");[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  static protected function _set_table_cellspacing($node, $value) {[m
[32m+[m[32m    $style = rtrim($node->getAttribute($style), ";");[m
[32m+[m
[32m+[m[32m    if ( $value == 0 )[m
[32m+[m[32m      $style .= "; border-collapse: collapse;";[m
[32m+[m[41m      [m
[32m+[m[32m    else[m
[32m+[m[32m      $style = "; border-collapse: separate;";[m
[32m+[m[41m      [m
[32m+[m[32m    return ltrim($style, ";");[m
[32m+[m[32m  }[m
[32m+[m[41m  [m
[32m+[m[32m  static protected function _set_table_rules($node, $value) {[m
[32m+[m[32m    $new_style = "; border-collapse: collapse;";[m
[32m+[m[32m    switch ($value) {[m
[32m+[m[32m    case "none":[m
[32m+[m[32m      $new_style .= "border-style: none;";[m
[32m+[m[32m      break;[m
[32m+[m
[32m+[m[32m    case "groups":[m
[32m+[m[32m      // FIXME: unsupported[m
[32m+[m[32m      return;[m
[32m+[m
[32m+[m[32m    case "rows":[m
[32m+[m[32m      $new_style .= "border-style: solid none solid none; border-width: 1px; ";[m
[32m+[m[32m      break;[m
[32m+[m
[32m+[m[32m    case "cols":[m
[32m+[m[32m      $new_style .= "border-style: none solid none solid; border-width: 1px; ";[m
[32m+[m[32m      break;[m
[32m+[m
[32m+[m[32m    case "all":[m
[32m+[m[32m      $new_style .= "border-style: solid; border-width: 1px; ";[m
[32m+[m[32m      break;[m
[32m+[m[41m      [m
[32m+[m[32m    default:[m
[32m+[m[32m      // Invalid value[m
[32m+[m[32m      return null;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    $td_list = $node->getElementsByTagName("td");[m
[32m+[m[41m    [m
[32m+[m[32m    foreach ($td_list as $td) {[m
[32m+[m[32m      $style = $td->getAttribute("style");[m
[32m+[m[32m      $style .= $new_style;[m
[32m+[m[32m      $td->setAttribute("style", $style);[m
[32m+[m[32m    }[m
[32m+[m[32m    return null;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  static protected function _set_hr_align($node, $value) {[m
[32m+[m[32m    $style = rtrim($node->getAttribute("style"),";");[m
[32m+[m[32m    $width = $node->getAttribute("width");[m
[32m+[m[32m    if ( $width == "" )[m
[32m+[m[32m      $width = "100%";[m
[32m+[m
[32m+[m[32m    $remainder = 100 - (double)rtrim($width, "% ");[m
[32m+[m[41m    [m
[32m+[m[32m    switch ($value) {[m
[32m+[m[32m    case "left":[m
[32m+[m[32m      $style .= "; margin-right: $remainder %;";[m
[32m+[m[32m      break;[m
[32m+[m
[32m+[m[32m    case "right":[m
[32m+[m[32m      $style .= "; margin-left: $remainder %;";[m
[32m+[m[32m      break;[m
[32m+[m
[32m+[m[32m    case "center":[m
[32m+[m[32m      $style .= "; margin-left: auto; margin-right: auto;";[m
[32m+[m[32m      break;[m
[32m+[m
[32m+[m[32m    default:[m
[32m+[m[32m      return null;[m
[32m+[m[32m    }[m
[32m+[m[32m    return ltrim($style, "; ");[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  static protected function _set_table_row_align($node, $value) {[m
[32m+[m
[32m+[m[32m    $td_list = $node->getElementsByTagName("td");[m
[32m+[m
[32m+[m[32m    foreach ($td_list as $td) {[m
[32m+[m[32m      $style = rtrim($td->getAttribute("style"), ";");[m
[32m+[m[32m      $style .= "; text-align: $value;";[m
[32m+[m[32m      $style = ltrim($style, "; ");[m
[32m+[m[32m      $td->setAttribute("style", $style);[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    return null;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  static protected function _set_table_row_valign($node, $value) {[m
[32m+[m
[32m+[m[32m    $td_list = $node->getElementsByTagName("td");[m
[32m+[m
[32m+[m[32m    foreach ($td_list as $td) {[m
[32m+[m[32m      $style = rtrim($td->getAttribute("style"), ";");[m
[32m+[m[32m      $style .= "; vertical-align: $value;";[m
[32m+[m[32m      $style = ltrim($style, "; ");[m
[32m+[m[32m      $td->setAttribute("style", $style);[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    return null;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  static protected function _set_table_row_bgcolor($node, $value) {[m
[32m+[m
[32m+[m[32m    $td_list = $node->getElementsByTagName("td");[m
[32m+[m
[32m+[m[32m    foreach ($td_list as $td) {[m
[32m+[m[32m      $style = rtrim($td->getAttribute("style"), ";");[m
[32m+[m[32m      $style .= "; background-color: $value;";[m
[32m+[m[32m      $style = ltrim($style, "; ");[m
[32m+[m[32m      $td->setAttribute("style", $style);[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    return null;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  static protected function _set_body_link($node, $value) {[m
[32m+[m
[32m+[m[32m    $a_list = $node->getElementsByTagName("a");[m
[32m+[m
[32m+[m[32m    foreach ($a_list as $a) {[m
[32m+[m[32m      $style = rtrim($a->getAttribute("style"), ";");[m
[32m+[m[32m      $style .= "; color: $value;";[m
[32m+[m[32m      $style = ltrim($style, "; ");[m
[32m+[m[32m      $a->setAttribute("style", $style);[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    return null;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  static protected function _set_basefont_size($node, $value) {[m
[32m+[m[32m    // FIXME: ? we don't actually set the font size of anything here, just[m
[32m+[m[32m    // the base size for later modification by <font> tags.[m
[32m+[m[32m    self::$_last_basefont_size = $value;[m
[32m+[m[32m    return null;[m
[32m+[m[32m  }[m
[32m+[m[41m  [m
[32m+[m[32m  static protected function _set_font_size($node, $value) {[m
[32m+[m[32m    $style = $node->getAttribute("style");[m
[32m+[m
[32m+[m[32m    if ( $value[0] === "-" || $value[0] === "+" )[m
[32m+[m[32m      $value = self::$_last_basefont_size + (int)$value;[m
[32m+[m
[32m+[m[32m    if ( isset(self::$_font_size_lookup[$value]) )[m
[32m+[m[32m      $style .= "; font-size: " . self::$_font_size_lookup[$value] . ";";[m
[32m+[m[32m    else[m
[32m+[m[32m      $style .= "; font-size: $value;";[m
[32m+[m
[32m+[m[32m    return ltrim($style, "; ");[m
[32m+[m[41m    [m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m}[m
[1mdiff --git a/application/third_party/dompdf/include/block_frame_decorator.cls.php b/application/third_party/dompdf/include/block_frame_decorator.cls.php[m
[1mnew file mode 100644[m
[1mindex 0000000..c03ff7b[m
[1m--- /dev/null[m
[1m+++ b/application/third_party/dompdf/include/block_frame_decorator.cls.php[m
[36m@@ -0,0 +1,354 @@[m
[32m+[m[32m<?php[m
[32m+[m[32m/**[m
[32m+[m[32m * DOMPDF - PHP5 HTML to PDF renderer[m
[32m+[m[32m *[m
[32m+[m[32m * File: $RCSfile: block_frame_decorator.cls.php,v $[m
[32m+[m[32m * Created on: 2004-06-02[m
[32m+[m[32m *[m
[32m+[m[32m * Copyright (c) 2004 - Benj Carson <benjcarson@digitaljunkies.ca>[m
[32m+[m[32m *[m
[32m+[m[32m * This library is free software; you can redistribute it and/or[m
[32m+[m[32m * modify it under the terms of the GNU Lesser General Public[m
[32m+[m[32m * License as published by the Free Software Foundation; either[m
[32m+[m[32m * version 2.1 of the License, or (at your option) any later version.[m
[32m+[m[32m *[m
[32m+[m[32m * This library is distributed in the hope that it will be useful,[m
[32m+[m[32m * but WITHOUT ANY WARRANTY; without even the implied warranty of[m
[32m+[m[32m * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU[m
[32m+[m[32m * Lesser General Public License for more details.[m
[32m+[m[32m *[m
[32m+[m[32m * You should have received a copy of the GNU Lesser General Public License[m
[32m+[m[32m * along with this library in the file LICENSE.LGPL; if not, write to the[m
[32m+[m[32m * Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA[m
[32m+[m[32m * 02111-1307 USA[m
[32m+[m[32m *[m
[32m+[m[32m * Alternatively, you may distribute this software under the terms of the[m
[32m+[m[32m * PHP License, version 3.0 or later.  A copy of this license should have[m
[32m+[m[32m * been distributed with this file in the file LICENSE.PHP .  If this is not[m
[32m+[m[32m * the case, you can obtain a copy at http://www.php.net/license/3_0.txt.[m
[32m+[m[32m *[m
[32m+[m[32m * The latest version of DOMPDF might be available at:[m
[32m+[m[32m * http://www.dompdf.com/[m
[32m+[m[32m *[m
[32m+[m[32m * @link http://www.dompdf.com/[m
[32m+[m[32m * @copyright 2004 Benj Carson[m
[32m+[m[32m * @author Benj Carson <benjcarson@digitaljunkies.ca>[m
[32m+[m[32m * @package dompdf[m
[32m+[m
[32m+[m[32m */[m
[32m+[m
[32m+[m[32m/* $Id: block_frame_decorator.cls.php 358 2011-01-30 22:22:47Z fabien.menager $ */[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Decorates frames for block layout[m
[32m+[m[32m *[m
[32m+[m[32m * @access private[m
[32m+[m[32m * @package dompdf[m
[32m+[m[32m */[m
[32m+[m[32mclass Block_Frame_Decorator extends Frame_Decorator {[m
[32m+[m
[32m+[m[32m  const DEFAULT_COUNTER = "-dompdf-default-counter";[m
[32m+[m
[32m+[m[32m  protected $_lines; // array( [num] => array([frames] => array(<frame list>),[m
[32m+[m[32m                     //                 y, w, h) )[m
[32m+[m[32m  protected $_counters; // array([id] => counter_value) (for generated content)[m
[32m+[m[32m  protected $_cl;    // current line index[m
[32m+[m[41m  [m
[32m+[m[32m  static protected $_initial_line_state = array([m
[32m+[m[32m    "frames" => array(),[m
[32m+[m[32m    "wc" => 0,[m
[32m+[m[32m    "y" => null,[m
[32m+[m[32m    "w" => 0,[m
[32m+[m[32m    "h" => 0,[m
[32m+[m[32m    "left" => 0,[m
[32m+[m[32m    "right" => 0,[m
[32m+[m[32m    "tallest_frame" => null,[m
[32m+[m[32m    "br" => false,[m
[32m+[m[32m  );[m
[32m+[m
[32m+[m[32m  //........................................................................[m
[32m+[m
[32m+[m[32m  function __construct(Frame $frame, DOMPDF $dompdf) {[m
[32m+[m[32m    parent::__construct($frame, $dompdf);[m
[32m+[m[41m    [m
[32m+[m[32m    $this->_lines = array(self::$_initial_line_state);[m
[32m+[m[41m    [m
[32m+[m[32m    $this->_counters = array(self::DEFAULT_COUNTER => 0);[m
[32m+[m[32m    $this->_cl = 0;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  //........................................................................[m
[32m+[m
[32m+[m[32m  function reset() {[m
[32m+[m[32m    parent::reset();[m
[32m+[m[41m    [m
[32m+[m[32m    $this->_lines = array(self::$_initial_line_state);[m
[32m+[m[41m    [m
[32m+[m[32m    $this->_counters = array(self::DEFAULT_COUNTER => 0);[m
[32m+[m[32m    $this->_cl = 0;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  //........................................................................[m
[32m+[m
[32m+[m[32m  // Accessor methods[m
[32m+[m
[32m+[m[32m  function get_current_line($i = null) {[m
[32m+[m[32m    $cl = $this->_lines[$this->_cl];[m
[32m+[m[32m    if ( isset($i) )[m
[32m+[m[32m      return $cl[$i];[m
[32m+[m[32m    return $cl;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  function get_current_line_number() {[m
[32m+[m[32m    return $this->_cl;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  function get_lines() { return $this->_lines; }[m
[32m+[m
[32m+[m[32m  //........................................................................[m
[32m+[m
[32m+[m[32m  // Set methods[m
[32m+[m[32m  function set_current_line($y = null, $w = null, $h = null, $tallest_frame = null, $left = null, $right = null) {[m
[32m+[m[32m    $this->set_line($this->_cl, $y, $w, $h, $tallest_frame, $left, $right);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  function clear_line($i) {[m
[32m+[m[32m    if ( isset($this->_lines[$i]) )[m
[32m+[m[32m      unset($this->_lines[$i]);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  function set_line($lineno, $y = null, $w = null, $h = null, $tallest_frame = null, $left = null, $right = null) {[m
[32m+[m
[32m+[m[32m    if ( is_array($y) )[m
[32m+[m[32m      extract($y);[m
[32m+[m
[32m+[m[32m    if (is_numeric($y))[m
[32m+[m[32m      $this->_lines[$lineno]["y"] = $y;[m
[32m+[m
[32m+[m[32m    if (is_numeric($w))[m
[32m+[m[32m      $this->_lines[$lineno]["w"] = $w;[m
[32m+[m
[32m+[m[32m    if (is_numeric($h))[m
[32m+[m[32m      $this->_lines[$lineno]["h"] = $h;[m
[32m+[m
[32m+[m[32m    if ($tallest_frame && $tallest_frame instanceof Frame)[m
[32m+[m[32m      $this->_lines[$lineno]["tallest_frame"] = $tallest_frame;[m
[32m+[m
[32m+[m[32m    if (is_numeric($left))[m
[32m+[m[32m      $this->_lines[$lineno]["left"] = $left;[m
[32m+[m
[32m+[m[32m    if (is_numeric($right))[m
[32m+[m[32m      $this->_lines[$lineno]["right"] = $right;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m
[32m+[m[32m  function add_frame_to_line(Frame $frame) {[m
[32m+[m[32m    $style = $frame->get_style();[m
[32m+[m[41m    [m
[32m+[m[32m    if ( in_array($style->position, array("absolute", "fixed")) ||[m
[32m+[m[32m         (DOMPDF_ENABLE_CSS_FLOAT && $style->float !== "none") ) {[m
[32m+[m[32m      return;[m
[32m+[m[32m    }[m
[32m+[m[41m    [m
[32m+[m[32m    $frame->set_containing_line($this->_lines[$this->_cl]);[m
[32m+[m[41m    [m
[32m+[m[32m    /*[m
[32m+[m[32m    // Adds a new line after a block, only if certain conditions are met[m
[32m+[m[32m    if ((($frame instanceof Inline_Frame_Decorator && $frame->get_node()->nodeName !== "br") ||[m[41m [m
[32m+[m[32m          $frame instanceof Text_Frame_Decorator && trim($frame->get_text())) &&[m[41m [m
[32m+[m[32m        ($frame->get_prev_sibling() && $frame->get_prev_sibling()->get_style()->display === "block" &&[m[41m [m
[32m+[m[32m         $this->_lines[$this->_cl]["w"] > 0 )) {[m
[32m+[m[41m           [m
[32m+[m[32m           $this->maximize_line_height( $style->length_in_pt($style->line_height), $frame );[m
[32m+[m[32m           $this->add_line();[m
[32m+[m[41m         [m
[32m+[m[32m           // Add each child of the inline frame to the line individually[m
[32m+[m[32m           foreach ($frame->get_children() as $child)[m
[32m+[m[32m             $this->add_frame_to_line( $child );[m[41m     [m
[32m+[m[32m    }[m
[32m+[m[32m    else*/[m
[32m+[m
[32m+[m[32m    // Handle inline frames (which are effectively wrappers)[m
[32m+[m[32m    if ( $frame instanceof Inline_Frame_Decorator ) {[m
[32m+[m
[32m+[m[32m      // Handle line breaks[m
[32m+[m[32m      if ( $frame->get_node()->nodeName === "br" ) {[m
[32m+[m[32m        $this->maximize_line_height( $style->length_in_pt($style->line_height), $frame );[m
[32m+[m[32m        $this->add_line(true);[m
[32m+[m[32m      }[m
[32m+[m
[32m+[m[32m      return;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    // Trim leading text if this is an empty line.  Kinda a hack to put it here,[m
[32m+[m[32m    // but what can you do...[m
[32m+[m[32m    if ( $this->_lines[$this->_cl]["w"] == 0 &&[m
[32m+[m[32m         $frame->get_node()->nodeName === "#text" &&[m
[32m+[m[32m         ($style->white_space !== "pre" ||[m
[32m+[m[32m          $style->white_space !== "pre-wrap") ) {[m
[32m+[m
[32m+[m[32m      $frame->set_text( ltrim($frame->get_text()) );[m
[32m+[m[32m      $frame->recalculate_width();[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    $w = $frame->get_margin_width();[m
[32m+[m
[32m+[m[32m    if ( $w == 0 )[m
[32m+[m[32m      return;[m
[32m+[m
[32m+[m[32m    // Debugging code:[m
[32m+[m[32m    /*[m
[32m+[m[32m    pre_r("\n<h3>Adding frame to line:</h3>");[m
[32m+[m
[32m+[m[32m    //    pre_r("Me: " . $this->get_node()->nodeName . " (" . spl_object_hash($this->get_node()) . ")");[m
[32m+[m[32m    //    pre_r("Node: " . $frame->get_node()->nodeName . " (" . spl_object_hash($frame->get_node()) . ")");[m
[32m+[m[32m    if ( $frame->get_node()->nodeName === "#text" )[m
[32m+[m[32m      pre_r('"'.$frame->get_node()->nodeValue.'"');[m
[32m+[m
[32m+[m[32m    pre_r("Line width: " . $this->_lines[$this->_cl]["w"]);[m
[32m+[m[32m    pre_r("Frame: " . get_class($frame));[m
[32m+[m[32m    pre_r("Frame width: "  . $w);[m
[32m+[m[32m    pre_r("Frame height: " . $frame->get_margin_height());[m
[32m+[m[32m    pre_r("Containing block width: " . $this->get_containing_block("w"));[m
[32m+[m[32m    */[m
[32m+[m[32m    // End debugging[m
[32m+[m
[32m+[m[32m    $line = $this->_lines[$this->_cl];[m
[32m+[m[32m    if ( $line["left"] + $line["w"] + $line["right"] + $w > $this->get_containing_block("w"))[m
[32m+[m[32m      $this->add_line();[m
[32m+[m
[32m+[m[32m    $frame->position();[m
[32m+[m
[32m+[m[32m    $current_line = &$this->_lines[$this->_cl];[m
[32m+[m[41m    [m
[32m+[m[32m    $current_line["frames"][] = $frame;[m
[32m+[m
[32m+[m[32m    if ( $frame->get_node()->nodeName === "#text")[m
[32m+[m[32m      $current_line["wc"] += count(preg_split("/\s+/", trim($frame->get_text())));[m
[32m+[m
[32m+[m[32m    $this->increase_line_width($w);[m
[32m+[m[41m    [m
[32m+[m[32m    $this->maximize_line_height($frame->get_margin_height(), $frame);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  function remove_frames_from_line(Frame $frame) {[m
[32m+[m[32m    // Search backwards through the lines for $frame[m
[32m+[m[32m    $i = $this->_cl;[m
[32m+[m
[32m+[m[32m    while ($i >= 0) {[m
[32m+[m[32m      if ( ($j = in_array($frame, $this->_lines[$i]["frames"], true)) !== false )[m
[32m+[m[32m        break;[m
[32m+[m[32m      $i--;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    if ( $j === false )[m
[32m+[m[32m      return;[m
[32m+[m
[32m+[m[32m    // Remove $frame and all frames that follow[m
[32m+[m[32m    while ($j < count($this->_lines[$i]["frames"])) {[m
[32m+[m[32m      $f = $this->_lines[$i]["frames"][$j];[m
[32m+[m[32m      $this->_lines[$i]["frames"][$j] = null;[m
[32m+[m[32m      unset($this->_lines[$i]["frames"][$j]);[m
[32m+[m[32m      $j++;[m
[32m+[m[32m      $this->_lines[$i]["w"] -= $f->get_margin_width();[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    // Recalculate the height of the line[m
[32m+[m[32m    $h = 0;[m
[32m+[m[32m    foreach ($this->_lines[$i]["frames"] as $f)[m
[32m+[m[32m      $h = max( $h, $f->get_margin_height() );[m
[32m+[m
[32m+[m[32m    $this->_lines[$i]["h"] = $h;[m
[32m+[m
[32m+[m[32m    // Remove all lines that follow[m
[32m+[m[32m    while ($this->_cl > $i) {[m
[32m+[m[32m      $this->_lines[ $this->_cl ] = null;[m
[32m+[m[32m      unset($this->_lines[ $this->_cl ]);[m
[32m+[m[32m      $this->_cl--;[m
[32m+[m[32m    }[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  function increase_line_width($w) {[m
[32m+[m[32m    $this->_lines[ $this->_cl ]["w"] += $w;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  function maximize_line_height($val, Frame $frame) {[m
[32m+[m[32m    if ( $val > $this->_lines[ $this->_cl ]["h"] ) {[m
[32m+[m[32m      $this->_lines[ $this->_cl ]["tallest_frame"] = $frame;[m
[32m+[m[32m      $this->_lines[ $this->_cl ]["h"] = $val;[m
[32m+[m[32m    }[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  function add_line($br = false) {[m
[32m+[m
[32m+[m[32m//     if ( $this->_lines[$this->_cl]["h"] == 0 ) //count($this->_lines[$i]["frames"]) == 0 ||[m
[32m+[m[32m//       return;[m
[32m+[m
[32m+[m[32m    $this->_lines[$this->_cl]["br"] = $br;[m
[32m+[m[32m    $y = $this->_lines[$this->_cl]["y"] + $this->_lines[$this->_cl]["h"];[m
[32m+[m
[32m+[m[32m    $new_line = self::$_initial_line_state;[m
[32m+[m[32m    $new_line["y"] = $y;[m
[32m+[m[41m    [m
[32m+[m[32m    $this->_lines[ ++$this->_cl ] = $new_line;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  //........................................................................[m
[32m+[m
[32m+[m[32m  function reset_counter($id = self::DEFAULT_COUNTER, $value = 0) {[m
[32m+[m[32m    $this->_counters[$id] = $value;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  function increment_counter($id = self::DEFAULT_COUNTER, $increment = 1) {[m
[32m+[m[32m    if ( !isset($this->_counters[$id]) )[m
[32m+[m[32m      $this->_counters[$id] = $increment;[m
[32m+[m[32m    else[m
[32m+[m[32m      $this->_counters[$id] += $increment;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  // TODO: What version is the best : this one or the one in List_Bullet_Renderer ?[m
[32m+[m[32m  function counter_value($id = self::DEFAULT_COUNTER, $type = "decimal") {[m
[32m+[m[32m    $type = mb_strtolower($type);[m
[32m+[m[41m    [m
[32m+[m[32m    if ( $id === "page" ) {[m
[32m+[m[32m      $value = $this->get_dompdf()->get_canvas()->get_page_number();[m
[32m+[m[32m    }[m
[32m+[m[32m    elseif ( !isset($this->_counters[$id]) ) {[m
[32m+[m[32m      $this->_counters[$id] = 0;[m
[32m+[m[32m      $value = 0;[m
[32m+[m[32m    }[m
[32m+[m[32m    else {[m
[32m+[m[32m      $value = $this->_counters[$id];[m
[32m+[m[32m    }[m
[32m+[m[41m    [m
[32m+[m[32m    switch ($type) {[m
[32m+[m
[32m+[m[32m    default:[m
[32m+[m[32m    case "decimal":[m
[32m+[m[32m      return $value;[m
[32m+[m
[32m+[m[32m    case "decimal-leading-zero":[m
[32m+[m[32m      return str_pad($value, 2, "0");[m
[32m+[m
[32m+[m[32m    case "lower-roman":[m
[32m+[m[32m      return dec2roman($value);[m
[32m+[m
[32m+[m[32m    case "upper-roman":[m
[32m+[m[32m      return mb_strtoupper(dec2roman($value));[m
[32m+[m
[32m+[m[32m    case "lower-latin":[m
[32m+[m[32m    case "lower-alpha":[m
[32m+[m[32m      return chr( ($value % 26) + ord('a') - 1);[m
[32m+[m
[32m+[m[32m    case "upper-latin":[m
[32m+[m[32m    case "upper-alpha":[m
[32m+[m[32m      return chr( ($value % 26) + ord('A') - 1);[m
[32m+[m
[32m+[m[32m    case "lower-greek":[m
[32m+[m[32m      return unichr($value + 944);[m
[32m+[m
[32m+[m[32m    case "upper-greek":[m
[32m+[m[32m      return unichr($value + 912);[m
[32m+[m[32m    }[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[1mdiff --git a/application/third_party/dompdf/include/block_frame_reflower.cls.php b/application/third_party/dompdf/include/block_frame_reflower.cls.php[m
[1mnew file mode 100644[m
[1mindex 0000000..c2350bd[m
[1m--- /dev/null[m
[1m+++ b/application/third_party/dompdf/include/block_frame_reflower.cls.php[m
[36m@@ -0,0 +1,756 @@[m
[32m+[m[32m<?php[m
[32m+[m[32m/**[m
[32m+[m[32m * DOMPDF - PHP5 HTML to PDF renderer[m
[32m+[m[32m *[m
[32m+[m[32m * File: $RCSfile: block_frame_reflower.cls.php,v $[m
[32m+[m[32m * Created on: 2004-06-17[m
[32m+[m[32m *[m
[32m+[m[32m * Copyright (c) 2004 - Benj Carson <benjcarson@digitaljunkies.ca>[m
[32m+[m[32m *[m
[32m+[m[32m * This library is free software; you can redistribute it and/or[m
[32m+[m[32m * modify it under the terms of the GNU Lesser General Public[m
[32m+[m[32m * License as published by the Free Software Foundation; either[m
[32m+[m[32m * version 2.1 of the License, or (at your option) any later version.[m
[32m+[m[32m *[m
[32m+[m[32m * This library is distributed in the hope that it will be useful,[m
[32m+[m[32m * but WITHOUT ANY WARRANTY; without even the implied warranty of[m
[32m+[m[32m * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU[m
[32m+[m[32m * Lesser General Public License for more details.[m
[32m+[m[32m *[m
[32m+[m[32m * You should have received a copy of the GNU Lesser General Public License[m
[32m+[m[32m * along with this library in the file LICENSE.LGPL; if not, write to the[m
[32m+[m[32m * Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA[m
[32m+[m[32m * 02111-1307 USA[m
[32m+[m[32m *[m
[32m+[m[32m * Alternatively, you may distribute this software under the terms of the[m
[32m+[m[32m * PHP License, version 3.0 or later.  A copy of this license should have[m
[32m+[m[32m * been distributed with this file in the file LICENSE.PHP .  If this is not[m
[32m+[m[32m * the case, you can obtain a copy at http://www.php.net/license/3_0.txt.[m
[32m+[m[32m *[m
[32m+[m[32m * The latest version of DOMPDF might be available at:[m
[32m+[m[32m * http://www.dompdf.com/[m
[32m+[m[32m *[m
[32m+[m[32m * @link http://www.dompdf.com/[m
[32m+[m[32m * @copyright 2004 Benj Carson[m
[32m+[m[32m * @author Benj Carson <benjcarson@digitaljunkies.ca>[m
[32m+[m[32m * @package dompdf[m
[32m+[m
[32m+[m[32m */[m
[32m+[m
[32m+[m[32m/* $Id: block_frame_reflower.cls.php 358 2011-01-30 22:22:47Z fabien.menager $ */[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Reflows block frames[m
[32m+[m[32m *[m
[32m+[m[32m * @access private[m
[32m+[m[32m * @package dompdf[m
[32m+[m[32m */[m
[32m+[m[32mclass Block_Frame_Reflower extends Frame_Reflower {[m
[32m+[m[32m  // Minimum line width to justify, as fraction of available width[m
[32m+[m[32m  const MIN_JUSTIFY_WIDTH = 0.80;[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * @var Block_Frame_Decorator[m
[32m+[m[32m   */[m
[32m+[m[32m  protected $_frame;[m
[32m+[m[41m  [m
[32m+[m[32m  function __construct(Block_Frame_Decorator $frame) { parent::__construct($frame); }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   *  Calculate the ideal used value for the width property as per:[m
[32m+[m[32m   *  http://www.w3.org/TR/CSS21/visudet.html#Computing_widths_and_margins[m
[32m+[m[32m   *[m[41m  [m
[32m+[m[32m   *  @param float $width[m
[32m+[m[32m   *  @return array[m
[32m+[m[32m   */[m
[32m+[m[32m  protected function _calculate_width($width) {[m
[32m+[m[32m    $style = $this->_frame->get_style();[m
[32m+[m[32m    $w = $this->_frame->get_containing_block("w");[m
[32m+[m
[32m+[m[32m    if( $style->position === "fixed" )[m
[32m+[m[32m      $w = $this->_frame->get_parent()->get_containing_block("w");[m
[32m+[m
[32m+[m[32m    $rm = $style->length_in_pt($style->margin_right, $w);[m
[32m+[m[32m    $lm = $style->length_in_pt($style->margin_left, $w);[m
[32m+[m
[32m+[m[32m    $left = $style->length_in_pt($style->left, $w);[m
[32m+[m[32m    $right = $style->length_in_pt($style->right, $w);[m
[32m+[m[41m    [m
[32m+[m[32m    // Handle 'auto' values[m
[32m+[m[32m    $dims = array($style->border_left_width,[m
[32m+[m[32m                  $style->border_right_width,[m
[32m+[m[32m                  $style->padding_left,[m
[32m+[m[32m                  $style->padding_right,[m
[32m+[m[32m                  $width !== "auto" ? $width : 0,[m
[32m+[m[32m                  $rm !== "auto" ? $rm : 0,[m
[32m+[m[32m                  $lm !== "auto" ? $lm : 0);[m
[32m+[m
[32m+[m[32m    // absolutely positioned boxes take the 'left' and 'right' properties into account[m
[32m+[m[32m    if ( $style->position === "absolute" || $style->position === "fixed" ) {[m
[32m+[m[32m      $absolute = true;[m
[32m+[m[32m      $dims[] = $left !== "auto" ? $left : 0;[m
[32m+[m[32m      $dims[] = $right !== "auto" ? $right : 0;[m
[32m+[m[32m    } else {[m
[32m+[m[32m      $absolute = false;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    $sum = $style->length_in_pt($dims, $w);[m
[32m+[m
[32m+[m[32m    // Compare to the containing block[m
[32m+[m[32m    $diff = $w - $sum;[m
[32m+[m
[32m+[m[32m    if ( $diff > 0 ) {[m
[32m+[m
[32m+[m[32m      if ( $absolute ) {[m
[32m+[m
[32m+[m[32m        // resolve auto properties: see[m
[32m+[m[32m        // http://www.w3.org/TR/CSS21/visudet.html#abs-non-replaced-width[m
[32m+[m
[32m+[m[32m        if ( $width === "auto" && $left === "auto" && $right === "auto" ) {[m
[32m+[m
[32m+[m[32m          if ( $lm === "auto" )[m
[32m+[m[32m            $lm = 0;[m
[32m+[m[32m          if ( $rm === "auto" )[m
[32m+[m[32m            $rm = 0;[m
[32m+[m
[32m+[m[32m          // Technically, the width should be "shrink-to-fit" i.e. based on the[m
[32m+[m[32m          // preferred width of the content...  a little too costly here as a[m
[32m+[m[32m          // special case.  Just get the width to take up the slack:[m
[32m+[m[32m          $left = 0;[m
[32m+[m[32m          $right = 0;[m
[32m+[m[32m          $width = $diff;[m
[32m+[m
[32m+[m[32m        } else if ( $width === "auto" ) {[m
[32m+[m
[32m+[m[32m          if ( $lm === "auto" )[m
[32m+[m[32m            $lm = 0;[m
[32m+[m[32m          if ( $rm === "auto" )[m
[32m+[m[32m            $rm = 0;[m
[32m+[m[32m          if ( $left === "auto" )[m
[32m+[m[32m            $left = 0;[m
[32m+[m[32m          if ( $right === "auto" )[m
[32m+[m[32m            $right = 0;[m
[32m+[m
[32m+[m[32m          $width = $diff;[m
[32m+[m
[32m+[m[32m        } else if ( $left === "auto" ) {[m
[32m+[m[41m          [m
[32m+[m[32m          if ( $lm === "auto" )[m
[32m+[m[32m            $lm = 0;[m
[32m+[m[32m          if ( $rm === "auto" )[m
[32m+[m[32m            $rm = 0;[m
[32m+[m[32m          if ( $right === "auto" )[m
[32m+[m[32m            $right = 0;[m
[32m+[m
[32m+[m[32m          $left = $diff;[m
[32m+[m
[32m+[m[32m        } else if ( $right === "auto" ) {[m
[32m+[m
[32m+[m[32m          if ( $lm === "auto" )[m
[32m+[m[32m            $lm = 0;[m
[32m+[m[32m          if ( $rm === "auto" )[m
[32m+[m[32m            $rm = 0;[m
[32m+[m
[32m+[m[32m          $right = $diff;[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m      } else {[m
[32m+[m
[32m+[m[32m        // Find auto properties and get them to take up the slack[m
[32m+[m[32m        if ( $width === "auto" )[m
[32m+[m[32m          $width = $diff;[m
[32m+[m
[32m+[m[32m        else if ( $lm === "auto" && $rm === "auto" )[m
[32m+[m[32m          $lm = $rm = round($diff / 2);[m
[32m+[m
[32m+[m[32m        else if ( $lm === "auto" )[m
[32m+[m[32m          $lm = $diff;[m
[32m+[m
[32m+[m[32m        else if ( $rm === "auto" )[m
[32m+[m[32m          $rm = $diff;[m
[32m+[m[32m      }[m
[32m+[m
[32m+[m[32m    } else if ($diff < 0) {[m
[32m+[m
[32m+[m[32m      // We are over constrained--set margin-right to the difference[m
[32m+[m[32m      $rm = $diff;[m
[32m+[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    return array("width"=> $width, "margin_left" => $lm, "margin_right" => $rm, "left" => $left, "right" => $right);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m[41m [m
[32m+[m[32m   * Call the above function, but resolve max/min widths[m
[32m+[m[32m   * @return array[m
[32m+[m[32m   */[m
[32m+[m[32m  protected function _calculate_restricted_width() {[m
[32m+[m[32m    $frame = $this->_frame;[m
[32m+[m[32m    $style = $frame->get_style();[m
[32m+[m[32m    $cb = $frame->get_containing_block();[m
[32m+[m[41m    [m
[32m+[m[32m    if ( $style->position === "fixed" )[m
[32m+[m[32m      $cb = $frame->get_root()->get_containing_block();[m
[32m+[m[41m    [m
[32m+[m[32m    //if ( $style->position === "absolute" )[m
[32m+[m[32m    //  $cb = $frame->find_positionned_parent()->get_containing_block();[m
[32m+[m
[32m+[m[32m    if ( !isset($cb["w"]) )[m
[32m+[m[32m      throw new DOMPDF_Exception("Box property calculation requires containing block width");[m
[32m+[m
[32m+[m[32m    // Treat width 100% as auto[m
[32m+[m[32m    if ( $style->width === "100%" ) {[m
[32m+[m[32m      $width = "auto";[m
[32m+[m[32m    }[m
[32m+[m[32m    else {[m
[32m+[m[32m      $width = $style->length_in_pt($style->width, $cb["w"]);[m
[32m+[m[32m    }[m
[32m+[m[32m    extract($this->_calculate_width($width));[m
[32m+[m
[32m+[m[32m    // Handle min/max width[m
[32m+[m[32m    $min_width = $style->length_in_pt($style->min_width, $cb["w"]);[m
[32m+[m[32m    $max_width = $style->length_in_pt($style->max_width, $cb["w"]);[m
[32m+[m
[32m+[m[32m    if ( $max_width !== "none" && $min_width > $max_width)[m
[32m+[m[32m      // Swap 'em[m
[32m+[m[32m      list($max_width, $min_width) = array($min_width, $max_width);[m
[32m+[m
[32m+[m[32m    if ( $max_width !== "none" && $width > $max_width )[m
[32m+[m[32m      extract($this->_calculate_width($max_width));[m
[32m+[m
[32m+[m[32m    if ( $width < $min_width )[m
[32m+[m[32m      extract($this->_calculate_width($min_width));[m
[32m+[m
[32m+[m[32m    return array($width, $margin_left, $margin_right, $left, $right);[m
[32m+[m
[32m+[m[32m  }[m
[32m+[m[41m  [m
[32m+[m[32m  /**[m[41m [m
[32m+[m[32m   * Determine the unrestricted height of content within the block[m
[32m+[m[32m   * by adding each line's height[m
[32m+[m[32m   * @return float[m
[32m+[m[32m   */[m
[32m+[m[32m  protected function _calculate_content_height() {[m
[32m+[m[32m    $height = 0;[m
[32m+[m[41m    [m
[32m+[m[32m    foreach ($this->_frame->get_lines() as $line) {[m
[32m+[m[32m      $height += $line["h"];[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    return $height;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m[41m [m
[32m+[m[32m   * Determine the frame's restricted height[m
[32m+[m[32m   * @return array[m
[32m+[m[32m   */[m
[32m+[m[32m  protected function _calculate_restricted_height() {[m
[32m+[m[32m    $style = $this->_frame->get_style();[m
[32m+[m[32m    $content_height = $this->_calculate_content_height();[m
[32m+[m[32m    $cb = $this->_frame->get_containing_block();[m
[32m+[m[41m    [m
[32m+[m[32m    $height = $style->length_in_pt($style->height, $cb["h"]);[m
[32m+[m
[32m+[m[32m    $top    = $style->length_in_pt($style->top, $cb["h"]);[m
[32m+[m[32m    $bottom = $style->length_in_pt($style->bottom, $cb["h"]);[m
[32m+[m
[32m+[m[32m    $margin_top    = $style->length_in_pt($style->margin_top, $cb["h"]);[m
[32m+[m[32m    $margin_bottom = $style->length_in_pt($style->margin_bottom, $cb["h"]);[m
[32m+[m
[32m+[m[32m    if ( $style->position === "absolute" || $style->position === "fixed" ) {[m
[32m+[m
[32m+[m[32m      // see http://www.w3.org/TR/CSS21/visudet.html#abs-non-replaced-height[m
[32m+[m
[32m+[m[32m      $dims = array($top !== "auto" ? $top : 0,[m
[32m+[m[32m                    $style->margin_top !== "auto" ? $style->margin_top : 0,[m
[32m+[m[32m                    $style->padding_top,[m
[32m+[m[32m                    $style->border_top_width,[m
[32m+[m[32m                    $height !== "auto" ? $height : 0,[m
[32m+[m[32m                    $style->border_bottom_width,[m
[32m+[m[32m                    $style->padding_bottom,[m
[32m+[m[32m                    $style->margin_bottom !== "auto" ? $style->margin_bottom : 0,[m
[32m+[m[32m                    $bottom !== "auto" ? $bottom : 0);[m
[32m+[m
[32m+[m[32m      $sum = $style->length_in_pt($dims, $cb["h"]);[m
[32m+[m
[32m+[m[32m      $diff = $cb["h"] - $sum;[m[41m [m
[32m+[m
[32m+[m[32m      if ( $diff > 0 ) {[m
[32m+[m
[32m+[m[32m        if ( $height === "auto" && $top === "auto" && $bottom === "auto" ) {[m
[32m+[m
[32m+[m[32m          if ( $margin_top === "auto" )[m[41m [m
[32m+[m[32m            $margin_top = 0;[m
[32m+[m[32m          if ( $margin_bottom === "auto" )[m
[32m+[m[32m            $margin_bottom = 0;[m
[32m+[m
[32m+[m[32m          $height = $diff;[m
[32m+[m
[32m+[m[32m        } else if ( $height === "auto" && $top === "auto" ) {[m
[32m+[m
[32m+[m[32m          if ( $margin_top === "auto" )[m[41m [m
[32m+[m[32m            $margin_top = 0;[m
[32m+[m[32m          if ( $margin_bottom === "auto" )[m
[32m+[m[32m            $margin_bottom = 0;[m
[32m+[m
[32m+[m[32m          $height = $content_height;[m
[32m+[m[32m          $top = $diff - $content_height;[m
[32m+[m
[32m+[m[32m        } else if ( $height === "auto" && $bottom === "auto" ) {[m
[32m+[m
[32m+[m[32m          if ( $margin_top === "auto" )[m[41m [m
[32m+[m[32m            $margin_top = 0;[m
[32m+[m[32m          if ( $margin_bottom === "auto" )[m
[32m+[m[32m            $margin_bottom = 0;[m
[32m+[m
[32m+[m[32m          $height = $content_height;[m
[32m+[m[32m          $bottom = $diff - $content_height;[m
[32m+[m
[32m+[m[32m        } else if ( $top === "auto" && $bottom === "auto" ) {[m
[32m+[m
[32m+[m[32m          if ( $margin_top === "auto" )[m[41m [m
[32m+[m[32m            $margin_top = 0;[m
[32m+[m[32m          if ( $margin_bottom === "auto" )[m
[32m+[m[32m            $margin_bottom = 0;[m
[32m+[m
[32m+[m[32m          $bottom = $diff;[m
[32m+[m
[32m+[m[32m        } else if ( $top === "auto" ) {[m
[32m+[m
[32m+[m[32m          if ( $margin_top === "auto" )[m[41m [m
[32m+[m[32m            $margin_top = 0;[m
[32m+[m[32m          if ( $margin_bottom === "auto" )[m
[32m+[m[32m            $margin_bottom = 0;[m
[32m+[m
[32m+[m[32m          $top = $diff;[m
[32m+[m
[32m+[m[32m        } else if ( $height === "auto" ) {[m
[32m+[m
[32m+[m[32m          if ( $margin_top === "auto" )[m[41m [m
[32m+[m[32m            $margin_top = 0;[m
[32m+[m[32m          if ( $margin_bottom === "auto" )[m
[32m+[m[32m            $margin_bottom = 0;[m
[32m+[m
[32m+[m[32m          $height = $diff;[m
[32m+[m
[32m+[m[32m        } else if ( $bottom === "auto" ) {[m
[32m+[m
[32m+[m[32m          if ( $margin_top === "auto" )[m[41m [m
[32m+[m[32m            $margin_top = 0;[m
[32m+[m[32m          if ( $margin_bottom === "auto" )[m
[32m+[m[32m            $margin_bottom = 0;[m
[32m+[m
[32m+[m[32m          $bottom = $diff;[m
[32m+[m
[32m+[m[32m        } else {[m
[32m+[m
[32m+[m[32m          if ( $style->overflow === "visible" ) {[m
[32m+[m
[32m+[m[32m            // set all autos to zero[m
[32m+[m[32m            if ( $margin_top === "auto" )[m[41m [m
[32m+[m[32m              $margin_top = 0;[m
[32m+[m[32m            if ( $margin_bottom === "auto" )[m
[32m+[m[32m              $margin_bottom = 0;[m
[32m+[m[32m            if ( $top === "auto" )[m
[32m+[m[32m              $top = 0;[m
[32m+[m[32m            if ( $bottom === "auto" )[m
[32m+[m[32m              $bottom = 0;[m
[32m+[m[32m            if ( $height === "auto" )[m
[32m+[m[32m              $height = $content_height;[m
[32m+[m
[32m+[m[32m          }[m
[32m+[m
[32m+[m[32m          // FIXME: overflow hidden[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m      }[m
[32m+[m
[32m+[m[32m    } else {[m
[32m+[m
[32m+[m[32m      // Expand the height if overflow is visible[m[41m [m
[32m+[m[32m      if ( $height === "auto" && $content_height > $height /* && $style->overflow === "visible" */)[m[41m [m
[32m+[m[32m        $height = $content_height;[m
[32m+[m
[32m+[m[32m      // FIXME: this should probably be moved to a seperate function as per[m
[32m+[m[32m      // _calculate_restricted_width[m
[32m+[m[41m      [m
[32m+[m[32m      // Only handle min/max height if the height is independent of the frame's content[m
[32m+[m[32m      if ( !($style->overflow === "visible" ||[m
[32m+[m[32m             ($style->overflow === "hidden" && $height === "auto")) ) {[m
[32m+[m
[32m+[m[32m        $min_height = $style->min_height;[m
[32m+[m[32m        $max_height = $style->max_height;[m
[32m+[m
[32m+[m[32m        if ( isset($cb["h"]) ) {[m
[32m+[m[32m          $min_height = $style->length_in_pt($min_height, $cb["h"]);[m
[32m+[m[32m          $max_height = $style->length_in_pt($max_height, $cb["h"]);[m
[32m+[m
[32m+[m[32m        } else if ( isset($cb["w"]) ) {[m
[32m+[m
[32m+[m[32m          if ( mb_strpos($min_height, "%") !== false )[m
[32m+[m[32m            $min_height = 0;[m
[32m+[m[32m          else[m
[32m+[m[32m            $min_height = $style->length_in_pt($min_height, $cb["w"]);[m
[32m+[m
[32m+[m[32m          if ( mb_strpos($max_height, "%") !== false )[m
[32m+[m[32m            $max_height = "none";[m
[32m+[m[32m          else[m
[32m+[m[32m            $max_height = $style->length_in_pt($max_height, $cb["w"]);[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        if ( $max_height !== "none" && $min_height > $max_height )[m
[32m+[m[32m          // Swap 'em[m
[32m+[m[32m          list($max_height, $min_height) = array($min_height, $max_height);[m
[32m+[m
[32m+[m[32m        if ( $max_height !== "none" && $height > $max_height )[m
[32m+[m[32m          $height = $max_height;[m
[32m+[m
[32m+[m[32m        if ( $height < $min_height )[m
[32m+[m[32m          $height = $min_height;[m
[32m+[m[32m      }[m
[32m+[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    return array($height, $margin_top, $margin_bottom, $top, $bottom);[m
[32m+[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Adjust the justification of each of our lines.[m
[32m+[m[32m   * http://www.w3.org/TR/CSS21/text.html#propdef-text-align[m
[32m+[m[32m   */[m
[32m+[m[32m  protected function _text_align() {[m
[32m+[m[32m    $style = $this->_frame->get_style();[m
[32m+[m[32m    $w = $this->_frame->get_containing_block("w");[m
[32m+[m[32m    $width = $style->length_in_pt($style->width, $w);[m
[32m+[m[32m    switch ($style->text_align) {[m
[32m+[m
[32m+[m[32m    default:[m
[32m+[m[32m    case "left":[m
[32m+[m[32m      foreach ($this->_frame->get_lines() as $line) {[m
[32m+[m[32m        if ( !$line["left"] ) continue;[m
[32m+[m[32m        foreach($line["frames"] as $frame) {[m
[32m+[m[32m          if ( $frame instanceof Block_Frame_Decorator) continue;[m
[32m+[m[32m          $frame->set_position( $frame->get_position("x") + $line["left"] );[m
[32m+[m[32m        }[m
[32m+[m[32m      }[m
[32m+[m[32m      return;[m
[32m+[m
[32m+[m[32m    case "right":[m
[32m+[m[32m      foreach ($this->_frame->get_lines() as $line) {[m
[32m+[m[32m        // Move each child over by $dx[m
[32m+[m[32m        $dx = $width - $line["w"] - $line["right"];[m
[32m+[m[41m        [m
[32m+[m[32m        foreach($line["frames"] as $frame) {[m
[32m+[m[32m          // Block frames are not aligned by text-align[m
[32m+[m[32m          if ($frame instanceof Block_Frame_Decorator) continue;[m
[32m+[m[41m          [m
[32m+[m[32m          $frame->set_position( $frame->get_position("x") + $dx );[m
[32m+[m[32m        }[m
[32m+[m[32m      }[m
[32m+[m[32m      break;[m
[32m+[m
[32m+[m
[32m+[m[32m    case "justify":[m
[32m+[m[32m      // We justify all lines except the last one[m
[32m+[m[32m      $lines = $this->_frame->get_lines(); // needs to be a variable (strict standards)[m
[32m+[m[32m      $lines = array_splice($lines, 0, -1);[m
[32m+[m[41m      [m
[32m+[m[32m      foreach($lines as $i => $line) {[m
[32m+[m[32m        if ( $line["br"] ) {[m
[32m+[m[32m          unset($lines[$i]);[m
[32m+[m[32m        }[m
[32m+[m[32m      }[m
[32m+[m[41m      [m
[32m+[m[32m      // One space character's width. Will be used to get a more accurate spacing[m
[32m+[m[32m      $space_width = Font_Metrics::get_text_width(" ", $style->font_family, $style->font_size);[m
[32m+[m[41m      [m
[32m+[m[32m      foreach ($lines as $i => $line) {[m
[32m+[m[32m        if ( $line["left"] ) {[m
[32m+[m[32m          foreach($line["frames"] as $frame) {[m
[32m+[m[32m            if ( !$frame instanceof Text_Frame_Decorator )[m
[32m+[m[32m              continue;[m
[32m+[m[41m  [m
[32m+[m[32m            $frame->set_position( $frame->get_position("x") + $line["left"] );[m
[32m+[m[32m          }[m
[32m+[m[32m        }[m
[32m+[m[41m          [m
[32m+[m[32m        // Only set the spacing if the line is long enough.  This is really[m
[32m+[m[32m        // just an aesthetic choice ;)[m
[32m+[m[32m        //if ( $line["left"] + $line["w"] + $line["right"] > self::MIN_JUSTIFY_WIDTH * $width ) {[m
[32m+[m[41m          [m
[32m+[m[32m          // Set the spacing for each child[m
[32m+[m[32m          if ( $line["wc"] > 1 )[m
[32m+[m[32m            $spacing = ($width - ($line["left"] + $line["w"] + $line["right"]) + $space_width) / ($line["wc"] - 1);[m
[32m+[m[32m          else[m
[32m+[m[32m            $spacing = 0;[m
[32m+[m
[32m+[m[32m          $dx = 0;[m
[32m+[m[32m          foreach($line["frames"] as $frame) {[m
[32m+[m[32m            if ( !$frame instanceof Text_Frame_Decorator )[m
[32m+[m[32m              continue;[m
[32m+[m[41m              [m
[32m+[m[32m            $text = $frame->get_text();[m
[32m+[m[32m            $spaces = mb_substr_count($text, " ");[m
[32m+[m[41m            [m
[32m+[m[32m            $char_spacing = $style->length_in_pt($style->letter_spacing);[m
[32m+[m[32m            $_spacing = $spacing + $char_spacing;[m
[32m+[m[41m            [m
[32m+[m[32m            $frame->set_position( $frame->get_position("x") + $dx );[m
[32m+[m[32m            $frame->set_text_spacing($_spacing);[m
[32m+[m[41m            [m
[32m+[m[32m            $dx += $spaces * $_spacing;[m
[32m+[m[32m          }[m
[32m+[m
[32m+[m[32m          // The line (should) now occupy the entire width[m
[32m+[m[32m          $this->_frame->set_line($i, null, $width);[m
[32m+[m
[32m+[m[32m        //}[m
[32m+[m[32m      }[m
[32m+[m[32m      break;[m
[32m+[m
[32m+[m[32m    case "center":[m
[32m+[m[32m    case "centre":[m
[32m+[m[32m      foreach ($this->_frame->get_lines() as $line) {[m
[32m+[m[32m        // Centre each line by moving each frame in the line by:[m
[32m+[m[32m        $dx = ($width + $line["left"] - $line["w"] - $line["right"] ) / 2;[m
[32m+[m[41m        [m
[32m+[m[32m        foreach ($line["frames"] as $frame) {[m
[32m+[m[32m          // Block frames are not aligned by text-align[m
[32m+[m[32m          if ($frame instanceof Block_Frame_Decorator) continue;[m
[32m+[m[41m          [m
[32m+[m[32m          $frame->set_position( $frame->get_position("x") + $dx );[m
[32m+[m[32m        }[m
[32m+[m[32m      }[m
[32m+[m[32m      break;[m
[32m+[m[32m    }[m
[32m+[m[32m  }[m
[32m+[m[41m  [m
[32m+[m[32m  /**[m
[32m+[m[32m   * Align inline children vertically.[m
[32m+[m[32m   * Aligns each child vertically after each line is reflowed[m
[32m+[m[32m   */[m
[32m+[m[32m  function vertical_align() {[m
[32m+[m[41m    [m
[32m+[m[32m    foreach ( $this->_frame->get_lines() as $i => $line ) {[m
[32m+[m
[32m+[m[32m      $height = $line["h"];[m
[32m+[m[41m    [m
[32m+[m[32m      foreach ( $line["frames"] as $frame ) {[m
[32m+[m[32m        $style = $frame->get_style();[m
[32m+[m
[32m+[m[32m        if ( $style->display !== "inline" && $style->display !== "text" )[m
[32m+[m[32m          continue;[m
[32m+[m
[32m+[m[32m        // FIXME?[m
[32m+[m[32m        if ( $this instanceof Table_Cell_Frame_Reflower )[m
[32m+[m[32m          $align = $frame->get_frame()->get_style()->vertical_align;[m
[32m+[m[32m        else[m[41m [m
[32m+[m[32m          $align = $frame->get_frame()->get_parent()->get_style()->vertical_align;[m
[32m+[m[41m          [m
[32m+[m[32m        $frame_h = $frame->get_margin_height();[m
[32m+[m[32m        $y = $line["y"];[m
[32m+[m[41m        [m
[32m+[m[32m        switch ($align) {[m
[32m+[m
[32m+[m[32m        case "baseline":[m
[32m+[m[32m          $y += $height - $frame_h;[m
[32m+[m[32m          break;[m
[32m+[m
[32m+[m[32m        case "middle":[m
[32m+[m[32m          $y += ($height + $frame_h) / 2;[m
[32m+[m[32m          break;[m
[32m+[m
[32m+[m[32m        case "sub":[m
[32m+[m[32m          $y += 0.2 * $height;[m
[32m+[m[32m          break;[m
[32m+[m
[32m+[m[32m        case "super":[m
[32m+[m[32m          $y += -0.3 * $height;[m
[32m+[m[32m          break;[m
[32m+[m
[32m+[m[32m        case "text-top":[m
[32m+[m[32m        case "top": // Not strictly accurate, but good enough for now[m
[32m+[m[32m          break;[m
[32m+[m
[32m+[m[32m        case "text-bottom":[m
[32m+[m[32m        case "bottom":[m
[32m+[m[32m          $y += $height - $frame_h;[m
[32m+[m[32m          break;[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        $x = $frame->get_position("x");[m
[32m+[m[32m        $frame->set_position($x, $y);[m
[32m+[m
[32m+[m[32m      }[m
[32m+[m[32m    }[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  function reflow(Frame_Decorator $block = null) {[m
[32m+[m
[32m+[m[32m    // Check if a page break is forced[m
[32m+[m[32m    $page = $this->_frame->get_root();[m
[32m+[m[32m    $page->check_forced_page_break($this->_frame);[m
[32m+[m
[32m+[m[32m    // Bail if the page is full[m
[32m+[m[32m    if ( $page->is_full() )[m
[32m+[m[32m      return;[m
[32m+[m[41m      [m
[32m+[m[32m    // Generated content[m
[32m+[m[32m    $this->_set_content();[m
[32m+[m
[32m+[m[32m    // Collapse margins if required[m
[32m+[m[32m    $this->_collapse_margins();[m
[32m+[m
[32m+[m[32m    $style = $this->_frame->get_style();[m
[32m+[m[32m    $cb = $this->_frame->get_containing_block();[m
[32m+[m[41m    [m
[32m+[m[32m    if ( $style->counter_increment && ($increment = $style->counter_increment) !== "none" )[m
[32m+[m[32m      $this->_frame->increment_counter($increment);[m
[32m+[m[41m    [m
[32m+[m[32m    if ( $style->position === "fixed" )[m
[32m+[m[32m      $cb = $this->_frame->get_root()->get_containing_block();[m
[32m+[m[41m    [m
[32m+[m[32m    // Determine the constraints imposed by this frame: calculate the width[m
[32m+[m[32m    // of the content area:[m
[32m+[m[32m    list($w, $left_margin, $right_margin, $left, $right) = $this->_calculate_restricted_width();[m
[32m+[m
[32m+[m[32m    // Store the calculated properties[m
[32m+[m[32m    $style->width = $w . "pt";[m
[32m+[m[32m    $style->margin_left = $left_margin."pt";[m
[32m+[m[32m    $style->margin_right = $right_margin."pt";[m
[32m+[m[32m    $style->left = $left ."pt";[m
[32m+[m[32m    $style->right = $right . "pt";[m
[32m+[m[41m    [m
[32m+[m[32m    // Update the position[m
[32m+[m[32m    $this->_frame->position();[m
[32m+[m[32m    list($x, $y) = $this->_frame->get_position();[m
[32m+[m
[32m+[m[32m    // Adjust the first line based on the text-indent property[m
[32m+[m[32m    $indent = $style->length_in_pt($style->text_indent, $cb["w"]);[m
[32m+[m[32m    $this->_frame->increase_line_width($indent);[m
[32m+[m
[32m+[m[32m    // Determine the content edge[m
[32m+[m[32m    $top = $style->length_in_pt(array($style->margin_top,[m
[32m+[m[32m                                      $style->padding_top,[m
[32m+[m[32m                                      $style->border_top_width), $cb["h"]);[m
[32m+[m
[32m+[m[32m    $bottom = $style->length_in_pt(array($style->border_bottom_width,[m
[32m+[m[32m                                         $style->margin_bottom,[m
[32m+[m[32m                                         $style->padding_bottom), $cb["h"]);[m
[32m+[m
[32m+[m[32m    $cb_x = $x + $left_margin + $style->length_in_pt(array($style->border_left_width,[m[41m [m
[32m+[m[32m                                                           $style->padding_left), $cb["w"]);[m
[32m+[m
[32m+[m[32m    $cb_y = $y + $top;[m
[32m+[m
[32m+[m[32m    $cb_h = ($cb["h"] + $cb["y"]) - $bottom - $cb_y;[m
[32m+[m
[32m+[m[32m    // Set the y position of the first line in this block[m
[32m+[m[32m    $this->_frame->set_current_line($cb_y);[m
[32m+[m[41m    [m
[32m+[m[32m    $floating_children = array();[m
[32m+[m[41m    [m
[32m+[m[32m    // Set the containing blocks and reflow each child[m
[32m+[m[32m    foreach ( $this->_frame->get_children() as $child ) {[m
[32m+[m[41m      [m
[32m+[m[32m      // Bail out if the page is full[m
[32m+[m[32m      if ( $page->is_full() )[m
[32m+[m[32m        break;[m
[32m+[m
[32m+[m[32m      // Floating siblings[m
[32m+[m[32m      if ( DOMPDF_ENABLE_CSS_FLOAT && count($floating_children) ) {[m
[32m+[m[32m        $offset_left = 0;[m
[32m+[m[32m        $offset_right = 0;[m
[32m+[m[41m        [m
[32m+[m[32m        // We need to reflow the child to know its initial x position[m
[32m+[m[32m        $child->set_containing_block($cb_x, $cb_y, $w, $cb_h);[m
[32m+[m[32m        $child->reflow($this->_frame);[m
[32m+[m[41m          [m
[32m+[m[32m        $current_line = $this->_frame->get_current_line();[m
[32m+[m[41m        [m
[32m+[m[32m        foreach ( $floating_children as $child_key => $floating_child ) {[m
[32m+[m[32m          $float = $floating_child->get_style()->float;[m
[32m+[m[32m          $floating_width = $floating_child->get_margin_width();[m
[32m+[m[32m          $floating_x = $floating_child->get_position("x");[m
[32m+[m[41m          [m
[32m+[m[32m          if ( $float === "left" ) {[m
[32m+[m[32m            if ($current_line["left"] + $child->get_position("x") > $floating_x + $floating_width) continue;[m
[32m+[m[32m          }[m
[32m+[m[32m          else {[m
[32m+[m[32m            if ($current_line["left"] + $child->get_position("x") + $child->get_margin_width() < $w - $floating_width - $current_line["right"]) continue;[m
[32m+[m[32m          }[m
[32m+[m[41m          [m
[32m+[m[32m          // If the child is still shifted by the floating element[m
[32m+[m[32m          if ( $floating_child->get_position("y") + $floating_child->get_margin_height() > $current_line["y"] ) {[m
[32m+[m[32m            if ( $float === "left" )[m
[32m+[m[32m              $offset_left += $floating_width;[m
[32m+[m[32m            else[m
[32m+[m[32m              $offset_right += $floating_width;[m
[32m+[m[32m          }[m
[32m+[m[41m          [m
[32m+[m[32m          // else, the floating element won't shift anymore[m
[32m+[m[32m          else {[m
[32m+[m[32m            unset($floating_children[$child_key]);[m
[32m+[m[32m          }[m
[32m+[m[32m        }[m
[32m+[m[41m        [m
[32m+[m[32m        if ( $offset_left )[m[41m [m
[32m+[m[32m          $this->_frame->set_current_line(array("left" => $offset_left));[m
[32m+[m[41m          [m
[32m+[m[32m        if ( $offset_right )[m
[32m+[m[32m          $this->_frame->set_current_line(array("right" => $offset_right));[m
[32m+[m[32m      }[m
[32m+[m[41m      [m
[32m+[m[32m      $child->set_containing_block($cb_x, $cb_y, $w, $cb_h);[m
[32m+[m[32m      $child->reflow($this->_frame);[m
[32m+[m[41m      [m
[32m+[m[32m      // Don't add the child to the line if a page break has occurred[m
[32m+[m[32m      if ( $page->check_page_break($child) )[m
[32m+[m[32m        break;[m
[32m+[m[41m        [m
[32m+[m[32m      $child_style = $child->get_style();[m
[32m+[m[41m      [m
[32m+[m[32m      if ( DOMPDF_ENABLE_CSS_FLOAT && $child_style->float !== "none") {[m
[32m+[m[32m        $floating_children[] = $child;[m
[32m+[m[41m        [m
[32m+[m[32m        // Remove next frame's beginning whitespace[m
[32m+[m[32m        $next = $child->get_next_sibling();[m
[32m+[m[32m        if ( $next && $next instanceof Text_Frame_Decorator) {[m
[32m+[m[32m          $next->set_text(ltrim($next->get_text()));[m
[32m+[m[32m        }[m
[32m+[m[41m        [m
[32m+[m[32m        $float_x = $cb_x;[m
[32m+[m[32m        $float_y = $this->_frame->get_current_line("y");[m
[32m+[m[41m        [m
[32m+[m[32m        $child_style = $child->get_style();[m
[32m+[m[41m        [m
[32m+[m[32m        switch( $child_style->float ) {[m
[32m+[m[32m          case "left": break;[m
[32m+[m[32m          case "right":[m[41m [m
[32m+[m[32m            $width = $w;[m
[32m+[m[32m            $float_x += ($width - $child->get_margin_width());[m
[32m+[m[32m            break;[m
[32m+[m[32m        }[m
[32m+[m[41m        [m
[32m+[m[32m        $child->set_position($float_x, $float_y);[m
[32m+[m[32m      }[m
[32m+[m[41m      [m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    // Determine our height[m
[32m+[m[32m    list($height, $margin_top, $margin_bottom, $top, $bottom) = $this->_calculate_restricted_height();[m
[32m+[m[32m    $style->height = $height;[m
[32m+[m[32m    $style->margin_top = $margin_top;[m
[32m+[m[32m    $style->margin_bottom = $margin_bottom;[m
[32m+[m[32m    $style->top = $top;[m
[32m+[m[32m    $style->bottom = $bottom;[m
[32m+[m
[32m+[m[32m    $this->_text_align();[m
[32m+[m[32m    $this->vertical_align();[m
[32m+[m[41m    [m
[32m+[m[32m    if ( $block ) {[m
[32m+[m[32m      $block->add_frame_to_line($this->_frame);[m
[32m+[m[32m    }[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[1mdiff --git a/application/third_party/dompdf/include/block_positioner.cls.php b/application/third_party/dompdf/include/block_positioner.cls.php[m
[1mnew file mode 100644[m
[1mindex 0000000..2f81caa[m
[1m--- /dev/null[m
[1m+++ b/application/third_party/dompdf/include/block_positioner.cls.php[m
[36m@@ -0,0 +1,86 @@[m
[32m+[m[32m<?php[m
[32m+[m[32m/**[m
[32m+[m[32m * DOMPDF - PHP5 HTML to PDF renderer[m
[32m+[m[32m *[m
[32m+[m[32m * File: $RCSfile: block_positioner.cls.php,v $[m
[32m+[m[32m * Created on: 2004-06-08[m
[32m+[m[32m *[m
[32m+[m[32m * Copyright (c) 2004 - Benj Carson <benjcarson@digitaljunkies.ca>[m
[32m+[m[32m *[m
[32m+[m[32m * This library is free software; you can redistribute it and/or[m
[32m+[m[32m * modify it under the terms of the GNU Lesser General Public[m
[32m+[m[32m * License as published by the Free Software Foundation; either[m
[32m+[m[32m * version 2.1 of the License, or (at your option) any later version.[m
[32m+[m[32m *[m
[32m+[m[32m * This library is distributed in the hope that it will be useful,[m
[32m+[m[32m * but WITHOUT ANY WARRANTY; without even the implied warranty of[m
[32m+[m[32m * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU[m
[32m+[m[32m * Lesser General Public License for more details.[m
[32m+[m[32m *[m
[32m+[m[32m * You should have received a copy of the GNU Lesser General Public License[m
[32m+[m[32m * along with this library in the file LICENSE.LGPL; if not, write to the[m
[32m+[m[32m * Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA[m
[32m+[m[32m * 02111-1307 USA[m
[32m+[m[32m *[m
[32m+[m[32m * Alternatively, you may distribute this software under the terms of the[m
[32m+[m[32m * PHP License, version 3.0 or later.  A copy of this license should have[m
[32m+[m[32m * been distributed with this file in the file LICENSE.PHP .  If this is not[m
[32m+[m[32m * the case, you can obtain a copy at http://www.php.net/license/3_0.txt.[m
[32m+[m[32m *[m
[32m+[m[32m * The latest version of DOMPDF might be available at:[m
[32m+[m[32m * http://www.dompdf.com/[m
[32m+[m[32m *[m
[32m+[m[32m * @link http://www.dompdf.com/[m
[32m+[m[32m * @copyright 2004 Benj Carson[m
[32m+[m[32m * @author Benj Carson <benjcarson@digitaljunkies.ca>[m
[32m+[m[32m * @package dompdf[m
[32m+[m
[32m+[m[32m */[m
[32m+[m
[32m+[m[32m/* $Id: block_positioner.cls.php 356 2011-01-28 08:56:10Z fabien.menager $ */[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Positions block frames[m
[32m+[m[32m *[m
[32m+[m[32m * @access private[m
[32m+[m[32m * @package dompdf[m
[32m+[m[32m */[m
[32m+[m[32mclass Block_Positioner extends Positioner {[m
[32m+[m
[32m+[m
[32m+[m[32m  function __construct(Frame_Decorator $frame) { parent::__construct($frame); }[m
[32m+[m[41m  [m
[32m+[m[32m  //........................................................................[m
[32m+[m
[32m+[m[32m  function position() {[m
[32m+[m[32m    $frame = $this->_frame;[m
[32m+[m[32m    $style = $frame->get_style();[m
[32m+[m[32m    $cb = $frame->get_containing_block();[m
[32m+[m[32m    $p = $frame->find_block_parent();[m
[32m+[m[41m    [m
[32m+[m[32m    if ( $p ) {[m
[32m+[m[32m      $float = $style->float;[m
[32m+[m[32m      if ( !DOMPDF_ENABLE_CSS_FLOAT || !$float || $float === "none" ) {[m
[32m+[m[32m        $p->add_line();[m
[32m+[m[32m      }[m
[32m+[m[32m      $y = $p->get_current_line("y");[m
[32m+[m[41m      [m
[32m+[m[32m    } else[m
[32m+[m[32m      $y = $cb["y"];[m
[32m+[m
[32m+[m[32m    $x = $cb["x"];[m
[32m+[m
[32m+[m[32m    // Relative positionning[m
[32m+[m[32m    if ( $style->position === "relative" ) {[m
[32m+[m[32m      $top =    $style->length_in_pt($style->top,    $cb["h"]);[m
[32m+[m[32m      //$right =  $style->length_in_pt($style->right,  $cb["w"]);[m
[32m+[m[32m      //$bottom = $style->length_in_pt($style->bottom, $cb["h"]);[m
[32m+[m[32m      $left =   $style->length_in_pt($style->left,   $cb["w"]);[m
[32m+[m[41m      [m
[32m+[m[32m      $x += $left;[m
[32m+[m[32m      $y += $top;[m
[32m+[m[32m    }[m
[32m+[m[41m    [m
[32m+[m[32m    $frame->set_position($x, $y);[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[1mdiff --git a/application/third_party/dompdf/include/block_renderer.cls.php b/application/third_party/dompdf/include/block_renderer.cls.php[m
[1mnew file mode 100644[m
[1mindex 0000000..6506b24[m
[1m--- /dev/null[m
[1m+++ b/application/third_party/dompdf/include/block_renderer.cls.php[m
[36m@@ -0,0 +1,211 @@[m
[32m+[m[32m<?php[m
[32m+[m[32m/**[m
[32m+[m[32m * DOMPDF - PHP5 HTML to PDF renderer[m
[32m+[m[32m *[m
[32m+[m[32m * File: $RCSfile: block_renderer.cls.php,v $[m
[32m+[m[32m * Created on: 2004-06-03[m
[32m+[m[32m *[m
[32m+[m[32m * Copyright (c) 2004 - Benj Carson <benjcarson@digitaljunkies.ca>[m
[32m+[m[32m *[m
[32m+[m[32m * This library is free software; you can redistribute it and/or[m
[32m+[m[32m * modify it under the terms of the GNU Lesser General Public[m
[32m+[m[32m * License as published by the Free Software Foundation; either[m
[32m+[m[32m * version 2.1 of the License, or (at your option) any later version.[m
[32m+[m[32m *[m
[32m+[m[32m * This library is distributed in the hope that it will be useful,[m
[32m+[m[32m * but WITHOUT ANY WARRANTY; without even the implied warranty of[m
[32m+[m[32m * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU[m
[32m+[m[32m * Lesser General Public License for more details.[m
[32m+[m[32m *[m
[32m+[m[32m * You should have received a copy of the GNU Lesser General Public License[m
[32m+[m[32m * along with this library in the file LICENSE.LGPL; if not, write to the[m
[32m+[m[32m * Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA[m
[32m+[m[32m * 02111-1307 USA[m
[32m+[m[32m *[m
[32m+[m[32m * Alternatively, you may distribute this software under the terms of the[m
[32m+[m[32m * PHP License, version 3.0 or later.  A copy of this license should have[m
[32m+[m[32m * been distributed with this file in the file LICENSE.PHP .  If this is not[m
[32m+[m[32m * the case, you can obtain a copy at http://www.php.net/license/3_0.txt.[m
[32m+[m[32m *[m
[32m+[m[32m * The latest version of DOMPDF might be available at:[m
[32m+[m[32m * http://www.dompdf.com/[m
[32m+[m[32m *[m
[32m+[m[32m * @link http://www.dompdf.com/[m
[32m+[m[32m * @copyright 2004 Benj Carson[m
[32m+[m[32m * @author Benj Carson <benjcarson@digitaljunkies.ca>[m
[32m+[m[32m * @package dompdf[m
[32m+[m
[32m+[m[32m */[m
[32m+[m
[32m+[m[32m/* $Id: block_renderer.cls.php 346 2011-01-09 13:23:22Z fabien.menager $ */[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Renders block frames[m
[32m+[m[32m *[m
[32m+[m[32m * @access private[m
[32m+[m[32m * @package dompdf[m
[32m+[m[32m */[m
[32m+[m[32mclass Block_Renderer extends Abstract_Renderer {[m
[32m+[m
[32m+[m[32m  //........................................................................[m
[32m+[m
[32m+[m[32m  function render(Frame $frame) {[m
[32m+[m[32m    $style = $frame->get_style();[m[41m [m
[32m+[m[32m    list($x, $y, $w, $h) = $frame->get_padding_box();[m
[32m+[m[41m    [m
[32m+[m[32m    $this->_set_opacity( $frame->get_opacity( $style->opacity ) );[m
[32m+[m
[32m+[m[32m    // Draw our background, border and content[m
[32m+[m[32m    if ( ($bg = $style->background_color) !== "transparent" ) {[m
[32m+[m[32m      $this->_canvas->filled_rectangle( $x, $y, $w, $h, $bg );[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    if ( ($url = $style->background_image) && $url !== "none" )[m
[32m+[m[32m      $this->_background_image($url, $x, $y, $w, $h, $style);[m
[32m+[m
[32m+[m[32m    $this->_render_border($frame);[m
[32m+[m[32m    $this->_render_outline($frame);[m
[32m+[m[41m    [m
[32m+[m[32m    if (DEBUG_LAYOUT && DEBUG_LAYOUT_BLOCKS) {[m
[32m+[m[32m      $this->_debug_layout($frame->get_border_box(), "red");[m
[32m+[m[32m      if (DEBUG_LAYOUT_PADDINGBOX) {[m
[32m+[m[32m        $this->_debug_layout($frame->get_padding_box(), "red", array(0.5, 0.5));[m
[32m+[m[32m      }[m
[32m+[m[32m    }[m
[32m+[m[41m    [m
[32m+[m[32m    if (DEBUG_LAYOUT && DEBUG_LAYOUT_LINES && $frame->get_decorator()) {[m
[32m+[m[32m      foreach ($frame->get_decorator()->get_lines() as $line) {[m
[32m+[m[32m        $frame->_debug_layout(array($line["x"], $line["y"], $line["w"], $line["h"]), "orange");[m
[32m+[m[32m      }[m
[32m+[m[32m    }[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  protected function _render_border(Frame_Decorator $frame, $corner_style = "bevel") {[m
[32m+[m[32m    $style = $frame->get_style();[m
[32m+[m[32m    $bbox = $frame->get_border_box();[m
[32m+[m[32m    $bp = $style->get_border_properties();[m
[32m+[m
[32m+[m[32m    // If all the borders are "solid" with the same color and style, we'd better draw a rectangle[m
[32m+[m[32m    if ([m
[32m+[m[32m      in_array($bp["top"]["style"], array("solid", "dashed", "dotted")) &&[m[41m [m
[32m+[m[32m      $bp["top"]    == $bp["right"] &&[m
[32m+[m[32m      $bp["right"]  == $bp["bottom"] &&[m
[32m+[m[32m      $bp["bottom"] == $bp["left"][m
[32m+[m[32m    ) {[m
[32m+[m[32m      $props = $bp["top"];[m
[32m+[m[32m      if ( $props["color"] === "transparent" || $props["width"] <= 0 ) return;[m
[32m+[m[41m      [m
[32m+[m[32m      list($x, $y, $w, $h) = $bbox;[m
[32m+[m[32m      $width = $style->length_in_pt($props["width"]);[m
[32m+[m[32m      $pattern = $this->_get_dash_pattern($props["style"], $width);[m
[32m+[m[32m      $this->_canvas->rectangle($x + $width / 2, $y + $width / 2, $w - $width, $h - $width, $props["color"], $width, $pattern);[m
[32m+[m[32m      return;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    $widths = array($style->length_in_pt($bp["top"]["width"]),[m
[32m+[m[32m                    $style->length_in_pt($bp["right"]["width"]),[m
[32m+[m[32m                    $style->length_in_pt($bp["bottom"]["width"]),[m
[32m+[m[32m                    $style->length_in_pt($bp["left"]["width"]));[m
[32m+[m[41m    [m
[32m+[m[32m    foreach ($bp as $side => $props) {[m
[32m+[m[32m      list($x, $y, $w, $h) = $bbox;[m
[32m+[m
[32m+[m[32m      if ( !$props["style"] ||[m[41m [m
[32m+[m[32m            $props["style"] === "none" ||[m[41m [m
[32m+[m[32m            $props["width"] <= 0 ||[m[41m [m
[32m+[m[32m            $props["color"] == "transparent" )[m
[32m+[m[32m        continue;[m
[32m+[m
[32m+[m[32m      switch($side) {[m
[32m+[m[32m      case "top":[m
[32m+[m[32m        $length = $w;[m
[32m+[m[32m        break;[m
[32m+[m
[32m+[m[32m      case "bottom":[m
[32m+[m[32m        $length = $w;[m
[32m+[m[32m        $y += $h;[m
[32m+[m[32m        break;[m
[32m+[m
[32m+[m[32m      case "left":[m
[32m+[m[32m        $length = $h;[m
[32m+[m[32m        break;[m
[32m+[m
[32m+[m[32m      case "right":[m
[32m+[m[32m        $length = $h;[m
[32m+[m[32m        $x += $w;[m
[32m+[m[32m        break;[m
[32m+[m[32m      default:[m
[32m+[m[32m        break;[m
[32m+[m[32m      }[m
[32m+[m[32m      $method = "_border_" . $props["style"];[m
[32m+[m
[32m+[m[32m      $this->$method($x, $y, $length, $props["color"], $widths, $side, $corner_style);[m
[32m+[m[32m    }[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  protected function _render_outline(Frame_Decorator $frame, $corner_style = "bevel") {[m
[32m+[m[32m    $style = $frame->get_style();[m
[32m+[m[41m    [m
[32m+[m[32m    $props = array([m
[32m+[m[32m      "width" => $style->outline_width,[m
[32m+[m[32m      "style" => $style->outline_style,[m
[32m+[m[32m      "color" => $style->outline_color,[m
[32m+[m[32m    );[m
[32m+[m[41m    [m
[32m+[m[32m    if ( !$props["style"] || $props["style"] === "none" || $props["width"] <= 0 )[m
[32m+[m[32m      return;[m
[32m+[m[41m      [m
[32m+[m[32m    $bbox = $frame->get_border_box();[m
[32m+[m[32m    $offset = $style->length_in_pt($props["width"]);[m
[32m+[m[32m    $pattern = $this->_get_dash_pattern($props["style"], $offset);[m
[32m+[m
[32m+[m[32m    // If the outline style is "solid" we'd better draw a rectangle[m
[32m+[m[32m    if ( in_array($props["style"], array("solid", "dashed", "dotted")) ) {[m
[32m+[m[32m      $bbox[0] -= $offset / 2;[m
[32m+[m[32m      $bbox[1] -= $offset / 2;[m
[32m+[m[32m      $bbox[2] += $offset;[m
[32m+[m[32m      $bbox[3] += $offset;[m
[32m+[m[41m    [m
[32m+[m[32m      list($x, $y, $w, $h) = $bbox;[m
[32m+[m[32m      $this->_canvas->rectangle($x, $y, $w, $h, $props["color"], $offset, $pattern);[m
[32m+[m[32m      return;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    $bbox[0] -= $offset;[m
[32m+[m[32m    $bbox[1] -= $offset;[m
[32m+[m[32m    $bbox[2] += $offset * 2;[m
[32m+[m[32m    $bbox[3] += $offset * 2;[m
[32m+[m[41m    [m
[32m+[m[32m    $method = "_border_" . $props["style"];[m
[32m+[m[32m    $widths = array_fill(0, 4, $props["width"]);[m
[32m+[m[32m    $sides = array("top", "right", "left", "bottom");[m
[32m+[m[41m    [m
[32m+[m[32m    foreach ($sides as $side) {[m
[32m+[m[32m      list($x, $y, $w, $h) = $bbox;[m
[32m+[m
[32m+[m[32m      switch($side) {[m
[32m+[m[32m      case "top":[m
[32m+[m[32m        $length = $w;[m
[32m+[m[32m        break;[m
[32m+[m
[32m+[m[32m      case "bottom":[m
[32m+[m[32m        $length = $w;[m
[32m+[m[32m        $y += $h;[m
[32m+[m[32m        break;[m
[32m+[m
[32m+[m[32m      case "left":[m
[32m+[m[32m        $length = $h;[m
[32m+[m[32m        break;[m
[32m+[m
[32m+[m[32m      case "right":[m
[32m+[m[32m        $length = $h;[m
[32m+[m[32m        $x += $w;[m
[32m+[m[32m        break;[m
[32m+[m[32m      default:[m
[32m+[m[32m        break;[m
[32m+[m[32m      }[m
[32m+[m
[32m+[m[32m      $this->$method($x, $y, $length, $props["color"], $widths, $side, $corner_style);[m
[32m+[m[32m    }[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[1mdiff --git a/application/third_party/dompdf/include/cached_pdf_decorator.cls.php b/application/third_party/dompdf/include/cached_pdf_decorator.cls.php[m
[1mnew file mode 100644[m
[1mindex 0000000..5379040[m
[1m--- /dev/null[m
[1m+++ b/application/third_party/dompdf/include/cached_pdf_decorator.cls.php[m
[36m@@ -0,0 +1,186 @@[m
[32m+[m[32m<?php[m
[32m+[m[32m/**[m
[32m+[m[32m * DOMPDF - PHP5 HTML to PDF renderer[m
[32m+[m[32m *[m
[32m+[m[32m * File: $RCSfile: cached_pdf_decorator.cls.php,v $[m
[32m+[m[32m * Created on: 2004-07-23[m
[32m+[m[32m *[m
[32m+[m[32m * Copyright (c) 2004 - Benj Carson <benjcarson@digitaljunkies.ca>[m
[32m+[m[32m *[m
[32m+[m[32m * This library is free software; you can redistribute it and/or[m
[32m+[m[32m * modify it under the terms of the GNU Lesser General Public[m
[32m+[m[32m * License as published by the Free Software Foundation; either[m
[32m+[m[32m * version 2.1 of the License, or (at your option) any later version.[m
[32m+[m[32m *[m
[32m+[m[32m * This library is distributed in the hope that it will be useful,[m
[32m+[m[32m * but WITHOUT ANY WARRANTY; without even the implied warranty of[m
[32m+[m[32m * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU[m
[32m+[m[32m * Lesser General Public License for more details.[m
[32m+[m[32m *[m
[32m+[m[32m * You should have received a copy of the GNU Lesser General Public License[m
[32m+[m[32m * along with this library in the file LICENSE.LGPL; if not, write to the[m
[32m+[m[32m * Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA[m
[32m+[m[32m * 02111-1307 USA[m
[32m+[m[32m *[m
[32m+[m[32m * Alternatively, you may distribute this software under the terms of the[m
[32m+[m[32m * PHP License, version 3.0 or later.  A copy of this license should have[m
[32m+[m[32m * been distributed with this file in the file LICENSE.PHP .  If this is not[m
[32m+[m[32m * the case, you can obtain a copy at http://www.php.net/license/3_0.txt.[m
[32m+[m[32m *[m
[32m+[m[32m * The latest version of DOMPDF might be available at:[m
[32m+[m[32m * http://www.dompdf.com/[m
[32m+[m[32m *[m
[32m+[m[32m * @link http://www.dompdf.com/[m
[32m+[m[32m * @copyright 2004 Benj Carson[m
[32m+[m[32m * @author Benj Carson <benjcarson@digitaljunkies.ca>[m
[32m+[m[32m * @package dompdf[m
[32m+[m
[32m+[m[32m */[m
[32m+[m
[32m+[m[32m/* $Id: cached_pdf_decorator.cls.php 216 2010-03-11 22:49:18Z ryan.masten $ */[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Caching canvas implementation[m
[32m+[m[32m *[m
[32m+[m[32m * Each rendered page is serialized and stored in the {@link Page_Cache}.[m
[32m+[m[32m * This is useful for static forms/pages that do not need to be re-rendered[m
[32m+[m[32m * all the time.[m
[32m+[m[32m *[m
[32m+[m[32m * This class decorates normal CPDF_Adapters.  It is currently completely[m
[32m+[m[32m * experimental.[m
[32m+[m[32m *[m
[32m+[m[32m * @access private[m
[32m+[m[32m * @package dompdf[m
[32m+[m[32m */[m
[32m+[m[32mclass Cached_PDF_Decorator extends CPDF_Adapter implements Canvas {[m
[32m+[m[32m  protected $_pdf;[m
[32m+[m[32m  protected $_cache_id;[m
[32m+[m[32m  protected $_current_page_id;[m
[32m+[m[32m  protected $_fonts;  // fonts used in this document[m
[32m+[m[41m  [m
[32m+[m[32m  function __construct($cache_id, CPDF_Adapter $pdf) {[m
[32m+[m[32m    $this->_pdf = $pdf;[m
[32m+[m[32m    $this->_cache_id = $cache_id;[m
[32m+[m[32m    $this->_fonts = array();[m
[32m+[m[41m    [m
[32m+[m[32m    $this->_current_page_id = $this->_pdf->open_object();[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  //........................................................................[m
[32m+[m
[32m+[m[32m  function get_cpdf() { return $this->_pdf->get_cpdf(); }[m
[32m+[m
[32m+[m[32m  function open_object() { $this->_pdf->open_object(); }[m
[32m+[m[32m  function reopen_object() { return $this->_pdf->reopen_object(); }[m
[32m+[m[41m  [m
[32m+[m[32m  function close_object() { $this->_pdf->close_object(); }[m
[32m+[m
[32m+[m[32m  function add_object($object, $where = 'all') { $this->_pdf->add_object($object, $where); }[m
[32m+[m
[32m+[m[32m  function serialize_object($id) { $this->_pdf->serialize_object($id); }[m
[32m+[m
[32m+[m[32m  function reopen_serialized_object($obj) { $this->_pdf->reopen_serialized_object($obj); }[m
[32m+[m[41m    [m
[32m+[m[32m  //........................................................................[m
[32m+[m
[32m+[m[32m  function get_width() { return $this->_pdf->get_width(); }[m
[32m+[m[32m  function get_height() {  return $this->_pdf->get_height(); }[m
[32m+[m[32m  function get_page_number() { return $this->_pdf->get_page_number(); }[m
[32m+[m[32m  function get_page_count() { return $this->_pdf->get_page_count(); }[m
[32m+[m
[32m+[m[32m  function set_page_number($num) { $this->_pdf->set_page_number($num); }[m
[32m+[m[32m  function set_page_count($count) { $this->_pdf->set_page_count($count); }[m
[32m+[m
[32m+[m[32m  function line($x1, $y1, $x2, $y2, $color, $width, $style = array()) {[m
[32m+[m[32m    $this->_pdf->line($x1, $y1, $x2, $y2, $color, $width, $style);[m
[32m+[m[32m  }[m
[32m+[m[41m                              [m
[32m+[m[32m  function rectangle($x1, $y1, $w, $h, $color, $width, $style = array()) {[m
[32m+[m[32m    $this->_pdf->rectangle($x1, $y1, $w, $h, $color, $width, $style);[m
[32m+[m[32m  }[m
[32m+[m[41m [m
[32m+[m[32m  function filled_rectangle($x1, $y1, $w, $h, $color) {[m
[32m+[m[32m    $this->_pdf->filled_rectangle($x1, $y1, $w, $h, $color);[m
[32m+[m[32m  }[m
[32m+[m[41m    [m
[32m+[m[32m  function polygon($points, $color, $width = null, $style = array(), $fill = false) {[m
[32m+[m[32m    $this->_pdf->polygon($points, $color, $width, $style, $fill);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  function circle($x, $y, $r1, $color, $width = null, $style = null, $fill = false) {[m
[32m+[m[32m    $this->_pdf->circle($x, $y, $r1, $color, $width, $style, $fill);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  function image($img_url, $x, $y, $w = null, $h = null) {[m
[32m+[m[32m    $this->_pdf->image($img_url, $x, $y, $w, $h);[m
[32m+[m[32m  }[m
[32m+[m[41m  [m
[32m+[m[32m  function text($x, $y, $text, $font, $size, $color = array(0,0,0), $adjust = 0, $angle = 0) {[m
[32m+[m[32m    $this->_fonts[$font] = true;[m
[32m+[m[32m    $this->_pdf->text($x, $y, $text, $font, $size, $color, $adjust, $angle);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  function page_text($x, $y, $text, $font, $size, $color = array(0,0,0), $adjust = 0, $angle = 0) {[m
[32m+[m[41m    [m
[32m+[m[32m    // We want to remove this from cached pages since it may not be correct[m
[32m+[m[32m    $this->_pdf->close_object();[m
[32m+[m[32m    $this->_pdf->page_text($x, $y, $text, $font, $size, $color, $adjust, $angle);[m
[32m+[m[32m    $this->_pdf->reopen_object($this->_current_page_id);[m
[32m+[m[32m  }[m
[32m+[m[41m  [m
[32m+[m[32m  function page_script($script, $type = 'text/php') {[m
[32m+[m[41m    [m
[32m+[m[32m    // We want to remove this from cached pages since it may not be correct[m
[32m+[m[32m    $this->_pdf->close_object();[m
[32m+[m[32m    $this->_pdf->page_script($script, $type);[m
[32m+[m[32m    $this->_pdf->reopen_object($this->_current_page_id);[m
[32m+[m[32m  }[m
[32m+[m[41m  [m
[32m+[m[32m  function new_page() {[m
[32m+[m[32m    $this->_pdf->close_object();[m
[32m+[m
[32m+[m[32m    // Add the object to the current page[m
[32m+[m[32m    $this->_pdf->add_object($this->_current_page_id, "add");[m
[32m+[m[32m    $this->_pdf->new_page();[m[41m    [m
[32m+[m
[32m+[m[32m    Page_Cache::store_page($this->_cache_id,[m
[32m+[m[32m                           $this->_pdf->get_page_number() - 1,[m
[32m+[m[32m                           $this->_pdf->serialize_object($this->_current_page_id));[m
[32m+[m
[32m+[m[32m    $this->_current_page_id = $this->_pdf->open_object();[m
[32m+[m[32m    return $this->_current_page_id;[m
[32m+[m[32m  }[m
[32m+[m[41m  [m
[32m+[m[32m  function stream($filename) {[m
[32m+[m[32m    // Store the last page in the page cache[m
[32m+[m[32m    if ( !is_null($this->_current_page_id) ) {[m
[32m+[m[32m      $this->_pdf->close_object();[m
[32m+[m[32m      $this->_pdf->add_object($this->_current_page_id, "add");[m
[32m+[m[32m      Page_Cache::store_page($this->_cache_id,[m
[32m+[m[32m                             $this->_pdf->get_page_number(),[m
[32m+[m[32m                             $this->_pdf->serialize_object($this->_current_page_id));[m
[32m+[m[32m      Page_Cache::store_fonts($this->_cache_id, $this->_fonts);[m
[32m+[m[32m      $this->_current_page_id = null;[m
[32m+[m[32m    }[m
[32m+[m[41m    [m
[32m+[m[32m    $this->_pdf->stream($filename);[m
[32m+[m[41m    [m
[32m+[m[32m  }[m
[32m+[m[41m  [m
[32m+[m[32m  function &output() {[m
[32m+[m[32m    // Store the last page in the page cache[m
[32m+[m[32m    if ( !is_null($this->_current_page_id) ) {[m
[32m+[m[32m      $this->_pdf->close_object();[m
[32m+[m[32m      $this->_pdf->add_object($this->_current_page_id, "add");[m
[32m+[m[32m      Page_Cache::store_page($this->_cache_id,[m
[32m+[m[32m                             $this->_pdf->get_page_number(),[m
[32m+[m[32m                             $this->_pdf->serialize_object($this->_current_page_id));[m
[32m+[m[32m      $this->_current_page_id = null;[m
[32m+[m[32m    }[m
[32m+[m[41m    [m
[32m+[m[32m    return $this->_pdf->output();[m
[32m+[m[32m  }[m
[32m+[m[41m  [m
[32m+[m[32m  function get_messages() { return $this->_pdf->get_messages(); }[m
[32m+[m[41m  [m
[32m+[m[32m}[m
[1mdiff --git a/application/third_party/dompdf/include/canvas.cls.php b/application/third_party/dompdf/include/canvas.cls.php[m
[1mnew file mode 100644[m
[1mindex 0000000..cbc0d9c[m
[1m--- /dev/null[m
[1m+++ b/application/third_party/dompdf/include/canvas.cls.php[m
[36m@@ -0,0 +1,328 @@[m
[32m+[m[32m<?php[m
[32m+[m[32m/**[m
[32m+[m[32m * DOMPDF - PHP5 HTML to PDF renderer[m
[32m+[m[32m *[m
[32m+[m[32m * File: $RCSfile: canvas.cls.php,v $[m
[32m+[m[32m * Created on: 2004-06-06[m
[32m+[m[32m *[m
[32m+[m[32m * Copyright (c) 2004 - Benj Carson <benjcarson@digitaljunkies.ca>[m
[32m+[m[32m *[m
[32m+[m[32m * This library is free software; you can redistribute it and/or[m
[32m+[m[32m * modify it under the terms of the GNU Lesser General Public[m
[32m+[m[32m * License as published by the Free Software Foundation; either[m
[32m+[m[32m * version 2.1 of the License, or (at your option) any later version.[m
[32m+[m[32m *[m
[32m+[m[32m * This library is distributed in the hope that it will be useful,[m
[32m+[m[32m * but WITHOUT ANY WARRANTY; without even the implied warranty of[m
[32m+[m[32m * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU[m
[32m+[m[32m * Lesser General Public License for more details.[m
[32m+[m[32m *[m
[32m+[m[32m * You should have received a copy of the GNU Lesser General Public License[m
[32m+[m[32m * along with this library in the file LICENSE.LGPL; if not, write to the[m
[32m+[m[32m * Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA[m
[32m+[m[32m * 02111-1307 USA[m
[32m+[m[32m *[m
[32m+[m[32m * Alternatively, you may distribute this software under the terms of the[m
[32m+[m[32m * PHP License, version 3.0 or later.  A copy of this license should have[m
[32m+[m[32m * been distributed with this file in the file LICENSE.PHP .  If this is not[m
[32m+[m[32m * the case, you can obtain a copy at http://www.php.net/license/3_0.txt.[m
[32m+[m[32m *[m
[32m+[m[32m * The latest version of DOMPDF might be available at:[m
[32m+[m[32m * http://www.dompdf.com/[m
[32m+[m[32m *[m
[32m+[m[32m * @link http://www.dompdf.com/[m
[32m+[m[32m * @copyright 2004 Benj Carson[m
[32m+[m[32m * @author Benj Carson <benjcarson@digitaljunkies.ca>[m
[32m+[m[32m * @package dompdf[m
[32m+[m
[32m+[m[32m */[m
[32m+[m
[32m+[m[32m/* $Id: canvas.cls.php 357 2011-01-30 20:56:46Z fabien.menager $ */[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Main rendering interface[m
[32m+[m[32m *[m
[32m+[m[32m * Currently {@link CPDF_Adapter}, {@link PDFLib_Adapter}, {@link TCPDF_Adapter}, and {@link GD_Adapter}[m
[32m+[m[32m * implement this interface.[m
[32m+[m[32m *[m
[32m+[m[32m * Implementations should measure x and y increasing to the left and down,[m
[32m+[m[32m * respectively, with the origin in the top left corner.  Implementations[m
[32m+[m[32m * are free to use a unit other than points for length, but I can't[m
[32m+[m[32m * guarantee that the results will look any good.[m
[32m+[m[32m *[m
[32m+[m[32m * @package dompdf[m
[32m+[m[32m */[m
[32m+[m[32minterface Canvas {[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Returns the current page number[m
[32m+[m[32m   *[m
[32m+[m[32m   * @return int[m
[32m+[m[32m   */[m
[32m+[m[32m  function get_page_number();[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Returns the total number of pages[m
[32m+[m[32m   *[m
[32m+[m[32m   * @return int[m
[32m+[m[32m   */[m
[32m+[m[32m  function get_page_count();[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Sets the total number of pages[m
[32m+[m[32m   *[m
[32m+[m[32m   * @param int $count[m
[32m+[m[32m   */[m
[32m+[m[32m  function set_page_count($count);[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Draws a line from x1,y1 to x2,y2[m
[32m+[m[32m   *[m
[32m+[m[32m   * See {@link Style::munge_colour()} for the format of the colour array.[m
[32m+[m[32m   * See {@link Cpdf::setLineStyle()} for a description of the format of the[m
[32m+[m[32m   * $style parameter (aka dash).[m
[32m+[m[32m   *[m
[32m+[m[32m   * @param float $x1[m
[32m+[m[32m   * @param float $y1[m
[32m+[m[32m   * @param float $x2[m
[32m+[m[32m   * @param float $y2[m
[32m+[m[32m   * @param array $color[m
[32m+[m[32m   * @param float $width[m
[32m+[m[32m   * @param array $style[m
[32m+[m[32m   */[m
[32m+[m[32m  function line($x1, $y1, $x2, $y2, $color, $width, $style = null);[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Draws a rectangle at x1,y1 with width w and height h[m
[32m+[m[32m   *[m
[32m+[m[32m   * See {@link Style::munge_colour()} for the format of the colour array.[m
[32m+[m[32m   * See {@link Cpdf::setLineStyle()} for a description of the $style[m
[32m+[m[32m   * parameter (aka dash)[m
[32m+[m[32m   *[m
[32m+[m[32m   * @param float $x1[m
[32m+[m[32m   * @param float $y1[m
[32m+[m[32m   * @param float $w[m
[32m+[m[32m   * @param float $h[m
[32m+[m[32m   * @param array $color[m
[32m+[m[32m   * @param float $width[m
[32m+[m[32m   * @param array $style[m
[32m+[m[32m   */[m[41m   [m
[32m+[m[32m  function rectangle($x1, $y1, $w, $h, $color, $width, $style = null);[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Draws a filled rectangle at x1,y1 with width w and height h[m
[32m+[m[32m   *[m
[32m+[m[32m   * See {@link Style::munge_colour()} for the format of the colour array.[m
[32m+[m[32m   *[m
[32m+[m[32m   * @param float $x1[m
[32m+[m[32m   * @param float $y1[m
[32m+[m[32m   * @param float $w[m
[32m+[m[32m   * @param float $h[m
[32m+[m[32m   * @param array $color[m
[32m+[m[32m   */[m[41m   [m
[32m+[m[32m  function filled_rectangle($x1, $y1, $w, $h, $color);[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Starts a clipping rectangle at x1,y1 with width w and height h[m
[32m+[m[32m   *[m
[32m+[m[32m   * @param float $x1[m
[32m+[m[32m   * @param float $y1[m
[32m+[m[32m   * @param float $w[m
[32m+[m[32m   * @param float $h[m
[32m+[m[32m   */[m[41m   [m
[32m+[m[32m  function clipping_rectangle($x1, $y1, $w, $h);[m
[32m+[m[41m  [m
[32m+[m[32m  /**[m
[32m+[m[32m   * Ends the last clipping shape[m
[32m+[m[32m   */[m[41m  [m
[32m+[m[32m  function clipping_end();[m
[32m+[m[41m  [m
[32m+[m[32m  /**[m
[32m+[m[32m   * Save current state[m
[32m+[m[32m   */[m
[32m+[m[32m  function save();[m
[32m+[m[41m  [m
[32m+[m[32m  /**[m
[32m+[m[32m   * Restore last state[m
[32m+[m[32m   */[m
[32m+[m[32m  function restore();[m
[32m+[m[41m  [m
[32m+[m[32m  /**[m
[32m+[m[32m   * Rotate[m
[32m+[m[32m   */[m
[32m+[m[32m  function rotate($angle, $x, $y);[m
[32m+[m[41m  [m
[32m+[m[32m  /**[m
[32m+[m[32m   * Skew[m
[32m+[m[32m   */[m
[32m+[m[32m  function skew($angle_x, $angle_y, $x, $y);[m
[32m+[m[41m  [m
[32m+[m[32m  /**[m
[32m+[m[32m   * Scale[m
[32m+[m[32m   */[m
[32m+[m[32m  function scale($s_x, $s_y, $x, $y);[m
[32m+[m[41m  [m
[32m+[m[32m  /**[m
[32m+[m[32m   * Translate[m
[32m+[m[32m   */[m
[32m+[m[32m  function translate($t_x, $t_y);[m
[32m+[m[41m  [m
[32m+[m[32m  /**[m
[32m+[m[32m   * Transform[m
[32m+[m[32m   */[m
[32m+[m[32m  function transform($a, $b, $c, $d, $e, $f);[m
[32m+[m[41m  [m
[32m+[m[32m  /**[m
[32m+[m[32m   * Draws a polygon[m
[32m+[m[32m   *[m
[32m+[m[32m   * The polygon is formed by joining all the points stored in the $points[m
[32m+[m[32m   * array.  $points has the following structure:[m
[32m+[m[32m   * <code>[m
[32m+[m[32m   * array(0 => x1,[m
[32m+[m[32m   *       1 => y1,[m
[32m+[m[32m   *       2 => x2,[m
[32m+[m[32m   *       3 => y2,[m
[32m+[m[32m   *       ...[m
[32m+[m[32m   *       );[m
[32m+[m[32m   * </code>[m
[32m+[m[32m   *[m
[32m+[m[32m   * See {@link Style::munge_colour()} for the format of the colour array.[m
[32m+[m[32m   * See {@link Cpdf::setLineStyle()} for a description of the $style[m
[32m+[m[32m   * parameter (aka dash)[m[41m   [m
[32m+[m[32m   *[m
[32m+[m[32m   * @param array $points[m
[32m+[m[32m   * @param array $color[m
[32m+[m[32m   * @param float $width[m
[32m+[m[32m   * @param array $style[m
[32m+[m[32m   * @param bool  $fill  Fills the polygon if true[m
[32m+[m[32m   */[m
[32m+[m[32m  function polygon($points, $color, $width = null, $style = null, $fill = false);[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Draws a circle at $x,$y with radius $r[m
[32m+[m[32m   *[m
[32m+[m[32m   * See {@link Style::munge_colour()} for the format of the colour array.[m
[32m+[m[32m   * See {@link Cpdf::setLineStyle()} for a description of the $style[m
[32m+[m[32m   * parameter (aka dash)[m
[32m+[m[32m   *[m
[32m+[m[32m   * @param float $x[m
[32m+[m[32m   * @param float $y[m
[32m+[m[32m   * @param float $r[m
[32m+[m[32m   * @param array $color[m
[32m+[m[32m   * @param float $width[m
[32m+[m[32m   * @param array $style[m
[32m+[m[32m   * @param bool $fill Fills the circle if true[m[41m   [m
[32m+[m[32m   */[m[41m   [m
[32m+[m[32m  function circle($x, $y, $r, $color, $width = null, $style = null, $fill = false);[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Add an image to the pdf.[m
[32m+[m[32m   *[m
[32m+[m[32m   * The image is placed at the specified x and y coordinates with the[m
[32m+[m[32m   * given width and height.[m
[32m+[m[32m   *[m
[32m+[m[32m   * @param string $img_url the path to the image[m
[32m+[m[32m   * @param string $img_type the type (e.g. extension) of the image[m
[32m+[m[32m   * @param float $x x position[m
[32m+[m[32m   * @param float $y y position[m
[32m+[m[32m   * @param int $w width (in pixels)[m
[32m+[m[32m   * @param int $h height (in pixels)[m
[32m+[m[32m   */[m
[32m+[m[32m  function image($img_url, $img_type, $x, $y, $w, $h);[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Writes text at the specified x and y coordinates[m
[32m+[m[32m   *[m
[32m+[m[32m   * See {@link Style::munge_colour()} for the format of the colour array.[m
[32m+[m[32m   *[m
[32m+[m[32m   * @param float $x[m
[32m+[m[32m   * @param float $y[m
[32m+[m[32m   * @param string $text the text to write[m
[32m+[m[32m   * @param string $font the font file to use[m
[32m+[m[32m   * @param float $size the font size, in points[m
[32m+[m[32m   * @param array $color[m
[32m+[m[32m   * @param float $word_space word spacing adjustment[m
[32m+[m[32m   * @param float $char_space whar spacing adjustment[m
[32m+[m[32m   * @param float $angle angle[m
[32m+[m[32m   */[m
[32m+[m[32m  function text($x, $y, $text, $font, $size, $color = array(0,0,0), $word_space = 0, $char_space = 0, $angle = 0);[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Add a named destination (similar to <a name="foo">...</a> in html)[m
[32m+[m[32m   *[m
[32m+[m[32m   * @param string $anchorname The name of the named destination[m
[32m+[m[32m   */[m
[32m+[m[32m  function add_named_dest($anchorname);[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Add a link to the pdf[m
[32m+[m[32m   *[m
[32m+[m[32m   * @param string $url The url to link to[m
[32m+[m[32m   * @param float  $x   The x position of the link[m
[32m+[m[32m   * @param float  $y   The y position of the link[m
[32m+[m[32m   * @param float  $width   The width of the link[m
[32m+[m[32m   * @param float  $height   The height of the link[m
[32m+[m[32m   */[m
[32m+[m[32m  function add_link($url, $x, $y, $width, $height);[m
[32m+[m[41m  [m
[32m+[m[32m  /**[m
[32m+[m[32m   * Add meta information to the pdf[m
[32m+[m[32m   *[m[41m [m
[32m+[m[32m   * @param string $label  label of the value (Creator, Producer, etc.)[m
[32m+[m[32m   * @param string $value  the text to set[m
[32m+[m[32m   */[m
[32m+[m[32m  function add_info($name, $value);[m
[32m+[m[41m  [m
[32m+[m[32m  /**[m
[32m+[m[32m   * Calculates text size, in points[m
[32m+[m[32m   *[m
[32m+[m[32m   * @param string $text the text to be sized[m
[32m+[m[32m   * @param string $font the desired font[m
[32m+[m[32m   * @param float  $size the desired font size[m
[32m+[m[32m   * @param float  $spacing word spacing, if any[m
[32m+[m[32m   * @return float[m
[32m+[m[32m   */[m
[32m+[m[32m  function get_text_width($text, $font, $size, $word_spacing = 0, $char_spacing = 0);[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Calculates font height, in points[m
[32m+[m[32m   *[m
[32m+[m[32m   * @param string $font[m
[32m+[m[32m   * @param float $size[m
[32m+[m[32m   * @return float[m
[32m+[m[32m   */[m
[32m+[m[32m  function get_font_height($font, $size);[m
[32m+[m[41m  [m
[32m+[m[32m  /**[m
[32m+[m[32m   * Sets the opacity[m
[32m+[m[32m   *[m
[32m+[m[32m   * @param float $opacity[m
[32m+[m[32m   * @param string $mode[m
[32m+[m[32m   * @return float[m
[32m+[m[32m   */[m
[32m+[m[32m  function set_opacity($opacity, $mode = "Normal");[m
[32m+[m[41m  [m
[32m+[m[32m  /**[m
[32m+[m[32m   * Starts a new page[m
[32m+[m[32m   *[m
[32m+[m[32m   * Subsequent drawing operations will appear on the new page.[m
[32m+[m[32m   */[m
[32m+[m[32m  function new_page();[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Streams the PDF directly to the browser[m
[32m+[m[32m   *[m
[32m+[m[32m   * @param string $filename the name of the PDF file[m
[32m+[m[32m   * @param array  $options associative array, 'Attachment' => 0 or 1, 'compress' => 1 or 0[m
[32m+[m[32m   */[m
[32m+[m[32m  function stream($filename, $options = null);[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Returns the PDF as a string[m
[32m+[m[32m   *[m
[32m+[m[32m   * @param array  $options associative array: 'compress' => 1 or 0[m
[32m+[m[32m   * @return string[m
[32m+[m[32m   */[m
[32m+[m[32m  function output($options = null);[m
[32m+[m[41m  [m
[32m+[m[32m}[m
[1mdiff --git a/application/third_party/dompdf/include/canvas_factory.cls.php b/application/third_party/dompdf/include/canvas_factory.cls.php[m
[1mnew file mode 100644[m
[1mindex 0000000..4dc4070[m
[1m--- /dev/null[m
[1m+++ b/application/third_party/dompdf/include/canvas_factory.cls.php[m
[36m@@ -0,0 +1,83 @@[m
[32m+[m[32m<?php[m
[32m+[m[32m/**[m
[32m+[m[32m * DOMPDF - PHP5 HTML to PDF renderer[m
[32m+[m[32m *[m
[32m+[m[32m * File: $RCSfile: canvas_factory.cls.php,v $[m
[32m+[m[32m * Created on: 2004-06-02[m
[32m+[m[32m *[m
[32m+[m[32m * Copyright (c) 2004 - Benj Carson <benjcarson@digitaljunkies.ca>[m
[32m+[m[32m *[m
[32m+[m[32m * This library is free software; you can redistribute it and/or[m
[32m+[m[32m * modify it under the terms of the GNU Lesser General Public[m
[32m+[m[32m * License as published by the Free Software Foundation; either[m
[32m+[m[32m * version 2.1 of the License, or (at your option) any later version.[m
[32m+[m[32m *[m
[32m+[m[32m * This library is distributed in the hope that it will be useful,[m
[32m+[m[32m * but WITHOUT ANY WARRANTY; without even the implied warranty of[m
[32m+[m[32m * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU[m
[32m+[m[32m * Lesser General Public License for more details.[m
[32m+[m[32m *[m
[32m+[m[32m * You should have received a copy of the GNU Lesser General Public License[m
[32m+[m[32m * along with this library in the file LICENSE.LGPL; if not, write to the[m
[32m+[m[32m * Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA[m
[32m+[m[32m * 02111-1307 USA[m
[32m+[m[32m *[m
[32m+[m[32m * Alternatively, you may distribute this software under the terms of the[m
[32m+[m[32m * PHP License, version 3.0 or later.  A copy of this license should have[m
[32m+[m[32m * been distributed with this file in the file LICENSE.PHP .  If this is not[m
[32m+[m[32m * the case, you can obtain a copy at http://www.php.net/license/3_0.txt.[m
[32m+[m[32m *[m
[32m+[m[32m * The latest version of DOMPDF might be available at:[m
[32m+[m[32m * http://www.dompdf.com/[m
[32m+[m[32m *[m
[32m+[m[32m * @link http://www.dompdf.com/[m
[32m+[m[32m * @copyright 2004 Benj Carson[m
[32m+[m[32m * @author Benj Carson <benjcarson@digitaljunkies.ca>[m
[32m+[m[32m * @package dompdf[m
[32m+[m
[32m+[m[32m */[m
[32m+[m
[32m+[m[32m/* $Id: canvas_factory.cls.php 216 2010-03-11 22:49:18Z ryan.masten $ */[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Create canvas instances[m
[32m+[m[32m *[m
[32m+[m[32m * The canvas factory creates canvas instances based on the[m
[32m+[m[32m * availability of rendering backends and config options.[m
[32m+[m[32m *[m
[32m+[m[32m * @package dompdf[m
[32m+[m[32m */[m
[32m+[m[32mclass Canvas_Factory {[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Constructor is private: this is a static class[m
[32m+[m[32m   */[m
[32m+[m[32m  private function __construct() { }[m
[32m+[m
[32m+[m[32m  static function get_instance($paper = null, $orientation = null,  $class = null) {[m
[32m+[m
[32m+[m[32m    $backend = strtolower(DOMPDF_PDF_BACKEND);[m
[32m+[m[41m    [m
[32m+[m[32m    if ( isset($class) && class_exists($class, false) )[m
[32m+[m[32m      $class .= "_Adapter";[m
[32m+[m[41m    [m
[32m+[m[32m    else if ( (DOMPDF_PDF_BACKEND === "auto" || $backend === "pdflib" ) &&[m
[32m+[m[32m              class_exists("PDFLib", false) )[m
[32m+[m[32m      $class = "PDFLib_Adapter";[m
[32m+[m
[32m+[m[32m    else if ( (DOMPDF_PDF_BACKEND === "auto" || $backend === "cpdf") )[m
[32m+[m[32m      $class = "CPDF_Adapter";[m
[32m+[m
[32m+[m[32m    else if ( ( $backend === "tcpdf") )[m
[32m+[m[32m      $class = "TCPDF_Adapter";[m
[32m+[m[41m      [m
[32m+[m[32m    else if ( $backend === "gd" )[m
[32m+[m[32m      $class = "GD_Adapter";[m
[32m+[m[41m    [m
[32m+[m[32m    else[m
[32m+[m[32m      $class = "CPDF_Adapter";[m
[32m+[m
[32m+[m[32m    return new $class($paper, $orientation);[m
[32m+[m[41m        [m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[1mdiff --git a/application/third_party/dompdf/include/cellmap.cls.php b/application/third_party/dompdf/include/cellmap.cls.php[m
[1mnew file mode 100644[m
[1mindex 0000000..03f9c03[m
[1m--- /dev/null[m
[1m+++ b/application/third_party/dompdf/include/cellmap.cls.php[m
[36m@@ -0,0 +1,730 @@[m
[32m+[m[32m<?php[m
[32m+[m[32m/**[m
[32m+[m[32m * DOMPDF - PHP5 HTML to PDF renderer[m
[32m+[m[32m *[m
[32m+[m[32m * File: $RCSfile: cellmap.cls.php,v $[m
[32m+[m[32m * Created on: 2004-07-28[m
[32m+[m[32m *[m
[32m+[m[32m * Copyright (c) 2004 - Benj Carson <benjcarson@digitaljunkies.ca>[m
[32m+[m[32m *[m
[32m+[m[32m * This library is free software; you can redistribute it and/or[m
[32m+[m[32m * modify it under the terms of the GNU Lesser General Public[m
[32m+[m[32m * License as published by the Free Software Foundation; either[m
[32m+[m[32m * version 2.1 of the License, or (at your option) any later version.[m
[32m+[m[32m *[m
[32m+[m[32m * This library is distributed in the hope that it will be useful,[m
[32m+[m[32m * but WITHOUT ANY WARRANTY; without even the implied warranty of[m
[32m+[m[32m * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU[m
[32m+[m[32m * Lesser General Public License for more details.[m
[32m+[m[32m *[m
[32m+[m[32m * You should have received a copy of the GNU Lesser General Public License[m
[32m+[m[32m * along with this library in the file LICENSE.LGPL; if not, write to the[m
[32m+[m[32m * Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA[m
[32m+[m[32m * 02111-1307 USA[m
[32m+[m[32m *[m
[32m+[m[32m * Alternatively, you may distribute this software under the terms of the[m
[32m+[m[32m * PHP License, version 3.0 or later.  A copy of this license should have[m
[32m+[m[32m * been distributed with this file in the file LICENSE.PHP .  If this is not[m
[32m+[m[32m * the case, you can obtain a copy at http://www.php.net/license/3_0.txt.[m
[32m+[m[32m *[m
[32m+[m[32m * The latest version of DOMPDF might be available at:[m
[32m+[m[32m * http://www.dompdf.com/[m
[32m+[m[32m *[m
[32m+[m[32m * @link http://www.dompdf.com/[m
[32m+[m[32m * @copyright 2004 Benj Carson[m
[32m+[m[32m * @author Benj Carson <benjcarson@digitaljunkies.ca>[m
[32m+[m[32m * @package dompdf[m
[32m+[m
[32m+[m[32m */[m
[32m+[m
[32m+[m[32m/* $Id: cellmap.cls.php 283 2010-07-19 17:57:40Z fabien.menager $ */[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Maps table cells to the table grid.[m
[32m+[m[32m *[m
[32m+[m[32m * This class resolves borders in tables with collapsed borders and helps[m
[32m+[m[32m * place row & column spanned table cells.[m
[32m+[m[32m *[m
[32m+[m[32m * @access private[m
[32m+[m[32m * @package dompdf[m
[32m+[m[32m */[m
[32m+[m[32mclass Cellmap {[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Border style weight lookup for collapsed border resolution.[m
[32m+[m[32m   *[m
[32m+[m[32m   * @var array[m
[32m+[m[32m   */[m
[32m+[m[32m  static protected $_BORDER_STYLE_SCORE = array("inset"  => 1,[m
[32m+[m[32m                                                "groove" => 2,[m
[32m+[m[32m                                                "outset" => 3,[m
[32m+[m[32m                                                "ridge"  => 4,[m
[32m+[m[32m                                                "dotted" => 5,[m
[32m+[m[32m                                                "dashed" => 6,[m
[32m+[m[32m                                                "solid"  => 7,[m
[32m+[m[32m                                                "double" => 8,[m
[32m+[m[32m                                                "none"   => 0);[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * The table object this cellmap is attached to.[m
[32m+[m[32m   *[m
[32m+[m[32m   * @var Table_Frame_Decorator[m
[32m+[m[32m   */[m
[32m+[m[32m  protected $_table;[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * The total number of rows in the table[m
[32m+[m[32m   *[m
[32m+[m[32m   * @var int[m
[32m+[m[32m   */[m
[32m+[m[32m  protected $_num_rows;[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * The total number of columns in the table[m
[32m+[m[32m   *[m
[32m+[m[32m   * @var int[m
[32m+[m[32m   */[m
[32m+[m[32m  protected $_num_cols;[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * 2D array mapping <row,column> to frames[m
[32m+[m[32m   *[m
[32m+[m[32m   * @var array[m
[32m+[m[32m   */[m
[32m+[m[32m  protected $_cells;[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * 1D array of column dimensions[m
[32m+[m[32m   *[m
[32m+[m[32m   * @var array[m
[32m+[m[32m   */[m
[32m+[m[32m  protected $_columns;[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * 1D array of row dimensions[m
[32m+[m[32m   *[m
[32m+[m[32m   * @var array[m
[32m+[m[32m   */[m
[32m+[m[32m  protected $_rows;[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * 2D array of border specs[m
[32m+[m[32m   *[m
[32m+[m[32m   * @var array[m
[32m+[m[32m   */[m
[32m+[m[32m  protected $_borders;[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * 1D Array mapping frames to (multiple) <row, col> pairs, keyed on[m
[32m+[m[32m   * frame_id.[m
[32m+[m[32m   *[m
[32m+[m[32m   * @var array[m
[32m+[m[32m   */[m
[32m+[m[32m  protected $_frames;[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Current column when adding cells, 0-based[m
[32m+[m[32m   *[m
[32m+[m[32m   * @var int[m
[32m+[m[32m   */[m
[32m+[m[32m  private $__col;[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Current row when adding cells, 0-based[m
[32m+[m[32m   *[m
[32m+[m[32m   * @var int[m
[32m+[m[32m   */[m
[32m+[m[32m  private $__row;[m
[32m+[m
[32m+[m[32m  //........................................................................[m
[32m+[m
[32m+[m[32m  function __construct(Table_Frame_Decorator $table) {[m
[32m+[m[32m    $this->_table = $table;[m
[32m+[m[32m    $this->reset();[m
[32m+[m[32m  }[m
[32m+[m[41m  [m
[32m+[m[32m  function __destruct() {[m
[32m+[m[41m  [m	[32mclear_object($this);[m
[32m+[m[32m  }[m
[32m+[m[32m  //........................................................................[m
[32m+[m
[32m+[m[32m  function reset() {[m
[32m+[m[32m    $this->_num_rows = 0;[m
[32m+[m[32m    $this->_num_cols = 0;[m
[32m+[m
[32m+[m[32m    $this->_cells  = array();[m
[32m+[m[32m    $this->_frames = array();[m
[32m+[m
[32m+[m[32m    $this->_columns = array();[m
[32m+[m[32m    $this->_rows = array();[m
[32m+[m
[32m+[m[32m    $this->_borders = array();[m
[32m+[m
[32m+[m[32m    $this->__col = $this->__row = 0;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  //........................................................................[m
[32m+[m
[32m+[m[32m  function get_num_rows() { return $this->_num_rows; }[m
[32m+[m[32m  function get_num_cols() { return $this->_num_cols; }[m
[32m+[m
[32m+[m[32m  function &get_columns() {[m
[32m+[m[32m    return $this->_columns;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  function &get_column($i) {[m
[32m+[m[32m    if ( !isset($this->_columns[$i]) )[m
[32m+[m[32m      $this->_columns[$i] = array("x" => 0,[m
[32m+[m[32m                                  "min-width" => 0,[m
[32m+[m[32m                                  "max-width" => 0,[m
[32m+[m[32m                                  "used-width" => null,[m
[32m+[m[32m                                  "absolute" => 0,[m
[32m+[m[32m                                  "percent" => 0,[m
[32m+[m[32m                                  "auto" => true);[m
[32m+[m
[32m+[m[32m    return $this->_columns[$i];[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  function &get_rows() {[m
[32m+[m[32m    return $this->_rows;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  function &get_row($j) {[m
[32m+[m[32m    if ( !isset($this->_rows[$j]) )[m
[32m+[m[32m      $this->_rows[$j] = array("y" => 0,[m
[32m+[m[32m                               "first-column" => 0,[m
[32m+[m[32m                               "height" => null);[m
[32m+[m[32m    return $this->_rows[$j];[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  function get_border($i, $j, $h_v, $prop = null) {[m
[32m+[m[32m    if ( !isset($this->_borders[$i][$j][$h_v]) )[m
[32m+[m[32m      $this->_borders[$i][$j][$h_v] = array("width" => 0,[m
[32m+[m[32m                                           "style" => "solid",[m
[32m+[m[32m                                           "color" => "black");[m
[32m+[m[32m    if ( isset($prop) )[m
[32m+[m[32m      return $this->_borders[$i][$j][$h_v][$prop];[m
[32m+[m
[32m+[m[32m    return $this->_borders[$i][$j][$h_v];[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  function get_border_properties($i, $j) {[m
[32m+[m
[32m+[m[32m    $left = $this->get_border($i, $j, "vertical");[m
[32m+[m[32m    $right = $this->get_border($i, $j+1, "vertical");[m
[32m+[m[32m    $top = $this->get_border($i, $j, "horizontal");[m
[32m+[m[32m    $bottom = $this->get_border($i+1, $j, "horizontal");[m
[32m+[m
[32m+[m[32m    return compact("top", "bottom", "left", "right");[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  //........................................................................[m
[32m+[m
[32m+[m[32m  function get_spanned_cells($frame) {[m
[32m+[m[32m    $key = $frame->get_id();[m
[32m+[m
[32m+[m[32m    if ( !isset($this->_frames[$key]) ) {[m
[32m+[m[32m      throw new DOMPDF_Internal_Exception("Frame not found in cellmap");[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    return $this->_frames[$key];[m
[32m+[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  function frame_exists_in_cellmap($frame) {[m
[32m+[m[32m    $key = $frame->get_id();[m
[32m+[m[32m    return isset($this->_frames[$key]);[m
[32m+[m[32m  }[m
[32m+[m[41m  [m
[32m+[m[32m  function get_frame_position($frame) {[m
[32m+[m[32m    global $_dompdf_warnings;[m
[32m+[m
[32m+[m[32m    $key = $frame->get_id();[m
[32m+[m
[32m+[m[32m    if ( !isset($this->_frames[$key]) ) {[m
[32m+[m[32m      throw new DOMPDF_Internal_Exception("Frame not found in cellmap");[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    $col = $this->_frames[$key]["columns"][0];[m
[32m+[m[32m    $row = $this->_frames[$key]["rows"][0];[m
[32m+[m
[32m+[m[32m    if ( !isset($this->_columns[$col])) {[m
[32m+[m[32m      $_dompdf_warnings[] = "Frame not found in columns array.  Check your table layout for missing or extra TDs.";[m
[32m+[m[32m      $x = 0;[m
[32m+[m[32m    } else[m
[32m+[m[32m      $x = $this->_columns[$col]["x"];[m
[32m+[m
[32m+[m[32m    if ( !isset($this->_rows[$row])) {[m
[32m+[m[32m      $_dompdf_warnings[] = "Frame not found in row array.  Check your table layout for missing or extra TDs.";[m
[32m+[m[32m      $y = 0;[m
[32m+[m[32m    } else[m
[32m+[m[32m      $y = $this->_rows[$row]["y"];[m
[32m+[m
[32m+[m[32m    return array($x, $y, "x" => $x, "y" => $y);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  function get_frame_width($frame) {[m
[32m+[m[32m    $key = $frame->get_id();[m
[32m+[m
[32m+[m[32m    if ( !isset($this->_frames[$key]) ) {[m
[32m+[m[32m      throw new DOMPDF_Internal_Exception("Frame not found in cellmap");[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    $cols = $this->_frames[$key]["columns"];[m
[32m+[m[32m    $w = 0;[m
[32m+[m[32m    foreach ($cols as $i)[m
[32m+[m[32m      $w += $this->_columns[$i]["used-width"];[m
[32m+[m
[32m+[m[32m    return $w;[m
[32m+[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  function get_frame_height($frame) {[m
[32m+[m[32m    $key = $frame->get_id();[m
[32m+[m
[32m+[m[32m    if ( !isset($this->_frames[$key]) )[m
[32m+[m[32m      throw new DOMPDF_Internal_Exception("Frame not found in cellmap");[m
[32m+[m
[32m+[m[32m    $rows = $this->_frames[$key]["rows"];[m
[32m+[m[32m    $h = 0;[m
[32m+[m[32m    foreach ($rows as $i) {[m
[32m+[m[32m      if ( !isset($this->_rows[$i]) )  {[m
[32m+[m[32m        throw new Exception("foo");[m
[32m+[m[32m      }[m
[32m+[m[32m      $h += $this->_rows[$i]["height"];[m
[32m+[m[32m    }[m
[32m+[m[32m    return $h;[m
[32m+[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m
[32m+[m[32m  //........................................................................[m
[32m+[m
[32m+[m[32m  function set_column_width($j, $width) {[m
[32m+[m[32m    $col =& $this->get_column($j);[m
[32m+[m[32m    $col["used-width"] = $width;[m
[32m+[m[32m    $next_col =& $this->get_column($j+1);[m
[32m+[m[32m    $next_col["x"] = $next_col["x"] + $width;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  function set_row_height($i, $height) {[m
[32m+[m[32m    $row =& $this->get_row($i);[m
[32m+[m[32m    if ( $height <= $row["height"] )[m
[32m+[m[32m      return;[m
[32m+[m
[32m+[m[32m    $row["height"] = $height;[m
[32m+[m[32m    $next_row =& $this->get_row($i+1);[m
[32m+[m[32m    $next_row["y"] = $row["y"] + $height;[m
[32m+[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  //........................................................................[m
[32m+[m
[32m+[m
[32m+[m[32m  protected function _resolve_border($i, $j, $h_v, $border_spec) {[m
[32m+[m[32m    $n_width = $border_spec["width"];[m
[32m+[m[32m    $n_style = $border_spec["style"];[m
[32m+[m[32m    $n_color = $border_spec["color"];[m
[32m+[m
[32m+[m[32m    if ( !isset($this->_borders[$i][$j][$h_v]) ) {[m
[32m+[m[32m      $this->_borders[$i][$j][$h_v] = $border_spec;[m
[32m+[m[32m      return $this->_borders[$i][$j][$h_v]["width"];[m
[32m+[m[32m    }[m
[32m+[m[41m    [m
[32m+[m[32m    $border = &$this->_borders[$i][$j][$h_v];[m
[32m+[m[41m    [m
[32m+[m[32m    $o_width = $border["width"];[m
[32m+[m[32m    $o_style = $border["style"];[m
[32m+[m[32m    $o_color = $border["color"];[m
[32m+[m
[32m+[m[32m    if ( ($n_style === "hidden" ||[m
[32m+[m[32m          $n_width  >  $o_width ||[m
[32m+[m[32m          $o_style === "none")[m
[32m+[m
[32m+[m[32m         or[m
[32m+[m
[32m+[m[32m         ($o_width == $n_width &&[m
[32m+[m[32m          in_array($n_style, self::$_BORDER_STYLE_SCORE) &&[m
[32m+[m[32m          self::$_BORDER_STYLE_SCORE[ $n_style ] > self::$_BORDER_STYLE_SCORE[ $o_style ]) )[m
[32m+[m[32m      $border = $border_spec;[m
[32m+[m
[32m+[m[32m    return $border["width"];[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  //........................................................................[m
[32m+[m
[32m+[m[32m  function add_frame(Frame $frame) {[m
[32m+[m[41m    [m
[32m+[m[32m    $style = $frame->get_style();[m
[32m+[m[32m    $display = $style->display;[m
[32m+[m
[32m+[m[32m    $collapse = $this->_table->get_style()->border_collapse == "collapse";[m
[32m+[m
[32m+[m[32m    // Recursively add the frames within tables, table-row-groups and table-rows[m
[32m+[m[32m    if ( $display === "table-row" ||[m
[32m+[m[32m         $display === "table" ||[m
[32m+[m[32m         $display === "inline-table" ||[m
[32m+[m[32m         in_array($display, Table_Frame_Decorator::$ROW_GROUPS) ) {[m
[32m+[m
[32m+[m[32m      $start_row = $this->__row;[m
[32m+[m[32m      foreach ( $frame->get_children() as $child )[m
[32m+[m[32m        $this->add_frame( $child );[m
[32m+[m
[32m+[m[32m      if ( $display === "table-row" )[m
[32m+[m[32m        $this->add_row();[m
[32m+[m
[32m+[m[32m      $num_rows = $this->__row - $start_row - 1;[m
[32m+[m[32m      $key = $frame->get_id();[m
[32m+[m
[32m+[m[32m      // Row groups always span across the entire table[m
[32m+[m[32m      $this->_frames[$key]["columns"] = range(0,max(0,$this->_num_cols-1));[m
[32m+[m[32m      $this->_frames[$key]["rows"] = range($start_row, max(0, $this->__row - 1));[m
[32m+[m[32m      $this->_frames[$key]["frame"] = $frame;[m
[32m+[m
[32m+[m[32m      if ( $display !== "table-row" && $collapse ) {[m
[32m+[m
[32m+[m[32m        $bp = $style->get_border_properties();[m
[32m+[m
[32m+[m[32m        // Resolve the borders[m
[32m+[m[32m        for ( $i = 0; $i < $num_rows+1; $i++) {[m
[32m+[m[32m          $this->_resolve_border($start_row + $i, 0, "vertical", $bp["left"]);[m
[32m+[m[32m          $this->_resolve_border($start_row + $i, $this->_num_cols, "vertical", $bp["right"]);[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        for ( $j = 0; $j < $this->_num_cols; $j++) {[m
[32m+[m[32m          $this->_resolve_border($start_row, $j, "horizontal", $bp["top"]);[m
[32m+[m[32m          $this->_resolve_border($this->__row, $j, "horizontal", $bp["bottom"]);[m
[32m+[m[32m        }[m
[32m+[m[32m      }[m
[32m+[m
[32m+[m
[32m+[m[32m      return;[m
[32m+[m[32m    }[m
[32m+[m[41m    [m
[32m+[m[32m    $node = $frame->get_node();[m
[32m+[m[41m    [m
[32m+[m[32m    // Determine where this cell is going[m
[32m+[m[32m    $colspan = $node->getAttribute("colspan");[m
[32m+[m[32m    $rowspan = $node->getAttribute("rowspan");[m
[32m+[m
[32m+[m[32m    if ( !$colspan ) {[m
[32m+[m[32m      $colspan = 1;[m
[32m+[m[32m      $node->setAttribute("colspan",1);[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    if ( !$rowspan ) {[m
[32m+[m[32m      $rowspan = 1;[m
[32m+[m[32m      $node->setAttribute("rowspan",1);[m
[32m+[m[32m    }[m
[32m+[m[32m    $key = $frame->get_id();[m
[32m+[m
[32m+[m[32m    $bp = $style->get_border_properties();[m
[32m+[m
[32m+[m
[32m+[m[32m    // Add the frame to the cellmap[m
[32m+[m[32m    $max_left = $max_right = 0;[m
[32m+[m
[32m+[m[32m    // Find the next available column (fix by Ciro Mondueri)[m
[32m+[m[32m    $ac = $this->__col;[m
[32m+[m[32m    while ( isset($this->_cells[$this->__row][$ac]) )[m
[32m+[m[32m       $ac++;[m
[32m+[m[32m    $this->__col = $ac;[m
[32m+[m
[32m+[m[32m    // Rows:[m
[32m+[m[32m    for ( $i = 0; $i < $rowspan; $i++ ) {[m
[32m+[m[32m      $row = $this->__row + $i;[m
[32m+[m
[32m+[m[32m      $this->_frames[$key]["rows"][] = $row;[m
[32m+[m
[32m+[m[32m      for ( $j = 0; $j < $colspan; $j++)[m
[32m+[m[32m        $this->_cells[$row][$this->__col + $j] = $frame;[m
[32m+[m
[32m+[m[32m      if ( $collapse ) {[m
[32m+[m[32m        // Resolve vertical borders[m
[32m+[m[32m        $max_left = max($max_left, $this->_resolve_border($row, $this->__col, "vertical", $bp["left"]));[m
[32m+[m[32m        $max_right = max($max_right, $this->_resolve_border($row, $this->__col + $colspan, "vertical", $bp["right"]));[m
[32m+[m[32m      }[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    $max_top = $max_bottom = 0;[m
[32m+[m
[32m+[m[32m    // Columns:[m
[32m+[m[32m    for ( $j = 0; $j < $colspan; $j++ ) {[m
[32m+[m[32m      $col = $this->__col + $j;[m
[32m+[m[32m      $this->_frames[$key]["columns"][] = $col;[m
[32m+[m
[32m+[m[32m      if ( $collapse ) {[m
[32m+[m[32m        // Resolve horizontal borders[m
[32m+[m[32m        $max_top = max($max_top, $this->_resolve_border($this->__row, $col, "horizontal", $bp["top"]));[m
[32m+[m[32m        $max_bottom = max($max_bottom, $this->_resolve_border($this->__row + $rowspan, $col, "horizontal", $bp["bottom"]));[m
[32m+[m[32m      }[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    $this->_frames[$key]["frame"] = $frame;[m
[32m+[m
[32m+[m[32m    // Handle seperated border model[m
[32m+[m[32m    if ( !$collapse ) {[m
[32m+[m[32m      list($h, $v) = $this->_table->get_style()->border_spacing;[m
[32m+[m
[32m+[m[32m      // Border spacing is effectively a margin between cells[m
[32m+[m[32m      $v = $style->length_in_pt($v) / 2;[m
[32m+[m[32m      $h = $style->length_in_pt($h) / 2;[m
[32m+[m[32m      $style->margin = "$v $h";[m
[32m+[m
[32m+[m[32m      // The additional 1/2 width gets added to the table proper[m
[32m+[m
[32m+[m[32m    } else {[m
[32m+[m
[32m+[m[32m      // Drop the frame's actual border[m
[32m+[m[32m      $style->border_left_width = $max_left / 2;[m
[32m+[m[32m      $style->border_right_width = $max_right / 2;[m
[32m+[m[32m      $style->border_top_width = $max_top / 2;[m
[32m+[m[32m      $style->border_bottom_width = $max_bottom / 2;[m
[32m+[m[32m      $style->margin = "none";[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    // Resolve the frame's width[m
[32m+[m[32m    list($frame_min, $frame_max) = $frame->get_min_max_width();[m
[32m+[m
[32m+[m[32m    $width = $style->width;[m
[32m+[m
[32m+[m[32m    if ( is_percent($width) ) {[m
[32m+[m[32m      $var = "percent";[m
[32m+[m[32m      $val = (float)rtrim($width, "% ") / $colspan;[m
[32m+[m
[32m+[m[32m    } else if ( $width !== "auto" ) {[m
[32m+[m[32m      $var = "absolute";[m
[32m+[m[32m      $val = $style->length_in_pt($frame_min) / $colspan;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    $min = 0;[m
[32m+[m[32m    $max = 0;[m
[32m+[m[32m    for ( $cs = 0; $cs < $colspan; $cs++ ) {[m
[32m+[m
[32m+[m[32m      // Resolve the frame's width(s) with other cells[m
[32m+[m[32m      $col =& $this->get_column( $this->__col + $cs );[m
[32m+[m
[32m+[m[32m      // Note: $var is either 'percent' or 'absolute'.  We compare the[m
[32m+[m[32m      // requested percentage or absolute values with the existing widths[m
[32m+[m[32m      // and adjust accordingly.[m
[32m+[m[32m      if ( isset($var) && $val > $col[$var] ) {[m
[32m+[m[32m        $col[$var] = $val;[m
[32m+[m[32m        $col["auto"] = false;[m
[32m+[m[32m      }[m
[32m+[m
[32m+[m[32m      $min += $col["min-width"];[m
[32m+[m[32m      $max += $col["max-width"];[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m
[32m+[m[32m    if ( $frame_min > $min ) {[m
[32m+[m[32m      // The frame needs more space.  Expand each sub-column[m
[32m+[m[32m      $inc = ($frame_min - $min) / $colspan;[m
[32m+[m[32m      for ($c = 0; $c < $colspan; $c++) {[m
[32m+[m[32m        $col =& $this->get_column($this->__col + $c);[m
[32m+[m[32m        $col["min-width"] += $inc;[m
[32m+[m[32m      }[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    if ( $frame_max > $max ) {[m
[32m+[m[32m      $inc = ($frame_max - $max) / $colspan;[m
[32m+[m[32m      for ($c = 0; $c < $colspan; $c++) {[m
[32m+[m[32m        $col =& $this->get_column($this->__col + $c);[m
[32m+[m[32m        $col["max-width"] += $inc;[m
[32m+[m[32m      }[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    $this->__col += $colspan;[m
[32m+[m[32m    if ( $this->__col > $this->_num_cols )[m
[32m+[m[32m      $this->_num_cols = $this->__col;[m
[32m+[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  //........................................................................[m
[32m+[m
[32m+[m[32m  function add_row() {[m
[32m+[m
[32m+[m[32m    $this->__row++;[m
[32m+[m[32m    $this->_num_rows++;[m
[32m+[m
[32m+[m[32m    // Find the next available column[m
[32m+[m[32m    $i = 0;[m
[32m+[m[32m    while ( isset($this->_cells[$this->__row][$i]) )[m
[32m+[m[32m      $i++;[m
[32m+[m
[32m+[m[32m    $this->__col = $i;[m
[32m+[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  //........................................................................[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Remove a row from the cellmap.[m
[32m+[m[32m   *[m
[32m+[m[32m   * @param Frame[m
[32m+[m[32m   */[m
[32m+[m[32m  function remove_row(Frame $row) {[m
[32m+[m
[32m+[m[32m    $key = $row->get_id();[m
[32m+[m[32m    if ( !isset($this->_frames[$key]) )[m
[32m+[m[32m      return;  // Presumably this row has alredy been removed[m
[32m+[m
[32m+[m[32m    $this->_row = $this->_num_rows--;[m
[32m+[m
[32m+[m[32m    $rows = $this->_frames[$key]["rows"];[m
[32m+[m[32m    $columns = $this->_frames[$key]["columns"];[m
[32m+[m
[32m+[m[32m    // Remove all frames from this row[m
[32m+[m[32m    foreach ( $rows as $r ) {[m
[32m+[m[32m      foreach ( $columns as $c ) {[m
[32m+[m[32m        if ( isset($this->_cells[$r][$c]) ) {[m
[32m+[m[32m          $id = $this->_cells[$r][$c]->get_id();[m
[32m+[m[41m          [m
[32m+[m[32m          $this->_frames[$id] = null;[m
[32m+[m[32m          unset($this->_frames[$id]);[m
[32m+[m[41m          [m
[32m+[m[32m          $this->_cells[$r][$c] = null;[m
[32m+[m[32m          unset($this->_cells[$r][$c]);[m
[32m+[m[32m        }[m
[32m+[m[32m      }[m
[32m+[m[32m      $this->_rows[$r] = null;[m
[32m+[m[32m      unset($this->_rows[$r]);[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    $this->_frames[$key] = null;[m
[32m+[m[32m    unset($this->_frames[$key]);[m
[32m+[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Remove a row group from the cellmap.[m
[32m+[m[32m   *[m
[32m+[m[32m   * @param Frame $group  The group to remove[m
[32m+[m[32m   */[m
[32m+[m[32m  function remove_row_group(Frame $group) {[m
[32m+[m
[32m+[m[32m    $key = $group->get_id();[m
[32m+[m[32m    if ( !isset($this->_frames[$key]) )[m
[32m+[m[32m      return;  // Presumably this row has alredy been removed[m
[32m+[m
[32m+[m[32m    $iter = $group->get_first_child();[m
[32m+[m[32m    while ($iter) {[m
[32m+[m[32m      $this->remove_row($iter);[m
[32m+[m[32m      $iter = $iter->get_next_sibling();[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    $this->_frames[$key] = null;[m
[32m+[m[32m    unset($this->_frames[$key]);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Update a row group after rows have been removed[m
[32m+[m[32m   *[m
[32m+[m[32m   * @param Frame $group    The group to update[m
[32m+[m[32m   * @param Frame $last_row The last row in the row group[m
[32m+[m[32m   */[m
[32m+[m[32m  function update_row_group(Frame $group, Frame $last_row) {[m
[32m+[m
[32m+[m[32m    $g_key = $group->get_id();[m
[32m+[m[32m    $r_key = $last_row->get_id();[m
[32m+[m
[32m+[m[32m    $r_rows = $this->_frames[$r_key]["rows"];[m
[32m+[m[32m    $this->_frames[$g_key]["rows"] = range( $this->_frames[$g_key]["rows"][0], end($r_rows) );[m
[32m+[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  //........................................................................[m
[32m+[m
[32m+[m[32m  function assign_x_positions() {[m
[32m+[m[32m    // Pre-condition: widths must be resolved and assigned to columns and[m
[32m+[m[32m    // column[0]["x"] must be set.[m
[32m+[m
[32m+[m[32m    $x = $this->_columns[0]["x"];[m
[32m+[m[32m    foreach ( array_keys($this->_columns) as $j ) {[m
[32m+[m[32m      $this->_columns[$j]["x"] = $x;[m
[32m+[m[32m      $x += $this->_columns[$j]["used-width"];[m
[32m+[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  function assign_frame_heights() {[m
[32m+[m[32m    // Pre-condition: widths and heights of each column & row must be[m
[32m+[m[32m    // calcluated[m
[32m+[m
[32m+[m[32m    foreach ( $this->_frames as $arr ) {[m
[32m+[m[32m      $frame = $arr["frame"];[m
[32m+[m
[32m+[m[32m      $h = 0;[m
[32m+[m[32m      foreach( $arr["rows"] as $row ) {[m
[32m+[m[32m        if ( !isset($this->_rows[$row]) )[m
[32m+[m[32m          // The row has been removed because of a page split, so skip it.[m
[32m+[m[32m          continue;[m
[32m+[m[32m        $h += $this->_rows[$row]["height"];[m
[32m+[m[32m      }[m
[32m+[m
[32m+[m[32m      if ( $frame instanceof Table_Cell_Frame_Decorator )[m
[32m+[m[32m        $frame->set_cell_height($h);[m
[32m+[m[32m      else[m
[32m+[m[32m        $frame->get_style()->height = $h;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  //........................................................................[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Re-adjust frame height if the table height is larger than its content[m
[32m+[m[32m   */[m
[32m+[m[32m  function set_frame_heights($table_height, $content_height) {[m
[32m+[m
[32m+[m
[32m+[m[32m    // Distribute the increased height proportionally amongst each row[m
[32m+[m[32m    foreach ( $this->_frames as $arr ) {[m
[32m+[m[32m      $frame = $arr["frame"];[m
[32m+[m
[32m+[m[32m      $h = 0;[m
[32m+[m[32m      foreach ($arr["rows"] as $row ) {[m
[32m+[m[32m        if ( !isset($this->_rows[$row]) )[m
[32m+[m[32m          continue;[m
[32m+[m
[32m+[m[32m        $h += $this->_rows[$row]["height"];[m
[32m+[m[32m      }[m
[32m+[m[41m      [m
[32m+[m[32m      if ( $content_height > 0 )[m
[32m+[m[32m        $new_height = ($h / $content_height) * $table_height;[m
[32m+[m[32m      else[m
[32m+[m[32m        $new_height = 0;[m
[32m+[m
[32m+[m[32m      if ( $frame instanceof Table_Cell_Frame_Decorator )[m
[32m+[m[32m        $frame->set_cell_height($new_height);[m
[32m+[m[32m      else[m
[32m+[m[32m        $frame->get_style()->height = $new_height;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  //........................................................................[m
[32m+[m
[32m+[m[32m  // Used for debugging:[m
[32m+[m[32m  function __toString() {[m
[32m+[m[32m    $str = "";[m
[32m+[m[32m    $str .= "Columns:<br/>";[m
[32m+[m[32m    $str .= pre_r($this->_columns, true);[m
[32m+[m[32m    $str .=  "Rows:<br/>";[m
[32m+[m[32m    $str .= pre_r($this->_rows, true);[m
[32m+[m
[32m+[m[32m    $str .=  "Frames:<br/>";[m
[32m+[m[32m    $arr = array();[m
[32m+[m[32m    foreach ( $this->_frames as $key => $val )[m
[32m+[m[32m      $arr[$key] = array("columns" => $val["columns"], "rows" => $val["rows"]);[m
[32m+[m
[32m+[m[32m    $str .= pre_r($arr, true);[m
[32m+[m
[32m+[m[32m    if ( php_sapi_name() == "cli" )[m
[32m+[m[32m      $str = strip_tags(str_replace(array("<br/>","<b>","</b>"),[m
[32m+[m[32m                                    array("\n",chr(27)."[01;33m", chr(27)."[0m"),[m
[32m+[m[32m                                    $str));[m
[32m+[m[32m    return $str;[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[1mdiff --git a/application/third_party/dompdf/include/cpdf_adapter.cls.php b/application/third_party/dompdf/include/cpdf_adapter.cls.php[m
[1mnew file mode 100644[m
[1mindex 0000000..8598df5[m
[1m--- /dev/null[m
[1m+++ b/application/third_party/dompdf/include/cpdf_adapter.cls.php[m
[36m@@ -0,0 +1,919 @@[m
[32m+[m[32m<?php[m
[32m+[m[32m/**[m
[32m+[m[32m * DOMPDF - PHP5 HTML to PDF renderer[m
[32m+[m[32m *[m
[32m+[m[32m * File: $RCSfile: cpdf_adapter.cls.php,v $[m
[32m+[m[32m * Created on: 2004-08-04[m
[32m+[m[32m * Modified on: 2008-01-05[m
[32m+[m[32m *[m
[32m+[m[32m * Copyright (c) 2004 - Benj Carson <benjcarson@digitaljunkies.ca>[m
[32m+[m[32m * Portions copyright (c) 2008 - Orion Richardson <orionr@yahoo.com>[m
[32m+[m[32m *[m
[32m+[m[32m * This library is free software; you can redistribute it and/or[m
[32m+[m[32m * modify it under the terms of the GNU Lesser General Public[m
[32m+[m[32m * License as published by the Free Software Foundation; either[m
[32m+[m[32m * version 2.1 of the License, or (at your option) any later version.[m
[32m+[m[32m *[m
[32m+[m[32m * This library is distributed in the hope that it will be useful,[m
[32m+[m[32m * but WITHOUT ANY WARRANTY; without even the implied warranty of[m
[32m+[m[32m * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU[m
[32m+[m[32m * Lesser General Public License for more details.[m
[32m+[m[32m *[m
[32m+[m[32m * You should have received a copy of the GNU Lesser General Public License[m
[32m+[m[32m * along with this library in the file LICENSE.LGPL; if not, write to the[m
[32m+[m[32m * Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA[m
[32m+[m[32m * 02111-1307 USA[m
[32m+[m[32m *[m
[32m+[m[32m * Alternatively, you may distribute this software under the terms of the[m
[32m+[m[32m * PHP License, version 3.0 or later.  A copy of this license should have[m
[32m+[m[32m * been distributed with this file in the file LICENSE.PHP .  If this is not[m
[32m+[m[32m * the case, you can obtain a copy at http://www.php.net/license/3_0.txt.[m
[32m+[m[32m *[m
[32m+[m[32m * The latest version of DOMPDF might be available at:[m
[32m+[m[32m * http://www.dompdf.com/[m
[32m+[m[32m *[m
[32m+[m[32m * @link http://www.dompdf.com/[m
[32m+[m[32m * @copyright 2004 Benj Carson[m
[32m+[m[32m * @author Benj Carson <benjcarson@digitaljunkies.ca>[m
[32m+[m[32m * @contributor Orion Richardson <orionr@yahoo.com>[m
[32m+[m[32m * @contributor Helmut Tischer <htischer@weihenstephan.org>[m
[32m+[m[32m * @package dompdf[m
[32m+[m[32m *[m
[32m+[m[32m * Changes[m
[32m+[m[32m * @contributor Helmut Tischer <htischer@weihenstephan.org>[m
[32m+[m[32m * @version 0.5.1.htischer.20090507[m
[32m+[m[32m * - On gif to png conversion tmp file creation, clarify tmp name and add to tmp deletion list only on success[m
[32m+[m[32m * - On gif to png conversion, when available add direct from gd without tmp file, skip image load if already cached.[m
[32m+[m[32m *   to safe CPU time and memory[m
[32m+[m[32m * @contributor Helmut Tischer <htischer@weihenstephan.org>[m
[32m+[m[32m * @version dompdf_trunk_with_helmut_mods.20090524[m
[32m+[m[32m * - Pass temp and fontcache folders to Cpdf, to making Cpdf independent from dompdf[m
[32m+[m[32m * @version dompdf_trunk_with_helmut_mods.20090528[m
[32m+[m[32m * - fix text position according to glyph baseline to match background rectangle[m
[32m+[m[32m */[m
[32m+[m
[32m+[m[32m/* $Id: cpdf_adapter.cls.php 356 2011-01-28 08:56:10Z fabien.menager $ */[m
[32m+[m
[32m+[m[32m// FIXME: Need to sanity check inputs to this class[m
[32m+[m[32mrequire_once(DOMPDF_LIB_DIR . "/class.pdf.php");[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * PDF rendering interface[m
[32m+[m[32m *[m
[32m+[m[32m * CPDF_Adapter provides a simple stateless interface to the stateful one[m
[32m+[m[32m * provided by the Cpdf class.[m
[32m+[m[32m *[m
[32m+[m[32m * Unless otherwise mentioned, all dimensions are in points (1/72 in).  The[m
[32m+[m[32m * coordinate origin is in the top left corner, and y values increase[m
[32m+[m[32m * downwards.[m
[32m+[m[32m *[m
[32m+[m[32m * See {@link http://www.ros.co.nz/pdf/} for more complete documentation[m
[32m+[m[32m * on the underlying {@link Cpdf} class.[m
[32m+[m[32m *[m
[32m+[m[32m * @package dompdf[m
[32m+[m[32m */[m
[32m+[m[32mclass CPDF_Adapter implements Canvas {[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Dimensions of paper sizes in points[m
[32m+[m[32m   *[m
[32m+[m[32m   * @var array;[m
[32m+[m[32m   */[m
[32m+[m[32m  static $PAPER_SIZES = array([m
[32m+[m[32m    "4a0" => array(0,0,4767.87,6740.79),[m
[32m+[m[32m    "2a0" => array(0,0,3370.39,4767.87),[m
[32m+[m[32m    "a0" => array(0,0,2383.94,3370.39),[m
[32m+[m[32m    "a1" => array(0,0,1683.78,2383.94),[m
[32m+[m[32m    "a2" => array(0,0,1190.55,1683.78),[m
[32m+[m[32m    "a3" => array(0,0,841.89,1190.55),[m
[32m+[m[32m    "a4" => array(0,0,595.28,841.89),[m
[32m+[m[32m    "a5" => array(0,0,419.53,595.28),[m
[32m+[m[32m    "a6" => array(0,0,297.64,419.53),[m
[32m+[m[32m    "a7" => array(0,0,209.76,297.64),[m
[32m+[m[32m    "a8" => array(0,0,147.40,209.76),[m
[32m+[m[32m    "a9" => array(0,0,104.88,147.40),[m
[32m+[m[32m    "a10" => array(0,0,73.70,104.88),[m
[32m+[m[32m    "b0" => array(0,0,2834.65,4008.19),[m
[32m+[m[32m    "b1" => array(0,0,2004.09,2834.65),[m
[32m+[m[32m    "b2" => array(0,0,1417.32,2004.09),[m
[32m+[m[32m    "b3" => array(0,0,1000.63,1417.32),[m
[32m+[m[32m    "b4" => array(0,0,708.66,1000.63),[m
[32m+[m[32m    "b5" => array(0,0,498.90,708.66),[m
[32m+[m[32m    "b6" => array(0,0,354.33,498.90),[m
[32m+[m[32m    "b7" => array(0,0,249.45,354.33),[m
[32m+[m[32m    "b8" => array(0,0,175.75,249.45),[m
[32m+[m[32m    "b9" => array(0,0,124.72,175.75),[m
[32m+[m[32m    "b10" => array(0,0,87.87,124.72),[m
[32m+[m[32m    "c0" => array(0,0,2599.37,3676.54),[m
[32m+[m[32m    "c1" => array(0,0,1836.85,2599.37),[m
[32m+[m[32m    "c2" => array(0,0,1298.27,1836.85),[m
[32m+[m[32m    "c3" => array(0,0,918.43,1298.27),[m
[32m+[m[32m    "c4" => array(0,0,649.13,918.43),[m
[32m+[m[32m    "c5" => array(0,0,459.21,649.13),[m
[32m+[m[32m    "c6" => array(0,0,323.15,459.21),[m
[32m+[m[32m    "c7" => array(0,0,229.61,323.15),[m
[32m+[m[32m    "c8" => array(0,0,161.57,229.61),[m
[32m+[m[32m    "c9" => array(0,0,113.39,161.57),[m
[32m+[m[32m    "c10" => array(0,0,79.37,113.39),[m
[32m+[m[32m    "ra0" => array(0,0,2437.80,3458.27),[m
[32m+[m[32m    "ra1" => array(0,0,1729.13,2437.80),[m
[32m+[m[32m    "ra2" => array(0,0,1218.90,1729.13),[m
[32m+[m[32m    "ra3" => array(0,0,864.57,1218.90),[m
[32m+[m[32m    "ra4" => array(0,0,609.45,864.57),[m
[32m+[m[32m    "sra0" => array(0,0,2551.18,3628.35),[m
[32m+[m[32m    "sra1" => array(0,0,1814.17,2551.18),[m
[32m+[m[32m    "sra2" => array(0,0,1275.59,1814.17),[m
[32m+[m[32m    "sra3" => array(0,0,907.09,1275.59),[m
[32m+[m[32m    "sra4" => array(0,0,637.80,907.09),[m
[32m+[m[32m    "letter" => array(0,0,612.00,792.00),[m
[32m+[m[32m    "legal" => array(0,0,612.00,1008.00),[m
[32m+[m[32m    "ledger" => array(0,0,1224.00, 792.00),[m
[32m+[m[32m    "tabloid" => array(0,0,792.00, 1224.00),[m
[32m+[m[32m    "executive" => array(0,0,521.86,756.00),[m
[32m+[m[32m    "folio" => array(0,0,612.00,936.00),[m
[32m+[m[32m    "commercial #10 envelope" => array(0,0,684,297),[m
[32m+[m[32m    "catalog #10 1/2 envelope" => array(0,0,648,864),[m
[32m+[m[32m    "8.5x11" => array(0,0,612.00,792.00),[m
[32m+[m[32m    "8.5x14" => array(0,0,612.00,1008.0),[m
[32m+[m[32m    "11x17"  => array(0,0,792.00, 1224.00),[m
[32m+[m[32m  );[m
[32m+[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Instance of Cpdf class[m
[32m+[m[32m   *[m
[32m+[m[32m   * @var Cpdf[m
[32m+[m[32m   */[m
[32m+[m[32m  private $_pdf;[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * PDF width, in points[m
[32m+[m[32m   *[m
[32m+[m[32m   * @var float[m
[32m+[m[32m   */[m
[32m+[m[32m  private $_width;[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * PDF height, in points[m
[32m+[m[32m   *[m
[32m+[m[32m   * @var float;[m
[32m+[m[32m   */[m
[32m+[m[32m  private $_height;[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Current page number[m
[32m+[m[32m   *[m
[32m+[m[32m   * @var int[m
[32m+[m[32m   */[m
[32m+[m[32m  private $_page_number;[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Total number of pages[m
[32m+[m[32m   *[m
[32m+[m[32m   * @var int[m
[32m+[m[32m   */[m
[32m+[m[32m  private $_page_count;[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Text to display on every page[m
[32m+[m[32m   *[m
[32m+[m[32m   * @var array[m
[32m+[m[32m   */[m
[32m+[m[32m  private $_page_text;[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Array of pages for accesing after rendering is initially complete[m
[32m+[m[32m   *[m
[32m+[m[32m   * @var array[m
[32m+[m[32m   */[m
[32m+[m[32m  private $_pages;[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Array of temporary cached images to be deleted when processing is complete[m
[32m+[m[32m   *[m
[32m+[m[32m   * @var array[m
[32m+[m[32m   */[m
[32m+[m[32m  private $_image_cache;[m
[32m+[m[41m  [m
[32m+[m[32m  /**[m
[32m+[m[32m   * Class constructor[m
[32m+[m[32m   *[m
[32m+[m[32m   * @param mixed  $paper  The size of paper to use in this PDF ({@link CPDF_Adapter::$PAPER_SIZES})[m
[32m+[m[32m   * @param string $orientation The orienation of the document (either 'landscape' or 'portrait')[m
[32m+[m[32m   */[m
[32m+[m[32m  function __construct($paper = "letter", $orientation = "portrait") {[m
[32m+[m
[32m+[m[32m    if ( is_array($paper) )[m
[32m+[m[32m      $size = $paper;[m
[32m+[m[32m    else if ( isset(self::$PAPER_SIZES[mb_strtolower($paper)]) )[m
[32m+[m[32m      $size = self::$PAPER_SIZES[mb_strtolower($paper)];[m
[32m+[m[32m    else[m
[32m+[m[32m      $size = self::$PAPER_SIZES["letter"];[m
[32m+[m
[32m+[m[32m    if ( mb_strtolower($orientation) === "landscape" ) {[m
[32m+[m[32m      list($size[2], $size[3]) = array($size[3], $size[2]);[m
[32m+[m[32m    }[m
[32m+[m[41m    [m
[32m+[m[32m    $this->_pdf = new Cpdf($size, DOMPDF_UNICODE_ENABLED, DOMPDF_FONT_CACHE, DOMPDF_TEMP_DIR);[m
[32m+[m[32m    $this->_pdf->addInfo("Creator", "DOMPDF");[m
[32m+[m[32m    $time = substr_replace(date('YmdHisO'), '\'', -2, 0).'\'';[m
[32m+[m[32m    $this->_pdf->addInfo("CreationDate", "D:$time");[m
[32m+[m[32m    $this->_pdf->addInfo("ModDate", "D:$time");[m
[32m+[m
[32m+[m[32m    $this->_width = $size[2] - $size[0];[m
[32m+[m[32m    $this->_height= $size[3] - $size[1];[m
[32m+[m[32m    $this->_pdf->openHere('Fit');[m
[32m+[m[41m    [m
[32m+[m[32m    $this->_page_number = $this->_page_count = 1;[m
[32m+[m[32m    $this->_page_text = array();[m
[32m+[m
[32m+[m[32m    $this->_pages = array($this->_pdf->getFirstPageId());[m
[32m+[m
[32m+[m[32m    $this->_image_cache = array();[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Class destructor[m
[32m+[m[32m   *[m
[32m+[m[32m   * Deletes all temporary image files[m
[32m+[m[32m   */[m
[32m+[m[32m  function __destruct() {[m
[32m+[m[32m    foreach ($this->_image_cache as $img) {[m
[32m+[m[32m      //debugpng[m
[32m+[m[32m      if (DEBUGPNG) print '[__destruct unlink '.$img.']';[m
[32m+[m[32m      if (!DEBUGKEEPTEMP)[m
[32m+[m[32m        unlink($img);[m
[32m+[m[32m    }[m
[32m+[m[32m    clear_object($this);[m
[32m+[m[32m  }[m
[32m+[m[41m  [m
[32m+[m[32m  /**[m
[32m+[m[32m   * Returns the Cpdf instance[m
[32m+[m[32m   *[m
[32m+[m[32m   * @return Cpdf[m
[32m+[m[32m   */[m
[32m+[m[32m  function get_cpdf() { return $this->_pdf; }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Add meta information to the PDF[m
[32m+[m[32m   *[m
[32m+[m[32m   * @param string $label  label of the value (Creator, Producer, etc.)[m
[32m+[m[32m   * @param string $value  the text to set[m
[32m+[m[32m   */[m
[32m+[m[32m  function add_info($label, $value) {[m
[32m+[m[32m    $this->_pdf->addInfo($label, $value);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Opens a new 'object'[m
[32m+[m[32m   *[m
[32m+[m[32m   * While an object is open, all drawing actions are recored in the object,[m
[32m+[m[32m   * as opposed to being drawn on the current page.  Objects can be added[m
[32m+[m[32m   * later to a specific page or to several pages.[m
[32m+[m[32m   *[m
[32m+[m[32m   * The return value is an integer ID for the new object.[m
[32m+[m[32m   *[m
[32m+[m[32m   * @see CPDF_Adapter::close_object()[m
[32m+[m[32m   * @see CPDF_Adapter::add_object()[m
[32m+[m[32m   *[m
[32m+[m[32m   * @return int[m
[32m+[m[32m   */[m
[32m+[m[32m  function open_object() {[m
[32m+[m[32m    $ret = $this->_pdf->openObject();[m
[32m+[m[32m    $this->_pdf->saveState();[m
[32m+[m[32m    return $ret;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Reopens an existing 'object'[m
[32m+[m[32m   *[m
[32m+[m[32m   * @see CPDF_Adapter::open_object()[m
[32m+[m[32m   * @param int $object  the ID of a previously opened object[m
[32m+[m[32m   */[m
[32m+[m[32m  function reopen_object($object) {[m
[32m+[m[32m    $this->_pdf->reopenObject($object);[m
[32m+[m[32m    $this->_pdf->saveState();[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Closes the current 'object'[m
[32m+[m[32m   *[m
[32m+[m[32m   * @see CPDF_Adapter::open_object()[m
[32m+[m[32m   */[m
[32m+[m[32m  function close_object() {[m
[32m+[m[32m    $this->_pdf->restoreState();[m
[32m+[m[32m    $this->_pdf->closeObject();[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Adds a specified 'object' to the document[m
[32m+[m[32m   *[m
[32m+[m[32m   * $object int specifying an object created with {@link[m
[32m+[m[32m   * CPDF_Adapter::open_object()}.  $where can be one of:[m
[32m+[m[32m   * - 'add' add to current page only[m
[32m+[m[32m   * - 'all' add to every page from the current one onwards[m
[32m+[m[32m   * - 'odd' add to all odd numbered pages from now on[m
[32m+[m[32m   * - 'even' add to all even numbered pages from now on[m
[32m+[m[32m   * - 'next' add the object to the next page only[m
[32m+[m[32m   * - 'nextodd' add to all odd numbered pages from the next one[m
[32m+[m[32m   * - 'nexteven' add to all even numbered pages from the next one[m
[32m+[m[32m   *[m
[32m+[m[32m   * @see Cpdf::addObject()[m
[32m+[m[32m   *[m
[32m+[m[32m   * @param int $object[m
[32m+[m[32m   * @param string $where[m
[32m+[m[32m   */[m
[32m+[m[32m  function add_object($object, $where = 'all') {[m
[32m+[m[32m    $this->_pdf->addObject($object, $where);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Stops the specified 'object' from appearing in the document.[m
[32m+[m[32m   *[m
[32m+[m[32m   * The object will stop being displayed on the page following the current[m
[32m+[m[32m   * one.[m
[32m+[m[32m   *[m
[32m+[m[32m   * @param int $object[m
[32m+[m[32m   */[m
[32m+[m[32m  function stop_object($object) {[m
[32m+[m[32m    $this->_pdf->stopObject($object);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * @access private[m
[32m+[m[32m   */[m
[32m+[m[32m  function serialize_object($id) {[m
[32m+[m[32m    // Serialize the pdf object's current state for retrieval later[m
[32m+[m[32m    return $this->_pdf->serializeObject($id);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * @access private[m
[32m+[m[32m   */[m
[32m+[m[32m  function reopen_serialized_object($obj) {[m
[32m+[m[32m    return $this->_pdf->restoreSerializedObject($obj);[m
[32m+[m[32m  }[m
[32m+[m[41m    [m
[32m+[m[32m  //........................................................................[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Returns the PDF's width in points[m
[32m+[m[32m   * @return float[m
[32m+[m[32m   */[m
[32m+[m[32m  function get_width() { return $this->_width; }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Returns the PDF's height in points[m
[32m+[m[32m   * @return float[m
[32m+[m[32m   */[m
[32m+[m[32m  function get_height() { return $this->_height; }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Returns the current page number[m
[32m+[m[32m   * @return int[m
[32m+[m[32m   */[m
[32m+[m[32m  function get_page_number() { return $this->_page_number; }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Returns the total number of pages in the document[m
[32m+[m[32m   * @return int[m
[32m+[m[32m   */[m
[32m+[m[32m  function get_page_count() { return $this->_page_count; }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Sets the current page number[m
[32m+[m[32m   *[m
[32m+[m[32m   * @param int $num[m
[32m+[m[32m   */[m
[32m+[m[32m  function set_page_number($num) { $this->_page_number = $num; }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Sets the page count[m
[32m+[m[32m   *[m
[32m+[m[32m   * @param int $count[m
[32m+[m[32m   */[m
[32m+[m[32m  function set_page_count($count) {  $this->_page_count = $count; }[m
[32m+[m[41m    [m
[32m+[m[32m  /**[m
[32m+[m[32m   * Sets the stroke colour[m
[32m+[m[32m   *[m
[32m+[m[32m   * See {@link Style::set_colour()} for the format of the color array.[m
[32m+[m[32m   * @param array $color[m
[32m+[m[32m   */[m
[32m+[m[32m  protected function _set_stroke_color($color) {[m
[32m+[m[32m    $this->_pdf->setStrokeColor($color);[m
[32m+[m[32m  }[m
[32m+[m[41m  [m
[32m+[m[32m  /**[m
[32m+[m[32m   * Sets the fill colour[m
[32m+[m[32m   *[m
[32m+[m[32m   * See {@link Style::set_colour()} for the format of the colour array.[m
[32m+[m[32m   * @param array $color[m
[32m+[m[32m   */[m
[32m+[m[32m  protected function _set_fill_color($color) {[m
[32m+[m[32m    $this->_pdf->setColor($color);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Sets line transparency[m
[32m+[m[32m   * @see Cpdf::setLineTransparency()[m
[32m+[m[32m   *[m
[32m+[m[32m   * Valid blend modes are (case-sensitive):[m
[32m+[m[32m   *[m
[32m+[m[32m   * Normal, Multiply, Screen, Overlay, Darken, Lighten,[m
[32m+[m[32m   * ColorDodge, ColorBurn, HardLight, SoftLight, Difference,[m
[32m+[m[32m   * Exclusion[m
[32m+[m[32m   *[m
[32m+[m[32m   * @param string $mode the blending mode to use[m
[32m+[m[32m   * @param float $opacity 0.0 fully transparent, 1.0 fully opaque[m
[32m+[m[32m   */[m
[32m+[m[32m  protected function _set_line_transparency($mode, $opacity) {[m
[32m+[m[32m    $this->_pdf->setLineTransparency($mode, $opacity);[m
[32m+[m[32m  }[m
[32m+[m[41m  [m
[32m+[m[32m  /**[m
[32m+[m[32m   * Sets fill transparency[m
[32m+[m[32m   * @see Cpdf::setFillTransparency()[m
[32m+[m[32m   *[m
[32m+[m[32m   * Valid blend modes are (case-sensitive):[m
[32m+[m[32m   *[m
[32m+[m[32m   * Normal, Multiply, Screen, Overlay, Darken, Lighten,[m
[32m+[m[32m   * ColorDogde, ColorBurn, HardLight, SoftLight, Difference,[m
[32m+[m[32m   * Exclusion[m
[32m+[m[32m   *[m
[32m+[m[32m   * @param string $mode the blending mode to use[m
[32m+[m[32m   * @param float $opacity 0.0 fully transparent, 1.0 fully opaque[m
[32m+[m[32m   */[m
[32m+[m[32m  protected function _set_fill_transparency($mode, $opacity) {[m
[32m+[m[32m    $this->_pdf->setFillTransparency($mode, $opacity);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Sets the line style[m
[32m+[m[32m   *[m
[32m+[m[32m   * @see Cpdf::setLineStyle()[m
[32m+[m[32m   *[m
[32m+[m[32m   * @param float width[m
[32m+[m[32m   * @param string cap[m
[32m+[m[32m   * @param string join[m
[32m+[m[32m   * @param array dash[m
[32m+[m[32m   */[m
[32m+[m[32m  protected function _set_line_style($width, $cap, $join, $dash) {[m
[32m+[m[32m    $this->_pdf->setLineStyle($width, $cap, $join, $dash);[m
[32m+[m[32m  }[m
[32m+[m[41m  [m
[32m+[m[32m  /**[m
[32m+[m[32m   * Sets the opacity[m[41m [m
[32m+[m[32m   *[m[41m [m
[32m+[m[32m   * @param $opacity[m
[32m+[m[32m   * @param $mode[m
[32m+[m[32m   */[m
[32m+[m[32m  function set_opacity($opacity, $mode = "Normal") {[m
[32m+[m[32m    $this->_set_line_transparency($mode, $opacity);[m
[32m+[m[32m    $this->_set_fill_transparency($mode, $opacity);[m
[32m+[m[32m  }[m
[32m+[m[41m  [m
[32m+[m[32m  //........................................................................[m
[32m+[m
[32m+[m[41m  [m
[32m+[m[32m  /**[m
[32m+[m[32m   * Remaps y coords from 4th to 1st quadrant[m
[32m+[m[32m   *[m
[32m+[m[32m   * @param float $y[m
[32m+[m[32m   * @return float[m
[32m+[m[32m   */[m
[32m+[m[32m  protected function y($y) { return $this->_height - $y; }[m
[32m+[m
[32m+[m[32m  // Canvas implementation[m
[32m+[m
[32m+[m[32m  function line($x1, $y1, $x2, $y2, $color, $width, $style = array()) {[m
[32m+[m[32m    //pre_r(compact("x1", "y1", "x2", "y2", "color", "width", "style"));[m
[32m+[m
[32m+[m[32m    $this->_set_stroke_color($color);[m
[32m+[m[32m    $this->_set_line_style($width, "butt", "", $style);[m
[32m+[m[32m    $this->_pdf->line($x1, $this->y($y1),[m
[32m+[m[32m                      $x2, $this->y($y2));[m
[32m+[m[32m  }[m
[32m+[m[41m                              [m
[32m+[m[32m  //........................................................................[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Convert a GIF or BMP image to a PNG image[m
[32m+[m[32m   *[m
[32m+[m[32m   * @return string The url of the newly converted image[m
[32m+[m[32m   */[m
[32m+[m[32m  protected function _convert_gif_bmp_to_png($image_url, $image_type) {[m
[32m+[m[32m    $func_name = "imagecreatefrom$image_type";[m
[32m+[m[41m    [m
[32m+[m[32m    if ( !function_exists($func_name) ) {[m
[32m+[m[32m      throw new DOMPDF_Exception("Function $func_name() not found.  Cannot convert $image_type image: $image_url.  Please install the image PHP extension.");[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    set_error_handler("record_warnings");[m
[32m+[m[32m    $im = $func_name($image_url);[m
[32m+[m
[32m+[m[32m    if ( $im ) {[m
[32m+[m[32m      imageinterlace($im, 0);[m
[32m+[m
[32m+[m[32m      $filename = tempnam(DOMPDF_TEMP_DIR, "{$image_type}dompdf_img_").'.png';[m
[32m+[m[32m      $this->_image_cache[] = $filename;[m
[32m+[m
[32m+[m[32m      imagepng($im, $filename);[m
[32m+[m[32m      imagedestroy($im);[m
[32m+[m[32m    } else {[m
[32m+[m[32m      $filename = DOMPDF_LIB_DIR . "/res/broken_image.png";[m
[32m+[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    restore_error_handler();[m
[32m+[m[41m    [m
[32m+[m[32m    return $filename;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  function rectangle($x1, $y1, $w, $h, $color, $width, $style = array()) {[m
[32m+[m[32m    $this->_set_stroke_color($color);[m
[32m+[m[32m    $this->_set_line_style($width, "butt", "", $style);[m
[32m+[m[32m    $this->_pdf->rectangle($x1, $this->y($y1) - $h, $w, $h);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  //........................................................................[m
[32m+[m[41m  [m
[32m+[m[32m  function filled_rectangle($x1, $y1, $w, $h, $color) {[m
[32m+[m[32m    $this->_set_fill_color($color);[m
[32m+[m[32m    $this->_pdf->filledRectangle($x1, $this->y($y1) - $h, $w, $h);[m
[32m+[m[32m  }[m
[32m+[m[41m  [m
[32m+[m[32m  function clipping_rectangle($x1, $y1, $w, $h) {[m
[32m+[m[32m    $this->_pdf->clippingRectangle($x1, $this->y($y1) - $h, $w, $h);[m
[32m+[m[32m  }[m
[32m+[m[41m  [m
[32m+[m[32m  function clipping_end() {[m
[32m+[m[32m    $this->_pdf->clippingEnd();[m
[32m+[m[32m  }[m
[32m+[m[41m  [m
[32m+[m[32m  function save() {[m
[32m+[m[32m    $this->_pdf->saveState();[m
[32m+[m[32m  }[m
[32m+[m[41m  [m
[32m+[m[32m  function restore() {[m
[32m+[m[32m    $this->_pdf->restoreState();[m
[32m+[m[32m  }[m
[32m+[m[41m  [m
[32m+[m[32m  function rotate($angle, $x, $y) {[m
[32m+[m[32m    $this->_pdf->rotate($angle, $x, $y);[m
[32m+[m[32m  }[m
[32m+[m[41m  [m
[32m+[m[32m  function skew($angle_x, $angle_y, $x, $y) {[m
[32m+[m[32m    $this->_pdf->skew($angle_x, $angle_y, $x, $y);[m
[32m+[m[32m  }[m
[32m+[m[41m  [m
[32m+[m[32m  function scale($s_x, $s_y, $x, $y) {[m
[32m+[m[32m    $this->_pdf->scale($s_x, $s_y, $x, $y);[m
[32m+[m[32m  }[m
[32m+[m[41m  [m
[32m+[m[32m  function translate($t_x, $t_y) {[m
[32m+[m[32m    $this->_pdf->translate($t_x, $t_y);[m
[32m+[m[32m  }[m
[32m+[m[41m  [m
[32m+[m[32m  function transform($a, $b, $c, $d, $e, $f) {[m
[32m+[m[32m    $this->_pdf->transform(array($a, $b, $c, $d, $e, $f));[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  //........................................................................[m
[32m+[m
[32m+[m[32m  function polygon($points, $color, $width = null, $style = array(), $fill = false) {[m
[32m+[m[32m    $this->_set_fill_color($color);[m
[32m+[m[32m    $this->_set_stroke_color($color);[m
[32m+[m[41m    [m
[32m+[m[32m    // Adjust y values[m
[32m+[m[32m    for ( $i = 1; $i < count($points); $i += 2)[m
[32m+[m[32m      $points[$i] = $this->y($points[$i]);[m
[32m+[m[41m    [m
[32m+[m[32m    $this->_pdf->polygon($points, count($points) / 2, $fill);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  //........................................................................[m
[32m+[m
[32m+[m[32m  function circle($x, $y, $r1, $color, $width = null, $style = null, $fill = false) {[m
[32m+[m[32m    $this->_set_fill_color($color);[m
[32m+[m[32m    $this->_set_stroke_color($color);[m
[32m+[m
[32m+[m[32m    if ( !$fill && isset($width) )[m
[32m+[m[32m      $this->_set_line_style($width, "round", "round", $style);[m
[32m+[m
[32m+[m[32m    $this->_pdf->ellipse($x, $this->y($y), $r1, 0, 0, 8, 0, 360, 1, $fill);[m
[32m+[m[32m  }[m
[32m+[m[41m  [m
[32m+[m[32m  //........................................................................[m
[32m+[m
[32m+[m[32m  function image($img_url, $img_type, $x, $y, $w, $h) {[m
[32m+[m[32m    //debugpng[m
[32m+[m[32m    if (DEBUGPNG) print '[image:'.$img_url.'|'.$img_type.']';[m
[32m+[m
[32m+[m[32m    $img_type = mb_strtolower($img_type);[m
[32m+[m
[32m+[m[32m    switch ($img_type) {[m
[32m+[m[32m    case "jpeg":[m
[32m+[m[32m    case "jpg":[m
[32m+[m[32m      //debugpng[m
[32m+[m[32m      if (DEBUGPNG)  print '!!!jpg!!!';[m
[32m+[m
[32m+[m[32m      $this->_pdf->addJpegFromFile($img_url, $x, $this->y($y) - $h, $w, $h);[m
[32m+[m[32m      break;[m
[32m+[m
[32m+[m[32m    case "png":[m
[32m+[m[32m      //debugpng[m
[32m+[m[32m      if (DEBUGPNG)  print '!!!png!!!';[m
[32m+[m
[32m+[m[32m      $this->_pdf->addPngFromFile($img_url, $x, $this->y($y) - $h, $w, $h);[m
[32m+[m[32m      break;[m
[32m+[m
[32m+[m[32m    case "gif":[m
[32m+[m[32m    case "bmp":[m
[32m+[m[32m      // Convert gifs or bmps to pngs[m
[32m+[m[32m      //DEBUG_IMG_TEMP[m
[32m+[m[32m      //if (0) {[m
[32m+[m[32m      if ( method_exists( $this->_pdf, "addImagePng" ) ) {[m
[32m+[m[32m        //debugpng[m
[32m+[m[32m        if (DEBUGPNG)  print "!!!$img_type addImagePng!!!";[m
[32m+[m
[32m+[m[32m        //If optimization to direct png creation from gd object is available,[m
[32m+[m[32m        //don't create temp file, but place gd object directly into the pdf[m
[32m+[m[41m  [m	[32m    if ( method_exists( $this->_pdf, "image_iscached" ) &&[m
[32m+[m[41m  [m	[32m        $this->_pdf->image_iscached($img_url) ) {[m
[32m+[m[41m  [m	[32m      //If same image has occured already before, no need to load because[m
[32m+[m[41m  [m	[32m      //duplicate will anyway be eliminated.[m
[32m+[m[41m  [m	[32m      $img = null;[m
[32m+[m[41m  [m	[32m      unset($img);[m
[32m+[m[41m  [m	[32m    }[m
[32m+[m[32m        else {[m
[32m+[m[41m  [m	[32m      $func_name = "imagecreatefrom$img_type";[m
[32m+[m[41m      [m	[32m  $img = @$func_name($img_url);[m
[32m+[m[41m      [m	[32m  if ( !$img ) {[m
[32m+[m[41m        [m	[32mreturn;[m
[32m+[m[41m      [m	[32m  }[m
[32m+[m[41m      [m	[32m  imageinterlace($img, false);[m
[32m+[m[41m      [m	[32m}[m
[32m+[m
[32m+[m[41m      [m	[32m$this->_pdf->addImagePng($img_url, $x, $this->y($y) - $h, $w, $h, $img);[m
[32m+[m
[32m+[m[32m        if ( $img ) {[m
[32m+[m[41m      [m	[32m  imagedestroy($img);[m
[32m+[m[32m        }[m
[32m+[m[32m      }[m[41m [m
[32m+[m[32m      else {[m
[32m+[m[32m        //debugpng[m
[32m+[m[32m        if (DEBUGPNG)  print "!!!$img_type addPngFromFile!!!";[m
[32m+[m[32m        $img_url = $this->_convert_gif_bmp_to_png($img_url, $img_type);[m
[32m+[m[32m        $this->_pdf->addPngFromFile($img_url, $x, $this->y($y) - $h, $w, $h);[m
[32m+[m[32m      }[m
[32m+[m[32m      break;[m
[32m+[m
[32m+[m[32m    default:[m
[32m+[m[32m      //debugpng[m
[32m+[m[32m      if (DEBUGPNG) print '!!!unknown!!!';[m
[32m+[m[32m      break;[m
[32m+[m[32m    }[m
[32m+[m[41m    [m
[32m+[m[32m    return;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  //........................................................................[m
[32m+[m
[32m+[m[32m  function text($x, $y, $text, $font, $size, $color = array(0,0,0), $word_space = 0, $char_space = 0, $angle = 0) {[m
[32m+[m[32m    $pdf = $this->_pdf;[m
[32m+[m[41m    [m
[32m+[m[32m    $pdf->setColor($color);[m
[32m+[m[41m    [m
[32m+[m[32m    $font .= ".afm";[m
[32m+[m[32m    $pdf->selectFont($font);[m
[32m+[m[41m    [m
[32m+[m[32m    //Font_Metrics::get_font_height($font, $size) ==[m
[32m+[m[32m    //$this->get_font_height($font, $size) ==[m
[32m+[m[32m    //$this->_pdf->selectFont($font),$this->_pdf->getFontHeight($size)[m
[32m+[m[32m    //- FontBBoxheight+FontHeightOffset, scaled to $size, in pt[m
[32m+[m[32m    //$this->_pdf->getFontDescender($size)[m
[32m+[m[32m    //- Descender scaled to size[m
[32m+[m[32m    //[m
[32m+[m[32m    //$this->_pdf->fonts[$this->_pdf->currentFont] sizes:[m
[32m+[m[32m    //['FontBBox'][0] left, ['FontBBox'][1] bottom, ['FontBBox'][2] right, ['FontBBox'][3] top[m
[32m+[m[32m    //Maximum extent of all glyphs of the font from the baseline point[m
[32m+[m[32m    //['Ascender'] maximum height above baseline except accents[m
[32m+[m[32m    //['Descender'] maximum depth below baseline, negative number means below baseline[m
[32m+[m[32m    //['FontHeightOffset'] manual enhancement of .afm files to trim windows fonts. currently not used.[m
[32m+[m[32m    //Values are in 1/1000 pt for a font size of 1 pt[m
[32m+[m[32m    //[m
[32m+[m[32m    //['FontBBox'][1] should be close to ['Descender'][m
[32m+[m[32m    //['FontBBox'][3] should be close to ['Ascender']+Accents[m
[32m+[m[32m    //in practice, FontBBox values are a little bigger[m
[32m+[m[32m    //[m
[32m+[m[32m    //The text position is referenced to the baseline, not to the lower corner of the FontBBox,[m
[32m+[m[32m    //for what the left,top corner is given.[m
[32m+[m[32m    //FontBBox spans also the background box for the text.[m
[32m+[m[32m    //If the lower corner would be used as reference point, the Descents of the glyphs would[m
[32m+[m[32m    //hang over the background box border.[m
[32m+[m[32m    //Therefore compensate only the extent above the Baseline.[m
[32m+[m[32m    //[m
[32m+[m[32m    //print '<pre>['.$font.','.$size.','.$pdf->getFontHeight($size).','.$pdf->getFontDescender($size).','.$pdf->fonts[$pdf->currentFont]['FontBBox'][3].','.$pdf->fonts[$pdf->currentFont]['FontBBox'][1].','.$pdf->fonts[$pdf->currentFont]['FontHeightOffset'].','.$pdf->fonts[$pdf->currentFont]['Ascender'].','.$pdf->fonts[$pdf->currentFont]['Descender'].']</pre>';[m
[32m+[m[32m    //[m
[32m+[m[32m    //$pdf->addText($x, $this->y($y) - Font_Metrics::get_font_height($font, $size), $size, $text, $angle, $word_space, $char_space);[m
[32m+[m[32m    //$pdf->addText($x, $this->y($y) - $size, $size, $text, $angle, $word_space, $char_space);[m
[32m+[m[32m    //$pdf->addText($x, $this->y($y) - $pdf->getFontHeight($size)-$pdf->getFontDescender($size), $size, $text, $angle, $word_space, $char_space);[m
[32m+[m[32m    $pdf->addText($x, $this->y($y) - ($pdf->fonts[$pdf->currentFont]['FontBBox'][3]*$size)/1000, $size, $text, $angle, $word_space, $char_space);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  //........................................................................[m
[32m+[m
[32m+[m[32m  function javascript($code) {[m
[32m+[m[32m    $this->_pdf->addJavascript($code);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  //........................................................................[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Add a named destination (similar to <a name="foo">...</a> in html)[m
[32m+[m[32m   *[m
[32m+[m[32m   * @param string $anchorname The name of the named destination[m
[32m+[m[32m   */[m
[32m+[m[32m  function add_named_dest($anchorname) {[m
[32m+[m[32m    $this->_pdf->addDestination($anchorname, "Fit");[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  //........................................................................[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Add a link to the pdf[m
[32m+[m[32m   *[m
[32m+[m[32m   * @param string $url The url to link to[m
[32m+[m[32m   * @param float  $x   The x position of the link[m
[32m+[m[32m   * @param float  $y   The y position of the link[m
[32m+[m[32m   * @param float  $width   The width of the link[m
[32m+[m[32m   * @param float  $height   The height of the link[m
[32m+[m[32m   */[m
[32m+[m[32m  function add_link($url, $x, $y, $width, $height) {[m
[32m+[m
[32m+[m[32m    $y = $this->y($y) - $height;[m
[32m+[m
[32m+[m[32m    if ( strpos($url, '#') === 0 ) {[m
[32m+[m[32m      // Local link[m
[32m+[m[32m      $name = substr($url,1);[m
[32m+[m[32m      if ( $name )[m
[32m+[m[32m        $this->_pdf->addInternalLink($name, $x, $y, $x + $width, $y + $height);[m
[32m+[m
[32m+[m[32m    } else {[m
[32m+[m[32m      $this->_pdf->addLink(rawurldecode($url), $x, $y, $x + $width, $y + $height);[m
[32m+[m[32m    }[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  //........................................................................[m
[32m+[m
[32m+[m[32m  function get_text_width($text, $font, $size, $word_spacing = 0, $char_spacing = 0) {[m
[32m+[m[32m    $this->_pdf->selectFont($font);[m
[32m+[m[32m    if (!DOMPDF_UNICODE_ENABLED) {[m
[32m+[m[41m    [m	[32m$text = mb_convert_encoding($text, 'Windows-1252', 'UTF-8');[m
[32m+[m[32m    }[m
[32m+[m[32m    return $this->_pdf->getTextWidth($size, $text, $word_spacing, $char_spacing);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  //........................................................................[m
[32m+[m
[32m+[m[32m  function get_font_height($font, $size) {[m
[32m+[m[32m    $this->_pdf->selectFont($font);[m
[32m+[m[32m    return $this->_pdf->getFontHeight($size) * DOMPDF_FONT_HEIGHT_RATIO;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  //........................................................................[m
[32m+[m[41m  [m
[32m+[m[32m  /**[m
[32m+[m[32m   * Writes text at the specified x and y coordinates on every page[m
[32m+[m[32m   *[m
[32m+[m[32m   * The strings '{PAGE_NUM}' and '{PAGE_COUNT}' are automatically replaced[m
[32m+[m[32m   * with their current values.[m
[32m+[m[32m   *[m
[32m+[m[32m   * See {@link Style::munge_colour()} for the format of the colour array.[m
[32m+[m[32m   *[m
[32m+[m[32m   * @param float $x[m
[32m+[m[32m   * @param float $y[m
[32m+[m[32m   * @param string $text the text to write[m
[32m+[m[32m   * @param string $font the font file to use[m
[32m+[m[32m   * @param float $size the font size, in points[m
[32m+[m[32m   * @param array $color[m
[32m+[m[32m   * @param float $adjust word spacing adjustment[m
[32m+[m[32m   * @param float $angle angle to write the text at, measured CW starting from the x-axis[m
[32m+[m[32m   */[m
[32m+[m[32m  function page_text($x, $y, $text, $font, $size, $color = array(0,0,0), $adjust = 0, $angle = 0) {[m
[32m+[m[32m    $_t = "text";[m
[32m+[m[32m    $this->_page_text[] = compact("_t", "x", "y", "text", "font", "size", "color", "adjust", "angle");[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  //........................................................................[m
[32m+[m[41m    [m
[32m+[m[32m  /**[m
[32m+[m[32m   * Processes a script on every page[m
[32m+[m[32m   *[m
[32m+[m[32m   * The variables $pdf, $PAGE_NUM, and $PAGE_COUNT are available.[m
[32m+[m[32m   *[m
[32m+[m[32m   * This function can be used to add page numbers to all pages[m
[32m+[m[32m   * after the first one, for example.[m
[32m+[m[32m   *[m
[32m+[m[32m   * @param string $code the script code[m
[32m+[m[32m   * @param string $type the language type for script[m
[32m+[m[32m   */[m
[32m+[m[32m  function page_script($code, $type = "text/php") {[m
[32m+[m[32m    $_t = "script";[m
[32m+[m[32m    $this->_page_text[] = compact("_t", "code", "type");[m
[32m+[m[32m  }[m
[32m+[m[41m  [m
[32m+[m[32m  //........................................................................[m
[32m+[m
[32m+[m[32m  function new_page() {[m
[32m+[m[32m    $this->_page_number++;[m
[32m+[m[32m    $this->_page_count++;[m
[32m+[m
[32m+[m[32m    $ret = $this->_pdf->newPage();[m
[32m+[m[32m    $this->_pages[] = $ret;[m
[32m+[m[32m    return $ret;[m
[32m+[m[32m  }[m
[32m+[m[41m  [m
[32m+[m[32m  //........................................................................[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Add text to each page after rendering is complete[m
[32m+[m[32m   */[m
[32m+[m[32m  protected function _add_page_text() {[m
[32m+[m[41m    [m
[32m+[m[32m    if ( !count($this->_page_text) )[m
[32m+[m[32m      return;[m
[32m+[m
[32m+[m[32m    $page_number = 1;[m
[32m+[m[32m    $eval = null;[m
[32m+[m
[32m+[m[32m    foreach ($this->_pages as $pid) {[m
[32m+[m[32m      $this->reopen_object($pid);[m
[32m+[m
[32m+[m[32m      foreach ($this->_page_text as $pt) {[m
[32m+[m[32m        extract($pt);[m
[32m+[m
[32m+[m[32m        switch ($_t) {[m
[32m+[m[41m            [m
[32m+[m[32m        case "text":[m
[32m+[m[32m        $text = str_replace(array("{PAGE_NUM}","{PAGE_COUNT}"),[m
[32m+[m[32m                            array($page_number, $this->_page_count), $text);[m
[32m+[m[32m        $this->text($x, $y, $text, $font, $size, $color, $adjust, $angle);[m
[32m+[m[32m          break;[m
[32m+[m[41m          [m
[32m+[m[32m        case "script":[m
[32m+[m[32m          if (!$eval) {[m
[32m+[m[32m            $eval = new PHP_Evaluator($this);[m
[32m+[m[32m          }[m
[32m+[m[32m          $eval->evaluate($code, array('PAGE_NUM' => $page_number, 'PAGE_COUNT' => $this->_page_count));[m
[32m+[m[32m          break;[m
[32m+[m[32m        }[m
[32m+[m[32m      }[m
[32m+[m
[32m+[m[32m      $this->close_object();[m
[32m+[m[32m      $page_number++;[m
[32m+[m[32m    }[m
[32m+[m[32m  }[m
[32m+[m[41m  [m
[32m+[m[32m  /**[m
[32m+[m[32m   * Streams the PDF directly to the browser[m
[32m+[m[32m   *[m
[32m+[m[32m   * @param string $filename the name of the PDF file[m
[32m+[m[32m   * @param array  $options associative array, 'Attachment' => 0 or 1, 'compress' => 1 or 0[m
[32m+[m[32m   */[m
[32m+[m[32m  function stream($filename, $options = null) {[m
[32m+[m[32m    // Add page text[m
[32m+[m[32m    $this->_add_page_text();[m
[32m+[m[41m    [m
[32m+[m[32m    $options["Content-Disposition"] = $filename;[m
[32m+[m[32m    $this->_pdf->stream($options);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  //........................................................................[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Returns the PDF as a string[m
[32m+[m[32m   *[m[41m [m
[32m+[m[32m   * @param array $options Output options[m
[32m+[m[32m   * @return string[m
[32m+[m[32m   */[m
[32m+[m[32m  function output($options = null) {[m
[32m+[m[32m    // Add page text[m
[32m+[m[32m    $this->_add_page_text();[m
[32m+[m
[32m+[m[32m    $debug = isset($options["compress"]) && $options["compress"] != 1;[m
[32m+[m[41m    [m
[32m+[m[32m    return $this->_pdf->output($debug);[m
[32m+[m[32m  }[m
[32m+[m[41m  [m
[32m+[m[32m  //........................................................................[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Returns logging messages generated by the Cpdf class[m
[32m+[m[32m   *[m
[32m+[m[32m   * @return string[m
[32m+[m[32m   */[m
[32m+[m[32m  function get_messages() { return $this->_pdf->messages; }[m
[32m+[m[41m  [m
[32m+[m[32m}[m
[1mdiff --git a/application/third_party/dompdf/include/css_color.cls.php b/application/third_party/dompdf/include/css_color.cls.php[m
[1mnew file mode 100644[m
[1mindex 0000000..f6f003a[m
[1m--- /dev/null[m
[1m+++ b/application/third_party/dompdf/include/css_color.cls.php[m
[36m@@ -0,0 +1,287 @@[m
[32m+[m[32m<?php[m
[32m+[m[32m/**[m
[32m+[m[32m * DOMPDF - PHP5 HTML to PDF renderer[m
[32m+[m[32m *[m
[32m+[m[32m * File: $RCSfile$[m
[32m+[m[32m * Created on: 2010-03-03[m
[32m+[m[32m *[m
[32m+[m[32m * Copyright (c) 2004 - Benj Carson <benjcarson@digitaljunkies.ca>[m
[32m+[m[32m *[m
[32m+[m[32m * This library is free software; you can redistribute it and/or[m
[32m+[m[32m * modify it under the terms of the GNU Lesser General Public[m
[32m+[m[32m * License as published by the Free Software Foundation; either[m
[32m+[m[32m * version 2.1 of the License, or (at your option) any later version.[m
[32m+[m[32m *[m
[32m+[m[32m * This library is distributed in the hope that it will be useful,[m
[32m+[m[32m * but WITHOUT ANY WARRANTY; without even the implied warranty of[m
[32m+[m[32m * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU[m
[32m+[m[32m * Lesser General Public License for more details.[m
[32m+[m[32m *[m
[32m+[m[32m * You should have received a copy of the GNU Lesser General Public License[m
[32m+[m[32m * along with this library in the file LICENSE.LGPL; if not, write to the[m
[32m+[m[32m * Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA[m
[32m+[m[32m * 02111-1307 USA[m
[32m+[m[32m *[m
[32m+[m[32m * Alternatively, you may distribute this software under the terms of the[m
[32m+[m[32m * PHP License, version 3.0 or later.  A copy of this license should have[m
[32m+[m[32m * been distributed with this file in the file LICENSE.PHP .  If this is not[m
[32m+[m[32m * the case, you can obtain a copy at http://www.php.net/license/3_0.txt.[m
[32m+[m[32m *[m
[32m+[m[32m * The latest version of DOMPDF might be available at:[m
[32m+[m[32m * http://www.dompdf.com/[m
[32m+[m[32m *[m
[32m+[m[32m * @link http://www.dompdf.com/[m
[32m+[m[32m * @copyright 2004 Benj Carson[m
[32m+[m[32m * @author Fabien M�nager[m
[32m+[m[32m * @package dompdf[m
[32m+[m[32m */[m
[32m+[m
[32m+[m[32m/* $Id: css_color.cls.php 300 2010-08-11 22:01:09Z fabien.menager $ */[m
[32m+[m
[32m+[m[32mclass CSS_Color {[m
[32m+[m[32m  static $cssColorNames = array([m
[32m+[m[32m    "aliceblue" => "F0F8FF",[m
[32m+[m[32m    "antiquewhite" => "FAEBD7",[m
[32m+[m[32m    "aqua" => "00FFFF",[m
[32m+[m[32m    "aquamarine" => "7FFFD4",[m
[32m+[m[32m    "azure" => "F0FFFF",[m
[32m+[m[32m    "beige" => "F5F5DC",[m
[32m+[m[32m    "bisque" => "FFE4C4",[m
[32m+[m[32m    "black" => "000000",[m
[32m+[m[32m    "blanchedalmond" => "FFEBCD",[m
[32m+[m[32m    "blue" => "0000FF",[m
[32m+[m[32m    "blueviolet" => "8A2BE2",[m
[32m+[m[32m    "brown" => "A52A2A",[m
[32m+[m[32m    "burlywood" => "DEB887",[m
[32m+[m[32m    "cadetblue" => "5F9EA0",[m
[32m+[m[32m    "chartreuse" => "7FFF00",[m
[32m+[m[32m    "chocolate" => "D2691E",[m
[32m+[m[32m    "coral" => "FF7F50",[m
[32m+[m[32m    "cornflowerblue" => "6495ED",[m
[32m+[m[32m    "cornsilk" => "FFF8DC",[m
[32m+[m[32m    "crimson" => "DC143C",[m
[32m+[m[32m    "cyan" => "00FFFF",[m
[32m+[m[32m    "darkblue" => "00008B",[m
[32m+[m[32m    "darkcyan" => "008B8B",[m
[32m+[m[32m    "darkgoldenrod" => "B8860B",[m
[32m+[m[32m    "darkgray" => "A9A9A9",[m
[32m+[m[32m    "darkgreen" => "006400",[m
[32m+[m[32m    "darkgrey" => "A9A9A9",[m
[32m+[m[32m    "darkkhaki" => "BDB76B",[m
[32m+[m[32m    "darkmagenta" => "8B008B",[m
[32m+[m[32m    "darkolivegreen" => "556B2F",[m
[32m+[m[32m    "darkorange" => "FF8C00",[m
[32m+[m[32m    "darkorchid" => "9932CC",[m
[32m+[m[32m    "darkred" => "8B0000",[m
[32m+[m[32m    "darksalmon" => "E9967A",[m
[32m+[m[32m    "darkseagreen" => "8FBC8F",[m
[32m+[m[32m    "darkslateblue" => "483D8B",[m
[32m+[m[32m    "darkslategray" => "2F4F4F",[m
[32m+[m[32m    "darkslategrey" => "2F4F4F",[m
[32m+[m[32m    "darkturquoise" => "00CED1",[m
[32m+[m[32m    "darkviolet" => "9400D3",[m
[32m+[m[32m    "deeppink" => "FF1493",[m
[32m+[m[32m    "deepskyblue" => "00BFFF",[m
[32m+[m[32m    "dimgray" => "696969",[m
[32m+[m[32m    "dimgrey" => "696969",[m
[32m+[m[32m    "dodgerblue" => "1E90FF",[m
[32m+[m[32m    "firebrick" => "B22222",[m
[32m+[m[32m    "floralwhite" => "FFFAF0",[m
[32m+[m[32m    "forestgreen" => "228B22",[m
[32m+[m[32m    "fuchsia" => "FF00FF",[m
[32m+[m[32m    "gainsboro" => "DCDCDC",[m
[32m+[m[32m    "ghostwhite" => "F8F8FF",[m
[32m+[m[32m    "gold" => "FFD700",[m
[32m+[m[32m    "goldenrod" => "DAA520",[m
[32m+[m[32m    "gray" => "808080",[m
[32m+[m[32m    "green" => "008000",[m
[32m+[m[32m    "greenyellow" => "ADFF2F",[m
[32m+[m[32m    "grey" => "808080",[m
[32m+[m[32m    "honeydew" => "F0FFF0",[m
[32m+[m[32m    "hotpink" => "FF69B4",[m
[32m+[m[32m    "indianred" => "CD5C5C",[m
[32m+[m[32m    "indigo" => "4B0082",[m
[32m+[m[32m    "ivory" => "FFFFF0",[m
[32m+[m[32m    "khaki" => "F0E68C",[m
[32m+[m[32m    "lavender" => "E6E6FA",[m
[32m+[m[32m    "lavenderblush" => "FFF0F5",[m
[32m+[m[32m    "lawngreen" => "7CFC00",[m
[32m+[m[32m    "lemonchiffon" => "FFFACD",[m
[32m+[m[32m    "lightblue" => "ADD8E6",[m
[32m+[m[32m    "lightcoral" => "F08080",[m
[32m+[m[32m    "lightcyan" => "E0FFFF",[m
[32m+[m[32m    "lightgoldenrodyellow" => "FAFAD2",[m
[32m+[m[32m    "lightgray" => "D3D3D3",[m
[32m+[m[32m    "lightgreen" => "90EE90",[m
[32m+[m[32m    "lightgrey" => "D3D3D3",[m
[32m+[m[32m    "lightpink" => "FFB6C1",[m
[32m+[m[32m    "lightsalmon" => "FFA07A",[m
[32m+[m[32m    "lightseagreen" => "20B2AA",[m
[32m+[m[32m    "lightskyblue" => "87CEFA",[m
[32m+[m[32m    "lightslategray" => "778899",[m
[32m+[m[32m    "lightslategrey" => "778899",[m
[32m+[m[32m    "lightsteelblue" => "B0C4DE",[m
[32m+[m[32m    "lightyellow" => "FFFFE0",[m
[32m+[m[32m    "lime" => "00FF00",[m
[32m+[m[32m    "limegreen" => "32CD32",[m
[32m+[m[32m    "linen" => "FAF0E6",[m
[32m+[m[32m    "magenta" => "FF00FF",[m
[32m+[m[32m    "maroon" => "800000",[m
[32m+[m[32m    "mediumaquamarine" => "66CDAA",[m
[32m+[m[32m    "mediumblue" => "0000CD",[m
[32m+[m[32m    "mediumorchid" => "BA55D3",[m
[32m+[m[32m    "mediumpurple" => "9370DB",[m
[32m+[m[32m    "mediumseagreen" => "3CB371",[m
[32m+[m[32m    "mediumslateblue" => "7B68EE",[m
[32m+[m[32m    "mediumspringgreen" => "00FA9A",[m
[32m+[m[32m    "mediumturquoise" => "48D1CC",[m
[32m+[m[32m    "mediumvioletred" => "C71585",[m
[32m+[m[32m    "midnightblue" => "191970",[m
[32m+[m[32m    "mintcream" => "F5FFFA",[m
[32m+[m[32m    "mistyrose" => "FFE4E1",[m
[32m+[m[32m    "moccasin" => "FFE4B5",[m
[32m+[m[32m    "navajowhite" => "FFDEAD",[m
[32m+[m[32m    "navy" => "000080",[m
[32m+[m[32m    "oldlace" => "FDF5E6",[m
[32m+[m[32m    "olive" => "808000",[m
[32m+[m[32m    "olivedrab" => "6B8E23",[m
[32m+[m[32m    "orange" => "FFA500",[m
[32m+[m[32m    "orangered" => "FF4500",[m
[32m+[m[32m    "orchid" => "DA70D6",[m
[32m+[m[32m    "palegoldenrod" => "EEE8AA",[m
[32m+[m[32m    "palegreen" => "98FB98",[m
[32m+[m[32m    "paleturquoise" => "AFEEEE",[m
[32m+[m[32m    "palevioletred" => "DB7093",[m
[32m+[m[32m    "papayawhip" => "FFEFD5",[m
[32m+[m[32m    "peachpuff" => "FFDAB9",[m
[32m+[m[32m    "peru" => "CD853F",[m
[32m+[m[32m    "pink" => "FFC0CB",[m
[32m+[m[32m    "plum" => "DDA0DD",[m
[32m+[m[32m    "powderblue" => "B0E0E6",[m
[32m+[m[32m    "purple" => "800080",[m
[32m+[m[32m    "red" => "FF0000",[m
[32m+[m[32m    "rosybrown" => "BC8F8F",[m
[32m+[m[32m    "royalblue" => "4169E1",[m
[32m+[m[32m    "saddlebrown" => "8B4513",[m
[32m+[m[32m    "salmon" => "FA8072",[m
[32m+[m[32m    "sandybrown" => "F4A460",[m
[32m+[m[32m    "seagreen" => "2E8B57",[m
[32m+[m[32m    "seashell" => "FFF5EE",[m
[32m+[m[32m    "sienna" => "A0522D",[m
[32m+[m[32m    "silver" => "C0C0C0",[m
[32m+[m[32m    "skyblue" => "87CEEB",[m
[32m+[m[32m    "slateblue" => "6A5ACD",[m
[32m+[m[32m    "slategray" => "708090",[m
[32m+[m[32m    "slategrey" => "708090",[m
[32m+[m[32m    "snow" => "FFFAFA",[m
[32m+[m[32m    "springgreen" => "00FF7F",[m
[32m+[m[32m    "steelblue" => "4682B4",[m
[32m+[m[32m    "tan" => "D2B48C",[m
[32m+[m[32m    "teal" => "008080",[m
[32m+[m[32m    "thistle" => "D8BFD8",[m
[32m+[m[32m    "tomato" => "FF6347",[m
[32m+[m[32m    "turquoise" => "40E0D0",[m
[32m+[m[32m    "violet" => "EE82EE",[m
[32m+[m[32m    "wheat" => "F5DEB3",[m
[32m+[m[32m    "white" => "FFFFFF",[m
[32m+[m[32m    "whitesmoke" => "F5F5F5",[m
[32m+[m[32m    "yellow" => "FFFF00",[m
[32m+[m[32m    "yellowgreen" => "9ACD32",[m
[32m+[m[32m  );[m
[32m+[m
[32m+[m[32m  static function parse($colour) {[m
[32m+[m[32m    if ( is_array($colour) )[m
[32m+[m[32m      // Assume the array has the right format...[m
[32m+[m[32m      // FIXME: should/could verify this.[m
[32m+[m[32m      return $colour;[m
[32m+[m[41m    [m
[32m+[m[32m    $colour = strtolower($colour);[m
[32m+[m[41m    [m
[32m+[m[32m    if (isset(self::$cssColorNames[$colour]))[m[41m [m
[32m+[m[32m      return self::getArray(self::$cssColorNames[$colour]);[m
[32m+[m[41m      [m
[32m+[m[32m    if ($colour === "transparent")[m
[32m+[m[32m      return "transparent";[m
[32m+[m[41m      [m
[32m+[m[32m    $length = mb_strlen($colour);[m
[32m+[m[41m    [m
[32m+[m[32m    // #rgb format[m
[32m+[m[32m    if ( $length == 4 && $colour[0] === "#" ) {[m
[32m+[m[32m      return self::getArray($colour[1].$colour[1].$colour[2].$colour[2].$colour[3].$colour[3]);[m
[32m+[m
[32m+[m[32m    // #rrggbb format[m
[32m+[m[32m    } else if ( $length == 7 && $colour[0] === "#" ) {[m
[32m+[m[32m      return self::getArray(mb_substr($colour, 1, 6));[m
[32m+[m
[32m+[m[32m    // rgb( r,g,b ) format[m
[32m+[m[32m    } else if ( mb_strpos($colour, "rgb") !== false ) {[m
[32m+[m[32m      $i = mb_strpos($colour, "(");[m
[32m+[m[32m      $j = mb_strpos($colour, ")");[m
[32m+[m[41m      [m
[32m+[m[32m      // Bad colour value[m
[32m+[m[32m      if ($i === false || $j === false)[m
[32m+[m[32m        return null;[m
[32m+[m
[32m+[m[32m      $triplet = explode(",", mb_substr($colour, $i+1, $j-$i-1));[m
[32m+[m
[32m+[m[32m      if (count($triplet) != 3)[m
[32m+[m[32m        return null;[m
[32m+[m[41m      [m
[32m+[m[32m      foreach (array_keys($triplet) as $c) {[m
[32m+[m[32m        $triplet[$c] = trim($triplet[$c]);[m
[32m+[m[41m        [m
[32m+[m[32m        if ( $triplet[$c][mb_strlen($triplet[$c]) - 1] === "%" )[m[41m [m
[32m+[m[32m          $triplet[$c] = round($triplet[$c] * 2.55);[m
[32m+[m[32m      }[m
[32m+[m[41m      [m
[32m+[m[32m      return self::getArray(vsprintf("%02X%02X%02X", $triplet));[m
[32m+[m[41m    [m
[32m+[m[32m    // cmyk( c,m,y,k ) format[m
[32m+[m[32m    // http://www.w3.org/TR/css3-gcpm/#cmyk-colors[m
[32m+[m[32m    } else if ( mb_strpos($colour, "cmyk") !== false ) {[m
[32m+[m[32m      $i = mb_strpos($colour, "(");[m
[32m+[m[32m      $j = mb_strpos($colour, ")");[m
[32m+[m[41m      [m
[32m+[m[32m      // Bad colour value[m
[32m+[m[32m      if ($i === false || $j === false)[m
[32m+[m[32m        return null;[m
[32m+[m
[32m+[m[32m      $values = explode(",", mb_substr($colour, $i+1, $j-$i-1));[m
[32m+[m
[32m+[m[32m      if (count($values) != 4)[m
[32m+[m[32m        return null;[m
[32m+[m[41m      [m
[32m+[m[32m      foreach ($values as &$c) {[m
[32m+[m[32m        $c = floatval(trim($c));[m
[32m+[m[32m        if ($c > 1.0) $c = 1.0;[m
[32m+[m[32m        if ($c < 0.0) $c = 0.0;[m
[32m+[m[32m      }[m
[32m+[m[41m      [m
[32m+[m[32m      return self::getArray($values);[m
[32m+[m[32m    }[m
[32m+[m[32m  }[m
[32m+[m[41m  [m
[32m+[m[32m  static function getArray($colour) {[m
[32m+[m[32m    $c = array(null, null, null, null, "hex" => null);[m
[32m+[m[41m    [m
[32m+[m[32m    if (is_array($colour)) {[m
[32m+[m[32m      $c = $colour;[m
[32m+[m[32m      $c["c"] = $c[0];[m
[32m+[m[32m      $c["m"] = $c[1];[m
[32m+[m[32m      $c["y"] = $c[2];[m
[32m+[m[32m      $c["k"] = $c[3];[m
[32m+[m[32m      $c["hex"] = "cmyk($c[0],$c[1],$c[2],$c[3])";[m
[32m+[m[32m    }[m
[32m+[m[32m    else {[m
[32m+[m[32m      $c[0] = hexdec(mb_substr($colour, 0, 2)) / 0xff;[m
[32m+[m[32m      $c[1] = hexdec(mb_substr($colour, 2, 2)) / 0xff;[m
[32m+[m[32m      $c[2] = hexdec(mb_substr($colour, 4, 2)) / 0xff;[m
[32m+[m[32m      $c["r"] = $c[0];[m
[32m+[m[32m      $c["g"] = $c[1];[m
[32m+[m[32m      $c["b"] = $c[2];[m
[32m+[m[32m      $c["hex"] = "#$colour";[m
[32m+[m[32m    }[m
[32m+[m[41m    [m
[32m+[m[32m    return $c;[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[1mdiff --git a/application/third_party/dompdf/include/dompdf.cls.php b/application/third_party/dompdf/include/dompdf.cls.php[m
[1mnew file mode 100644[m
[1mindex 0000000..7cff249[m
[1m--- /dev/null[m
[1m+++ b/application/third_party/dompdf/include/dompdf.cls.php[m
[36m@@ -0,0 +1,792 @@[m
[32m+[m[32m<?php[m
[32m+[m[32m/**[m
[32m+[m[32m * DOMPDF - PHP5 HTML to PDF renderer[m
[32m+[m[32m *[m
[32m+[m[32m * File: $RCSfile: dompdf.cls.php,v $[m
[32m+[m[32m * Created on: 2004-06-09[m
[32m+[m[32m *[m
[32m+[m[32m * Copyright (c) 2004 - Benj Carson <benjcarson@digitaljunkies.ca>[m
[32m+[m[32m *[m
[32m+[m[32m * This library is free software; you can redistribute it and/or[m
[32m+[m[32m * modify it under the terms of the GNU Lesser General Public[m
[32m+[m[32m * License as published by the Free Software Foundation; either[m
[32m+[m[32m * version 2.1 of the License, or (at your option) any later version.[m
[32m+[m[32m *[m
[32m+[m[32m * This library is distributed in the hope that it will be useful,[m
[32m+[m[32m * but WITHOUT ANY WARRANTY; without even the implied warranty of[m
[32m+[m[32m * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU[m
[32m+[m[32m * Lesser General Public License for more details.[m
[32m+[m[32m *[m
[32m+[m[32m * You should have received a copy of the GNU Lesser General Public License[m
[32m+[m[32m * along with this library in the file LICENSE.LGPL; if not, write to the[m
[32m+[m[32m * Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA[m
[32m+[m[32m * 02111-1307 USA[m
[32m+[m[32m *[m
[32m+[m[32m * Alternatively, you may distribute this software under the terms of the[m
[32m+[m[32m * PHP License, version 3.0 or later.  A copy of this license should have[m
[32m+[m[32m * been distributed with this file in the file LICENSE.PHP .  If this is not[m
[32m+[m[32m * the case, you can obtain a copy at http://www.php.net/license/3_0.txt.[m
[32m+[m[32m *[m
[32m+[m[32m * The latest version of DOMPDF might be available at:[m
[32m+[m[32m * http://www.dompdf.com/[m
[32m+[m[32m *[m
[32m+[m[32m * @link http://www.dompdf.com/[m
[32m+[m[32m * @copyright 2004 Benj Carson[m
[32m+[m[32m * @author Benj Carson <benjcarson@digitaljunkies.ca>[m
[32m+[m[32m * @package dompdf[m
[32m+[m
[32m+[m[32m */[m
[32m+[m
[32m+[m[32m/* $Id: dompdf.cls.php 362 2011-02-16 22:17:28Z fabien.menager $ */[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * DOMPDF - PHP5 HTML to PDF renderer[m
[32m+[m[32m *[m
[32m+[m[32m * DOMPDF loads HTML and does its best to render it as a PDF.  It gets its[m
[32m+[m[32m * name from the new DomDocument PHP5 extension.  Source HTML is first[m
[32m+[m[32m * parsed by a DomDocument object.  DOMPDF takes the resulting DOM tree and[m
[32m+[m[32m * attaches a {@link Frame} object to each node.  {@link Frame} objects store[m
[32m+[m[32m * positioning and layout information and each has a reference to a {@link[m
[32m+[m[32m * Style} object.[m
[32m+[m[32m *[m
[32m+[m[32m * Style information is loaded and parsed (see {@link Stylesheet}) and is[m
[32m+[m[32m * applied to the frames in the tree by using XPath.  CSS selectors are[m
[32m+[m[32m * converted into XPath queries, and the computed {@link Style} objects are[m
[32m+[m[32m * applied to the {@link Frame}s.[m
[32m+[m[32m *[m
[32m+[m[32m * {@link Frame}s are then decorated (in the design pattern sense of the[m
[32m+[m[32m * word) based on their CSS display property ({@link[m
[32m+[m[32m * http://www.w3.org/TR/CSS21/visuren.html#propdef-display}).[m
[32m+[m[32m * Frame_Decorators augment the basic {@link Frame} class by adding[m
[32m+[m[32m * additional properties and methods specific to the particular type of[m
[32m+[m[32m * {@link Frame}.  For example, in the CSS layout model, block frames[m
[32m+[m[32m * (display: block;) contain line boxes that are usually filled with text or[m
[32m+[m[32m * other inline frames.  The Block_Frame_Decorator therefore adds a $lines[m
[32m+[m[32m * property as well as methods to add {@link Frame}s to lines and to add[m
[32m+[m[32m * additional lines.  {@link Frame}s also are attached to specific[m
[32m+[m[32m * Positioner and {@link Frame_Reflower} objects that contain the[m
[32m+[m[32m * positioining and layout algorithm for a specific type of frame,[m
[32m+[m[32m * respectively.  This is an application of the Strategy pattern.[m
[32m+[m[32m *[m
[32m+[m[32m * Layout, or reflow, proceeds recursively (post-order) starting at the root[m
[32m+[m[32m * of the document.  Space constraints (containing block width & height) are[m
[32m+[m[32m * pushed down, and resolved positions and sizes bubble up.  Thus, every[m
[32m+[m[32m * {@link Frame} in the document tree is traversed once (except for tables[m
[32m+[m[32m * which use a two-pass layout algorithm).  If you are interested in the[m
[32m+[m[32m * details, see the reflow() method of the Reflower classes.[m
[32m+[m[32m *[m
[32m+[m[32m * Rendering is relatively straightforward once layout is complete. {@link[m
[32m+[m[32m * Frame}s are rendered using an adapted {@link Cpdf} class, originally[m
[32m+[m[32m * written by Wayne Munro, http://www.ros.co.nz/pdf/.  (Some performance[m
[32m+[m[32m * related changes have been made to the original {@link Cpdf} class, and[m
[32m+[m[32m * the {@link CPDF_Adapter} class provides a simple, stateless interface to[m
[32m+[m[32m * PDF generation.)  PDFLib support has now also been added, via the {@link[m
[32m+[m[32m * PDFLib_Adapter}.[m
[32m+[m[32m *[m
[32m+[m[32m *[m
[32m+[m[32m * @package dompdf[m
[32m+[m[32m */[m
[32m+[m[32mclass DOMPDF {[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * DomDocument representing the HTML document[m
[32m+[m[32m   *[m
[32m+[m[32m   * @var DomDocument[m
[32m+[m[32m   */[m
[32m+[m[32m  protected $_xml;[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Frame_Tree derived from the DOM tree[m
[32m+[m[32m   *[m
[32m+[m[32m   * @var Frame_Tree[m
[32m+[m[32m   */[m
[32m+[m[32m  protected $_tree;[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Stylesheet for the document[m
[32m+[m[32m   *[m
[32m+[m[32m   * @var Stylesheet[m
[32m+[m[32m   */[m
[32m+[m[32m  protected $_css;[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Actual PDF renderer[m
[32m+[m[32m   *[m
[32m+[m[32m   * @var Canvas[m
[32m+[m[32m   */[m
[32m+[m[32m  protected $_pdf;[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Desired paper size ('letter', 'legal', 'A4', etc.)[m
[32m+[m[32m   *[m
[32m+[m[32m   * @var string[m
[32m+[m[32m   */[m
[32m+[m[32m  protected $_paper_size;[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Paper orientation ('portrait' or 'landscape')[m
[32m+[m[32m   *[m
[32m+[m[32m   * @var string[m
[32m+[m[32m   */[m
[32m+[m[32m  protected $_paper_orientation;[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Callbacks on new page and new element[m
[32m+[m[32m   *[m
[32m+[m[32m   * @var array[m
[32m+[m[32m   */[m
[32m+[m[32m  protected $_callbacks;[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Experimental caching capability[m
[32m+[m[32m   *[m
[32m+[m[32m   * @var string[m
[32m+[m[32m   */[m
[32m+[m[32m  private $_cache_id;[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Base hostname[m
[32m+[m[32m   *[m
[32m+[m[32m   * Used for relative paths/urls[m
[32m+[m[32m   * @var string[m
[32m+[m[32m   */[m
[32m+[m[32m  protected $_base_host;[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Absolute base path[m
[32m+[m[32m   *[m
[32m+[m[32m   * Used for relative paths/urls[m
[32m+[m[32m   * @var string[m
[32m+[m[32m   */[m
[32m+[m[32m  protected $_base_path;[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Protcol used to request file (file://, http://, etc)[m
[32m+[m[32m   *[m
[32m+[m[32m   * @var string[m
[32m+[m[32m   */[m
[32m+[m[32m  protected $_protocol;[m
[32m+[m[41m  [m
[32m+[m[32m  /**[m
[32m+[m[32m   * Timestamp of the script start time[m
[32m+[m[32m   *[m[41m [m
[32m+[m[32m   * @var int[m[41m [m
[32m+[m[32m   */[m
[32m+[m[32m  private $_start_time = null;[m
[32m+[m[41m  [m
[32m+[m[32m  /**[m
[32m+[m[32m   * @var string The system's locale[m
[32m+[m[32m   */[m
[32m+[m[32m  private $_system_locale = null;[m
[32m+[m[41m  [m
[32m+[m[32m  /**[m
[32m+[m[32m   * @var bool Tells if the system's locale is the C standard one[m
[32m+[m[32m   */[m
[32m+[m[32m  private $_locale_standard = false;[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Class constructor[m
[32m+[m[32m   */[m
[32m+[m[32m  function __construct() {[m
[32m+[m[32m    $this->_locale_standard = sprintf('%.1f', 1.0) == '1.0';[m
[32m+[m[41m    [m
[32m+[m[32m    $this->save_locale();[m
[32m+[m[41m    [m
[32m+[m[32m    $this->_messages = array();[m
[32m+[m[32m    $this->_xml = new DOMDocument();[m
[32m+[m[32m    $this->_xml->preserveWhiteSpace = true;[m
[32m+[m[32m    $this->_tree = new Frame_Tree($this->_xml);[m
[32m+[m[32m    $this->_css = new Stylesheet();[m
[32m+[m[32m    $this->_pdf = null;[m
[32m+[m[32m    $this->_paper_size = "letter";[m
[32m+[m[32m    $this->_paper_orientation = "portrait";[m
[32m+[m[32m    $this->_base_protocol = "";[m
[32m+[m[32m    $this->_base_host = "";[m
[32m+[m[32m    $this->_base_path = "";[m
[32m+[m[32m    $this->_callbacks = array();[m
[32m+[m[32m    $this->_cache_id = null;[m
[32m+[m[41m    [m
[32m+[m[32m    $this->restore_locale();[m
[32m+[m[32m  }[m
[32m+[m[41m  [m
[32m+[m[32m  /**[m
[32m+[m[32m   * Class destructor[m
[32m+[m[32m   */[m
[32m+[m[32m  function __destruct() {[m
[32m+[m[32m    clear_object($this);[m
[32m+[m[32m  }[m
[32m+[m[41m  [m
[32m+[m[32m  /**[m
[32m+[m[32m   * Save the system's locale configuration and[m[41m [m
[32m+[m[32m   * set the right value for numeric formatting[m
[32m+[m[32m   */[m
[32m+[m[32m  private function save_locale() {[m
[32m+[m[32m    if ( $this->_locale_standard ) return;[m
[32m+[m[41m    [m
[32m+[m[32m    $this->_system_locale = setlocale(LC_NUMERIC, "C");[m
[32m+[m[32m  }[m
[32m+[m[41m  [m
[32m+[m[32m  /**[m
[32m+[m[32m   * Restore the system's locale configuration[m
[32m+[m[32m   */[m
[32m+[m[32m  private function restore_locale() {[m
[32m+[m[32m    if ( $this->_locale_standard ) return;[m
[32m+[m[41m    [m
[32m+[m[32m    setlocale(LC_NUMERIC, $this->_system_locale);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Returns the underlying {@link Frame_Tree} object[m
[32m+[m[32m   *[m
[32m+[m[32m   * @return Frame_Tree[m
[32m+[m[32m   */[m
[32m+[m[32m  function get_tree() { return $this->_tree; }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Sets the protocol to use[m
[32m+[m[32m   * FIXME validate these[m
[32m+[m[32m   *[m[41m [m
[32m+[m[32m   * @param string $proto[m
[32m+[m[32m   */[m
[32m+[m[32m  function set_protocol($proto) { $this->_protocol = $proto; }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Sets the base hostname[m
[32m+[m[32m   *[m
[32m+[m[32m   * @param string $host[m
[32m+[m[32m   */[m
[32m+[m[32m  function set_host($host) { $this->_base_host = $host; }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Sets the base path[m
[32m+[m[32m   *[m
[32m+[m[32m   * @param string $path[m
[32m+[m[32m   */[m
[32m+[m[32m  function set_base_path($path) { $this->_base_path = $path; }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Returns the protocol in use[m
[32m+[m[32m   *[m
[32m+[m[32m   * @return string[m
[32m+[m[32m   */[m
[32m+[m[32m  function get_protocol() { return $this->_protocol; }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Returns the base hostname[m
[32m+[m[32m   *[m
[32m+[m[32m   * @return string[m
[32m+[m[32m   */[m
[32m+[m[32m  function get_host() { return $this->_base_host; }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Returns the base path[m
[32m+[m[32m   *[m
[32m+[m[32m   * @return string[m
[32m+[m[32m   */[m
[32m+[m[32m  function get_base_path() { return $this->_base_path; }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Return the underlying Canvas instance (e.g. CPDF_Adapter, GD_Adapter)[m
[32m+[m[32m   *[m
[32m+[m[32m   * @return Canvas[m
[32m+[m[32m   */[m
[32m+[m[32m  function get_canvas() { return $this->_pdf; }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Returns the callbacks array[m
[32m+[m[32m   *[m
[32m+[m[32m   * @return array[m
[32m+[m[32m   */[m
[32m+[m[32m  function get_callbacks() { return $this->_callbacks; }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Loads an HTML file[m
[32m+[m[32m   *[m
[32m+[m[32m   * Parse errors are stored in the global array _dompdf_warnings.[m
[32m+[m[32m   *[m
[32m+[m[32m   * @param string $file a filename or url to load[m
[32m+[m[32m   */[m
[32m+[m[32m  function load_html_file($file) {[m
[32m+[m[32m    $this->save_locale();[m
[32m+[m[41m    [m
[32m+[m[32m    // Store parsing warnings as messages (this is to prevent output to the[m
[32m+[m[32m    // browser if the html is ugly and the dom extension complains,[m
[32m+[m[32m    // preventing the pdf from being streamed.)[m
[32m+[m[32m    if ( !$this->_protocol && !$this->_base_host && !$this->_base_path )[m
[32m+[m[32m      list($this->_protocol, $this->_base_host, $this->_base_path) = explode_url($file);[m
[32m+[m
[32m+[m[32m    if ( !DOMPDF_ENABLE_REMOTE &&[m
[32m+[m[32m         ($this->_protocol != "" && $this->_protocol !== "file://" ) )[m
[32m+[m[32m      throw new DOMPDF_Exception("Remote file requested, but DOMPDF_ENABLE_REMOTE is false.");[m
[32m+[m
[32m+[m[32m    if ($this->_protocol == "" || $this->_protocol === "file://") {[m
[32m+[m
[32m+[m[32m      $realfile = realpath($file);[m
[32m+[m[32m      if ( !$file )[m
[32m+[m[32m        throw new DOMPDF_Exception("File '$file' not found.");[m
[32m+[m
[32m+[m[32m      if ( strpos($realfile, DOMPDF_CHROOT) !== 0 )[m
[32m+[m[32m        throw new DOMPDF_Exception("Permission denied on $file.");[m
[32m+[m
[32m+[m[32m      // Exclude dot files (e.g. .htaccess)[m
[32m+[m[32m      if ( substr(basename($realfile),0,1) === "." )[m
[32m+[m[32m        throw new DOMPDF_Exception("Permission denied on $file.");[m
[32m+[m
[32m+[m[32m      $file = $realfile;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    $contents = file_get_contents($file);[m
[32m+[m[32m    $encoding = null;[m
[32m+[m
[32m+[m[32m    // See http://the-stickman.com/web-development/php/getting-http-response-headers-when-using-file_get_contents/[m
[32m+[m[32m    if ( isset($http_response_header) ) {[m
[32m+[m[32m      foreach($http_response_header as $_header) {[m
[32m+[m[32m        if ( preg_match("@Content-Type:\s*[\w/]+;\s*?charset=([^\s]+)@i", $_header, $matches) ) {[m
[32m+[m[32m          $encoding = strtoupper($matches[1]);[m
[32m+[m[32m          break;[m
[32m+[m[32m        }[m
[32m+[m[32m      }[m
[32m+[m[32m    }[m
[32m+[m[41m    [m
[32m+[m[32m    $this->restore_locale();[m
[32m+[m[41m    [m
[32m+[m[32m    $this->load_html($contents, $encoding);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Loads an HTML string[m
[32m+[m[32m   *[m
[32m+[m[32m   * Parse errors are stored in the global array _dompdf_warnings.[m
[32m+[m[32m   *[m
[32m+[m[32m   * @param string $str HTML text to load[m
[32m+[m[32m   */[m
[32m+[m[32m  function load_html($str, $encoding = null) {[m
[32m+[m[32m    $this->save_locale();[m
[32m+[m[41m    [m
[32m+[m[32m    // TODO: use the $encoding variable[m
[32m+[m[32m    // FIXME: Determine character encoding, switch to UTF8, update meta tag. Need better http/file stream encoding detection, currently relies on text or meta tag.[m
[32m+[m[32m    mb_detect_order('auto');[m
[32m+[m[41m    [m
[32m+[m[32m    if (mb_detect_encoding($str) !== 'UTF-8') {[m
[32m+[m[32m      $metatags = array([m
[32m+[m[32m        '@<meta\s+http-equiv="Content-Type"\s+content="(?:[\w/]+)(?:;\s*?charset=([^\s"]+))?@i',[m
[32m+[m[32m        '@<meta\s+content="(?:[\w/]+)(?:;\s*?charset=([^\s"]+))"?\s+http-equiv="Content-Type"@i',[m
[32m+[m[32m      );[m
[32m+[m[41m      [m
[32m+[m[32m      foreach($metatags as $metatag) {[m
[32m+[m[32m        if (preg_match($metatag, $str, $matches)) break;[m
[32m+[m[32m      }[m
[32m+[m[41m        [m
[32m+[m[32m      if (mb_detect_encoding($str) == '') {[m
[32m+[m[32m        if (isset($matches[1])) {[m
[32m+[m[32m          $encoding = strtoupper($matches[1]);[m
[32m+[m[32m        } else {[m
[32m+[m[32m          $encoding = 'UTF-8';[m
[32m+[m[32m        }[m
[32m+[m[32m      } else {[m
[32m+[m[32m        if (isset($matches[1])) {[m
[32m+[m[32m          $encoding = strtoupper($matches[1]);[m
[32m+[m[32m        } else {[m
[32m+[m[32m          $encoding = 'auto';[m
[32m+[m[32m        }[m
[32m+[m[32m      }[m
[32m+[m[41m      [m
[32m+[m[32m      if ($encoding !== 'UTF-8') {[m[41m [m
[32m+[m[32m        $str = mb_convert_encoding($str, 'UTF-8', $encoding);[m[41m [m
[32m+[m[32m      }[m
[32m+[m[41m      [m
[32m+[m[32m      if (isset($matches[1])) {[m
[32m+[m[32m        $str = preg_replace('/charset=([^\s"]+)/i','charset=UTF-8', $str);[m
[32m+[m[32m      } else {[m
[32m+[m[32m        $str = str_replace('<head>', '<head><meta http-equiv="Content-Type" content="text/html;charset=UTF-8">', $str);[m
[32m+[m[32m      }[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    // Parse embedded php, first-pass[m
[32m+[m[32m    if ( DOMPDF_ENABLE_PHP ) {[m
[32m+[m[32m      ob_start();[m
[32m+[m[32m      eval("?" . ">$str");[m
[32m+[m[32m      $str = ob_get_clean();[m
[32m+[m[32m    }[m
[32m+[m[41m    [m
[32m+[m[32m    // if the document contains non utf-8 with a utf-8 meta tag chars and was[m[41m [m
[32m+[m[32m    // detected as utf-8 by mbstring, problems could happen.[m
[32m+[m[32m    // http://devzone.zend.com/article/8855[m
[32m+[m[32m    if ( $encoding === 'UTF-8' ) {[m
[32m+[m[32m      $str = preg_replace("/<meta([^>]+)>/", "", $str);[m
[32m+[m[32m    }[m
[32m+[m[41m    [m
[32m+[m[32m    // Store parsing warnings as messages[m
[32m+[m[32m    set_error_handler("record_warnings");[m
[32m+[m[32m    $this->_xml->loadHTML($str);[m
[32m+[m[32m    restore_error_handler();[m
[32m+[m[41m    [m
[32m+[m[32m    /**[m
[32m+[m[32m    @todo Take the quirksmode into account[m
[32m+[m[32m    // http://hsivonen.iki.fi/doctype/[m
[32m+[m[32m    // https://developer.mozilla.org/en/mozilla's_quirks_mode[m
[32m+[m[32m    $quirksmode = false;[m
[32m+[m[41m    [m
[32m+[m[32m    // HTML5 <!DOCTYPE html>[m
[32m+[m[32m    if ( !$this->_xml->doctype->publicId && !$this->_xml->doctype->systemId ) {[m
[32m+[m[32m      $quirksmode = false;[m
[32m+[m[32m    }[m
[32m+[m[41m    [m
[32m+[m[32m    // not XHTML[m
[32m+[m[32m    if ( !preg_match("/xhtml/i", $this->_xml->doctype->publicId) ) {[m
[32m+[m[32m      $quirksmode = true;[m
[32m+[m[32m    }[m
[32m+[m[32m    */[m
[32m+[m[41m    [m
[32m+[m[32m    $this->restore_locale();[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Builds the {@link Frame_Tree}, loads any CSS and applies the styles to[m
[32m+[m[32m   * the {@link Frame_Tree}[m
[32m+[m[32m   */[m
[32m+[m[32m  protected function _process_html() {[m
[32m+[m[32m    $this->save_locale();[m
[32m+[m[41m    [m
[32m+[m[32m    $this->_tree->build_tree();[m
[32m+[m
[32m+[m[32m    $this->_css->load_css_file(Stylesheet::DEFAULT_STYLESHEET);[m
[32m+[m
[32m+[m[32m    $acceptedmedia = Stylesheet::$ACCEPTED_GENERIC_MEDIA_TYPES;[m
[32m+[m[32m    if ( defined("DOMPDF_DEFAULT_MEDIA_TYPE") ) {[m
[32m+[m[32m      $acceptedmedia[] = DOMPDF_DEFAULT_MEDIA_TYPE;[m
[32m+[m[32m    } else {[m
[32m+[m[32m      $acceptedmedia[] = Stylesheet::$ACCEPTED_DEFAULT_MEDIA_TYPE;[m
[32m+[m[32m    }[m
[32m+[m[41m          [m
[32m+[m[32m    // load <link rel="STYLESHEET" ... /> tags[m
[32m+[m[32m    $links = $this->_xml->getElementsByTagName("link");[m
[32m+[m[32m    foreach ($links as $link) {[m
[32m+[m[32m      if ( mb_strtolower($link->getAttribute("rel")) === "stylesheet" ||[m
[32m+[m[32m           mb_strtolower($link->getAttribute("type")) === "text/css" ) {[m
[32m+[m[32m        //Check if the css file is for an accepted media type[m
[32m+[m[32m        //media not given then always valid[m
[32m+[m[32m        $formedialist = preg_split("/[\s\n,]/", $link->getAttribute("media"),-1, PREG_SPLIT_NO_EMPTY);[m
[32m+[m[32m        if ( count($formedialist) > 0 ) {[m
[32m+[m[32m          $accept = false;[m
[32m+[m[32m          foreach ( $formedialist as $type ) {[m
[32m+[m[32m            if ( in_array(mb_strtolower(trim($type)), $acceptedmedia) ) {[m
[32m+[m[32m              $accept = true;[m
[32m+[m[32m              break;[m
[32m+[m[32m            }[m
[32m+[m[32m          }[m
[32m+[m[32m          if (!$accept) {[m
[32m+[m[32m            //found at least one mediatype, but none of the accepted ones[m
[32m+[m[32m            //Skip this css file.[m
[32m+[m[32m            continue;[m
[32m+[m[32m          }[m
[32m+[m[32m        }[m
[32m+[m[41m           [m
[32m+[m[32m        $url = $link->getAttribute("href");[m
[32m+[m[32m        $url = build_url($this->_protocol, $this->_base_host, $this->_base_path, $url);[m
[32m+[m
[32m+[m[32m        $this->_css->load_css_file($url);[m
[32m+[m[32m      }[m
[32m+[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    // load <style> tags[m
[32m+[m[32m    $styles = $this->_xml->getElementsByTagName("style");[m
[32m+[m[32m    foreach ($styles as $style) {[m
[32m+[m
[32m+[m[32m      // Accept all <style> tags by default (note this is contrary to W3C[m
[32m+[m[32m      // HTML 4.0 spec:[m
[32m+[m[32m      // http://www.w3.org/TR/REC-html40/present/styles.html#adef-media[m
[32m+[m[32m      // which states that the default media type is 'screen'[m
[32m+[m[32m      if ( $style->hasAttributes() &&[m
[32m+[m[32m           ($media = $style->getAttribute("media")) &&[m
[32m+[m[32m           !in_array($media, $acceptedmedia) )[m
[32m+[m[32m        continue;[m
[32m+[m
[32m+[m[32m      $css = "";[m
[32m+[m[32m      if ( $style->hasChildNodes() ) {[m
[32m+[m
[32m+[m[32m        $child = $style->firstChild;[m
[32m+[m[32m        while ( $child ) {[m
[32m+[m[32m          $css .= $child->nodeValue; // Handle <style><!-- blah --></style>[m
[32m+[m[32m          $child = $child->nextSibling;[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m      } else[m
[32m+[m[32m        $css = $style->nodeValue;[m
[32m+[m[41m      [m
[32m+[m[32m      // Set the base path of the Stylesheet to that of the file being processed[m
[32m+[m[32m      $this->_css->set_protocol($this->_protocol);[m
[32m+[m[32m      $this->_css->set_host($this->_base_host);[m
[32m+[m[32m      $this->_css->set_base_path($this->_base_path);[m
[32m+[m
[32m+[m[32m      $this->_css->load_css($css);[m
[32m+[m[32m    }[m
[32m+[m[41m    [m
[32m+[m[32m    $this->restore_locale();[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Sets the paper size & orientation[m
[32m+[m[32m   *[m
[32m+[m[32m   * @param string $size 'letter', 'legal', 'A4', etc. {@link CPDF_Adapter::$PAPER_SIZES}[m
[32m+[m[32m   * @param string $orientation 'portrait' or 'landscape'[m
[32m+[m[32m   */[m
[32m+[m[32m  function set_paper($size, $orientation = "portrait") {[m
[32m+[m[32m    $this->_paper_size = $size;[m
[32m+[m[32m    $this->_paper_orientation = $orientation;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Enable experimental caching capability[m
[32m+[m[32m   * @access private[m
[32m+[m[32m   */[m
[32m+[m[32m  function enable_caching($cache_id) {[m
[32m+[m[32m    $this->_cache_id = $cache_id;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Sets callbacks for events like rendering of pages and elements.[m
[32m+[m[32m   * The callbacks array contains arrays with 'event' set to 'begin_page',[m
[32m+[m[32m   * 'end_page', 'begin_frame', or 'end_frame' and 'f' set to a function or[m
[32m+[m[32m   * object plus method to be called.[m
[32m+[m[32m   *[m
[32m+[m[32m   * The function 'f' must take an array as argument, which contains info[m
[32m+[m[32m   * about the event.[m
[32m+[m[32m   *[m
[32m+[m[32m   * @param array $callbacks the set of callbacks to set[m
[32m+[m[32m   */[m
[32m+[m[32m  function set_callbacks($callbacks) {[m
[32m+[m[32m    if (is_array($callbacks)) {[m
[32m+[m[32m      $this->_callbacks = array();[m
[32m+[m[32m      foreach ($callbacks as $c) {[m
[32m+[m[32m        if (is_array($c) && isset($c['event']) && isset($c['f'])) {[m
[32m+[m[32m          $event = $c['event'];[m
[32m+[m[32m          $f = $c['f'];[m
[32m+[m[32m          if (is_callable($f) && is_string($event)) {[m
[32m+[m[32m            $this->_callbacks[$event][] = $f;[m
[32m+[m[32m          }[m
[32m+[m[32m        }[m
[32m+[m[32m      }[m
[32m+[m[32m    }[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Renders the HTML to PDF[m
[32m+[m[32m   */[m
[32m+[m[32m  function render() {[m
[32m+[m[32m    $this->save_locale();[m
[32m+[m[41m    [m
[32m+[m[32m    if ( DOMPDF_LOG_OUTPUT_FILE ) {[m
[32m+[m[32m      if ( !file_exists(DOMPDF_LOG_OUTPUT_FILE) && is_writable(dirname(DOMPDF_LOG_OUTPUT_FILE)) ) {[m
[32m+[m[32m        touch(DOMPDF_LOG_OUTPUT_FILE);[m
[32m+[m[32m      }[m
[32m+[m[41m      [m
[32m+[m[32m      $this->_start_time = microtime(true);[m
[32m+[m[32m      ob_start();[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    //enable_mem_profile();[m
[32m+[m
[32m+[m[32m    $this->_process_html();[m
[32m+[m[41m    [m
[32m+[m[32m    $this->_css->apply_styles($this->_tree);[m
[32m+[m[41m    [m
[32m+[m[32m    $root = null;[m
[32m+[m
[32m+[m[32m    foreach ($this->_tree->get_frames() as $frame) {[m
[32m+[m[32m      // Set up the root frame[m
[32m+[m
[32m+[m[32m      if ( is_null($root) ) {[m
[32m+[m[32m        $root = Frame_Factory::decorate_root( $this->_tree->get_root(), $this );[m
[32m+[m[32m        continue;[m
[32m+[m[32m      }[m
[32m+[m
[32m+[m[32m      // Create the appropriate decorators, reflowers & positioners.[m
[32m+[m[32m      $deco = Frame_Factory::decorate_frame($frame, $this);[m
[32m+[m[32m      $deco->set_root($root);[m
[32m+[m
[32m+[m[32m      // FIXME: handle generated content[m
[32m+[m[32m      if ( $frame->get_style()->display === "list-item" ) {[m
[32m+[m
[32m+[m[32m        // Insert a list-bullet frame[m
[32m+[m[32m        $node = $this->_xml->createElement("bullet"); // arbitrary choice[m
[32m+[m[32m        $b_f = new Frame($node);[m
[32m+[m
[32m+[m[32m        $parent_node = $frame->get_parent()->get_node();[m
[32m+[m
[32m+[m[32m        if ( !$parent_node->hasAttribute("dompdf-children-count") ) {[m
[32m+[m[32m          $count = 0;[m
[32m+[m[32m          foreach ($parent_node->childNodes as $_node) {[m
[32m+[m[32m            if ( $_node instanceof DOMElement )[m
[32m+[m[32m              $count++;[m
[32m+[m[32m          }[m
[32m+[m[32m          $parent_node->setAttribute("dompdf-children-count", $count);[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        $index = 0;[m
[32m+[m[32m        if ( !$parent_node->hasAttribute("dompdf-counter") ) {[m
[32m+[m[32m          $index = 1;[m
[32m+[m[32m          $parent_node->setAttribute("dompdf-counter", 1);[m
[32m+[m[32m        }[m
[32m+[m[32m        else {[m
[32m+[m[32m          $index = $parent_node->getAttribute("dompdf-counter");[m
[32m+[m[32m          $index++;[m
[32m+[m[32m          $parent_node->setAttribute("dompdf-counter", $index);[m
[32m+[m[32m        }[m
[32m+[m[41m        [m
[32m+[m[32m        $node->setAttribute("dompdf-counter", $index);[m
[32m+[m[32m        $style = $this->_css->create_style();[m
[32m+[m[32m        $style->display = "-dompdf-list-bullet";[m
[32m+[m[32m        $style->inherit($frame->get_style());[m
[32m+[m[32m        $b_f->set_style($style);[m
[32m+[m
[32m+[m[32m        $deco->prepend_child( Frame_Factory::decorate_frame($b_f, $this) );[m
[32m+[m[32m      }[m
[32m+[m
[32m+[m[32m    }[m
[32m+[m[41m    [m
[32m+[m[32m    $page_style = $this->_css->get_page_style();[m
[32m+[m[41m    [m
[32m+[m[32m    if ( $page_style && is_array($page_style->size) ) {[m
[32m+[m[32m      $this->set_paper(array(0, 0, $page_style->size[0], $page_style->size[1]));[m
[32m+[m[32m    }[m
[32m+[m[41m    [m
[32m+[m[32m    $this->_pdf = Canvas_Factory::get_instance($this->_paper_size, $this->_paper_orientation);[m
[32m+[m
[32m+[m[32m    // Add meta information[m
[32m+[m[32m    $title = $this->_xml->getElementsByTagName("title");[m
[32m+[m[32m    if ( $title->length ) {[m
[32m+[m[32m      $this->_pdf->add_info("Title", trim($title->item(0)->nodeValue));[m
[32m+[m[32m    }[m
[32m+[m[41m    [m
[32m+[m[32m    $metas = $this->_xml->getElementsByTagName("meta");[m
[32m+[m[32m    $labels = array([m
[32m+[m[32m      "author" => "Author",[m
[32m+[m[32m      "keywords" => "Keywords",[m
[32m+[m[32m      "description" => "Subject",[m
[32m+[m[32m    );[m
[32m+[m[32m    foreach($metas as $meta) {[m
[32m+[m[32m      $name = mb_strtolower($meta->getAttribute("name"));[m
[32m+[m[32m      if ( isset($labels[$name]) ) {[m
[32m+[m[32m        $this->_pdf->add_info($labels[$name], trim($meta->getAttribute("content")));[m
[32m+[m[32m      }[m
[32m+[m[32m    }[m
[32m+[m[41m    [m
[32m+[m[32m    $root->set_containing_block(0, 0, $this->_pdf->get_width(), $this->_pdf->get_height());[m
[32m+[m[32m    $root->set_renderer(new Renderer($this));[m
[32m+[m
[32m+[m[32m    // This is where the magic happens:[m
[32m+[m[32m    $root->reflow();[m
[32m+[m
[32m+[m[32m    // Clean up cached images[m
[32m+[m[32m    Image_Cache::clear();[m
[32m+[m[41m    [m
[32m+[m[32m    global $_dompdf_warnings, $_dompdf_show_warnings;[m
[32m+[m[32m    if ( $_dompdf_show_warnings ) {[m
[32m+[m[32m      echo '<b>DOMPDF Warnings</b><br><pre>';[m
[32m+[m[32m      foreach ($_dompdf_warnings as $msg)[m
[32m+[m[32m        echo $msg . "\n";[m
[32m+[m[32m      echo $this->get_canvas()->get_cpdf()->messages;[m
[32m+[m[32m      echo '</pre>';[m
[32m+[m[32m      flush();[m
[32m+[m[32m    }[m
[32m+[m[41m    [m
[32m+[m[32m    $this->restore_locale();[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Add meta information to the PDF after rendering[m
[32m+[m[32m   */[m
[32m+[m[32m  function add_info($label, $value) {[m
[32m+[m[32m    if (!is_null($this->_pdf))[m
[32m+[m[32m      $this->_pdf->add_info($label, $value);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Writes the output buffer in the log file[m
[32m+[m[32m   * @return void[m
[32m+[m[32m   */[m
[32m+[m[32m  private function write_log() {[m
[32m+[m[32m    if ( !DOMPDF_LOG_OUTPUT_FILE || !is_writable(DOMPDF_LOG_OUTPUT_FILE) ) return;[m
[32m+[m[41m    [m
[32m+[m[32m    $memory = DOMPDF_memory_usage();[m
[32m+[m[32m    $memory = number_format($memory/1024);[m
[32m+[m[32m    $time = number_format((microtime(true) - $this->_start_time) * 1000, 4);[m
[32m+[m[41m    [m
[32m+[m[32m    $out = "<span style='color: #900'>$memory KB</span>    ".[m
[32m+[m[32m    "<span style='color: #090'>$time ms</span><br />";[m
[32m+[m[41m    [m
[32m+[m[32m    $out .= ob_get_clean();[m
[32m+[m[32m    file_put_contents(DOMPDF_LOG_OUTPUT_FILE, $out);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Streams the PDF to the client[m
[32m+[m[32m   *[m
[32m+[m[32m   * The file will open a download dialog by default.  The options[m
[32m+[m[32m   * parameter controls the output.  Accepted options are:[m
[32m+[m[32m   *[m
[32m+[m[32m   * 'Accept-Ranges' => 1 or 0 - if this is not set to 1, then this[m
[32m+[m[32m   *    header is not included, off by default this header seems to[m
[32m+[m[32m   *    have caused some problems despite the fact that it is supposed[m
[32m+[m[32m   *    to solve them, so I am leaving it off by default.[m
[32m+[m[32m   *[m
[32m+[m[32m   * 'compress' = > 1 or 0 - apply content stream compression, this is[m
[32m+[m[32m   *    on (1) by default[m
[32m+[m[32m   *[m
[32m+[m[32m   * 'Attachment' => 1 or 0 - if 1, force the browser to open a[m
[32m+[m[32m   *    download dialog, on (1) by default[m
[32m+[m[32m   *[m
[32m+[m[32m   * @param string $filename the name of the streamed file[m
[32m+[m[32m   * @param array  $options header options (see above)[m
[32m+[m[32m   */[m
[32m+[m[32m  function stream($filename, $options = null) {[m
[32m+[m[32m    $this->save_locale();[m
[32m+[m[41m    [m
[32m+[m[32m    $this->write_log();[m
[32m+[m[41m    [m
[32m+[m[32m    if (!is_null($this->_pdf))[m
[32m+[m[32m      $this->_pdf->stream($filename, $options);[m
[32m+[m[41m      [m
[32m+[m[32m    $this->restore_locale();[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Returns the PDF as a string[m
[32m+[m[32m   *[m
[32m+[m[32m   * The file will open a download dialog by default.  The options[m
[32m+[m[32m   * parameter controls the output.  Accepted options are:[m
[32m+[m[32m   *[m
[32m+[m[32m   *[m
[32m+[m[32m   * 'compress' = > 1 or 0 - apply content stream compression, this is[m
[32m+[m[32m   *    on (1) by default[m
[32m+[m[32m   *[m
[32m+[m[32m   *[m
[32m+[m[32m   * @param array  $options options (see above)[m
[32m+[m[32m   * @return string[m
[32m+[m[32m   */[m
[32m+[m[32m  function output($options = null) {[m
[32m+[m[32m    $this->save_locale();[m
[32m+[m[41m    [m
[32m+[m[32m    $this->write_log();[m
[32m+[m
[32m+[m[32m    if ( is_null($this->_pdf) )[m
[32m+[m[32m      return null;[m
[32m+[m
[32m+[m[32m    $output = $this->_pdf->output( $options );[m
[32m+[m[41m    [m
[32m+[m[32m    $this->restore_locale();[m
[32m+[m[41m    [m
[32m+[m[32m    return $output;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Returns the underlying HTML document as a string[m
[32m+[m[32m   *[m
[32m+[m[32m   * @return string[m
[32m+[m[32m   */[m
[32m+[m[32m  function output_html() {[m
[32m+[m[32m    return $this->_xml->saveHTML();[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[1mdiff --git a/application/third_party/dompdf/include/dompdf_exception.cls.php b/application/third_party/dompdf/include/dompdf_exception.cls.php[m
[1mnew file mode 100644[m
[1mindex 0000000..bc61e31[m
[1m--- /dev/null[m
[1m+++ b/application/third_party/dompdf/include/dompdf_exception.cls.php[m
[36m@@ -0,0 +1,60 @@[m
[32m+[m[32m<?php[m
[32m+[m[32m/**[m
[32m+[m[32m * DOMPDF - PHP5 HTML to PDF renderer[m
[32m+[m[32m *[m
[32m+[m[32m * File: $RCSfile: dompdf_exception.cls.php,v $[m
[32m+[m[32m * Created on: 2004-08-07[m
[32m+[m[32m *[m
[32m+[m[32m * Copyright (c) 2004 - Benj Carson <benjcarson@digitaljunkies.ca>[m
[32m+[m[32m *[m
[32m+[m[32m * This library is free software; you can redistribute it and/or[m
[32m+[m[32m * modify it under the terms of the GNU Lesser General Public[m
[32m+[m[32m * License as published by the Free Software Foundation; either[m
[32m+[m[32m * version 2.1 of the License, or (at your option) any later version.[m
[32m+[m[32m *[m
[32m+[m[32m * This library is distributed in the hope that it will be useful,[m
[32m+[m[32m * but WITHOUT ANY WARRANTY; without even the implied warranty of[m
[32m+[m[32m * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU[m
[32m+[m[32m * Lesser General Public License for more details.[m
[32m+[m[32m *[m
[32m+[m[32m * You should have received a copy of the GNU Lesser General Public License[m
[32m+[m[32m * along with this library in the file LICENSE.LGPL; if not, write to the[m
[32m+[m[32m * Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA[m
[32m+[m[32m * 02111-1307 USA[m
[32m+[m[32m *[m
[32m+[m[32m * Alternatively, you may distribute this software under the terms of the[m
[32m+[m[32m * PHP License, version 3.0 or later.  A copy of this license should have[m
[32m+[m[32m * been distributed with this file in the file LICENSE.PHP .  If this is not[m
[32m+[m[32m * the case, you can obtain a copy at http://www.php.net/license/3_0.txt.[m
[32m+[m[32m *[m
[32m+[m[32m * The latest version of DOMPDF might be available at:[m
[32m+[m[32m * http://www.dompdf.com/[m
[32m+[m[32m *[m
[32m+[m[32m * @link http://www.dompdf.com/[m
[32m+[m[32m * @copyright 2004 Benj Carson[m
[32m+[m[32m * @author Benj Carson <benjcarson@digitaljunkies.ca>[m
[32m+[m[32m * @package dompdf[m
[32m+[m
[32m+[m[32m */[m
[32m+[m
[32m+[m[32m/* $Id: dompdf_exception.cls.php 216 2010-03-11 22:49:18Z ryan.masten $ */[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Standard exception thrown by DOMPDF classes[m
[32m+[m[32m *[m
[32m+[m[32m * @link http://www.zend.com/php5/articles/engine2-php5-changes.php#Heading12[m
[32m+[m[32m * @package dompdf[m
[32m+[m[32m */[m
[32m+[m[32mclass DOMPDF_Exception extends Exception {[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Class constructor[m
[32m+[m[32m   *[m
[32m+[m[32m   * @param string $message Error message[m
[32m+[m[32m   * @param int $code Error code[m
[32m+[m[32m   */[m
[32m+[m[32m  function __construct($message = NULL, $code = 0) {[m
[32m+[m[32m    parent::__construct($message, $code);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m}[m
[1mdiff --git a/application/third_party/dompdf/include/dompdf_internal_exception.cls.php b/application/third_party/dompdf/include/dompdf_internal_exception.cls.php[m
[1mnew file mode 100644[m
[1mindex 0000000..1822548[m
[1m--- /dev/null[m
[1m+++ b/application/third_party/dompdf/include/dompdf_internal_exception.cls.php[m
[36m@@ -0,0 +1,59 @@[m
[32m+[m[32m<?php[m
[32m+[m[32m/**[m
[32m+[m[32m * DOMPDF - PHP5 HTML to PDF renderer[m
[32m+[m[32m *[m
[32m+[m[32m * File: $RCSfile: dompdf_internal_exception.cls.php,v $[m
[32m+[m[32m * Created on: 2004-08-07[m
[32m+[m[32m *[m
[32m+[m[32m * Copyright (c) 2004 - Benj Carson <benjcarson@digitaljunkies.ca>[m
[32m+[m[32m *[m
[32m+[m[32m * This library is free software; you can redistribute it and/or[m
[32m+[m[32m * modify it under the terms of the GNU Lesser General Public[m
[32m+[m[32m * License as published by the Free Software Foundation; either[m
[32m+[m[32m * version 2.1 of the License, or (at your option) any later version.[m
[32m+[m[32m *[m
[32m+[m[32m * This library is distributed in the hope that it will be useful,[m
[32m+[m[32m * but WITHOUT ANY WARRANTY; without even the implied warranty of[m
[32m+[m[32m * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU[m
[32m+[m[32m * Lesser General Public License for more details.[m
[32m+[m[32m *[m
[32m+[m[32m * You should have received a copy of the GNU Lesser General Public License[m
[32m+[m[32m * along with this library in the file LICENSE.LGPL; if not, write to the[m
[32m+[m[32m * Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA[m
[32m+[m[32m * 02111-1307 USA[m
[32m+[m[32m *[m
[32m+[m[32m * Alternatively, you may distribute this software under the terms of the[m
[32m+[m[32m * PHP License, version 3.0 or later.  A copy of this license should have[m
[32m+[m[32m * been distributed with this file in the file LICENSE.PHP .  If this is not[m
[32m+[m[32m * the case, you can obtain a copy at http://www.php.net/license/3_0.txt.[m
[32m+[m[32m *[m
[32m+[m[32m * The latest version of DOMPDF might be available at:[m
[32m+[m[32m * http://www.dompdf.com/[m
[32m+[m[32m *[m
[32m+[m[32m * @link http://www.dompdf.com/[m
[32m+[m[32m * @copyright 2004 Benj Carson[m
[32m+[m[32m * @author Benj Carson <benjcarson@digitaljunkies.ca>[m
[32m+[m[32m * @package dompdf[m
[32m+[m
[32m+[m[32m */[m
[32m+[m
[32m+[m[32m/* $Id: dompdf_internal_exception.cls.php 216 2010-03-11 22:49:18Z ryan.masten $ */[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Exception thrown by DOMPDF classes for internal errors[m
[32m+[m[32m *[m
[32m+[m[32m * @package dompdf[m
[32m+[m[32m */[m
[32m+[m[32mclass DOMPDF_Internal_Exception extends Exception {[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Class constructor[m
[32m+[m[32m   *[m
[32m+[m[32m   * @param string $message Error message[m
[32m+[m[32m   * @param int $code Error code[m
[32m+[m[32m   */[m
[32m+[m[32m  function __construct($message = NULL, $code = 0) {[m
[32m+[m[32m    parent::__construct($message, $code);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m}[m
[1mdiff --git a/application/third_party/dompdf/include/file.skel b/application/third_party/dompdf/include/file.skel[m
[1mnew file mode 100644[m
[1mindex 0000000..f561043[m
[1m--- /dev/null[m
[1m+++ b/application/third_party/dompdf/include/file.skel[m
[36m@@ -0,0 +1,40 @@[m
[32m+[m[32m<?php[m
[32m+[m[32m/**[m
[32m+[m[32m * DOMPDF - PHP5 HTML to PDF renderer[m
[32m+[m[32m *[m
[32m+[m[32m * File: $RCSfile: file.skel,v $[m
[32m+[m[32m * Created on: 2004-08-04[m
[32m+[m[32m *[m
[32m+[m[32m * Copyright (c) 2004 - Benj Carson <benjcarson@digitaljunkies.ca>[m
[32m+[m[32m *[m
[32m+[m[32m * This library is free software; you can redistribute it and/or[m
[32m+[m[32m * modify it under the terms of the GNU Lesser General Public[m
[32m+[m[32m * License as published by the Free Software Foundation; either[m
[32m+[m[32m * version 2.1 of the License, or (at your option) any later version.[m
[32m+[m[32m *[m
[32m+[m[32m * This library is distributed in the hope that it will be useful,[m
[32m+[m[32m * but WITHOUT ANY WARRANTY; without even the implied warranty of[m
[32m+[m[32m * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU[m
[32m+[m[32m * Lesser General Public License for more details.[m
[32m+[m[32m *[m
[32m+[m[32m * You should have received a copy of the GNU Lesser General Public License[m
[32m+[m[32m * along with this library in the file LICENSE.LGPL; if not, write to the[m
[32m+[m[32m * Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA[m
[32m+[m[32m * 02111-1307 USA[m
[32m+[m[32m *[m
[32m+[m[32m * Alternatively, you may distribute this software under the terms of the[m
[32m+[m[32m * PHP License, version 3.0 or later.  A copy of this license should have[m
[32m+[m[32m * been distributed with this file in the file LICENSE.PHP .  If this is not[m
[32m+[m[32m * the case, you can obtain a copy at http://www.php.net/license/3_0.txt.[m
[32m+[m[32m *[m
[32m+[m[32m * The latest version of DOMPDF might be available at:[m
[32m+[m[32m * http://www.dompdf.com/[m
[32m+[m[32m *[m
[32m+[m[32m * @link http://www.dompdf.com/[m
[32m+[m[32m * @copyright 2004 Benj Carson[m
[32m+[m[32m * @author Benj Carson <benjcarson@digitaljunkies.ca>[m
[32m+[m[32m * @package dompdf[m
[32m+[m[32m * @version 0.3[m
[32m+[m[32m */[m
[32m+[m
[32m+[m[32m/* $Id: file.skel 216 2010-03-11 22:49:18Z ryan.masten $ */[m
[1mdiff --git a/application/third_party/dompdf/include/fixed_positioner.cls.php b/application/third_party/dompdf/include/fixed_positioner.cls.php[m
[1mnew file mode 100644[m
[1mindex 0000000..8903776[m
[1m--- /dev/null[m
[1m+++ b/application/third_party/dompdf/include/fixed_positioner.cls.php[m
[36m@@ -0,0 +1,117 @@[m
[32m+[m[32m<?php[m
[32m+[m[32m/**[m
[32m+[m[32m * DOMPDF - PHP5 HTML to PDF renderer[m
[32m+[m[32m *[m
[32m+[m[32m * File: $RCSfile: absolute_positioner.cls.php,v $[m
[32m+[m[32m * Created on: 2004-06-08[m
[32m+[m[32m *[m
[32m+[m[32m * Copyright (c) 2004 - Benj Carson <benjcarson@digitaljunkies.ca>[m
[32m+[m[32m *[m
[32m+[m[32m * This library is free software; you can redistribute it and/or[m
[32m+[m[32m * modify it under the terms of the GNU Lesser General Public[m
[32m+[m[32m * License as published by the Free Software Foundation; either[m
[32m+[m[32m * version 2.1 of the License, or (at your option) any later version.[m
[32m+[m[32m *[m
[32m+[m[32m * This library is distributed in the hope that it will be useful,[m
[32m+[m[32m * but WITHOUT ANY WARRANTY; without even the implied warranty of[m
[32m+[m[32m * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU[m
[32m+[m[32m * Lesser General Public License for more details.[m
[32m+[m[32m *[m
[32m+[m[32m * You should have received a copy of the GNU Lesser General Public License[m
[32m+[m[32m * along with this library in the file LICENSE.LGPL; if not, write to the[m
[32m+[m[32m * Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA[m
[32m+[m[32m * 02111-1307 USA[m
[32m+[m[32m *[m
[32m+[m[32m * Alternatively, you may distribute this software under the terms of the[m
[32m+[m[32m * PHP License, version 3.0 or later.  A copy of this license should have[m
[32m+[m[32m * been distributed with this file in the file LICENSE.PHP .  If this is not[m
[32m+[m[32m * the case, you can obtain a copy at http://www.php.net/license/3_0.txt.[m
[32m+[m[32m *[m
[32m+[m[32m * The latest version of DOMPDF might be available at:[m
[32m+[m[32m * http://www.dompdf.com/[m
[32m+[m[32m *[m
[32m+[m[32m * @link http://www.dompdf.com/[m
[32m+[m[32m * @copyright 2004 Benj Carson[m
[32m+[m[32m * @author Benj Carson <benjcarson@digitaljunkies.ca>[m
[32m+[m[32m * @package dompdf[m
[32m+[m[32m */[m
[32m+[m
[32m+[m[32m/* $Id */[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Positions fixely positioned frames[m
[32m+[m[32m */[m
[32m+[m[32mclass Fixed_Positioner extends Positioner {[m
[32m+[m
[32m+[m[32m  function __construct(Frame_Decorator $frame) { parent::__construct($frame); }[m
[32m+[m
[32m+[m[32m  function position() {[m
[32m+[m
[32m+[m[32m    $frame = $this->_frame;[m
[32m+[m[32m    $style = $frame->get_original_style();[m
[32m+[m[32m    $root = $frame->get_root();[m
[32m+[m[32m    $initialcb = $root->get_containing_block();[m
[32m+[m[32m    $initialcb_style = $root->get_style();[m
[32m+[m
[32m+[m[32m    $p = $frame->find_block_parent();[m
[32m+[m[32m    if ( $p ) {[m
[32m+[m[32m      $p->add_line();[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    // Compute the margins of the @page style[m
[32m+[m[32m    $margin_top    = $initialcb_style->length_in_pt($initialcb_style->margin_top,    $initialcb["h"]);[m
[32m+[m[32m    $margin_right  = $initialcb_style->length_in_pt($initialcb_style->margin_right,  $initialcb["w"]);[m
[32m+[m[32m    $margin_bottom = $initialcb_style->length_in_pt($initialcb_style->margin_bottom, $initialcb["h"]);[m
[32m+[m[32m    $margin_left   = $initialcb_style->length_in_pt($initialcb_style->margin_left,   $initialcb["w"]);[m
[32m+[m[41m    [m
[32m+[m[32m    // The needed computed style of the element[m
[32m+[m[32m    $height = $style->length_in_pt($style->height, $initialcb["h"]);[m
[32m+[m[32m    $width  = $style->length_in_pt($style->width,  $initialcb["w"]);[m
[32m+[m[41m    [m
[32m+[m[32m    $top    = $style->length_in_pt($style->top,    $initialcb["h"]);[m
[32m+[m[32m    $right  = $style->length_in_pt($style->right,  $initialcb["w"]);[m
[32m+[m[32m    $bottom = $style->length_in_pt($style->bottom, $initialcb["h"]);[m
[32m+[m[32m    $left   = $style->length_in_pt($style->left,   $initialcb["w"]);[m
[32m+[m
[32m+[m[32m    $y = $margin_top;[m
[32m+[m[32m    if ( isset($top) ) {[m
[32m+[m[32m      $y = $top + $margin_top;[m
[32m+[m[32m      if ( $top === "auto" ) {[m
[32m+[m[32m        $y = $margin_top;[m
[32m+[m[32m        if ( isset($bottom) && $bottom !== "auto" ) {[m
[32m+[m[32m          $y = $initialcb["h"] - $bottom - $margin_bottom;[m
[32m+[m[32m          $margin_height = $this->_frame->get_margin_height();[m
[32m+[m[32m          if ( $margin_height !== "auto" ) {[m
[32m+[m[32m            $y -= $margin_height;[m
[32m+[m[32m          } else {[m
[32m+[m[32m            $y -= $height;[m
[32m+[m[32m          }[m
[32m+[m[32m        }[m
[32m+[m[32m      }[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    $x = $margin_left;[m
[32m+[m[32m    if ( isset($left) ) {[m
[32m+[m[32m      $x = $left + $margin_left;[m
[32m+[m[32m      if ( $left === "auto" ) {[m
[32m+[m[32m        $x = $margin_left;[m
[32m+[m[32m        if ( isset($right) && $right !== "auto" ) {[m
[32m+[m[32m          $x = $initialcb["w"] - $right - $margin_right;[m
[32m+[m[32m          $margin_width = $this->_frame->get_margin_width();[m
[32m+[m[32m          if ( $margin_width !== "auto" ) {[m
[32m+[m[32m            $x -= $margin_width;[m
[32m+[m[32m          } else {[m
[32m+[m[32m            $x -= $width;[m
[32m+[m[32m          }[m
[32m+[m[32m        }[m
[32m+[m[32m      }[m
[32m+[m[32m    }[m
[32m+[m[41m    [m
[32m+[m[32m    $frame->set_position($x, $y);[m
[32m+[m
[32m+[m[32m    $children = $frame->get_children();[m
[32m+[m[32m    foreach($children as $child) {[m
[32m+[m[32m      $child->set_position($x, $y);[m
[32m+[m[32m    }[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
\ No newline at end of file[m
[1mdiff --git a/application/third_party/dompdf/include/font_metrics.cls.php b/application/third_party/dompdf/include/font_metrics.cls.php[m
[1mnew file mode 100644[m
[1mindex 0000000..ee91ebe[m
[1m--- /dev/null[m
[1m+++ b/application/third_party/dompdf/include/font_metrics.cls.php[m
[36m@@ -0,0 +1,299 @@[m
[32m+[m[32m<?php[m
[32m+[m[32m/**[m
[32m+[m[32m * DOMPDF - PHP5 HTML to PDF renderer[m
[32m+[m[32m *[m
[32m+[m[32m * File: $RCSfile: font_metrics.cls.php,v $[m
[32m+[m[32m * Created on: 2004-06-02[m
[32m+[m[32m *[m
[32m+[m[32m * Copyright (c) 2004 - Benj Carson <benjcarson@digitaljunkies.ca>[m
[32m+[m[32m *[m
[32m+[m[32m * This library is free software; you can redistribute it and/or[m
[32m+[m[32m * modify it under the terms of the GNU Lesser General Public[m
[32m+[m[32m * License as published by the Free Software Foundation; either[m
[32m+[m[32m * version 2.1 of the License, or (at your option) any later version.[m
[32m+[m[32m *[m
[32m+[m[32m * This library is distributed in the hope that it will be useful,[m
[32m+[m[32m * but WITHOUT ANY WARRANTY; without even the implied warranty of[m
[32m+[m[32m * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU[m
[32m+[m[32m * Lesser General Public License for more details.[m
[32m+[m[32m *[m
[32m+[m[32m * You should have received a copy of the GNU Lesser General Public License[m
[32m+[m[32m * along with this library in the file LICENSE.LGPL; if not, write to the[m
[32m+[m[32m * Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA[m
[32m+[m[32m * 02111-1307 USA[m
[32m+[m[32m *[m
[32m+[m[32m * Alternatively, you may distribute this software under the terms of the[m
[32m+[m[32m * PHP License, version 3.0 or later.  A copy of this license should have[m
[32m+[m[32m * been distributed with this file in the file LICENSE.PHP .  If this is not[m
[32m+[m[32m * the case, you can obtain a copy at http://www.php.net/license/3_0.txt.[m
[32m+[m[32m *[m
[32m+[m[32m * The latest version of DOMPDF might be available at:[m
[32m+[m[32m * http://www.dompdf.com/[m
[32m+[m[32m *[m
[32m+[m[32m * @link http://www.dompdf.com/[m
[32m+[m[32m * @copyright 2004 Benj Carson[m
[32m+[m[32m * @author Benj Carson <benjcarson@digitaljunkies.ca>[m
[32m+[m[32m * @contributor Helmut Tischer <htischer@weihenstephan.org>[m
[32m+[m[32m * @package dompdf[m
[32m+[m[32m *[m
[32m+[m[32m * Changes[m
[32m+[m[32m * @contributor Helmut Tischer <htischer@weihenstephan.org>[m
[32m+[m[32m * @version 0.5.1.htischer.20090507[m
[32m+[m[32m * - On missing font on explicite font selection don't change subtype and don't return default font.[m
[32m+[m[32m * - On requesting default font and missing subtype, check similar subtypes, then any subtype, then normal. The last must exist.[m
[32m+[m[32m * - Add comments[m
[32m+[m[32m */[m
[32m+[m
[32m+[m[32m/* $Id: font_metrics.cls.php 355 2011-01-27 07:44:54Z fabien.menager $ */[m
[32m+[m
[32m+[m[32mrequire_once(DOMPDF_LIB_DIR . "/class.pdf.php");[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Name of the font cache file[m
[32m+[m[32m *[m
[32m+[m[32m * This file must be writable by the webserver process only to update it[m
[32m+[m[32m * with save_font_families() after adding the .afm file references of a new font family[m
[32m+[m[32m * with Font_Metrics::save_font_families().[m
[32m+[m[32m * This is typically done only from command line with load_font.php on converting[m
[32m+[m[32m * ttf fonts to afm with an external tool referenced in the define _TTF2AFM[m
[32m+[m[32m *[m
[32m+[m[32m * Declared here because PHP5 prevents constants from being declared with expressions[m
[32m+[m[32m */[m
[32m+[m[32mif (!defined("__DOMPDF_FONT_CACHE_FILE")) {[m
[32m+[m[32m  if (file_exists(DOMPDF_FONT_DIR . "dompdf_font_family_cache")) {[m
[32m+[m[41m  [m	[32mdefine('__DOMPDF_FONT_CACHE_FILE', DOMPDF_FONT_DIR . "dompdf_font_family_cache");[m
[32m+[m[32m  } else {[m
[32m+[m[41m  [m	[32mdefine('__DOMPDF_FONT_CACHE_FILE', DOMPDF_FONT_DIR . "dompdf_font_family_cache.dist.php");[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * The font metrics class[m
[32m+[m[32m *[m
[32m+[m[32m * This class provides information about fonts and text.  It can resolve[m
[32m+[m[32m * font names into actual installed font files, as well as determine the[m
[32m+[m[32m * size of text in a particular font and size.[m
[32m+[m[32m *[m
[32m+[m[32m * @static[m
[32m+[m[32m * @package dompdf[m
[32m+[m[32m */[m
[32m+[m[32mclass Font_Metrics {[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * @see __DOMPDF_FONT_CACHE_FILE[m
[32m+[m[32m   */[m
[32m+[m[32m  const CACHE_FILE = __DOMPDF_FONT_CACHE_FILE;[m
[32m+[m[41m  [m
[32m+[m[32m  /**[m
[32m+[m[32m   * Underlying {@link Canvas} object to perform text size calculations[m
[32m+[m[32m   *[m
[32m+[m[32m   * @var Canvas[m
[32m+[m[32m   */[m
[32m+[m[32m  static protected $_pdf = null;[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Array of font family names to font files[m
[32m+[m[32m   *[m
[32m+[m[32m   * Usually cached by the {@link load_font.php} script[m
[32m+[m[32m   *[m
[32m+[m[32m   * @var array[m
[32m+[m[32m   */[m
[32m+[m[32m  static protected $_font_lookup = array();[m
[32m+[m[41m  [m
[32m+[m[41m  [m
[32m+[m[32m  /**[m
[32m+[m[32m   * Class initialization[m
[32m+[m[32m   *[m
[32m+[m[32m   */[m
[32m+[m[32m  static function init() {[m
[32m+[m[32m    if (!self::$_pdf) {[m
[32m+[m[32m      self::load_font_families();[m
[32m+[m[32m      self::$_pdf = Canvas_Factory::get_instance();[m
[32m+[m[32m    }[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Calculates text size, in points[m
[32m+[m[32m   *[m
[32m+[m[32m   * @param string $text the text to be sized[m
[32m+[m[32m   * @param string $font the desired font[m
[32m+[m[32m   * @param float  $size the desired font size[m
[32m+[m[32m   * @param float  $spacing word spacing, if any[m
[32m+[m[32m   * @return float[m
[32m+[m[32m   */[m
[32m+[m[32m  static function get_text_width($text, $font, $size, $word_spacing = 0, $char_spacing = 0) {[m
[32m+[m[32m    return self::$_pdf->get_text_width($text, $font, $size, $word_spacing, $char_spacing);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Calculates font height[m
[32m+[m[32m   *[m
[32m+[m[32m   * @param string $font[m
[32m+[m[32m   * @param float $size[m
[32m+[m[32m   * @return float[m
[32m+[m[32m   */[m
[32m+[m[32m  static function get_font_height($font, $size) {[m
[32m+[m[32m    return self::$_pdf->get_font_height($font, $size);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Resolves a font family & subtype into an actual font file[m
[32m+[m[32m   *[m
[32m+[m[32m   * Subtype can be one of 'normal', 'bold', 'italic' or 'bold_italic'.  If[m
[32m+[m[32m   * the particular font family has no suitable font file, the default font[m
[32m+[m[32m   * ({@link DOMPDF_DEFAULT_FONT}) is used.  The font file returned[m
[32m+[m[32m   * is the absolute pathname to the font file on the system.[m
[32m+[m[32m   *[m
[32m+[m[32m   * @param string $family[m
[32m+[m[32m   * @param string $subtype[m
[32m+[m[32m   * @return string[m
[32m+[m[32m   */[m
[32m+[m[32m  static function get_font($family, $subtype = "normal") {[m
[32m+[m
[32m+[m[32m    /* Allow calling for various fonts in search path. Therefore not immediately[m
[32m+[m[32m     * return replacement on non match.[m
[32m+[m[32m     * Only when called with NULL try replacement.[m
[32m+[m[32m     * When this is also missing there is really trouble.[m
[32m+[m[32m     * If only the subtype fails, nevertheless return failure.[m
[32m+[m[32m     * Only on checking the fallback font, check various subtypes on same font.[m
[32m+[m[32m     */[m
[32m+[m
[32m+[m[32m    if ( $family ) {[m
[32m+[m[32m      $family = str_replace( array("'", '"'), "", mb_strtolower($family));[m
[32m+[m[32m      $subtype = mb_strtolower($subtype);[m
[32m+[m
[32m+[m[32m      if ( isset(self::$_font_lookup[$family][$subtype]) ) {[m
[32m+[m[32m        return self::$_font_lookup[$family][$subtype];[m
[32m+[m[32m      }[m
[32m+[m[32m      return null;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    $family = DOMPDF_DEFAULT_FONT;[m
[32m+[m
[32m+[m[32m    if ( isset(self::$_font_lookup[$family][$subtype]) ) {[m
[32m+[m[32m      return self::$_font_lookup[$family][$subtype];[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    foreach ( self::$_font_lookup[$family] as $sub => $font ) {[m
[32m+[m[32m      if (strpos($subtype, $sub) !== false) {[m
[32m+[m[32m        return $font;[m
[32m+[m[32m      }[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    if ($subtype !== "normal") {[m
[32m+[m[32m      foreach ( self::$_font_lookup[$family] as $sub => $font ) {[m
[32m+[m[32m        if ($sub !== "normal") {[m
[32m+[m[32m          return $font;[m
[32m+[m[32m        }[m
[32m+[m[32m      }[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    $subtype = "normal";[m
[32m+[m
[32m+[m[32m    if ( isset(self::$_font_lookup[$family][$subtype]) ) {[m
[32m+[m[32m      return self::$_font_lookup[$family][$subtype];[m
[32m+[m[32m    }[m
[32m+[m[32m    return null;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Saves the stored font family cache[m
[32m+[m[32m   *[m
[32m+[m[32m   * The name and location of the cache file are determined by {@link[m
[32m+[m[32m   * Font_Metrics::CACHE_FILE}.  This file should be writable by the[m
[32m+[m[32m   * webserver process.[m
[32m+[m[32m   *[m
[32m+[m[32m   * @see Font_Metrics::load_font_families()[m
[32m+[m[32m   */[m
[32m+[m[32m  static function save_font_families() {[m
[32m+[m[32m    // replace the path to the DOMPDF font directory with "DOMPDF_FONT_DIR" (allows for more portability)[m
[32m+[m[32m    $cache_data = var_export(self::$_font_lookup, true);[m
[32m+[m[32m    $cache_data = str_replace('\''.DOMPDF_FONT_DIR , 'DOMPDF_FONT_DIR . \'' , $cache_data);[m
[32m+[m[32m    $cache_data = "<"."?php return $cache_data ?".">";[m
[32m+[m[32m    file_put_contents(self::CACHE_FILE, $cache_data);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Loads the stored font family cache[m
[32m+[m[32m   *[m
[32m+[m[32m   * @see save_font_families()[m
[32m+[m[32m   */[m
[32m+[m[32m  static function load_font_families() {[m
[32m+[m[32m    if ( !is_readable(self::CACHE_FILE) )[m
[32m+[m[32m      return;[m
[32m+[m
[32m+[m[32m    self::$_font_lookup = require_once(self::CACHE_FILE);[m
[32m+[m[41m    [m
[32m+[m[32m    // If the font family cache is still in the old format[m
[32m+[m[32m    if ( self::$_font_lookup === 1 ) {[m
[32m+[m[32m      $cache_data = file_get_contents(self::CACHE_FILE);[m
[32m+[m[32m      file_put_contents(self::CACHE_FILE, "<"."?php return $cache_data ?".">");[m
[32m+[m[32m      self::$_font_lookup = require_once(self::CACHE_FILE);[m
[32m+[m[32m    }[m
[32m+[m[32m  }[m
[32m+[m[41m  [m
[32m+[m[32m  static function get_system_fonts() {[m
[32m+[m[32m    $files = glob("/usr/share/fonts/truetype/*.ttf") +[m
[32m+[m[32m             glob("/usr/share/fonts/truetype/*/*.ttf") +[m
[32m+[m[32m             glob("/usr/share/fonts/truetype/*/*/*.ttf") +[m
[32m+[m[32m             glob("C:\\Windows\\fonts\\*.ttf") +[m[41m [m
[32m+[m[32m             glob("C:\\WinNT\\fonts\\*.ttf") +[m[41m [m
[32m+[m[32m             glob("/mnt/c_drive/WINDOWS/Fonts/");[m
[32m+[m[41m    [m
[32m+[m[32m    new TTF_Info;[m
[32m+[m[41m    [m
[32m+[m[32m    $names = array();[m
[32m+[m[41m    [m
[32m+[m[32m    foreach($files as $file) {[m
[32m+[m[32m      $info = getFontInfo($file);[m
[32m+[m[32m      $info["path"] = $file;[m
[32m+[m[32m      $type = $info[2];[m
[32m+[m[41m      [m
[32m+[m[32m      if (preg_match("/regular|normal|medium|book/i", $type)) {[m
[32m+[m[32m        $type = "normal";[m
[32m+[m[32m      }[m
[32m+[m[32m      elseif (preg_match("/bold/i", $type)) {[m
[32m+[m[32m        if (preg_match("/italic|oblique/i", $type)) {[m
[32m+[m[32m          $type = "bold_italic";[m
[32m+[m[32m        }[m
[32m+[m[32m        else {[m
[32m+[m[32m          $type = "bold";[m
[32m+[m[32m        }[m
[32m+[m[32m      }[m
[32m+[m[32m      elseif (preg_match("/italic|oblique/i", $type)) {[m
[32m+[m[32m        $type = "italic";[m
[32m+[m[32m      }[m
[32m+[m[41m      [m
[32m+[m[32m      $names[mb_strtolower($info[1])][$type] = $file;[m
[32m+[m[32m    }[m
[32m+[m[41m    [m
[32m+[m[32m    $keys = array_keys($names);[m
[32m+[m[41m    [m
[32m+[m[32m    /*$matches = array_intersect(array("times", "times new roman"), $keys);[m
[32m+[m[32m    $names["serif"] = $names[reset($matches)];[m
[32m+[m[41m          [m
[32m+[m[32m    $matches = array_intersect(array("helvetica", "arial", "verdana"), $keys);[m
[32m+[m[32m    $names["sans-serif"] = $names[reset($matches)];[m[41m   [m
[32m+[m[41m    [m
[32m+[m[32m    $matches = array_intersect(array("courier", "courier new"), $keys);[m
[32m+[m[32m    $names["monospace"] = $names[reset($matches)];[m
[32m+[m[32m    $names["fixed"] = $names[reset($matches)];*/[m
[32m+[m[41m    [m
[32m+[m[32m    return $names;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Returns the current font lookup table[m
[32m+[m[32m   *[m
[32m+[m[32m   * @return array[m
[32m+[m[32m   */[m
[32m+[m[32m  static function get_font_families() {[m
[32m+[m[32m    return self::$_font_lookup;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  static function set_font_family($fontname, $entry) {[m
[32m+[m[32m    self::$_font_lookup[mb_strtolower($fontname)] = $entry;[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mFont_Metrics::init();[m
[1mdiff --git a/application/third_party/dompdf/include/frame.cls.php b/application/third_party/dompdf/include/frame.cls.php[m
[1mnew file mode 100644[m
[1mindex 0000000..3f16ad5[m
[1m--- /dev/null[m
[1m+++ b/application/third_party/dompdf/include/frame.cls.php[m
[36m@@ -0,0 +1,990 @@[m
[32m+[m[32m<?php[m
[32m+[m[32m/**[m
[32m+[m[32m * DOMPDF - PHP5 HTML to PDF renderer[m
[32m+[m[32m *[m
[32m+[m[32m * File: $RCSfile: frame.cls.php,v $[m
[32m+[m[32m * Created on: 2004-06-02[m
[32m+[m[32m *[m
[32m+[m[32m * Copyright (c) 2004 - Benj Carson <benjcarson@digitaljunkies.ca>[m
[32m+[m[32m *[m
[32m+[m[32m * This library is free software; you can redistribute it and/or[m
[32m+[m[32m * modify it under the terms of the GNU Lesser General Public[m
[32m+[m[32m * License as published by the Free Software Foundation; either[m
[32m+[m[32m * version 2.1 of the License, or (at your option) any later version.[m
[32m+[m[32m *[m
[32m+[m[32m * This library is distributed in the hope that it will be useful,[m
[32m+[m[32m * but WITHOUT ANY WARRANTY; without even the implied warranty of[m
[32m+[m[32m * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU[m
[32m+[m[32m * Lesser General Public License for more details.[m
[32m+[m[32m *[m
[32m+[m[32m * You should have received a copy of the GNU Lesser General Public License[m
[32m+[m[32m * along with this library in the file LICENSE.LGPL; if not, write to the[m
[32m+[m[32m * Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA[m
[32m+[m[32m * 02111-1307 USA[m
[32m+[m[32m *[m
[32m+[m[32m * Alternatively, you may distribute this software under the terms of the[m
[32m+[m[32m * PHP License, version 3.0 or later.  A copy of this license should have[m
[32m+[m[32m * been distributed with this file in the file LICENSE.PHP .  If this is not[m
[32m+[m[32m * the case, you can obtain a copy at http://www.php.net/license/3_0.txt.[m
[32m+[m[32m *[m
[32m+[m[32m * The latest version of DOMPDF might be available at:[m
[32m+[m[32m * http://www.dompdf.com/[m
[32m+[m[32m *[m
[32m+[m[32m * @link http://www.dompdf.com/[m
[32m+[m[32m * @copyright 2004 Benj Carson[m
[32m+[m[32m * @author Benj Carson <benjcarson@digitaljunkies.ca>[m
[32m+[m[32m * @package dompdf[m
[32m+[m
[32m+[m[32m */[m
[32m+[m
[32m+[m[32m/* $Id: frame.cls.php 359 2011-02-05 12:15:06Z fabien.menager $ */[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * The main Frame class[m
[32m+[m[32m *[m
[32m+[m[32m * This class represents a single HTML element.  This class stores[m
[32m+[m[32m * positioning information as well as containing block location and[m
[32m+[m[32m * dimensions. Style information for the element is stored in a {@link[m
[32m+[m[32m * Style} object.  Tree structure is maintained via the parent & children[m
[32m+[m[32m * links.[m
[32m+[m[32m *[m
[32m+[m[32m * @access protected[m
[32m+[m[32m * @package dompdf[m
[32m+[m[32m */[m
[32m+[m[32mclass Frame {[m
[32m+[m[41m  [m
[32m+[m[32m  /**[m
[32m+[m[32m   * The DOMNode object this frame represents[m
[32m+[m[32m   *[m
[32m+[m[32m   * @var DOMNode[m
[32m+[m[32m   */[m
[32m+[m[32m  protected $_node;[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Unique identifier for this frame.  Used to reference this frame[m
[32m+[m[32m   * via the node.[m
[32m+[m[32m   *[m
[32m+[m[32m   * @var string[m
[32m+[m[32m   */[m
[32m+[m[32m  protected $_id;[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Unique id counter[m
[32m+[m[32m   */[m
[32m+[m[32m  static protected $ID_COUNTER = 0;[m
[32m+[m[41m  [m
[32m+[m[32m  /**[m
[32m+[m[32m   * This frame's calculated style[m
[32m+[m[32m   *[m
[32m+[m[32m   * @var Style[m
[32m+[m[32m   */[m
[32m+[m[32m  protected $_style;[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * This frame's original style.  Needed for cases where frames are[m
[32m+[m[32m   * split across pages.[m
[32m+[m[32m   *[m
[32m+[m[32m   * @var Style[m
[32m+[m[32m   */[m
[32m+[m[32m  protected $_original_style;[m
[32m+[m[41m  [m
[32m+[m[32m  /**[m
[32m+[m[32m   * This frame's parent in the document tree.[m
[32m+[m[32m   *[m
[32m+[m[32m   * @var Frame[m
[32m+[m[32m   */[m
[32m+[m[32m  protected $_parent;[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * This frame's first child.  All children are handled as a[m
[32m+[m[32m   * doubly-linked list.[m
[32m+[m[32m   *[m
[32m+[m[32m   * @var Frame[m
[32m+[m[32m   */[m
[32m+[m[32m  protected $_first_child;[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * This frame's last child.[m
[32m+[m[32m   *[m
[32m+[m[32m   * @var Frame[m
[32m+[m[32m   */[m
[32m+[m[32m  protected $_last_child;[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * This frame's previous sibling in the document tree.[m
[32m+[m[32m   *[m
[32m+[m[32m   * @var Frame[m
[32m+[m[32m   */[m
[32m+[m[32m  protected $_prev_sibling;[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * This frame's next sibling in the document tree.[m
[32m+[m[32m   *[m
[32m+[m[32m   * @var Frame[m
[32m+[m[32m   */[m
[32m+[m[32m  protected $_next_sibling;[m
[32m+[m[41m  [m
[32m+[m[32m  /**[m
[32m+[m[32m   * This frame's containing block (used in layout): array(x, y, w, h)[m
[32m+[m[32m   *[m
[32m+[m[32m   * @var array[m
[32m+[m[32m   */[m
[32m+[m[32m  protected $_containing_block;[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Position on the page of the top-left corner of the margin box of[m
[32m+[m[32m   * this frame: array(x,y)[m
[32m+[m[32m   *[m
[32m+[m[32m   * @var array[m
[32m+[m[32m   */[m
[32m+[m[32m  protected $_position;[m
[32m+[m[41m  [m
[32m+[m[32m  /**[m
[32m+[m[32m   * Absolute opacity of this frame[m
[32m+[m[32m   *[m
[32m+[m[32m   * @var float[m
[32m+[m[32m   */[m
[32m+[m[32m  protected $_opacity;[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * This frame's decorator[m
[32m+[m[32m   *[m
[32m+[m[32m   * @var Frame_Decorator[m
[32m+[m[32m   */[m
[32m+[m[32m  protected $_decorator;[m
[32m+[m[41m  [m
[32m+[m[32m  protected $_containing_line;[m
[32m+[m[41m  [m
[32m+[m[32m  /**[m
[32m+[m[32m   * Tells wether the frame was already pushed to the next page[m
[32m+[m[32m   * @var bool[m
[32m+[m[32m   */[m
[32m+[m[32m  public $_already_pushed = false;[m
[32m+[m[41m  [m
[32m+[m[32m  /**[m
[32m+[m[32m   * Class destructor[m
[32m+[m[32m   */[m
[32m+[m[32m  function __destruct() {[m
[32m+[m[32m    clear_object($this);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Class constructor[m
[32m+[m[32m   *[m
[32m+[m[32m   * @param DOMNode $node the DOMNode this frame represents[m
[32m+[m[32m   */[m
[32m+[m[32m  function __construct(DomNode $node) {[m
[32m+[m[32m    $this->_node = $node;[m
[32m+[m[41m      [m
[32m+[m[32m    $this->_parent = null;[m
[32m+[m[32m    $this->_first_child = null;[m
[32m+[m[32m    $this->_last_child = null;[m
[32m+[m[32m    $this->_prev_sibling = $this->_next_sibling = null;[m
[32m+[m[41m    [m
[32m+[m[32m    $this->_style = null;[m
[32m+[m[32m    $this->_original_style = null;[m
[32m+[m[41m    [m
[32m+[m[32m    $this->_containing_block = array([m
[32m+[m[32m      "x" => null,[m
[32m+[m[32m      "y" => null,[m
[32m+[m[32m      "w" => null,[m
[32m+[m[32m      "h" => null,[m
[32m+[m[32m    );[m
[32m+[m[41m    [m
[32m+[m[32m    $this->_containing_block[0] =& $this->_containing_block["x"];[m
[32m+[m[32m    $this->_containing_block[1] =& $this->_containing_block["y"];[m
[32m+[m[32m    $this->_containing_block[2] =& $this->_containing_block["w"];[m
[32m+[m[32m    $this->_containing_block[3] =& $this->_containing_block["h"];[m
[32m+[m[41m    [m
[32m+[m[32m    $this->_position = array([m
[32m+[m[32m      "x" => null,[m
[32m+[m[32m      "y" => null,[m
[32m+[m[32m    );[m
[32m+[m[41m    [m
[32m+[m[32m    $this->_position[0] =& $this->_position["x"];[m
[32m+[m[32m    $this->_position[1] =& $this->_position["y"];[m
[32m+[m
[32m+[m[32m    $this->_opacity = 1.0;[m
[32m+[m[32m    $this->_decorator = null;[m
[32m+[m
[32m+[m[32m    $this->set_id( self::$ID_COUNTER++ );[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * "Destructor": forcibly free all references held by this frame[m
[32m+[m[32m   *[m
[32m+[m[32m   * @param bool $recursive if true, call dispose on all children[m
[32m+[m[32m   */[m
[32m+[m[32m  function dispose($recursive = false) {[m
[32m+[m
[32m+[m[32m    if ( $recursive ) {[m
[32m+[m[32m      while ( $child = $this->_first_child )[m
[32m+[m[32m        $child->dispose(true);[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    // Remove this frame from the tree[m
[32m+[m[32m    if ( $this->_prev_sibling ) {[m
[32m+[m[32m      $this->_prev_sibling->_next_sibling = $this->_next_sibling;[m[41m      [m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    if ( $this->_next_sibling ) {[m
[32m+[m[32m      $this->_next_sibling->_prev_sibling = $this->_prev_sibling;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    if ( $this->_parent && $this->_parent->_first_child === $this ) {[m
[32m+[m[32m      $this->_parent->_first_child = $this->_next_sibling;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    if ( $this->_parent && $this->_parent->_last_child === $this ) {[m
[32m+[m[32m      $this->_parent->_last_child = $this->_prev_sibling;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    if ( $this->_parent ) {[m
[32m+[m[32m      $this->_parent->get_node()->removeChild($this->_node);[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    $this->_style->dispose();[m
[32m+[m[32m    $this->_style = null;[m
[32m+[m[32m    unset($this->_style);[m
[32m+[m[41m    [m
[32m+[m[32m    $this->_original_style->dispose();[m
[32m+[m[32m    $this->_original_style = null;[m
[32m+[m[32m    unset($this->_original_style);[m
[32m+[m[41m    [m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  // Re-initialize the frame[m
[32m+[m[32m  function reset() {[m
[32m+[m[32m    $this->_position["x"] = null;[m
[32m+[m[32m    $this->_position["y"] = null;[m
[32m+[m[41m    [m
[32m+[m[32m    $this->_containing_block["x"] = null;[m
[32m+[m[32m    $this->_containing_block["y"] = null;[m
[32m+[m[32m    $this->_containing_block["w"] = null;[m
[32m+[m[32m    $this->_containing_block["h"] = null;[m
[32m+[m
[32m+[m[32m    $this->_style = null;[m
[32m+[m[32m    unset($this->_style);[m
[32m+[m[32m    $this->_style = clone $this->_original_style;[m
[32m+[m[32m  }[m
[32m+[m[41m  [m
[32m+[m[32m  //........................................................................[m
[32m+[m
[32m+[m[32m  // Accessor methods[m
[32m+[m[32m  /**[m
[32m+[m[32m   * @return DOMNode[m
[32m+[m[32m   */[m
[32m+[m[32m  function get_node() { return $this->_node; }[m
[32m+[m[41m  [m
[32m+[m[32m  /**[m
[32m+[m[32m   * @return string[m
[32m+[m[32m   */[m
[32m+[m[32m  function get_id() { return $this->_id; }[m
[32m+[m[41m  [m
[32m+[m[32m  /**[m
[32m+[m[32m   * @return Style[m
[32m+[m[32m   */[m
[32m+[m[32m  function get_style() { return $this->_style; }[m
[32m+[m[41m  [m
[32m+[m[32m  /**[m
[32m+[m[32m   * @return Style[m
[32m+[m[32m   */[m
[32m+[m[32m  function get_original_style() { return $this->_original_style; }[m
[32m+[m[41m  [m
[32m+[m[32m  /**[m
[32m+[m[32m   * @return Frame[m
[32m+[m[32m   */[m
[32m+[m[32m  function get_parent() { return $this->_parent; }[m
[32m+[m[41m  [m
[32m+[m[32m  /**[m
[32m+[m[32m   * @return Frame_Decorator[m
[32m+[m[32m   */[m
[32m+[m[32m  function get_decorator() { return $this->_decorator; }[m
[32m+[m[41m  [m
[32m+[m[32m  /**[m
[32m+[m[32m   * @return Frame[m
[32m+[m[32m   */[m
[32m+[m[32m  function get_first_child() { return $this->_first_child; }[m
[32m+[m[41m  [m
[32m+[m[32m  /**[m
[32m+[m[32m   * @return Frame[m
[32m+[m[32m   */[m
[32m+[m[32m  function get_last_child() { return $this->_last_child; }[m
[32m+[m[41m  [m
[32m+[m[32m  /**[m
[32m+[m[32m   * @return Frame[m
[32m+[m[32m   */[m
[32m+[m[32m  function get_prev_sibling() { return $this->_prev_sibling; }[m
[32m+[m[41m  [m
[32m+[m[32m  /**[m
[32m+[m[32m   * @return Frame[m
[32m+[m[32m   */[m
[32m+[m[32m  function get_next_sibling() { return $this->_next_sibling; }[m
[32m+[m[41m  [m
[32m+[m[32m  /**[m
[32m+[m[32m   * @return FrameList[m
[32m+[m[32m   */[m
[32m+[m[32m  function get_children() { return new FrameList($this); }[m
[32m+[m[41m  [m
[32m+[m[32m  // Layout property accessors[m
[32m+[m[41m  [m
[32m+[m[32m  /**[m[41m [m
[32m+[m[32m   * Containing block dimensions[m
[32m+[m[32m   *[m[41m [m
[32m+[m[32m   * @param $i string The key of the wanted containing block's dimension (x, y, x, h)[m
[32m+[m[32m   * @return array|float[m
[32m+[m[32m   */[m
[32m+[m[32m  function get_containing_block($i = null) {[m
[32m+[m[32m    if ( isset($i) )[m
[32m+[m[32m      return $this->_containing_block[$i];[m[41m    [m
[32m+[m[32m    return $this->_containing_block;[m
[32m+[m[32m  }[m
[32m+[m[41m  [m
[32m+[m[32m  /**[m
[32m+[m[32m   * Block position[m
[32m+[m[32m   *[m[41m [m
[32m+[m[32m   * @param $i string The key of the wanted position value (x, y)[m
[32m+[m[32m   * @return array|float[m
[32m+[m[32m   */[m
[32m+[m[32m  function get_position($i = null) {[m
[32m+[m[32m    if ( isset($i) ) {[m
[32m+[m[32m      return $this->_position[$i];[m
[32m+[m[32m    }[m
[32m+[m[32m    return $this->_position;[m
[32m+[m[32m  }[m
[32m+[m[41m    [m
[32m+[m[32m  //........................................................................[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Return the height of the margin box of the frame, in pt.  Meaningless[m
[32m+[m[32m   * unless the height has been calculated properly.[m
[32m+[m[32m   *[m[41m [m
[32m+[m[32m   * @return float[m
[32m+[m[32m   */[m
[32m+[m[32m  function get_margin_height() {[m
[32m+[m[32m    $style = $this->_style;[m
[32m+[m[41m    [m
[32m+[m[32m    return $style->length_in_pt(array([m
[32m+[m[32m      $style->height,[m
[32m+[m[32m      $style->margin_top,[m
[32m+[m[32m      $style->margin_bottom,[m
[32m+[m[32m      $style->border_top_width,[m
[32m+[m[32m      $style->border_bottom_width,[m
[32m+[m[32m      $style->padding_top,[m
[32m+[m[32m      $style->padding_bottom[m
[32m+[m[32m    ), $this->_containing_block["h"]);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Return the width of the margin box of the frame, in pt.  Meaningless[m
[32m+[m[32m   * unless the width has been calculated properly.[m
[32m+[m[32m   *[m[41m [m
[32m+[m[32m   * @return float[m
[32m+[m[32m   */[m[41m [m
[32m+[m[32m  function get_margin_width() {[m
[32m+[m[32m    $style = $this->_style;[m
[32m+[m[41m    [m
[32m+[m[32m    return $style->length_in_pt(array([m
[32m+[m[32m      $style->width,[m
[32m+[m[32m      $style->margin_left,[m
[32m+[m[32m      $style->margin_right,[m
[32m+[m[32m      $style->border_left_width,[m
[32m+[m[32m      $style->border_right_width,[m
[32m+[m[32m      $style->padding_left,[m
[32m+[m[32m      $style->padding_right[m
[32m+[m[32m    ), $this->_containing_block["w"]);[m
[32m+[m[32m  }[m
[32m+[m[41m  [m
[32m+[m[32m  function get_break_margins(){[m
[32m+[m[32m    $style = $this->_style;[m
[32m+[m[41m    [m
[32m+[m[32m    return $style->length_in_pt(array([m
[32m+[m[32m      //$style->height,[m
[32m+[m[32m      $style->margin_top,[m
[32m+[m[32m      $style->margin_bottom,[m
[32m+[m[32m      $style->border_top_width,[m
[32m+[m[32m      $style->border_bottom_width,[m
[32m+[m[32m      $style->padding_top,[m
[32m+[m[32m      $style->padding_bottom[m
[32m+[m[32m    ), $this->_containing_block["h"]);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Return the padding box (x,y,w,h) of the frame[m
[32m+[m[32m   *[m[41m [m
[32m+[m[32m   * @return array[m
[32m+[m[32m   */[m
[32m+[m[32m  function get_padding_box() {[m
[32m+[m[32m    $style = $this->_style;[m
[32m+[m[32m    $cb = $this->_containing_block;[m
[32m+[m[41m    [m
[32m+[m[32m    $x = $this->_position["x"] +[m
[32m+[m[32m      $style->length_in_pt(array($style->margin_left,[m
[32m+[m[32m                                 $style->border_left_width),[m
[32m+[m[32m                           $cb["w"]);[m
[32m+[m[41m                           [m
[32m+[m[32m    $y = $this->_position["y"] +[m
[32m+[m[32m      $style->length_in_pt(array($style->margin_top,[m
[32m+[m[32m                                 $style->border_top_width),[m
[32m+[m[32m                           $cb["h"]);[m
[32m+[m[41m    [m
[32m+[m[32m    $w = $style->length_in_pt(array($style->padding_left,[m
[32m+[m[32m                                    $style->width,[m
[32m+[m[32m                                    $style->padding_right),[m
[32m+[m[32m                              $cb["w"]);[m
[32m+[m
[32m+[m[32m    $h = $style->length_in_pt(array($style->padding_top,[m
[32m+[m[32m                                    $style->height,[m
[32m+[m[32m                                    $style->padding_bottom),[m
[32m+[m[32m                             $cb["h"]);[m
[32m+[m
[32m+[m[32m    return array(0 => $x, "x" => $x,[m
[32m+[m[32m                 1 => $y, "y" => $y,[m
[32m+[m[32m                 2 => $w, "w" => $w,[m
[32m+[m[32m                 3 => $h, "h" => $h);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m[41m [m
[32m+[m[32m   * Return the border box of the frame[m
[32m+[m[32m   *[m[41m [m
[32m+[m[32m   * @return array[m
[32m+[m[32m   */[m
[32m+[m[32m  function get_border_box() {[m
[32m+[m[32m    $style = $this->_style;[m
[32m+[m[32m    $cb = $this->_containing_block;[m
[32m+[m[41m    [m
[32m+[m[32m    $x = $this->_position["x"] + $style->length_in_pt($style->margin_left, $cb["w"]);[m
[32m+[m[41m                          [m
[32m+[m[32m    $y = $this->_position["y"] + $style->length_in_pt($style->margin_top,  $cb["h"]);[m
[32m+[m
[32m+[m[32m    $w = $style->length_in_pt(array($style->border_left_width,[m
[32m+[m[32m                                    $style->padding_left,[m
[32m+[m[32m                                    $style->width,[m
[32m+[m[32m                                    $style->padding_right,[m
[32m+[m[32m                                    $style->border_right_width),[m
[32m+[m[32m                              $cb["w"]);[m
[32m+[m
[32m+[m[32m    $h = $style->length_in_pt(array($style->border_top_width,[m
[32m+[m[32m                                    $style->padding_top,[m
[32m+[m[32m                                    $style->height,[m
[32m+[m[32m                                    $style->padding_bottom,[m
[32m+[m[32m                                    $style->border_bottom_width),[m
[32m+[m[32m                              $cb["h"]);[m
[32m+[m
[32m+[m[32m    return array(0 => $x, "x" => $x,[m
[32m+[m[32m                 1 => $y, "y" => $y,[m
[32m+[m[32m                 2 => $w, "w" => $w,[m
[32m+[m[32m                 3 => $h, "h" => $h);[m
[32m+[m[32m  }[m
[32m+[m[41m  [m
[32m+[m[32m  function get_opacity($opacity = null) {[m
[32m+[m[32m    if ( $opacity !== null ) {[m
[32m+[m[32m      $this->set_opacity($opacity);[m
[32m+[m[32m    }[m
[32m+[m[32m    return $this->_opacity;[m
[32m+[m[32m  }[m
[32m+[m[41m  [m
[32m+[m[32m  function &get_containing_line() {[m
[32m+[m[32m    return $this->_containing_line;[m
[32m+[m[32m  }[m
[32m+[m[41m  [m
[32m+[m[32m  //........................................................................[m
[32m+[m
[32m+[m[32m  // Set methods[m
[32m+[m[32m  function set_id($id) {[m
[32m+[m[32m    $this->_id = $id;[m
[32m+[m
[32m+[m[32m    // We can only set attributes of DOMElement objects (nodeType == 1).[m
[32m+[m[32m    // Since these are the only objects that we can assign CSS rules to,[m
[32m+[m[32m    // this shortcoming is okay.[m
[32m+[m[32m    if ( $this->_node->nodeType == XML_ELEMENT_NODE )[m
[32m+[m[32m      $this->_node->setAttribute("frame_id", $id);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  function set_style(Style $style) {[m
[32m+[m[32m    if ( is_null($this->_style) )[m
[32m+[m[32m      $this->_original_style = clone $style;[m
[32m+[m[41m    [m
[32m+[m[32m    //$style->set_frame($this);[m
[32m+[m[32m    $this->_style = $style;[m
[32m+[m[32m  }[m
[32m+[m[41m  [m
[32m+[m[32m  function set_decorator(Frame_Decorator $decorator) {[m
[32m+[m[32m    $this->_decorator = $decorator;[m
[32m+[m[32m  }[m
[32m+[m[41m  [m
[32m+[m[32m  function set_containing_block($x = null, $y = null, $w = null, $h = null) {[m
[32m+[m[32m    if ( is_array($x) ){[m
[32m+[m[32m      foreach($x as $key => $val){[m
[32m+[m[32m        $$key = $val;[m
[32m+[m[32m      }[m
[32m+[m[32m    }[m
[32m+[m[41m    [m
[32m+[m[32m    if (is_numeric($x)) {[m
[32m+[m[32m      $this->_containing_block["x"] = $x;[m
[32m+[m[32m    }[m
[32m+[m[41m    [m
[32m+[m[32m    if (is_numeric($y)) {[m
[32m+[m[32m      $this->_containing_block["y"] = $y;[m
[32m+[m[32m    }[m
[32m+[m[41m    [m
[32m+[m[32m    if (is_numeric($w)) {[m
[32m+[m[32m      $this->_containing_block["w"] = $w;[m
[32m+[m[32m    }[m
[32m+[m[41m    [m
[32m+[m[32m    if (is_numeric($h)) {[m
[32m+[m[32m      $this->_containing_block["h"] = $h;[m
[32m+[m[32m    }[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  function set_position($x = null, $y = null) {[m
[32m+[m[32m    if ( is_array($x) )[m
[32m+[m[32m      extract($x);[m
[32m+[m[41m    [m
[32m+[m[32m    if ( is_numeric($x) ) {[m
[32m+[m[32m      $this->_position["x"] = $x;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    if ( is_numeric($y) ) {[m
[32m+[m[32m      $this->_position["y"] = $y;[m
[32m+[m[32m    }[m
[32m+[m[32m  }[m
[32m+[m[41m  [m
[32m+[m[32m  function set_opacity($opacity) {[m
[32m+[m[32m    $parent = $this->get_parent();[m
[32m+[m[32m    $base_opacity = (($parent && $parent->_opacity !== null) ? $parent->_opacity : 1.0);[m
[32m+[m[32m    $this->_opacity = $base_opacity * $opacity;[m
[32m+[m[32m  }[m
[32m+[m[41m  [m
[32m+[m[32m  function set_containing_line(&$line) {[m
[32m+[m[32m    $this->_containing_line = &$line;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  //........................................................................[m
[32m+[m[41m    [m
[32m+[m[32m  /**[m
[32m+[m[32m   * Inserts a new child at the beginning of the Frame[m
[32m+[m[32m   *[m[41m [m
[32m+[m[32m   * @param $child Frame The new Frame to insert[m
[32m+[m[32m   * @param $update_node boolean Whether or not to update the DOM[m
[32m+[m[32m   */[m[41m [m
[32m+[m[32m  function prepend_child(Frame $child, $update_node = true) {[m
[32m+[m[32m    if ( $update_node )[m[41m [m
[32m+[m[32m      $this->_node->insertBefore($child->_node, $this->_first_child ? $this->_first_child->_node : null);[m
[32m+[m
[32m+[m[32m    // Remove the child from its parent[m
[32m+[m[32m    if ( $child->_parent )[m
[32m+[m[32m      $child->_parent->remove_child($child, false);[m
[32m+[m[41m    [m
[32m+[m[32m    $child->_parent = $this;[m
[32m+[m[32m    $child->_prev_sibling = null;[m
[32m+[m[41m    [m
[32m+[m[32m    // Handle the first child[m
[32m+[m[32m    if ( !$this->_first_child ) {[m
[32m+[m[32m      $this->_first_child = $child;[m
[32m+[m[32m      $this->_last_child = $child;[m
[32m+[m[32m      $child->_next_sibling = null;[m
[32m+[m[32m    } else {[m
[32m+[m[32m      $this->_first_child->_prev_sibling = $child;[m
[32m+[m[32m      $child->_next_sibling = $this->_first_child;[m[41m      [m
[32m+[m[32m      $this->_first_child = $child;[m
[32m+[m[32m    }[m
[32m+[m[32m  }[m
[32m+[m[41m    [m
[32m+[m[32m  /**[m
[32m+[m[32m   * Inserts a new child at the end of the Frame[m
[32m+[m[32m   *[m[41m [m
[32m+[m[32m   * @param $child Frame The new Frame to insert[m
[32m+[m[32m   * @param $update_node boolean Whether or not to update the DOM[m
[32m+[m[32m   */[m[41m [m
[32m+[m[32m  function append_child(Frame $child, $update_node = true) {[m
[32m+[m[32m    if ( $update_node )[m[41m [m
[32m+[m[32m      $this->_node->appendChild($child->_node);[m
[32m+[m
[32m+[m[32m    // Remove the child from its parent[m
[32m+[m[32m    if ( $child->_parent )[m
[32m+[m[32m      $child->_parent->remove_child($child, false);[m
[32m+[m
[32m+[m[32m    $child->_parent = $this;[m
[32m+[m[32m    $child->_next_sibling = null;[m
[32m+[m[41m    [m
[32m+[m[32m    // Handle the first child[m
[32m+[m[32m    if ( !$this->_last_child ) {[m
[32m+[m[32m      $this->_first_child = $child;[m
[32m+[m[32m      $this->_last_child = $child;[m
[32m+[m[32m      $child->_prev_sibling = null;[m
[32m+[m[32m    } else {[m
[32m+[m[32m      $this->_last_child->_next_sibling = $child;[m
[32m+[m[32m      $child->_prev_sibling = $this->_last_child;[m
[32m+[m[32m      $this->_last_child = $child;[m
[32m+[m[32m    }[m
[32m+[m[32m  }[m[41m  [m
[32m+[m[41m  [m
[32m+[m[32m  /**[m
[32m+[m[32m   * Inserts a new child immediately before the specified frame[m
[32m+[m[32m   *[m[41m [m
[32m+[m[32m   * @param $new_child Frame The new Frame to insert[m
[32m+[m[32m   * @param $ref Frame The Frame after the new Frame[m
[32m+[m[32m   * @param $update_node boolean Whether or not to update the DOM[m
[32m+[m[32m   */[m[41m [m
[32m+[m[32m  function insert_child_before(Frame $new_child, Frame $ref, $update_node = true) {[m
[32m+[m[32m    if ( $ref === $this->_first_child ) {[m
[32m+[m[32m      $this->prepend_child($new_child, $update_node);[m
[32m+[m[32m      return;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    if ( is_null($ref) ) {[m
[32m+[m[32m      $this->append_child($new_child, $update_node);[m
[32m+[m[32m      return;[m
[32m+[m[32m    }[m
[32m+[m[41m    [m
[32m+[m[32m    if ( $ref->_parent !== $this )[m
[32m+[m[32m      throw new DOMPDF_Exception("Reference child is not a child of this node.");[m
[32m+[m
[32m+[m[32m    // Update the node[m[41m    [m
[32m+[m[32m    if ( $update_node )[m
[32m+[m[32m      $this->_node->insertBefore($new_child->_node, $ref->_node);[m
[32m+[m
[32m+[m[32m    // Remove the child from its parent[m
[32m+[m[32m    if ( $new_child->_parent )[m
[32m+[m[32m      $new_child->_parent->remove_child($new_child, false);[m
[32m+[m[41m    [m
[32m+[m[32m    $new_child->_parent = $this;[m
[32m+[m[32m    $new_child->_next_sibling = $ref;[m
[32m+[m[32m    $new_child->_prev_sibling = $ref->_prev_sibling;[m
[32m+[m
[32m+[m[32m    if ( $ref->_prev_sibling )[m
[32m+[m[32m      $ref->_prev_sibling->_next_sibling = $new_child;[m
[32m+[m[41m    [m
[32m+[m[32m    $ref->_prev_sibling = $new_child;[m
[32m+[m[32m  }[m
[32m+[m[41m  [m
[32m+[m[32m  /**[m
[32m+[m[32m   * Inserts a new child immediately after the specified frame[m
[32m+[m[32m   *[m[41m [m
[32m+[m[32m   * @param $new_child Frame The new Frame to insert[m
[32m+[m[32m   * @param $ref Frame The Frame before the new Frame[m
[32m+[m[32m   * @param $update_node boolean Whether or not to update the DOM[m
[32m+[m[32m   */[m[41m [m
[32m+[m[32m  function insert_child_after(Frame $new_child, Frame $ref, $update_node = true) {[m
[32m+[m[32m    if ( $ref === $this->_last_child ) {[m
[32m+[m[32m      $this->append_child($new_child, $update_node);[m
[32m+[m[32m      return;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    if ( is_null($ref) ) {[m
[32m+[m[32m      $this->prepend_child($new_child, $update_node);[m
[32m+[m[32m      return;[m
[32m+[m[32m    }[m
[32m+[m[41m    [m
[32m+[m[32m    if ( $ref->_parent !== $this )[m
[32m+[m[32m      throw new DOMPDF_Exception("Reference child is not a child of this node.");[m
[32m+[m
[32m+[m[32m    // Update the node[m
[32m+[m[32m    if ( $update_node ) {[m
[32m+[m[32m      if ( $ref->_next_sibling ) {[m
[32m+[m[32m        $next_node = $ref->_next_sibling->_node;[m
[32m+[m[32m        $this->_node->insertBefore($new_child->_node, $next_node);[m
[32m+[m[32m      } else {[m
[32m+[m[32m        $new_child->_node = $this->_node->appendChild($new_child);[m
[32m+[m[32m      }[m
[32m+[m[32m    }[m
[32m+[m[41m    [m
[32m+[m[32m    // Remove the child from its parent[m
[32m+[m[32m    if ( $new_child->_parent)[m
[32m+[m[32m      $new_child->_parent->remove_child($new_child, false);[m
[32m+[m[41m    [m
[32m+[m[32m    $new_child->_parent = $this;[m
[32m+[m[32m    $new_child->_prev_sibling = $ref;[m
[32m+[m[32m    $new_child->_next_sibling = $ref->_next_sibling;[m
[32m+[m
[32m+[m[32m    if ( $ref->_next_sibling )[m[41m [m
[32m+[m[32m      $ref->_next_sibling->_prev_sibling = $new_child;[m
[32m+[m
[32m+[m[32m    $ref->_next_sibling = $new_child;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m
[32m+[m[32m  /**[m[41m [m
[32m+[m[32m   * Remove a child frame[m
[32m+[m[32m   *[m[41m [m
[32m+[m[32m   * @param $child Frame[m
[32m+[m[32m   * @param $update_node boolean Whether or not to remove the DOM node[m
[32m+[m[32m   * @return Frame The removed child frame[m
[32m+[m[32m   */[m
[32m+[m[32m  function remove_child(Frame $child, $update_node = true) {[m
[32m+[m[32m    if ( $child->_parent !== $this )[m
[32m+[m[32m      throw new DOMPDF_Exception("Child not found in this frame");[m
[32m+[m
[32m+[m[32m    if ( $update_node )[m
[32m+[m[32m      $this->_node->removeChild($child->_node);[m
[32m+[m[41m    [m
[32m+[m[32m    if ( $child === $this->_first_child )[m
[32m+[m[32m      $this->_first_child = $child->_next_sibling;[m
[32m+[m
[32m+[m[32m    if ( $child === $this->_last_child )[m
[32m+[m[32m      $this->_last_child = $child->_prev_sibling;[m
[32m+[m
[32m+[m[32m    if ( $child->_prev_sibling )[m
[32m+[m[32m      $child->_prev_sibling->_next_sibling = $child->_next_sibling;[m
[32m+[m
[32m+[m[32m    if ( $child->_next_sibling )[m
[32m+[m[32m      $child->_next_sibling->_prev_sibling = $child->_prev_sibling;[m[41m    [m
[32m+[m
[32m+[m[32m    $child->_next_sibling = null;[m
[32m+[m[32m    $child->_prev_sibling = null;[m
[32m+[m[32m    $child->_parent = null;[m
[32m+[m[32m    return $child;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  //........................................................................[m
[32m+[m
[32m+[m[32m  // Debugging function:[m
[32m+[m[32m  function __toString() {[m
[32m+[m[32m    // Skip empty text frames[m
[32m+[m[32m//     if ( $this->_node->nodeName === "#text" &&[m
[32m+[m[32m//          preg_replace("/\s/", "", $this->_node->data) === "" )[m
[32m+[m[32m//       return "";[m
[32m+[m[41m    [m
[32m+[m[41m    [m
[32m+[m[32m    $str = "<b>" . $this->_node->nodeName . ":</b><br/>";[m
[32m+[m[32m    //$str .= spl_object_hash($this->_node) . "<br/>";[m
[32m+[m[32m    $str .= "Id: " .$this->get_id() . "<br/>";[m
[32m+[m[32m    $str .= "Class: " .get_class($this) . "<br/>";[m
[32m+[m[41m    [m
[32m+[m[32m    if ( $this->_node->nodeName === "#text" ) {[m
[32m+[m[32m      $tmp = htmlspecialchars($this->_node->nodeValue);[m
[32m+[m[32m      $str .= "<pre>'" .  mb_substr($tmp,0,70) .[m
[32m+[m[32m        (mb_strlen($tmp) > 70 ? "..." : "") . "'</pre>";[m
[32m+[m[32m    } elseif ( $css_class = $this->_node->getAttribute("class") ) {[m
[32m+[m[32m      $tmp = htmlspecialchars($css_class);[m
[32m+[m[32m      $str .= "CSS class: '$css_class'<br/>";[m
[32m+[m[32m    }[m
[32m+[m[41m    [m
[32m+[m[32m    if ( $this->_parent )[m
[32m+[m[32m      $str .= "\nParent:" . $this->_parent->_node->nodeName .[m
[32m+[m[32m        " (" . spl_object_hash($this->_parent->_node) . ") " .[m
[32m+[m[32m        "<br/>";[m
[32m+[m
[32m+[m[32m    if ( $this->_prev_sibling )[m
[32m+[m[32m      $str .= "Prev: " . $this->_prev_sibling->_node->nodeName .[m
[32m+[m[32m        " (" . spl_object_hash($this->_prev_sibling->_node) . ") " .[m
[32m+[m[32m        "<br/>";[m
[32m+[m
[32m+[m[32m    if ( $this->_next_sibling )[m
[32m+[m[32m      $str .= "Next: " . $this->_next_sibling->_node->nodeName .[m
[32m+[m[32m        " (" . spl_object_hash($this->_next_sibling->_node) . ") " .[m
[32m+[m[32m        "<br/>";[m
[32m+[m
[32m+[m[32m    $d = $this->get_decorator();[m
[32m+[m[32m    while ($d && $d != $d->get_decorator()) {[m
[32m+[m[32m      $str .= "Decorator: " . get_class($d) . "<br/>";[m
[32m+[m[32m      $d = $d->get_decorator();[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    $str .= "Position: " . pre_r($this->_position, true);[m
[32m+[m[32m    $str .= "\nContaining block: " . pre_r($this->_containing_block, true);[m
[32m+[m[32m    $str .= "\nMargin width: " . pre_r($this->get_margin_width(), true);[m
[32m+[m[32m    $str .= "\nMargin height: " . pre_r($this->get_margin_height(), true);[m
[32m+[m[41m    [m
[32m+[m[32m    $str .= "\nStyle: <pre>". $this->_style->__toString() . "</pre>";[m
[32m+[m
[32m+[m[32m    if ( $this->_decorator instanceof Block_Frame_Decorator ) {[m
[32m+[m[32m      $str .= "Lines:<pre>";[m
[32m+[m[32m      foreach ($this->_decorator->get_lines() as $line) {[m
[32m+[m[32m        foreach ($line["frames"] as $frame) {[m
[32m+[m[32m          if ($frame instanceof Text_Frame_Decorator) {[m
[32m+[m[32m            $str .= "\ntext: ";[m[41m          [m
[32m+[m[32m            $str .= "'". htmlspecialchars($frame->get_text()) ."'";[m
[32m+[m[32m          } else {[m
[32m+[m[32m            $str .= "\nBlock: " . $frame->get_node()->nodeName . " (" . spl_object_hash($frame->get_node()) . ")";[m
[32m+[m[32m          }[m
[32m+[m[32m        }[m
[32m+[m[41m        [m
[32m+[m[32m        $str .=[m
[32m+[m[32m          //"\ncount => " . $line["count"] . "\n".[m
[32m+[m[32m          "\ny => " . $line["y"] . "\n" .[m
[32m+[m[32m          "w => " . $line["w"] . "\n" .[m
[32m+[m[32m          "h => " . $line["h"] . "\n" .[m
[32m+[m[32m          "left => " . $line["left"] . "\n" .[m
[32m+[m[32m          "right => " . $line["right"] . "\n";[m
[32m+[m[32m      }[m
[32m+[m[32m      $str .= "</pre>";[m
[32m+[m[32m    }[m
[32m+[m[32m    $str .= "\n";[m
[32m+[m[32m    if ( php_sapi_name() === "cli" )[m
[32m+[m[32m      $str = strip_tags(str_replace(array("<br/>","<b>","</b>"),[m
[32m+[m[32m                                    array("\n","",""),[m
[32m+[m[32m                                    $str));[m
[32m+[m[41m    [m
[32m+[m[32m    return $str;[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m//------------------------------------------------------------------------[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Linked-list IteratorAggregate[m
[32m+[m[32m *[m
[32m+[m[32m * @access private[m
[32m+[m[32m * @package dompdf[m
[32m+[m[32m */[m
[32m+[m[32mclass FrameList implements IteratorAggregate {[m
[32m+[m[32m  protected $_frame;[m
[32m+[m
[32m+[m[32m  function __construct($frame) { $this->_frame = $frame; }[m
[32m+[m[32m  function getIterator() { return new FrameListIterator($this->_frame); }[m
[32m+[m[32m}[m
[32m+[m[41m  [m
[32m+[m[32m/**[m
[32m+[m[32m * Linked-list Iterator[m
[32m+[m[32m *[m
[32m+[m[32m * Returns children in order and allows for list to change during iteration,[m
[32m+[m[32m * provided the changes occur to or after the current element[m
[32m+[m[32m *[m
[32m+[m[32m * @access private[m
[32m+[m[32m * @package dompdf[m
[32m+[m[32m */[m
[32m+[m[32mclass FrameListIterator implements Iterator {[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * @var Frame[m
[32m+[m[32m   */[m
[32m+[m[32m  protected $_parent;[m
[32m+[m[41m  [m
[32m+[m[32m  /**[m
[32m+[m[32m   * @var Frame[m
[32m+[m[32m   */[m
[32m+[m[32m  protected $_cur;[m
[32m+[m[41m  [m
[32m+[m[32m  /**[m
[32m+[m[32m   * @var int[m
[32m+[m[32m   */[m
[32m+[m[32m  protected $_num;[m
[32m+[m
[32m+[m[32m  function __construct(Frame $frame) {[m
[32m+[m[32m    $this->_parent = $frame;[m
[32m+[m[32m    $this->_cur = $frame->get_first_child();[m
[32m+[m[32m    $this->_num = 0;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  function rewind() {[m[41m [m
[32m+[m[32m    $this->_cur = $this->_parent->get_first_child();[m
[32m+[m[32m    $this->_num = 0;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * @return bool[m
[32m+[m[32m   */[m
[32m+[m[32m  function valid() {[m
[32m+[m[32m    return isset($this->_cur);// && ($this->_cur->get_prev_sibling() === $this->_prev);[m
[32m+[m[32m  }[m
[32m+[m[41m  [m
[32m+[m[32m  function key() { return $this->_num; }[m
[32m+[m[41m  [m
[32m+[m[32m  /**[m
[32m+[m[32m   * @return Frame[m
[32m+[m[32m   */[m
[32m+[m[32m  function current() { return $this->_cur; }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * @return Frame[m
[32m+[m[32m   */[m
[32m+[m[32m  function next() {[m
[32m+[m
[32m+[m[32m    $ret = $this->_cur;[m
[32m+[m[32m    if ( !$ret )[m
[32m+[m[32m      return null;[m
[32m+[m[41m    [m
[32m+[m[32m    $this->_cur = $this->_cur->get_next_sibling();[m
[32m+[m[32m    $this->_num++;[m
[32m+[m[32m    return $ret;[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m//------------------------------------------------------------------------[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Pre-order IteratorAggregate[m
[32m+[m[32m *[m
[32m+[m[32m * @access private[m
[32m+[m[32m * @package dompdf[m
[32m+[m[32m */[m
[32m+[m[32mclass FrameTreeList implements IteratorAggregate {[m
[32m+[m[32m  /**[m
[32m+[m[32m   * @var Frame[m
[32m+[m[32m   */[m
[32m+[m[32m  protected $_root;[m
[32m+[m[41m  [m
[32m+[m[32m  function __construct(Frame $root) { $this->_root = $root; }[m
[32m+[m[41m  [m
[32m+[m[32m  /**[m
[32m+[m[32m   * @return FrameTreeIterator[m
[32m+[m[32m   */[m
[32m+[m[32m  function getIterator() { return new FrameTreeIterator($this->_root); }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Pre-order Iterator[m
[32m+[m[32m *[m
[32m+[m[32m * Returns frames in preorder traversal order (parent then children)[m
[32m+[m[32m *[m
[32m+[m[32m * @access private[m
[32m+[m[32m * @package dompdf[m
[32m+[m[32m */[m
[32m+[m[32mclass FrameTreeIterator implements Iterator {[m
[32m+[m[32m  /**[m
[32m+[m[32m   * @var Frame[m
[32m+[m[32m   */[m
[32m+[m[32m  protected $_root;[m
[32m+[m[32m  protected $_stack = array();[m
[32m+[m[41m  [m
[32m+[m[32m  /**[m
[32m+[m[32m   * @var int[m
[32m+[m[32m   */[m
[32m+[m[32m  protected $_num;[m
[32m+[m[41m  [m
[32m+[m[32m  function __construct(Frame $root) {[m
[32m+[m[32m    $this->_stack[] = $this->_root = $root;[m
[32m+[m[32m    $this->_num = 0;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  function rewind() {[m
[32m+[m[32m    $this->_stack = array($this->_root);[m
[32m+[m[32m    $this->_num = 0;[m
[32m+[m[32m  }[m
[32m+[m[41m  [m
[32m+[m[32m  /**[m
[32m+[m[32m   * @return bool[m
[32m+[m[32m   */[m
[32m+[m[32m  function valid() { return count($this->_stack) > 0; }[m
[32m+[m[41m  [m
[32m+[m[32m  /**[m
[32m+[m[32m   * @return int[m
[32m+[m[32m   */[m
[32m+[m[32m  function key() { return $this->_num; }[m
[32m+[m[41m  [m
[32m+[m[32m  /**[m
[32m+[m[32m   * @var Frame[m
[32m+[m[32m   */[m
[32m+[m[32m  function current() { return end($this->_stack); }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * @var Frame[m
[32m+[m[32m   */[m
[32m+[m[32m  function next() {[m
[32m+[m[32m    $b = end($this->_stack);[m
[32m+[m[41m    [m
[32m+[m[32m    // Pop last element[m
[32m+[m[32m    unset($this->_stack[ key($this->_stack) ]);[m
[32m+[m[32m    $this->_num++;[m
[32m+[m[41m    [m
[32m+[m[32m    // Push all children onto the stack in reverse order[m
[32m+[m[32m    if ( $c = $b->get_last_child() ) {[m
[32m+[m[32m      $this->_stack[] = $c;[m
[32m+[m[32m      while ( $c = $c->get_prev_sibling() )[m
[32m+[m[32m        $this->_stack[] = $c;[m
[32m+[m[32m    }[m
[32m+[m[32m    return $b;[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[1mdiff --git a/application/third_party/dompdf/include/frame_decorator.cls.php b/application/third_party/dompdf/include/frame_decorator.cls.php[m
[1mnew file mode 100644[m
[1mindex 0000000..1947881[m
[1m--- /dev/null[m
[1m+++ b/application/third_party/dompdf/include/frame_decorator.cls.php[m
[36m@@ -0,0 +1,483 @@[m
[32m+[m[32m<?php[m
[32m+[m[32m/**[m
[32m+[m[32m * DOMPDF - PHP5 HTML to PDF renderer[m
[32m+[m[32m *[m
[32m+[m[32m * File: $RCSfile: frame_decorator.cls.php,v $[m
[32m+[m[32m * Created on: 2004-06-02[m
[32m+[m[32m *[m
[32m+[m[32m * Copyright (c) 2004 - Benj Carson <benjcarson@digitaljunkies.ca>[m
[32m+[m[32m *[m
[32m+[m[32m * This library is free software; you can redistribute it and/or[m
[32m+[m[32m * modify it under the terms of the GNU Lesser General Public[m
[32m+[m[32m * License as published by the Free Software Foundation; either[m
[32m+[m[32m * version 2.1 of the License, or (at your option) any later version.[m
[32m+[m[32m *[m
[32m+[m[32m * This library is distributed in the hope that it will be useful,[m
[32m+[m[32m * but WITHOUT ANY WARRANTY; without even the implied warranty of[m
[32m+[m[32m * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU[m
[32m+[m[32m * Lesser General Public License for more details.[m
[32m+[m[32m *[m
[32m+[m[32m * You should have received a copy of the GNU Lesser General Public License[m
[32m+[m[32m * along with this library in the file LICENSE.LGPL; if not, write to the[m
[32m+[m[32m * Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA[m
[32m+[m[32m * 02111-1307 USA[m
[32m+[m[32m *[m
[32m+[m[32m * Alternatively, you may distribute this software under the terms of the[m
[32m+[m[32m * PHP License, version 3.0 or later.  A copy of this license should have[m
[32m+[m[32m * been distributed with this file in the file LICENSE.PHP .  If this is not[m
[32m+[m[32m * the case, you can obtain a copy at http://www.php.net/license/3_0.txt.[m
[32m+[m[32m *[m
[32m+[m[32m * The latest version of DOMPDF might be available at:[m
[32m+[m[32m * http://www.dompdf.com/[m
[32m+[m[32m *[m
[32m+[m[32m * @link http://www.dompdf.com/[m
[32m+[m[32m * @copyright 2004 Benj Carson[m
[32m+[m[32m * @author Benj Carson <benjcarson@digitaljunkies.ca>[m
[32m+[m[32m * @package dompdf[m
[32m+[m
[32m+[m[32m */[m
[32m+[m
[32m+[m[32m/* $Id: frame_decorator.cls.php 357 2011-01-30 20:56:46Z fabien.menager $ */[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Base Frame_Decorator class[m
[32m+[m[32m *[m
[32m+[m[32m * @access private[m
[32m+[m[32m * @package dompdf[m
[32m+[m[32m */[m
[32m+[m[32mabstract class Frame_Decorator extends Frame {[m
[32m+[m[41m  [m
[32m+[m[32m  /**[m
[32m+[m[32m   * The root node of the DOM tree[m
[32m+[m[32m   *[m
[32m+[m[32m   * @var Frame[m
[32m+[m[32m   */[m
[32m+[m[32m  protected $_root;[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * The decorated frame[m
[32m+[m[32m   *[m
[32m+[m[32m   * @var Frame[m
[32m+[m[32m   */[m
[32m+[m[32m  protected $_frame;[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Positioner object used to position this frame (Strategy pattern)[m
[32m+[m[32m   *[m
[32m+[m[32m   * @var Positioner[m
[32m+[m[32m   */[m
[32m+[m[32m  protected $_positioner;[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Reflower object used to calculate frame dimensions (Strategy pattern)[m
[32m+[m[32m   *[m
[32m+[m[32m   * @var Frame_Reflower[m
[32m+[m[32m   */[m
[32m+[m[32m  protected $_reflower;[m
[32m+[m[41m  [m
[32m+[m[32m  /**[m
[32m+[m[32m   * Reference to the current dompdf instance[m
[32m+[m[32m   *[m
[32m+[m[32m   * @var DOMPDF[m
[32m+[m[32m   */[m
[32m+[m[32m  protected $_dompdf;[m
[32m+[m[41m  [m
[32m+[m[32m  /**[m
[32m+[m[32m   * First block parent[m
[32m+[m[32m   *[m[41m [m
[32m+[m[32m   * @var Frame_Decorator[m
[32m+[m[32m   */[m
[32m+[m[32m  private $_block_parent;[m
[32m+[m[41m  [m
[32m+[m[32m  /**[m
[32m+[m[32m   * First positionned parent (position: relative | absolute | fixed)[m
[32m+[m[32m   *[m[41m [m
[32m+[m[32m   * @var Frame_Decorator[m
[32m+[m[32m   */[m
[32m+[m[32m  private $_positionned_parent;[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Class constructor[m
[32m+[m[32m   *[m
[32m+[m[32m   * @param Frame $frame the decoration target[m
[32m+[m[32m   */[m
[32m+[m[32m  function __construct(Frame $frame, DOMPDF $dompdf) {[m
[32m+[m[32m    $this->_frame = $frame;[m
[32m+[m[32m    $this->_root = null;[m
[32m+[m[32m    $this->_dompdf = $dompdf;[m
[32m+[m[32m    $frame->set_decorator($this);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * "Destructor": foribly free all references held by this object[m
[32m+[m[32m   *[m
[32m+[m[32m   * @param bool $recursive if true, call dispose on all children[m
[32m+[m[32m   */[m
[32m+[m[32m  function dispose($recursive = false) {[m
[32m+[m[41m    [m
[32m+[m[32m    if ( $recursive ) {[m
[32m+[m[32m      while ( $child = $this->get_first_child() )[m
[32m+[m[32m        $child->dispose(true);[m
[32m+[m[32m    }[m
[32m+[m[41m    [m
[32m+[m[32m    $this->_root = null;[m
[32m+[m[32m    unset($this->_root);[m
[32m+[m[41m    [m
[32m+[m[32m    $this->_frame->dispose(true);[m
[32m+[m[32m    $this->_frame = null;[m
[32m+[m[32m    unset($this->_frame);[m
[32m+[m[41m    [m
[32m+[m[32m    $this->_positioner = null;[m
[32m+[m[32m    unset($this->_positioner);[m
[32m+[m[41m    [m
[32m+[m[32m    $this->_reflower = null;[m
[32m+[m[32m    unset($this->_reflower);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Return a copy of this frame with $node as its node[m
[32m+[m[32m   *[m[41m [m
[32m+[m[32m   * @param DomNode $node[m[41m [m
[32m+[m[32m   * @return Frame[m
[32m+[m[32m   */[m[41m [m
[32m+[m[32m  function copy(DomNode $node) {[m
[32m+[m[32m    $frame = new Frame($node);[m
[32m+[m[32m    $frame->set_style(clone $this->_frame->get_original_style());[m
[32m+[m[32m    $deco = Frame_Factory::decorate_frame($frame, $this->_dompdf);[m
[32m+[m[32m    $deco->set_root($this->_root);[m
[32m+[m[32m    return $deco;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Create a deep copy: copy this node and all children[m
[32m+[m[32m   *[m
[32m+[m[32m   * @return Frame[m
[32m+[m[32m   */[m
[32m+[m[32m  function deep_copy() {[m
[32m+[m[32m    $frame = new Frame($this->get_node()->cloneNode());[m
[32m+[m[32m    $frame->set_style(clone $this->_frame->get_original_style());[m
[32m+[m[32m    $deco = Frame_Factory::decorate_frame($frame, $this->_dompdf);[m
[32m+[m[32m    $deco->set_root($this->_root);[m
[32m+[m
[32m+[m[32m    foreach ($this->get_children() as $child)[m
[32m+[m[32m      $deco->append_child($child->deep_copy());[m
[32m+[m
[32m+[m[32m    return $deco;[m
[32m+[m[32m  }[m
[32m+[m[32m  //........................................................................[m
[32m+[m[41m  [m
[32m+[m[32m  /**[m
[32m+[m[32m   * Delegate calls to decorated frame object[m
[32m+[m[32m   */[m
[32m+[m[32m  function reset() {[m
[32m+[m[32m    $this->_frame->reset();[m
[32m+[m
[32m+[m[32m    // Reset all children[m
[32m+[m[32m    foreach ($this->get_children() as $child)[m
[32m+[m[32m      $child->reset();[m
[32m+[m[32m  }[m
[32m+[m[41m  [m
[32m+[m[32m  // Getters -----------[m
[32m+[m[32m  function get_id() { return $this->_frame->get_id(); }[m
[32m+[m[41m  [m
[32m+[m[32m  /**[m
[32m+[m[32m   * @return Frame[m
[32m+[m[32m   */[m
[32m+[m[32m  function get_frame() { return $this->_frame; }[m
[32m+[m[41m  [m
[32m+[m[32m  /**[m
[32m+[m[32m   * @return DomNode[m
[32m+[m[32m   */[m
[32m+[m[32m  function get_node() { return $this->_frame->get_node(); }[m
[32m+[m[41m  [m
[32m+[m[32m  /**[m
[32m+[m[32m   * @return Style[m
[32m+[m[32m   */[m
[32m+[m[32m  function get_style() { return $this->_frame->get_style(); }[m
[32m+[m[41m  [m
[32m+[m[32m  /**[m
[32m+[m[32m   * @return Style[m
[32m+[m[32m   */[m
[32m+[m[32m  function get_original_style() { return $this->_frame->get_original_style(); }[m
[32m+[m[32m  function get_containing_block($i = null) { return $this->_frame->get_containing_block($i); }[m
[32m+[m[32m  function get_position($i = null) { return $this->_frame->get_position($i); }[m
[32m+[m[41m  [m
[32m+[m[32m  /**[m
[32m+[m[32m   * @return DOMPDF[m
[32m+[m[32m   */[m
[32m+[m[32m  function get_dompdf() { return $this->_dompdf; }[m
[32m+[m[41m  [m
[32m+[m[32m  function get_margin_height() { return $this->_frame->get_margin_height(); }[m
[32m+[m[32m  function get_margin_width() { return $this->_frame->get_margin_width(); }[m
[32m+[m[32m  function get_padding_box() { return $this->_frame->get_padding_box(); }[m
[32m+[m[32m  function get_border_box() { return $this->_frame->get_border_box(); }[m
[32m+[m
[32m+[m[32m  // Setters -----------[m
[32m+[m[32m  function set_id($id) { $this->_frame->set_id($id); }[m
[32m+[m[32m  function set_style(Style $style) { $this->_frame->set_style($style); }[m
[32m+[m
[32m+[m[32m  function set_containing_block($x = null, $y = null, $w = null, $h = null) {[m
[32m+[m[32m    $this->_frame->set_containing_block($x, $y, $w, $h);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  function set_position($x = null, $y = null) {[m
[32m+[m[32m    $this->_frame->set_position($x, $y);[m
[32m+[m[32m  }[m
[32m+[m[32m  function __toString() { return $this->_frame->__toString(); }[m
[32m+[m[41m  [m
[32m+[m[32m  function prepend_child(Frame $child, $update_node = true) {[m
[32m+[m[32m    while ( $child instanceof Frame_Decorator )[m
[32m+[m[32m      $child = $child->_frame;[m
[32m+[m[41m    [m
[32m+[m[32m    $this->_frame->prepend_child($child, $update_node);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  function append_child(Frame $child, $update_node = true) {[m
[32m+[m[32m    while ( $child instanceof Frame_Decorator )[m
[32m+[m[32m      $child = $child->_frame;[m
[32m+[m
[32m+[m[32m    $this->_frame->append_child($child, $update_node);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  function insert_child_before(Frame $new_child, Frame $ref, $update_node = true) {[m
[32m+[m[32m    while ( $new_child instanceof Frame_Decorator )[m
[32m+[m[32m      $new_child = $new_child->_frame;[m
[32m+[m
[32m+[m[32m    if ( $ref instanceof Frame_Decorator )[m
[32m+[m[32m      $ref = $ref->_frame;[m
[32m+[m
[32m+[m[32m    $this->_frame->insert_child_before($new_child, $ref, $update_node);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  function insert_child_after(Frame $new_child, Frame $ref, $update_node = true) {[m
[32m+[m[32m    while ( $new_child instanceof Frame_Decorator )[m
[32m+[m[32m      $new_child = $new_child->_frame;[m
[32m+[m
[32m+[m[32m    while ( $ref instanceof Frame_Decorator )[m
[32m+[m[32m      $ref = $ref->_frame;[m
[32m+[m[41m    [m
[32m+[m[32m    $this->_frame->insert_child_after($new_child, $ref, $update_node);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  function remove_child(Frame $child, $update_node = true) {[m
[32m+[m[32m    while  ( $child instanceof Frame_Decorator )[m
[32m+[m[32m      $child = $new_child->_frame;[m
[32m+[m
[32m+[m[32m    $this->_frame->remove_child($child, $update_node);[m
[32m+[m[32m  }[m
[32m+[m[41m  [m
[32m+[m[32m  //........................................................................[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * @return Frame_Decorator[m
[32m+[m[32m   */[m
[32m+[m[32m  function get_parent() {[m
[32m+[m[32m    $p = $this->_frame->get_parent();[m
[32m+[m[32m    if ( $p && $deco = $p->get_decorator() ) {[m
[32m+[m[32m      while ( $tmp = $deco->get_decorator() )[m
[32m+[m[32m        $deco = $tmp;[m[41m      [m
[32m+[m[32m      return $deco;[m
[32m+[m[32m    } else if ( $p )[m
[32m+[m[32m      return $p;[m
[32m+[m[32m    else[m
[32m+[m[32m      return null;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * @return Frame_Decorator[m
[32m+[m[32m   */[m
[32m+[m[32m  function get_first_child() {[m
[32m+[m[32m    $c = $this->_frame->get_first_child();[m
[32m+[m[32m    if ( $c && $deco = $c->get_decorator() ) {[m
[32m+[m[32m      while ( $tmp = $deco->get_decorator() )[m
[32m+[m[32m        $deco = $tmp;[m[41m      [m
[32m+[m[32m      return $deco;[m
[32m+[m[32m    } else if ( $c )[m
[32m+[m[32m      return $c;[m
[32m+[m[32m    else[m
[32m+[m[32m      return null;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * @return Frame_Decorator[m
[32m+[m[32m   */[m
[32m+[m[32m  function get_last_child() {[m
[32m+[m[32m    $c = $this->_frame->get_last_child();[m
[32m+[m[32m    if ( $c && $deco = $c->get_decorator() ) {[m
[32m+[m[32m      while ( $tmp = $deco->get_decorator() )[m
[32m+[m[32m        $deco = $tmp;[m[41m      [m
[32m+[m[32m      return $deco;[m
[32m+[m[32m    } else if ( $c )[m
[32m+[m[32m      return $c;[m
[32m+[m[32m    else[m
[32m+[m[32m      return null;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * @return Frame_Decorator[m
[32m+[m[32m   */[m
[32m+[m[32m  function get_prev_sibling() {[m
[32m+[m[32m    $s = $this->_frame->get_prev_sibling();[m
[32m+[m[32m    if ( $s && $deco = $s->get_decorator() ) {[m
[32m+[m[32m      while ( $tmp = $deco->get_decorator() )[m
[32m+[m[32m        $deco = $tmp;[m[41m      [m
[32m+[m[32m      return $deco;[m
[32m+[m[32m    } else if ( $s )[m
[32m+[m[32m      return $s;[m
[32m+[m[32m    else[m
[32m+[m[32m      return null;[m
[32m+[m[32m  }[m
[32m+[m[41m  [m
[32m+[m[32m  /**[m
[32m+[m[32m   * @return Frame_Decorator[m
[32m+[m[32m   */[m
[32m+[m[32m  function get_next_sibling() {[m
[32m+[m[32m    $s = $this->_frame->get_next_sibling();[m
[32m+[m[32m    if ( $s && $deco = $s->get_decorator() ) {[m
[32m+[m[32m      while ( $tmp = $deco->get_decorator() )[m
[32m+[m[32m        $deco = $tmp;[m[41m      [m
[32m+[m[32m      return $deco;[m
[32m+[m[32m    } else if ( $s )[m
[32m+[m[32m      return $s;[m
[32m+[m[32m    else[m
[32m+[m[32m      return null;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * @return FrameList[m
[32m+[m[32m   */[m
[32m+[m[32m  function get_children() {[m
[32m+[m[32m    return new FrameList($this);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * @return FrameTreeList[m
[32m+[m[32m   */[m
[32m+[m[32m  function get_subtree() {[m
[32m+[m[32m    return new FrameTreeList($this);[m
[32m+[m[32m  }[m
[32m+[m[41m  [m
[32m+[m[32m  //........................................................................[m
[32m+[m
[32m+[m[32m  function set_positioner(Positioner $posn) {[m
[32m+[m[32m    $this->_positioner = $posn;[m
[32m+[m[32m    if ( $this->_frame instanceof Frame_Decorator )[m
[32m+[m[32m      $this->_frame->set_positioner($posn);[m
[32m+[m[32m  }[m
[32m+[m[41m  [m
[32m+[m[32m  //........................................................................[m
[32m+[m
[32m+[m[32m  function set_reflower(Frame_Reflower $reflower) {[m
[32m+[m[32m    $this->_reflower = $reflower;[m
[32m+[m[32m    if ( $this->_frame instanceof Frame_Decorator )[m
[32m+[m[32m      $this->_frame->set_reflower( $reflower );[m
[32m+[m[32m  }[m
[32m+[m[41m  [m
[32m+[m[32m  function get_reflower() { return $this->_reflower; }[m
[32m+[m[41m  [m
[32m+[m[32m  //........................................................................[m
[32m+[m[41m  [m
[32m+[m[32m  function set_root(Frame $root) {[m
[32m+[m[32m    $this->_root = $root;[m
[32m+[m[32m      if ( $this->_frame instanceof Frame_Decorator )[m
[32m+[m[32m        $this->_frame->set_root($root);[m
[32m+[m[32m  }[m
[32m+[m[41m  [m
[32m+[m[32m  function get_root() { return $this->_root; }[m
[32m+[m[41m  [m
[32m+[m[32m  //........................................................................[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * @return Frame_Decorator[m
[32m+[m[32m   */[m
[32m+[m[32m  function find_block_parent() {[m
[32m+[m[32m    //if ( $this->_block_parent ) return $this->_block_parent; // FIXME: makes dom_anchor_link example fail[m
[32m+[m[41m    [m
[32m+[m[32m    // Find our nearest block level parent[m
[32m+[m[32m    $p = $this->get_parent();[m
[32m+[m[41m    [m
[32m+[m[32m    while ( $p ) {[m
[32m+[m[32m      if ( in_array($p->get_style()->display, Style::$BLOCK_TYPES) )[m
[32m+[m[32m        break;[m
[32m+[m
[32m+[m[32m      $p = $p->get_parent();[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    return $this->_block_parent = $p;[m
[32m+[m[32m  }[m
[32m+[m[41m  [m
[32m+[m[32m  /**[m
[32m+[m[32m   * @return Frame_Decorator[m
[32m+[m[32m   */[m
[32m+[m[32m  function find_positionned_parent() {[m
[32m+[m[32m    //if ( $this->_positionned_parent ) return $this->_positionned_parent; // FIXME: makes dom_anchor_link example fail[m
[32m+[m
[32m+[m[32m    // Find our nearest relative positionned parent[m
[32m+[m[32m    $p = $this->get_parent();[m
[32m+[m[32m    while ( $p ) {[m
[32m+[m[32m      if ( in_array($p->get_style()->position, Style::$POSITIONNED_TYPES) ) {[m
[32m+[m[32m        break;[m
[32m+[m[32m      }[m
[32m+[m
[32m+[m[32m      $p = $p->get_parent();[m
[32m+[m[32m    }[m
[32m+[m[41m    [m
[32m+[m[32m    if ( !$p ) {[m
[32m+[m[32m      $p = $this->_root;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    return $this->_positionned_parent = $p;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  //........................................................................[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * split this frame at $child.[m
[32m+[m[32m   *[m
[32m+[m[32m   * The current frame is cloned and $child and all children following[m
[32m+[m[32m   * $child are added to the clone.  The clone is then passed to the[m
[32m+[m[32m   * current frame's parent->split() method.[m
[32m+[m[32m   *[m
[32m+[m[32m   * @param Frame $child[m
[32m+[m[32m   * @param boolean $force_pagebreak[m
[32m+[m[32m   */[m
[32m+[m[32m  function split($child = null, $force_pagebreak = false) {[m
[32m+[m[32m    if ( is_null( $child ) ) {[m
[32m+[m[32m      $this->get_parent()->split($this, $force_pagebreak);[m
[32m+[m[32m      return;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    if ( $child->get_parent() !== $this )[m
[32m+[m[32m      throw new DOMPDF_Exception("Unable to split: frame is not a child of this one.");[m
[32m+[m
[32m+[m[32m    $split = $this->copy( $this->_frame->get_node()->cloneNode() );[m
[32m+[m[32m    $split->reset();[m
[32m+[m[32m    $this->get_parent()->insert_child_after($split, $this);[m
[32m+[m
[32m+[m[32m    // Add $frame and all following siblings to the new split node[m
[32m+[m[32m    $iter = $child;[m
[32m+[m[32m    while ($iter) {[m
[32m+[m[32m      $frame = $iter;[m[41m      [m
[32m+[m[32m      $iter = $iter->get_next_sibling();[m
[32m+[m[32m      $frame->reset();[m
[32m+[m[32m      $split->append_child($frame);[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    $this->get_parent()->split($split, $force_pagebreak);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  //........................................................................[m
[32m+[m
[32m+[m[32m  final function position() { $this->_positioner->position();  }[m
[32m+[m[41m  [m
[32m+[m[32m  final function reflow(Frame_Decorator $block = null) {[m
[32m+[m[32m    // Uncomment this to see the frames before they're laid out, instead of[m
[32m+[m[32m    // during rendering.[m
[32m+[m[32m    //echo $this->_frame; flush();[m
[32m+[m[32m    $this->_reflower->reflow($block);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  final function get_min_max_width() { return $this->_reflower->get_min_max_width(); }[m
[32m+[m[41m  [m
[32m+[m[32m  //........................................................................[m
[32m+[m[32m}[m
[1mdiff --git a/application/third_party/dompdf/include/frame_factory.cls.php b/application/third_party/dompdf/include/frame_factory.cls.php[m
[1mnew file mode 100644[m
[1mindex 0000000..f4a1a8c[m
[1m--- /dev/null[m
[1m+++ b/application/third_party/dompdf/include/frame_factory.cls.php[m
[36m@@ -0,0 +1,207 @@[m
[32m+[m[32m<?php[m
[32m+[m[32m/**[m
[32m+[m[32m * DOMPDF - PHP5 HTML to PDF renderer[m
[32m+[m[32m *[m
[32m+[m[32m * File: $RCSfile: frame_factory.cls.php,v $[m
[32m+[m[32m * Created on: 2004-06-17[m
[32m+[m[32m *[m
[32m+[m[32m * Copyright (c) 2004 - Benj Carson <benjcarson@digitaljunkies.ca>[m
[32m+[m[32m *[m
[32m+[m[32m * This library is free software; you can redistribute it and/or[m
[32m+[m[32m * modify it under the terms of the GNU Lesser General Public[m
[32m+[m[32m * License as published by the Free Software Foundation; either[m
[32m+[m[32m * version 2.1 of the License, or (at your option) any later version.[m
[32m+[m[32m *[m
[32m+[m[32m * This library is distributed in the hope that it will be useful,[m
[32m+[m[32m * but WITHOUT ANY WARRANTY; without even the implied warranty of[m
[32m+[m[32m * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU[m
[32m+[m[32m * Lesser General Public License for more details.[m
[32m+[m[32m *[m
[32m+[m[32m * You should have received a copy of the GNU Lesser General Public License[m
[32m+[m[32m * along with this library in the file LICENSE.LGPL; if not, write to the[m
[32m+[m[32m * Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA[m
[32m+[m[32m * 02111-1307 USA[m
[32m+[m[32m *[m
[32m+[m[32m * Alternatively, you may distribute this software under the terms of the[m
[32m+[m[32m * PHP License, version 3.0 or later.  A copy of this license should have[m
[32m+[m[32m * been distributed with this file in the file LICENSE.PHP .  If this is not[m
[32m+[m[32m * the case, you can obtain a copy at http://www.php.net/license/3_0.txt.[m
[32m+[m[32m *[m
[32m+[m[32m * The latest version of DOMPDF might be available at:[m
[32m+[m[32m * http://www.dompdf.com/[m
[32m+[m[32m *[m
[32m+[m[32m * @link http://www.dompdf.com/[m
[32m+[m[32m * @copyright 2004 Benj Carson[m
[32m+[m[32m * @author Benj Carson <benjcarson@digitaljunkies.ca>[m
[32m+[m[32m * @package dompdf[m
[32m+[m
[32m+[m[32m */[m
[32m+[m
[32m+[m[32m/* $Id: frame_factory.cls.php 356 2011-01-28 08:56:10Z fabien.menager $ */[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Contains frame decorating logic[m
[32m+[m[32m *[m
[32m+[m[32m * This class is responsible for assigning the correct {@link Frame_Decorator},[m
[32m+[m[32m * {@link Positioner}, and {@link Frame_Reflower} objects to {@link Frame}[m
[32m+[m[32m * objects.  This is determined primarily by the Frame's display type, but[m
[32m+[m[32m * also by the Frame's node's type (e.g. DomElement vs. #text)[m
[32m+[m[32m *[m
[32m+[m[32m * @access private[m
[32m+[m[32m * @package dompdf[m
[32m+[m[32m */[m
[32m+[m[32mclass Frame_Factory {[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Decorate the Frame[m
[32m+[m[32m   *[m[41m [m
[32m+[m[32m   * @param $root Frame The frame to decorate[m
[32m+[m[32m   * @param $dompdf DOMPDF The dompdf instance[m
[32m+[m[32m   */[m
[32m+[m[32m  static function decorate_root(Frame $root, DOMPDF $dompdf) {[m
[32m+[m[32m    $frame = new Page_Frame_Decorator($root, $dompdf);[m
[32m+[m[32m    $frame->set_reflower( new Page_Frame_Reflower($frame) );[m
[32m+[m[32m    $root->set_decorator($frame);[m
[32m+[m[32m    return $frame;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Decorate a Frame[m[41m [m
[32m+[m[32m   *[m[41m [m
[32m+[m[32m   * @param $root Frame The frame to decorate[m
[32m+[m[32m   * @param $dompdf DOMPDF The dompdf instance[m
[32m+[m[32m   * @return Frame_Decorator[m
[32m+[m[32m   * FIXME: this is admittedly a little smelly...[m
[32m+[m[32m   */[m[41m [m
[32m+[m[32m  static function decorate_frame(Frame $frame, DOMPDF $dompdf) {[m
[32m+[m[32m    if ( is_null($dompdf) )[m
[32m+[m[32m      throw new Exception("foo");[m
[32m+[m[41m      [m
[32m+[m[32m    $style = $frame->get_style();[m
[32m+[m[41m    [m
[32m+[m[32m    switch ($style->display) {[m
[32m+[m[41m      [m
[32m+[m[32m    case "block":[m
[32m+[m[32m      $positioner = "Block";[m[41m        [m
[32m+[m[32m      $decorator = "Block";[m
[32m+[m[32m      $reflower = "Block";[m
[32m+[m[32m      break;[m
[32m+[m[41m    [m
[32m+[m[32m    case "inline-block":[m
[32m+[m[32m      $positioner = "Inline";[m
[32m+[m[32m      $decorator = "Block";[m
[32m+[m[32m      $reflower = "Block";[m
[32m+[m[32m      break;[m
[32m+[m
[32m+[m[32m    case "inline":[m
[32m+[m[32m      $positioner = "Inline";[m
[32m+[m[32m      if ( $frame->get_node()->nodeName === "#text" ) {[m
[32m+[m[32m        $decorator = "Text";[m
[32m+[m[32m        $reflower = "Text";[m
[32m+[m[32m      }[m[41m [m
[32m+[m[32m      else {[m
[32m+[m[32m        if ( DOMPDF_ENABLE_CSS_FLOAT && $style->float !== "none" ) {[m
[32m+[m[32m          $decorator = "Block";[m
[32m+[m[32m          $reflower = "Block";[m
[32m+[m[32m        }[m
[32m+[m[32m        else {[m
[32m+[m[32m          $decorator = "Inline";[m
[32m+[m[32m          $reflower = "Inline";[m
[32m+[m[32m        }[m
[32m+[m[32m      }[m
[32m+[m[32m      break;[m[41m   [m
[32m+[m
[32m+[m[32m    case "table":[m
[32m+[m[32m      $positioner = "Block";[m
[32m+[m[32m      $decorator = "Table";[m
[32m+[m[32m      $reflower = "Table";[m
[32m+[m[32m      break;[m
[32m+[m[41m      [m
[32m+[m[32m    case "inline-table":[m
[32m+[m[32m      $positioner = "Inline";[m
[32m+[m[32m      $decorator = "Table";[m
[32m+[m[32m      $reflower = "Table";[m
[32m+[m[32m      break;[m
[32m+[m
[32m+[m[32m    case "table-row-group":[m
[32m+[m[32m    case "table-header-group":[m
[32m+[m[32m    case "table-footer-group":[m
[32m+[m[32m      $positioner = "Null";[m
[32m+[m[32m      $decorator = "Table_Row_Group";[m
[32m+[m[32m      $reflower = "Table_Row_Group";[m
[32m+[m[32m      break;[m
[32m+[m[41m      [m
[32m+[m[32m    case "table-row":[m
[32m+[m[32m      $positioner = "Null";[m
[32m+[m[32m      $decorator = "Table_Row";[m
[32m+[m[32m      $reflower = "Table_Row";[m
[32m+[m[32m      break;[m
[32m+[m
[32m+[m[32m    case "table-cell":[m
[32m+[m[32m      $positioner = "Table_Cell";[m
[32m+[m[32m      $decorator = "Table_Cell";[m
[32m+[m[32m      $reflower = "Table_Cell";[m
[32m+[m[32m      break;[m
[32m+[m[41m        [m
[32m+[m[32m    case "list-item":[m
[32m+[m[32m      $positioner = "Block";[m
[32m+[m[32m      $decorator  = "Block";[m
[32m+[m[32m      $reflower   = "Block";[m
[32m+[m[32m      break;[m
[32m+[m
[32m+[m[32m    case "-dompdf-list-bullet":[m
[32m+[m[32m      if ( $style->list_style_position === "inside" )[m
[32m+[m[32m        $positioner = "Inline";[m
[32m+[m[32m      else[m[41m        [m
[32m+[m[32m        $positioner = "List_Bullet";[m
[32m+[m
[32m+[m[32m      if ( $style->list_style_image !== "none" )[m
[32m+[m[32m        $decorator = "List_Bullet_Image";[m
[32m+[m[32m      else[m
[32m+[m[32m        $decorator = "List_Bullet";[m
[32m+[m[41m      [m
[32m+[m[32m      $reflower = "List_Bullet";[m
[32m+[m[32m      break;[m
[32m+[m
[32m+[m[32m    case "-dompdf-image":[m
[32m+[m[32m      $positioner = "Inline";[m
[32m+[m[32m      $decorator = "Image";[m
[32m+[m[32m      $reflower = "Image";[m
[32m+[m[32m      break;[m
[32m+[m[41m      [m
[32m+[m[32m    case "-dompdf-br":[m
[32m+[m[32m      $positioner = "Inline";[m
[32m+[m[32m      $decorator = "Inline";[m
[32m+[m[32m      $reflower = "Inline";[m
[32m+[m[32m      break;[m
[32m+[m
[32m+[m[32m    default:[m
[32m+[m[32m      // FIXME: should throw some sort of warning or something?[m
[32m+[m[32m    case "none":[m
[32m+[m[32m      $positioner = "Null";[m
[32m+[m[32m      $decorator = "Null";[m
[32m+[m[32m      $reflower = "Null";[m
[32m+[m[32m      break;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    $position = $style->position;[m
[32m+[m[41m    [m
[32m+[m[32m    if ( $position === "absolute" )[m
[32m+[m[32m      $positioner = "Absolute";[m
[32m+[m
[32m+[m[32m    else if ( $position === "fixed" )[m
[32m+[m[32m      $positioner = "Fixed";[m
[32m+[m[41m  [m
[32m+[m[32m    $positioner .= "_Positioner";[m
[32m+[m[32m    $decorator .= "_Frame_Decorator";[m
[32m+[m[32m    $reflower .= "_Frame_Reflower";[m
[32m+[m
[32m+[m[32m    $deco = new $decorator($frame, $dompdf);[m
[32m+[m[32m    $deco->set_positioner( new $positioner($deco) );[m
[32m+[m[32m    $reflow = new $reflower($deco);[m
[32m+[m[41m    [m
[32m+[m[32m    $deco->set_reflower( $reflow );[m
[32m+[m[41m    [m
[32m+[m[32m    return $deco;[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[1mdiff --git a/application/third_party/dompdf/include/frame_reflower.cls.php b/application/third_party/dompdf/include/frame_reflower.cls.php[m
[1mnew file mode 100644[m
[1mindex 0000000..febe473[m
[1m--- /dev/null[m
[1m+++ b/application/third_party/dompdf/include/frame_reflower.cls.php[m
[36m@@ -0,0 +1,414 @@[m
[32m+[m[32m<?php[m
[32m+[m[32m/**[m
[32m+[m[32m * DOMPDF - PHP5 HTML to PDF renderer[m
[32m+[m[32m *[m
[32m+[m[32m * File: $RCSfile: frame_reflower.cls.php,v $[m
[32m+[m[32m * Created on: 2004-06-17[m
[32m+[m[32m *[m
[32m+[m[32m * Copyright (c) 2004 - Benj Carson <benjcarson@digitaljunkies.ca>[m
[32m+[m[32m *[m
[32m+[m[32m * This library is free software; you can redistribute it and/or[m
[32m+[m[32m * modify it under the terms of the GNU Lesser General Public[m
[32m+[m[32m * License as published by the Free Software Foundation; either[m
[32m+[m[32m * version 2.1 of the License, or (at your option) any later version.[m
[32m+[m[32m *[m
[32m+[m[32m * This library is distributed in the hope that it will be useful,[m
[32m+[m[32m * but WITHOUT ANY WARRANTY; without even the implied warranty of[m
[32m+[m[32m * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU[m
[32m+[m[32m * Lesser General Public License for more details.[m
[32m+[m[32m *[m
[32m+[m[32m * You should have received a copy of the GNU Lesser General Public License[m
[32m+[m[32m * along with this library in the file LICENSE.LGPL; if not, write to the[m
[32m+[m[32m * Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA[m
[32m+[m[32m * 02111-1307 USA[m
[32m+[m[32m *[m
[32m+[m[32m * Alternatively, you may distribute this software under the terms of the[m
[32m+[m[32m * PHP License, version 3.0 or later.  A copy of this license should have[m
[32m+[m[32m * been distributed with this file in the file LICENSE.PHP .  If this is not[m
[32m+[m[32m * the case, you can obtain a copy at http://www.php.net/license/3_0.txt.[m
[32m+[m[32m *[m
[32m+[m[32m * The latest version of DOMPDF might be available at:[m
[32m+[m[32m * http://www.dompdf.com/[m
[32m+[m[32m *[m
[32m+[m[32m * @link http://www.dompdf.com/[m
[32m+[m[32m * @copyright 2004 Benj Carson[m
[32m+[m[32m * @author Benj Carson <benjcarson@digitaljunkies.ca>[m
[32m+[m[32m * @package dompdf[m
[32m+[m
[32m+[m[32m */[m
[32m+[m
[32m+[m[32m/* $Id: frame_reflower.cls.php 357 2011-01-30 20:56:46Z fabien.menager $ */[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Base reflower class[m
[32m+[m[32m *[m
[32m+[m[32m * Reflower objects are responsible for determining the width and height of[m
[32m+[m[32m * individual frames.  They also create line and page breaks as necessary.[m
[32m+[m[32m *[m
[32m+[m[32m * @access private[m
[32m+[m[32m * @package dompdf[m
[32m+[m[32m */[m
[32m+[m[32mabstract class Frame_Reflower {[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Frame for this reflower[m
[32m+[m[32m   *[m
[32m+[m[32m   * @var Frame[m
[32m+[m[32m   */[m
[32m+[m[32m  protected $_frame;[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Cached min/max size[m
[32m+[m[32m   *[m
[32m+[m[32m   * @var array[m
[32m+[m[32m   */[m
[32m+[m[32m  protected $_min_max_cache;[m
[32m+[m[41m  [m
[32m+[m[32m  function __construct(Frame $frame) {[m
[32m+[m[32m    $this->_frame = $frame;[m
[32m+[m[32m    $this->_min_max_cache = null;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  function dispose() {[m
[32m+[m[32m    clear_object($this);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  protected function _collapse_margins() {[m
[32m+[m[32m    $cb = $this->_frame->get_containing_block();[m
[32m+[m[32m    $style = $this->_frame->get_style();[m
[32m+[m
[32m+[m[32m    $t = $style->length_in_pt($style->margin_top, $cb["h"]);[m
[32m+[m[32m    $b = $style->length_in_pt($style->margin_bottom, $cb["h"]);[m
[32m+[m
[32m+[m[32m    // Handle 'auto' values[m
[32m+[m[32m    if ( $t === "auto" ) {[m
[32m+[m[32m      $style->margin_top = "0pt";[m
[32m+[m[32m      $t = 0;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    if ( $b === "auto" ) {[m
[32m+[m[32m      $style->margin_bottom = "0pt";[m
[32m+[m[32m      $b = 0;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    // Collapse vertical margins:[m
[32m+[m[32m    $n = $this->_frame->get_next_sibling();[m
[32m+[m[41m    [m
[32m+[m[32m    // FIXME If there is a non-empty inline frame between the blocks, it is not taken into account[m
[32m+[m[32m    while ( $n && !in_array($n->get_style()->display, Style::$BLOCK_TYPES) ) {[m
[32m+[m[32m      $n = $n->get_next_sibling();[m
[32m+[m[32m    }[m
[32m+[m[41m    [m
[32m+[m[32m    if ( $n ) { // && !$n instanceof Page_Frame_Decorator ) {[m
[32m+[m[32m      $b = max($b, $style->length_in_pt($n->get_style()->margin_top, $cb["h"]));[m
[32m+[m[32m      $n->get_style()->margin_top = "0pt";[m
[32m+[m[32m      $style->margin_bottom = $b."pt";[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    // Collapse our first child's margin[m
[32m+[m[32m    $f = $this->_frame->get_first_child();[m
[32m+[m[32m    while ( $f && !in_array($f->get_style()->display, Style::$BLOCK_TYPES) )[m
[32m+[m[32m      $f = $f->get_next_sibling();[m
[32m+[m
[32m+[m[32m    // Margin are collapsed only between block elements[m
[32m+[m[32m    if ( $f && in_array($f->get_style()->display, Style::$BLOCK_TYPES)) {[m
[32m+[m[32m      $t = max( $t, $style->length_in_pt($f->get_style()->margin_top, $cb["h"]));[m
[32m+[m[32m      $style->margin_top = $t."pt";[m
[32m+[m[32m      $f->get_style()->margin_bottom = "0pt";[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  //........................................................................[m
[32m+[m
[32m+[m[32m  abstract function reflow(Frame_Decorator $block = null);[m
[32m+[m
[32m+[m[32m  //........................................................................[m
[32m+[m
[32m+[m[32m  // Required for table layout: Returns an array(0 => min, 1 => max, "min"[m
[32m+[m[32m  // => min, "max" => max) of the minimum and maximum widths of this frame.[m
[32m+[m[32m  // This provides a basic implementation.  Child classes should override[m
[32m+[m[32m  // this if necessary.[m
[32m+[m[32m  function get_min_max_width() {[m
[32m+[m[32m    if ( !is_null($this->_min_max_cache) ) {[m
[32m+[m[32m      return $this->_min_max_cache;[m
[32m+[m[32m    }[m
[32m+[m[41m    [m
[32m+[m[32m    $style = $this->_frame->get_style();[m
[32m+[m
[32m+[m[32m    // Account for margins & padding[m
[32m+[m[32m    $dims = array($style->padding_left,[m
[32m+[m[32m                  $style->padding_right,[m
[32m+[m[32m                  $style->border_left_width,[m
[32m+[m[32m                  $style->border_right_width,[m
[32m+[m[32m                  $style->margin_left,[m
[32m+[m[32m                  $style->margin_right);[m
[32m+[m
[32m+[m[32m    $cb_w = $this->_frame->get_containing_block("w");[m
[32m+[m[32m    $delta = $style->length_in_pt($dims, $cb_w);[m
[32m+[m
[32m+[m[32m    // Handle degenerate case[m
[32m+[m[32m    if ( !$this->_frame->get_first_child() )[m
[32m+[m[32m      return $this->_min_max_cache = array($delta, $delta,"min" => $delta, "max" => $delta);[m
[32m+[m
[32m+[m[32m    $low = array();[m
[32m+[m[32m    $high = array();[m
[32m+[m
[32m+[m[32m    for ( $iter = $this->_frame->get_children()->getIterator();[m
[32m+[m[32m          $iter->valid();[m
[32m+[m[32m          $iter->next() ) {[m
[32m+[m
[32m+[m[32m      $inline_min = 0;[m
[32m+[m[32m      $inline_max = 0;[m
[32m+[m
[32m+[m[32m      // Add all adjacent inline widths together to calculate max width[m
[32m+[m[32m      while ( $iter->valid() && in_array( $iter->current()->get_style()->display, Style::$INLINE_TYPES ) ) {[m
[32m+[m
[32m+[m[32m        $child = $iter->current();[m
[32m+[m
[32m+[m[32m        $minmax = $child->get_min_max_width();[m
[32m+[m
[32m+[m[32m        if ( in_array( $iter->current()->get_style()->white_space, array("pre", "nowrap") ) )[m
[32m+[m[32m          $inline_min += $minmax["min"];[m
[32m+[m[32m        else[m
[32m+[m[32m          $low[] = $minmax["min"];[m
[32m+[m
[32m+[m[32m        $inline_max += $minmax["max"];[m
[32m+[m[32m        $iter->next();[m
[32m+[m
[32m+[m[32m      }[m
[32m+[m
[32m+[m[32m      if ( $inline_max > 0 )[m
[32m+[m[32m        $high[] = $inline_max;[m
[32m+[m
[32m+[m[32m      if ( $inline_min > 0 )[m
[32m+[m[32m        $low[] = $inline_min;[m
[32m+[m
[32m+[m[32m      if ( $iter->valid() ) {[m
[32m+[m[32m        list($low[], $high[]) = $iter->current()->get_min_max_width();[m
[32m+[m[32m        continue;[m
[32m+[m[32m      }[m
[32m+[m
[32m+[m[32m    }[m
[32m+[m[32m    $min = count($low) ? max($low) : 0;[m
[32m+[m[32m    $max = count($high) ? max($high) : 0;[m
[32m+[m
[32m+[m[32m    // Use specified width if it is greater than the minimum defined by the[m
[32m+[m[32m    // content.  If the width is a percentage ignore it for now.[m
[32m+[m[32m    $width = $style->width;[m
[32m+[m[32m    if ( $width !== "auto" && !is_percent($width) ) {[m
[32m+[m[32m      $width = $style->length_in_pt($width, $cb_w);[m
[32m+[m[32m      if ( $min < $width )[m
[32m+[m[32m        $min = $width;[m
[32m+[m[32m      if ( $max < $width )[m
[32m+[m[32m        $max = $width;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    $min += $delta;[m
[32m+[m[32m    $max += $delta;[m
[32m+[m[32m    return $this->_min_max_cache = array($min, $max, "min"=>$min, "max"=>$max);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Parses a CSS string containing quotes and escaped hex characters[m
[32m+[m[32m   *[m[41m [m
[32m+[m[32m   * @param $string string The CSS string to parse[m
[32m+[m[32m   * @param $single_trim[m
[32m+[m[32m   * @return string[m
[32m+[m[32m   */[m
[32m+[m[32m  protected function _parse_string($string, $single_trim = false) {[m
[32m+[m[32m    if ($single_trim) {[m
[32m+[m[32m      $string = preg_replace("/^[\"\']/", "", $string);[m
[32m+[m[32m      $string = preg_replace("/[\"\']$/", "", $string);[m
[32m+[m[32m    }[m
[32m+[m[32m    else {[m
[32m+[m[32m      $string = trim($string, "'\"");[m
[32m+[m[32m    }[m
[32m+[m[41m    [m
[32m+[m[32m    $string = str_replace(array("\\\n",'\\"',"\\'"),[m
[32m+[m[32m                          array("",'"',"'"), $string);[m
[32m+[m
[32m+[m[32m    // Convert escaped hex characters into ascii characters (e.g. \A => newline)[m
[32m+[m[32m    $string = preg_replace_callback("/\\\\([0-9a-fA-F]{0,6})(\s)?(?(2)|(?=[^0-9a-fA-F]))/",[m
[32m+[m[32m                                    create_function('$matches',[m
[32m+[m[32m                                                    'return chr(hexdec($matches[1]));'),[m
[32m+[m[32m                                    $string);[m
[32m+[m[32m    return $string;[m
[32m+[m[32m  }[m
[32m+[m[41m  [m
[32m+[m[32m  /**[m
[32m+[m[32m   * Parses a CSS "quotes" property[m
[32m+[m[32m   *[m[41m [m
[32m+[m[32m   * @return array An array of pairs of quotes[m
[32m+[m[32m   */[m
[32m+[m[32m  protected function _parse_quotes() {[m
[32m+[m[41m    [m
[32m+[m[32m    // Matches quote types[m
[32m+[m[32m    $re = "/(\'[^\']*\')|(\"[^\"]*\")/";[m
[32m+[m[41m    [m
[32m+[m[32m    $quotes = $this->_frame->get_style()->quotes;[m
[32m+[m[41m      [m
[32m+[m[32m    // split on spaces, except within quotes[m
[32m+[m[32m    if (!preg_match_all($re, "$quotes", $matches, PREG_SET_ORDER))[m
[32m+[m[32m      return;[m
[32m+[m[41m      [m
[32m+[m[32m    $quotes_array = array();[m
[32m+[m[32m    foreach($matches as &$_quote){[m
[32m+[m[32m      $quotes_array[] = $this->_parse_string($_quote[0], true);[m
[32m+[m[32m    }[m
[32m+[m[41m    [m
[32m+[m[32m    if ( empty($quotes_array) ) {[m
[32m+[m[32m      $quotes_array = array('"', '"');[m
[32m+[m[32m    }[m
[32m+[m[41m    [m
[32m+[m[32m    return array_chunk($quotes_array, 2);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Parses the CSS "content" property[m
[32m+[m[32m   *[m[41m [m
[32m+[m[32m   * @return string The resulting string[m
[32m+[m[32m   */[m
[32m+[m[32m  protected function _parse_content() {[m
[32m+[m
[32m+[m[32m    // Matches generated content[m
[32m+[m[32m    $re = "/\n".[m
[32m+[m[32m      "\s(counters?\\([^)]*\\))|\n".[m
[32m+[m[32m      "\A(counters?\\([^)]*\\))|\n".[m
[32m+[m[32m      "\s([\"']) ( (?:[^\"']|\\\\[\"'])+ )(?<!\\\\)\\3|\n".[m
[32m+[m[32m      "\A([\"']) ( (?:[^\"']|\\\\[\"'])+ )(?<!\\\\)\\5|\n" .[m
[32m+[m[32m      "\s([^\s\"']+)|\n" .[m
[32m+[m[32m      "\A([^\s\"']+)\n".[m
[32m+[m[32m      "/xi";[m
[32m+[m[41m    [m
[32m+[m[32m    $content = $this->_frame->get_style()->content;[m
[32m+[m
[32m+[m[32m    $quotes = $this->_parse_quotes();[m
[32m+[m[41m    [m
[32m+[m[32m    // split on spaces, except within quotes[m
[32m+[m[32m    if (!preg_match_all($re, $content, $matches, PREG_SET_ORDER))[m
[32m+[m[32m      return;[m
[32m+[m[41m      [m
[32m+[m[32m    $text = "";[m
[32m+[m
[32m+[m[32m    foreach ($matches as $match) {[m
[32m+[m[41m      [m
[32m+[m[32m      if ( isset($match[2]) && $match[2] !== "" )[m
[32m+[m[32m        $match[1] = $match[2];[m
[32m+[m
[32m+[m[32m      if ( isset($match[6]) && $match[6] !== "" )[m
[32m+[m[32m        $match[4] = $match[6];[m
[32m+[m
[32m+[m[32m      if ( isset($match[8]) && $match[8] !== "" )[m
[32m+[m[32m        $match[7] = $match[8];[m
[32m+[m
[32m+[m[32m      if ( isset($match[1]) && $match[1] !== "" ) {[m
[32m+[m[41m        [m
[32m+[m[32m        // counters?(...)[m
[32m+[m[32m        $match[1] = mb_strtolower(trim($match[1]));[m
[32m+[m
[32m+[m[32m        // Handle counter() references:[m
[32m+[m[32m        // http://www.w3.org/TR/CSS21/generate.html#content[m
[32m+[m
[32m+[m[32m        $i = mb_strpos($match[1], ")");[m
[32m+[m[32m        if ( $i === false )[m
[32m+[m[32m          continue;[m
[32m+[m
[32m+[m[32m        $args = explode(",", mb_substr($match[1], 8, $i - 8));[m
[32m+[m[32m        $counter_id = $args[0];[m
[32m+[m
[32m+[m[32m        if ( $match[1][7] === "(" ) {[m
[32m+[m[32m          // counter(name [,style])[m
[32m+[m
[32m+[m[32m          if ( isset($args[1]) )[m
[32m+[m[32m            $type = trim($args[1]);[m
[32m+[m[32m          else[m
[32m+[m[32m            $type = null;[m
[32m+[m
[32m+[m[32m          $p = $this->_frame->find_block_parent();[m
[32m+[m
[32m+[m[32m          $text .= $p->counter_value($counter_id, $type);[m
[32m+[m
[32m+[m[32m        } else if ( $match[1][7] === "s" ) {[m
[32m+[m[32m          // counters(name, string [,style])[m
[32m+[m[32m          if ( isset($args[1]) )[m
[32m+[m[32m            $string = $this->_parse_string(trim($args[1]));[m
[32m+[m[32m          else[m
[32m+[m[32m            $string = "";[m
[32m+[m
[32m+[m[32m          if ( isset($args[2]) )[m
[32m+[m[32m            $type = $args[2];[m
[32m+[m[32m          else[m
[32m+[m[32m            $type = null;[m
[32m+[m
[32m+[m[32m          $p = $this->_frame->find_block_parent();[m
[32m+[m[32m          $tmp = "";[m
[32m+[m[32m          while ($p) {[m
[32m+[m[32m            $tmp = $p->counter_value($counter_id, $type) . $string . $tmp;[m
[32m+[m[32m            $p = $p->find_block_parent();[m
[32m+[m[32m          }[m
[32m+[m[32m          $text .= $tmp;[m
[32m+[m
[32m+[m[32m        } else[m
[32m+[m[32m          // countertops?[m
[32m+[m[32m          continue;[m
[32m+[m
[32m+[m[32m      } else if ( isset($match[4]) && $match[4] !== "" ) {[m
[32m+[m[32m        // String match[m
[32m+[m[32m        $text .= $this->_parse_string($match[4]);[m
[32m+[m
[32m+[m[32m      } else if ( isset($match[7]) && $match[7] !== "" ) {[m
[32m+[m[32m        // Directive match[m
[32m+[m
[32m+[m[32m        if ( $match[7] === "open-quote" ) {[m
[32m+[m[32m          // FIXME: do something here[m
[32m+[m[32m          $text .= $quotes[0][0];[m
[32m+[m[32m        } else if ( $match[7] === "close-quote" ) {[m
[32m+[m[32m          // FIXME: do something else here[m
[32m+[m[32m          $text .= $quotes[0][1];[m
[32m+[m[32m        } else if ( $match[7] === "no-open-quote" ) {[m
[32m+[m[32m          // FIXME:[m
[32m+[m[32m        } else if ( $match[7] === "no-close-quote" ) {[m
[32m+[m[32m          // FIXME:[m
[32m+[m[32m        } else if ( mb_strpos($match[7],"attr(") === 0 ) {[m
[32m+[m
[32m+[m[32m          $i = mb_strpos($match[7],")");[m
[32m+[m[32m          if ( $i === false )[m
[32m+[m[32m            continue;[m
[32m+[m
[32m+[m[32m          $attr = mb_substr($match[7], 5, $i - 5);[m
[32m+[m[32m          if ( $attr == "" )[m
[32m+[m[32m            continue;[m
[32m+[m[41m            [m
[32m+[m[32m          $text .= $this->_frame->get_parent()->get_node()->getAttribute($attr);[m
[32m+[m[32m        } else[m
[32m+[m[32m          continue;[m
[32m+[m[32m      }[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    return $text;[m
[32m+[m[32m  }[m
[32m+[m[41m  [m
[32m+[m[32m  /**[m
[32m+[m[32m   * Sets the generated content of a generated frame[m
[32m+[m[32m   */[m
[32m+[m[32m  protected function _set_content(){[m
[32m+[m[32m    $frame = $this->_frame;[m
[32m+[m[32m    $style = $frame->get_style();[m
[32m+[m[41m  [m
[32m+[m[32m    if ( $style->content && $frame->get_node()->nodeName === "dompdf_generated" ) {[m
[32m+[m[32m      $content = $this->_parse_content();[m
[32m+[m[32m      $node = $frame->get_node()->ownerDocument->createTextNode($content);[m
[32m+[m[41m      [m
[32m+[m[32m      $new_style = $style->get_stylesheet()->create_style();[m
[32m+[m[32m      $new_style->inherit($style);[m
[32m+[m[41m      [m
[32m+[m[32m      $new_frame = new Frame($node);[m
[32m+[m[32m      $new_frame->set_style($new_style);[m
[32m+[m[41m      [m
[32m+[m[32m      Frame_Factory::decorate_frame($new_frame, $frame->get_dompdf());[m
[32m+[m[32m      $new_frame->get_decorator()->set_root($frame->get_root());[m
[32m+[m[32m      $frame->append_child($new_frame);[m
[32m+[m[32m    }[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[1mdiff --git a/application/third_party/dompdf/include/frame_tree.cls.php b/application/third_party/dompdf/include/frame_tree.cls.php[m
[1mnew file mode 100644[m
[1mindex 0000000..3d5d214[m
[1m--- /dev/null[m
[1m+++ b/application/third_party/dompdf/include/frame_tree.cls.php[m
[36m@@ -0,0 +1,230 @@[m
[32m+[m[32m<?php[m
[32m+[m[32m/**[m
[32m+[m[32m * DOMPDF - PHP5 HTML to PDF renderer[m
[32m+[m[32m *[m
[32m+[m[32m * File: $RCSfile: frame_tree.cls.php,v $[m
[32m+[m[32m * Created on: 2004-06-02[m
[32m+[m[32m *[m
[32m+[m[32m * Copyright (c) 2004 - Benj Carson <benjcarson@digitaljunkies.ca>[m
[32m+[m[32m *[m
[32m+[m[32m * This library is free software; you can redistribute it and/or[m
[32m+[m[32m * modify it under the terms of the GNU Lesser General Public[m
[32m+[m[32m * License as published by the Free Software Foundation; either[m
[32m+[m[32m * version 2.1 of the License, or (at your option) any later version.[m
[32m+[m[32m *[m
[32m+[m[32m * This library is distributed in the hope that it will be useful,[m
[32m+[m[32m * but WITHOUT ANY WARRANTY; without even the implied warranty of[m
[32m+[m[32m * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU[m
[32m+[m[32m * Lesser General Public License for more details.[m
[32m+[m[32m *[m
[32m+[m[32m * You should have received a copy of the GNU Lesser General Public License[m
[32m+[m[32m * along with this library in the file LICENSE.LGPL; if not, write to the[m
[32m+[m[32m * Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA[m
[32m+[m[32m * 02111-1307 USA[m
[32m+[m[32m *[m
[32m+[m[32m * Alternatively, you may distribute this software under the terms of the[m
[32m+[m[32m * PHP License, version 3.0 or later.  A copy of this license should have[m
[32m+[m[32m * been distributed with this file in the file LICENSE.PHP .  If this is not[m
[32m+[m[32m * the case, you can obtain a copy at http://www.php.net/license/3_0.txt.[m
[32m+[m[32m *[m
[32m+[m[32m * The latest version of DOMPDF might be available at:[m
[32m+[m[32m * http://www.dompdf.com/[m
[32m+[m[32m *[m
[32m+[m[32m * @link http://www.dompdf.com/[m
[32m+[m[32m * @copyright 2004 Benj Carson[m
[32m+[m[32m * @author Benj Carson <benjcarson@digitaljunkies.ca>[m
[32m+[m[32m * @package dompdf[m
[32m+[m
[32m+[m[32m */[m
[32m+[m
[32m+[m[32m/* $Id: frame_tree.cls.php 332 2010-11-27 14:06:34Z fabien.menager $ */[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Represents an entire document as a tree of frames[m
[32m+[m[32m *[m
[32m+[m[32m * The Frame_Tree consists of {@link Frame} objects each tied to specific[m
[32m+[m[32m * DomNode objects in a specific DomDocument.  The Frame_Tree has the same[m
[32m+[m[32m * structure as the DomDocument, but adds additional capabalities for[m
[32m+[m[32m * styling and layout.[m
[32m+[m[32m *[m
[32m+[m[32m * @package dompdf[m
[32m+[m[32m * @access protected[m
[32m+[m[32m */[m
[32m+[m[32mclass Frame_Tree {[m
[32m+[m[41m    [m
[32m+[m[32m  /**[m
[32m+[m[32m   * Tags to ignore while parsing the tree[m
[32m+[m[32m   *[m
[32m+[m[32m   * @var array[m
[32m+[m[32m   */[m
[32m+[m[32m  static protected $_HIDDEN_TAGS = array("area", "base", "basefont", "head", "style",[m
[32m+[m[32m                                         "meta", "title", "colgroup",[m
[32m+[m[32m                                         "noembed", "noscript", "param", "#comment");[m[41m  [m
[32m+[m[32m  /**[m
[32m+[m[32m   * The main DomDocument[m
[32m+[m[32m   *[m
[32m+[m[32m   * @see http://ca2.php.net/manual/en/ref.dom.php[m
[32m+[m[32m   * @var DomDocument[m
[32m+[m[32m   */[m
[32m+[m[32m  protected $_dom;[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * The root node of the FrameTree.[m
[32m+[m[32m   *[m
[32m+[m[32m   * @var Frame[m
[32m+[m[32m   */[m
[32m+[m[32m  protected $_root;[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Subtrees of absolutely positioned elements[m
[32m+[m[32m   *[m
[32m+[m[32m   * @var array of Frames[m
[32m+[m[32m   */[m
[32m+[m[32m  protected $_absolute_frames;[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * A mapping of {@link Frame} objects to DomNode objects[m
[32m+[m[32m   *[m
[32m+[m[32m   * @var array[m
[32m+[m[32m   */[m
[32m+[m[32m  protected $_registry;[m
[32m+[m[41m  [m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Class constructor[m
[32m+[m[32m   *[m
[32m+[m[32m   * @param DomDocument $dom the main DomDocument object representing the current html document[m
[32m+[m[32m   */[m
[32m+[m[32m  function __construct(DomDocument $dom) {[m
[32m+[m[32m    $this->_dom = $dom;[m
[32m+[m[32m    $this->_root = null;[m
[32m+[m[32m    $this->_registry = array();[m
[32m+[m[32m  }[m
[32m+[m[41m  [m
[32m+[m[32m  function __destruct() {[m
[32m+[m[32m    clear_object($this);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Returns the DomDocument object representing the curent html document[m
[32m+[m[32m   *[m
[32m+[m[32m   * @return DomDocument[m
[32m+[m[32m   */[m
[32m+[m[32m  function get_dom() { return $this->_dom; }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Returns the root frame of the tree[m
[32m+[m[32m   *[m
[32m+[m[32m   * @return Frame[m
[32m+[m[32m   */[m
[32m+[m[32m  function get_root() { return $this->_root; }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Returns a specific frame given its id[m
[32m+[m[32m   *[m
[32m+[m[32m   * @param string $id[m
[32m+[m[32m   * @return Frame[m
[32m+[m[32m   */[m
[32m+[m[32m  function get_frame($id) { return isset($this->_registry[$id]) ? $this->_registry[$id] : null; }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Returns a post-order iterator for all frames in the tree[m
[32m+[m[32m   *[m
[32m+[m[32m   * @return FrameTreeList[m
[32m+[m[32m   */[m
[32m+[m[32m  function get_frames() { return new FrameTreeList($this->_root); }[m
[32m+[m[41m      [m
[32m+[m[32m  /**[m
[32m+[m[32m   * Builds the tree[m
[32m+[m[32m   */[m
[32m+[m[32m  function build_tree() {[m
[32m+[m[32m    $html = $this->_dom->getElementsByTagName("html")->item(0);[m
[32m+[m[32m    if ( is_null($html) )[m
[32m+[m[32m      $html = $this->_dom->firstChild;[m
[32m+[m
[32m+[m[32m    if ( is_null($html) )[m
[32m+[m[32m      throw new DOMPDF_Exception("Requested HTML document contains no data.");[m
[32m+[m
[32m+[m[32m    $this->_root = $this->_build_tree_r($html);[m
[32m+[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Recursively adds {@link Frame} objects to the tree[m
[32m+[m[32m   *[m
[32m+[m[32m   * Recursively build a tree of Frame objects based on a dom tree.[m
[32m+[m[32m   * No layout information is calculated at this time, although the[m
[32m+[m[32m   * tree may be adjusted (i.e. nodes and frames for generated content[m
[32m+[m[32m   * and images may be created).[m
[32m+[m[32m   *[m
[32m+[m[32m   * @param DomNode $node the current DomNode being considered[m
[32m+[m[32m   * @return Frame[m
[32m+[m[32m   */[m
[32m+[m[32m  protected function _build_tree_r(DomNode $node) {[m
[32m+[m[41m    [m
[32m+[m[32m    $frame = new Frame($node);[m
[32m+[m[32m    $id = $frame->get_id();[m
[32m+[m[32m    $this->_registry[ $id ] = $frame;[m
[32m+[m[41m    [m
[32m+[m[32m    if ( !$node->hasChildNodes() )[m
[32m+[m[32m      return $frame;[m
[32m+[m
[32m+[m[32m    // Fixes 'cannot access undefined property for object with[m
[32m+[m[32m    // overloaded access', fix by Stefan radulian[m
[32m+[m[32m    // <stefan.radulian@symbion.at>[m[41m    [m
[32m+[m[32m    //foreach ($node->childNodes as $child) {[m
[32m+[m
[32m+[m[32m    // Store the children in an array so that the tree can be modified[m
[32m+[m[32m    $children = array();[m
[32m+[m[32m    for ($i = 0; $i < $node->childNodes->length; $i++)[m
[32m+[m[32m      $children[] = $node->childNodes->item($i);[m
[32m+[m
[32m+[m[32m    foreach ($children as $child) {[m
[32m+[m[32m      $node_name = mb_strtolower($child->nodeName);[m
[32m+[m[41m      [m
[32m+[m[32m      // Skip non-displaying nodes[m
[32m+[m[32m      if ( in_array($node_name, self::$_HIDDEN_TAGS) )  {[m
[32m+[m[32m        if ( $node_name !== "head" &&[m
[32m+[m[32m             $node_name !== "style" )[m[41m [m
[32m+[m[32m          $child->parentNode->removeChild($child);[m
[32m+[m[32m        continue;[m
[32m+[m[32m      }[m
[32m+[m
[32m+[m[32m      // Skip empty text nodes[m
[32m+[m[32m      if ( $node_name === "#text" && $child->nodeValue == "" ) {[m
[32m+[m[32m        $child->parentNode->removeChild($child);[m
[32m+[m[32m        continue;[m
[32m+[m[32m      }[m
[32m+[m
[32m+[m[32m      // Skip empty image nodes[m
[32m+[m[32m      if ( $node_name === "img" && $child->getAttribute("src") == "" ) {[m
[32m+[m[32m        $child->parentNode->removeChild($child);[m
[32m+[m[32m        continue;[m
[32m+[m[32m      }[m
[32m+[m[41m      [m
[32m+[m[32m      $frame->append_child($this->_build_tree_r($child), false);[m
[32m+[m[32m    }[m
[32m+[m[41m    [m
[32m+[m[32m    return $frame;[m
[32m+[m[32m  }[m
[32m+[m[41m  [m
[32m+[m[32m  public function insert_node(DOMNode $node, DOMNode $new_node, $pos) {[m
[32m+[m[32m    if ($pos === "after" || !$node->firstChild)[m
[32m+[m[32m      $node->appendChild($new_node);[m
[32m+[m[32m    else[m[41m [m
[32m+[m[32m      $node->insertBefore($new_node, $node->firstChild);[m
[32m+[m[41m    [m
[32m+[m[32m    $this->_build_tree_r($new_node);[m
[32m+[m[41m    [m
[32m+[m[32m    $frame_id = $new_node->getAttribute("frame_id");[m
[32m+[m[32m    $frame = $this->get_frame($frame_id);[m
[32m+[m[41m    [m
[32m+[m[32m    $parent_id = $node->getAttribute("frame_id");[m
[32m+[m[32m    $parent = $this->get_frame($parent_id);[m
[32m+[m[41m    [m
[32m+[m[32m    if ($pos === "before")[m
[32m+[m[32m      $parent->prepend_child($frame, false);[m
[32m+[m[32m    else[m[41m [m
[32m+[m[32m      $parent->append_child($frame, false);[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[1mdiff --git a/application/third_party/dompdf/include/functions.inc.php b/application/third_party/dompdf/include/functions.inc.php[m
[1mnew file mode 100644[m
[1mindex 0000000..23c3b1a[m
[1m--- /dev/null[m
[1m+++ b/application/third_party/dompdf/include/functions.inc.php[m
[36m@@ -0,0 +1,942 @@[m
[32m+[m[32m<?php[m
[32m+[m[32m/**[m
[32m+[m[32m * DOMPDF - PHP5 HTML to PDF renderer[m
[32m+[m[32m *[m
[32m+[m[32m * File: $RCSfile: functions.inc.php,v $[m
[32m+[m[32m * Created on: 2004-08-04[m
[32m+[m[32m *[m
[32m+[m[32m * Copyright (c) 2004 - Benj Carson <benjcarson@digitaljunkies.ca>[m
[32m+[m[32m *[m
[32m+[m[32m * This library is free software; you can redistribute it and/or[m
[32m+[m[32m * modify it under the terms of the GNU Lesser General Public[m
[32m+[m[32m * License as published by the Free Software Foundation; either[m
[32m+[m[32m * version 2.1 of the License, or (at your option) any later version.[m
[32m+[m[32m *[m
[32m+[m[32m * This library is distributed in the hope that it will be useful,[m
[32m+[m[32m * but WITHOUT ANY WARRANTY; without even the implied warranty of[m
[32m+[m[32m * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU[m
[32m+[m[32m * Lesser General Public License for more details.[m
[32m+[m[32m *[m
[32m+[m[32m * You should have received a copy of the GNU Lesser General Public License[m
[32m+[m[32m * along with this library in the file LICENSE.LGPL; if not, write to the[m
[32m+[m[32m * Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA[m
[32m+[m[32m * 02111-1307 USA[m
[32m+[m[32m *[m
[32m+[m[32m * Alternatively, you may distribute this software under the terms of the[m
[32m+[m[32m * PHP License, version 3.0 or later.  A copy of this license should have[m
[32m+[m[32m * been distributed with this file in the file LICENSE.PHP .  If this is not[m
[32m+[m[32m * the case, you can obtain a copy at http://www.php.net/license/3_0.txt.[m
[32m+[m[32m *[m
[32m+[m[32m * The latest version of DOMPDF might be available at:[m
[32m+[m[32m * http://www.dompdf.com/[m
[32m+[m[32m *[m
[32m+[m[32m * @link http://www.dompdf.com/[m
[32m+[m[32m * @copyright 2004 Benj Carson[m
[32m+[m[32m * @author Benj Carson <benjcarson@digitaljunkies.ca>[m
[32m+[m[32m * @contributor Helmut Tischer <htischer@weihenstephan.org>[m
[32m+[m[32m * @package dompdf[m
[32m+[m[32m *[m
[32m+[m[32m * Changes[m
[32m+[m[32m * @contributor Helmut Tischer <htischer@weihenstephan.org>[m
[32m+[m[32m * @version 0.5.1.htischer.20090507[m
[32m+[m[32m * - trailing slash of base_path in build_url is no longer optional when[m
[32m+[m[32m *   required. This allows paths not ending in a slash, e.g. on dynamically[m
[32m+[m[32m *   created sites with page id in the url parameters.[m
[32m+[m[32m * @version 20090601[m
[32m+[m[32m * - fix windows paths[m
[32m+[m[32m * @version 20090610[m
[32m+[m[32m * - relax windows path syntax, use uniform path delimiter. Used for background images.[m
[32m+[m[32m */[m
[32m+[m
[32m+[m[32m/* $Id: functions.inc.php 361 2011-02-16 21:03:05Z fabien.menager $ */[m
[32m+[m
[32m+[m[32mfunction def($name, $value = true) {[m
[32m+[m[32m  if (!defined($name)) {[m
[32m+[m[32m    define($name, $value);[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mif ( !function_exists("pre_r") ) {[m
[32m+[m[32m/**[m
[32m+[m[32m * print_r wrapper for html/cli output[m
[32m+[m[32m *[m
[32m+[m[32m * Wraps print_r() output in < pre > tags if the current sapi is not[m
[32m+[m[32m * 'cli'.  Returns the output string instead of displaying it if $return is[m
[32m+[m[32m * true.[m
[32m+[m[32m *[m
[32m+[m[32m * @param mixed $mixed variable or expression to display[m
[32m+[m[32m * @param bool $return[m
[32m+[m[32m *[m
[32m+[m[32m */[m
[32m+[m[32mfunction pre_r($mixed, $return = false) {[m
[32m+[m[32m  if ($return)[m
[32m+[m[32m    return "<pre>" . print_r($mixed, true) . "</pre>";[m
[32m+[m
[32m+[m[32m  if ( php_sapi_name() !== "cli")[m
[32m+[m[32m    echo ("<pre>");[m
[32m+[m[32m  print_r($mixed);[m
[32m+[m
[32m+[m[32m  if ( php_sapi_name() !== "cli")[m
[32m+[m[32m    echo("</pre>");[m
[32m+[m[32m  else[m
[32m+[m[32m    echo ("\n");[m
[32m+[m[32m  flush();[m
[32m+[m
[32m+[m[32m}[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mif ( !function_exists("pre_var_dump") ) {[m
[32m+[m[32m/**[m
[32m+[m[32m * var_dump wrapper for html/cli output[m
[32m+[m[32m *[m
[32m+[m[32m * Wraps var_dump() output in < pre > tags if the current sapi is not[m
[32m+[m[32m * 'cli'.[m
[32m+[m[32m *[m
[32m+[m[32m * @param mixed $mixed variable or expression to display.[m
[32m+[m[32m */[m
[32m+[m[32mfunction pre_var_dump($mixed) {[m
[32m+[m[32m  if ( php_sapi_name() !== "cli")[m
[32m+[m[32m    echo("<pre>");[m
[32m+[m[41m    [m
[32m+[m[32m  var_dump($mixed);[m
[32m+[m[41m  [m
[32m+[m[32m  if ( php_sapi_name() !== "cli")[m
[32m+[m[32m    echo("</pre>");[m
[32m+[m[32m}[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mif ( !function_exists("d") ) {[m
[32m+[m[32m/**[m
[32m+[m[32m * generic debug function[m
[32m+[m[32m *[m
[32m+[m[32m * Takes everything and does its best to give a good debug output[m
[32m+[m[32m *[m
[32m+[m[32m * @param mixed $mixed variable or expression to display.[m
[32m+[m[32m */[m
[32m+[m[32mfunction d($mixed) {[m
[32m+[m[32m  if ( php_sapi_name() !== "cli")[m
[32m+[m[32m    echo("<pre>");[m
[32m+[m[41m    [m
[32m+[m[32m  // line[m
[32m+[m[32m  if (is_array($mixed) && array_key_exists("tallest_frame", $mixed)) {[m
[32m+[m[32m    echo "<strong>LINE</strong>:\n";[m
[32m+[m[32m    foreach($mixed as $key => $value) {[m
[32m+[m[32m      if (is_array($value) || is_object($value)) continue;[m
[32m+[m[32m      echo "  $key:\t".var_export($value,true)."\n";[m
[32m+[m[32m    }[m
[32m+[m[32m  }[m
[32m+[m[41m  [m
[32m+[m[32m  // other[m
[32m+[m[32m  else {[m
[32m+[m[32m    var_export($mixed);[m
[32m+[m[32m  }[m
[32m+[m[41m  [m
[32m+[m[32m  if ( php_sapi_name() !== "cli")[m
[32m+[m[32m    echo("</pre>");[m
[32m+[m[32m}[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * builds a full url given a protocol, hostname, base path and url[m
[32m+[m[32m *[m
[32m+[m[32m * @param string $protocol[m
[32m+[m[32m * @param string $host[m
[32m+[m[32m * @param string $base_path[m
[32m+[m[32m * @param string $url[m
[32m+[m[32m * @return string[m
[32m+[m[32m *[m
[32m+[m[32m * Initially the trailing slash of $base_path was optional, and conditionally appended.[m
[32m+[m[32m * However on dynamically created sites, where the page is given as url parameter,[m
[32m+[m[32m * the base path might not end with an url.[m
[32m+[m[32m * Therefore do not append a slash, and **require** the $base_url to ending in a slash[m
[32m+[m[32m * when needed.[m
[32m+[m[32m * Vice versa, on using the local file system path of a file, make sure that the slash[m
[32m+[m[32m * is appended (o.k. also for Windows)[m
[32m+[m[32m */[m
[32m+[m[32mfunction build_url($protocol, $host, $base_path, $url) {[m
[32m+[m[32m  if ( mb_strlen($url) == 0 ) {[m
[32m+[m[32m    //return $protocol . $host . rtrim($base_path, "/\\") . "/";[m
[32m+[m[32m    return $protocol . $host . $base_path;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  // Is the url already fully qualified or a Data URI?[m
[32m+[m[32m  if ( mb_strpos($url, "://") !== false || mb_strpos($url, "data:") === 0 )[m
[32m+[m[32m    return $url;[m
[32m+[m
[32m+[m[32m  $ret = $protocol;[m
[32m+[m
[32m+[m[32m  if (!in_array(mb_strtolower($protocol), array("http://", "https://", "ftp://", "ftps://"))) {[m
[32m+[m[32m    //On Windows local file, an abs path can begin also with a '\' or a drive letter and colon[m
[32m+[m[32m    //drive: followed by a relative path would be a drive specific default folder.[m
[32m+[m[32m    //not known in php app code, treat as abs path[m
[32m+[m[32m    //($url[1] !== ':' || ($url[2]!=='\\' && $url[2]!=='/'))[m
[32m+[m[32m    if ($url[0] !== '/' && (strtoupper(substr(PHP_OS, 0, 3)) !== 'WIN' || ($url[0] !== '\\' && $url[1] !== ':'))) {[m
[32m+[m[32m      // For rel path and local acess we ignore the host, and run the path through realpath()[m
[32m+[m[32m      $ret .= realpath($base_path).'/';[m
[32m+[m[32m    }[m
[32m+[m[32m    $ret .= $url;[m
[32m+[m[32m    $ret = preg_replace("/\?(.*)$/", "", $ret);[m
[32m+[m[32m    return $ret;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  //remote urls with backslash in html/css are not really correct, but lets be genereous[m
[32m+[m[32m  if ( $url[0] === '/' || $url[0] === '\\' ) {[m
[32m+[m[32m    // Absolute path[m
[32m+[m[32m    $ret .= $host . $url;[m
[32m+[m[32m  } else {[m
[32m+[m[32m    // Relative path[m
[32m+[m[32m    //$base_path = $base_path !== "" ? rtrim($base_path, "/\\") . "/" : "";[m
[32m+[m[32m    $ret .= $host . $base_path . $url;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  return $ret;[m
[32m+[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * parse a full url or pathname and return an array(protocol, host, path,[m
[32m+[m[32m * file + query + fragment)[m
[32m+[m[32m *[m
[32m+[m[32m * @param string $url[m
[32m+[m[32m * @return array[m
[32m+[m[32m */[m
[32m+[m[32mfunction explode_url($url) {[m
[32m+[m[32m  $protocol = "";[m
[32m+[m[32m  $host = "";[m
[32m+[m[32m  $path = "";[m
[32m+[m[32m  $file = "";[m
[32m+[m
[32m+[m[32m  $arr = parse_url($url);[m
[32m+[m
[32m+[m[32m  if ( isset($arr["scheme"]) &&[m
[32m+[m[32m       $arr["scheme"] !== "file" &&[m
[32m+[m[32m       mb_strlen($arr["scheme"]) > 1 ) // Exclude windows drive letters...[m
[32m+[m[32m    {[m
[32m+[m[32m    $protocol = $arr["scheme"] . "://";[m
[32m+[m
[32m+[m[32m    if ( isset($arr["user"]) ) {[m
[32m+[m[32m      $host .= $arr["user"];[m
[32m+[m
[32m+[m[32m      if ( isset($arr["pass"]) )[m
[32m+[m[32m        $host .= "@" . $arr["pass"];[m
[32m+[m
[32m+[m[32m      $host .= ":";[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    if ( isset($arr["host"]) )[m
[32m+[m[32m      $host .= $arr["host"];[m
[32m+[m
[32m+[m[32m    if ( isset($arr["port"]) )[m
[32m+[m[32m      $host .= ":" . $arr["port"];[m
[32m+[m
[32m+[m[32m    if ( isset($arr["path"]) && $arr["path"] !== "" ) {[m
[32m+[m[32m      // Do we have a trailing slash?[m
[32m+[m[32m      if ( $arr["path"][ mb_strlen($arr["path"]) - 1 ] === "/" ) {[m
[32m+[m[32m        $path = $arr["path"];[m
[32m+[m[32m        $file = "";[m
[32m+[m[32m      } else {[m
[32m+[m[32m        $path = dirname($arr["path"]) . "/";[m
[32m+[m[32m        $file = basename($arr["path"]);[m
[32m+[m[32m      }[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    if ( isset($arr["query"]) )[m
[32m+[m[32m      $file .= "?" . $arr["query"];[m
[32m+[m
[32m+[m[32m    if ( isset($arr["fragment"]) )[m
[32m+[m[32m      $file .= "#" . $arr["fragment"];[m
[32m+[m
[32m+[m[32m  } else {[m
[32m+[m
[32m+[m[32m    $i = mb_strpos($url, "file://");[m
[32m+[m[32m    if ( $i !== false)[m
[32m+[m[32m      $url = mb_substr($url, $i + 7);[m
[32m+[m
[32m+[m[32m    $protocol = ""; // "file://"; ? why doesn't this work... It's because of[m
[32m+[m[32m                    // network filenames like //COMPU/SHARENAME[m
[32m+[m
[32m+[m[32m    $host = ""; // localhost, really[m
[32m+[m[32m    $file = basename($url);[m
[32m+[m
[32m+[m[32m    $path = dirname($url);[m
[32m+[m
[32m+[m[32m    // Check that the path exists[m
[32m+[m[32m    if ( $path !== false ) {[m
[32m+[m[32m      $path .= '/';[m
[32m+[m
[32m+[m[32m    } else {[m
[32m+[m[32m      // generate a url to access the file if no real path found.[m
[32m+[m[32m      $protocol = isset($_SERVER['HTTPS']) && $_SERVER['HTTPS'] === 'on' ? 'https://' : 'http://';[m
[32m+[m
[32m+[m[32m      $host = isset($_SERVER["HTTP_HOST"]) ? $_SERVER["HTTP_HOST"] : php_uname("n");[m
[32m+[m
[32m+[m[32m      if ( substr($arr["path"], 0, 1) === '/' ) {[m
[32m+[m[32m        $path = dirname($arr["path"]);[m
[32m+[m[32m      } else {[m
[32m+[m[32m        $path = '/' . rtrim(dirname($_SERVER["SCRIPT_NAME"]), '/') . '/' . $arr["path"];[m
[32m+[m[32m      }[m
[32m+[m[32m    }[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  $ret = array($protocol, $host, $path, $file,[m
[32m+[m[32m               "protocol" => $protocol,[m
[32m+[m[32m               "host" => $host,[m
[32m+[m[32m               "path" => $path,[m
[32m+[m[32m               "file" => $file);[m
[32m+[m[32m  return $ret;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * converts decimal numbers to roman numerals[m
[32m+[m[32m *[m
[32m+[m[32m * @param int $num[m
[32m+[m[32m * @return string[m
[32m+[m[32m */[m
[32m+[m[32mfunction dec2roman($num) {[m
[32m+[m
[32m+[m[32m  static $ones = array("", "i", "ii", "iii", "iv", "v",[m
[32m+[m[32m                       "vi", "vii", "viii", "ix");[m
[32m+[m[32m  static $tens = array("", "x", "xx", "xxx", "xl", "l",[m
[32m+[m[32m                       "lx", "lxx", "lxxx", "xc");[m
[32m+[m[32m  static $hund = array("", "c", "cc", "ccc", "cd", "d",[m
[32m+[m[32m                       "dc", "dcc", "dccc", "cm");[m
[32m+[m[32m  static $thou = array("", "m", "mm", "mmm");[m
[32m+[m
[32m+[m[32m  if ( !is_numeric($num) )[m
[32m+[m[32m    throw new DOMPDF_Exception("dec2roman() requires a numeric argument.");[m
[32m+[m
[32m+[m[32m  if ( $num > 4000 || $num < 0 )[m
[32m+[m[32m    return "(out of range)";[m
[32m+[m
[32m+[m[32m  $num = strrev((string)$num);[m
[32m+[m
[32m+[m[32m  $ret = "";[m
[32m+[m[32m  switch (mb_strlen($num)) {[m
[32m+[m[32m    case 4: $ret .= $thou[$num[3]];[m
[32m+[m[32m    case 3: $ret .= $hund[$num[2]];[m
[32m+[m[32m    case 2: $ret .= $tens[$num[1]];[m
[32m+[m[32m    case 1: $ret .= $ones[$num[0]];[m
[32m+[m[32m    default: break;[m
[32m+[m[32m  }[m
[32m+[m[32m  return $ret;[m
[32m+[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Determines whether $value is a percentage or not[m
[32m+[m[32m *[m
[32m+[m[32m * @param float $value[m
[32m+[m[32m * @return bool[m
[32m+[m[32m */[m
[32m+[m[32mfunction is_percent($value) { return false !== mb_strpos($value, "%"); }[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Parses a data URI scheme[m
[32m+[m[32m * http://en.wikipedia.org/wiki/Data_URI_scheme[m
[32m+[m[32m * @param string $data_uri The data URI to parse[m
[32m+[m[32m * @return array The result with charset, mime type and decoded data[m
[32m+[m[32m */[m
[32m+[m[32mfunction parse_data_uri($data_uri) {[m
[32m+[m[32m  if (!preg_match('/^data:(?P<mime>[a-z0-9\/+-.]+)(;charset=(?P<charset>[a-z0-9-])+)?(?P<base64>;base64)?\,(?P<data>.*)?/i', $data_uri, $match)) {[m
[32m+[m[32m    return false;[m
[32m+[m[32m  }[m
[32m+[m[41m  [m
[32m+[m[32m  $match['data'] = rawurldecode($match['data']);[m
[32m+[m[32m  $result = array([m
[32m+[m[32m    'charset' => $match['charset'] ? $match['charset'] : 'US-ASCII',[m
[32m+[m[32m    'mime'    => $match['mime'] ? $match['mime'] : 'text/plain',[m
[32m+[m[32m    'data'    => $match['base64'] ? base64_decode($match['data']) : $match['data'],[m
[32m+[m[32m  );[m
[32m+[m[41m  [m
[32m+[m[32m  return $result;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * mb_string compatibility[m
[32m+[m[32m */[m
[32m+[m[32mif ( !function_exists("mb_strlen") ) {[m
[32m+[m[41m  [m
[32m+[m[32m  define('MB_OVERLOAD_MAIL', 1);[m
[32m+[m[32m  define('MB_OVERLOAD_STRING', 2);[m
[32m+[m[32m  define('MB_OVERLOAD_REGEX', 4);[m
[32m+[m[32m  define('MB_CASE_UPPER', 0);[m
[32m+[m[32m  define('MB_CASE_LOWER', 1);[m
[32m+[m[32m  define('MB_CASE_TITLE', 2);[m
[32m+[m
[32m+[m[32m  function mb_convert_encoding($data, $to_encoding, $from_encoding = 'UTF-8') {[m
[32m+[m[32m    if (str_replace('-', '', strtolower($to_encoding)) === 'utf8') {[m
[32m+[m[32m      return utf8_encode($data);[m
[32m+[m[32m    } else {[m
[32m+[m[32m      return utf8_decode($data);[m
[32m+[m[32m    }[m
[32m+[m[32m  }[m
[32m+[m[41m  [m
[32m+[m[32m  function mb_detect_encoding($data, $encoding_list = array('iso-8859-1'), $strict = false) {[m
[32m+[m[32m    return 'iso-8859-1';[m
[32m+[m[32m  }[m
[32m+[m[41m  [m
[32m+[m[32m  function mb_detect_order($encoding_list = array('iso-8859-1')) {[m
[32m+[m[32m    return 'iso-8859-1';[m
[32m+[m[32m  }[m
[32m+[m[41m  [m
[32m+[m[32m  function mb_internal_encoding($encoding = null) {[m
[32m+[m[32m    if (isset($encoding)) {[m
[32m+[m[32m      return true;[m
[32m+[m[32m    } else {[m
[32m+[m[32m      return 'iso-8859-1';[m
[32m+[m[32m    }[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  function mb_strlen($str, $encoding = 'iso-8859-1') {[m
[32m+[m[32m    switch (str_replace('-', '', strtolower($encoding))) {[m
[32m+[m[32m      case "utf8": return strlen(utf8_encode($str));[m
[32m+[m[32m      case "8bit": return strlen($str);[m
[32m+[m[32m      default:     return strlen(utf8_decode($str));[m
[32m+[m[32m    }[m
[32m+[m[32m  }[m
[32m+[m[41m  [m
[32m+[m[32m  function mb_strpos($haystack, $needle, $offset = 0) {[m
[32m+[m[32m    return strpos($haystack, $needle, $offset);[m
[32m+[m[32m  }[m
[32m+[m[41m  [m
[32m+[m[32m  function mb_strrpos($haystack, $needle, $offset = 0) {[m
[32m+[m[32m    return strrpos($haystack, $needle, $offset);[m
[32m+[m[32m  }[m
[32m+[m[41m  [m
[32m+[m[32m  function mb_strtolower( $str ) {[m
[32m+[m[32m    return strtolower($str);[m
[32m+[m[32m  }[m
[32m+[m[41m  [m
[32m+[m[32m  function mb_strtoupper( $str ) {[m
[32m+[m[32m    return strtoupper($str);[m
[32m+[m[32m  }[m
[32m+[m[41m  [m
[32m+[m[32m  function mb_substr($string, $start, $length = null, $encoding = 'iso-8859-1') {[m
[32m+[m[32m    if ( is_null($length) )[m
[32m+[m[32m      return substr($string, $start);[m
[32m+[m[32m    else[m
[32m+[m[32m      return substr($string, $start, $length);[m
[32m+[m[32m  }[m
[32m+[m[41m  [m
[32m+[m[32m  function mb_substr_count($haystack, $needle, $encoding = 'iso-8859-1') {[m
[32m+[m[32m    return substr_count($haystack, $needle);[m
[32m+[m[32m  }[m
[32m+[m[41m  [m
[32m+[m[32m  function mb_encode_numericentity($str, $convmap, $encoding) {[m
[32m+[m[32m    return htmlspecialchars($str);[m
[32m+[m[32m  }[m
[32m+[m[41m  [m
[32m+[m[32m  function mb_convert_case($str, $mode = MB_CASE_UPPER, $encoding = array()) {[m
[32m+[m[32m    switch($mode) {[m
[32m+[m[32m      case MB_CASE_UPPER: return mb_strtoupper($str);[m
[32m+[m[32m      case MB_CASE_LOWER: return mb_strtolower($str);[m
[32m+[m[32m      case MB_CASE_TITLE: return ucwords(mb_strtolower($str));[m
[32m+[m[32m      default: return $str;[m
[32m+[m[32m    }[m
[32m+[m[32m  }[m
[32m+[m[41m  [m
[32m+[m[32m  function mb_list_encodings() {[m
[32m+[m[32m    return array([m
[32m+[m[32m      "ISO-8859-1",[m
[32m+[m[32m      "UTF-8",[m
[32m+[m[32m      "8bit",[m
[32m+[m[32m    );[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m/**[m[41m [m
[32m+[m[32m * Decoder for RLE8 compression in windows bitmaps[m
[32m+[m[32m * http://msdn.microsoft.com/library/default.asp?url=/library/en-us/gdi/bitmaps_6x0u.asp[m
[32m+[m[32m */[m
[32m+[m[32mfunction rle8_decode ($str, $width){[m
[32m+[m[32m  $lineWidth = $width + (3 - ($width-1) % 4);[m
[32m+[m[32m  $out = '';[m
[32m+[m[32m  $cnt = strlen($str);[m
[32m+[m[41m  [m
[32m+[m[32m  for ($i = 0; $i <$cnt; $i++) {[m
[32m+[m[32m    $o = ord($str[$i]);[m
[32m+[m[32m    switch ($o){[m
[32m+[m[32m      case 0: # ESCAPE[m
[32m+[m[32m        $i++;[m
[32m+[m[32m        switch (ord($str[$i])){[m
[32m+[m[32m          case 0: # NEW LINE[m
[32m+[m[32m            $padCnt = $lineWidth - strlen($out)%$lineWidth;[m
[32m+[m[32m            if ($padCnt<$lineWidth) $out .= str_repeat(chr(0), $padCnt); # pad line[m
[32m+[m[32m            break;[m
[32m+[m[32m          case 1: # END OF FILE[m
[32m+[m[32m            $padCnt = $lineWidth - strlen($out)%$lineWidth;[m
[32m+[m[32m            if ($padCnt<$lineWidth) $out .= str_repeat(chr(0), $padCnt); # pad line[m
[32m+[m[32m            break 3;[m
[32m+[m[32m          case 2: # DELTA[m
[32m+[m[32m            $i += 2;[m
[32m+[m[32m            break;[m
[32m+[m[32m          default: # ABSOLUTE MODE[m
[32m+[m[32m            $num = ord($str[$i]);[m
[32m+[m[32m            for ($j = 0; $j < $num; $j++)[m
[32m+[m[32m              $out .= $str[++$i];[m
[32m+[m[32m            if ($num % 2) $i++;[m
[32m+[m[32m        }[m
[32m+[m[32m      break;[m
[32m+[m[32m      default:[m
[32m+[m[32m      $out .= str_repeat($str[++$i], $o);[m
[32m+[m[32m    }[m
[32m+[m[32m  }[m
[32m+[m[32m  return $out;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m/**[m[41m [m
[32m+[m[32m * Decoder for RLE4 compression in windows bitmaps[m
[32m+[m[32m * see http://msdn.microsoft.com/library/default.asp?url=/library/en-us/gdi/bitmaps_6x0u.asp[m
[32m+[m[32m */[m
[32m+[m[32mfunction rle4_decode ($str, $width) {[m
[32m+[m[32m  $w = floor($width/2) + ($width % 2);[m
[32m+[m[32m  $lineWidth = $w + (3 - ( ($width-1) / 2) % 4);[m[41m    [m
[32m+[m[32m  $pixels = array();[m
[32m+[m[32m  $cnt = strlen($str);[m
[32m+[m[41m  [m
[32m+[m[32m  for ($i = 0; $i < $cnt; $i++) {[m
[32m+[m[32m    $o = ord($str[$i]);[m
[32m+[m[32m    switch ($o) {[m
[32m+[m[32m      case 0: # ESCAPE[m
[32m+[m[32m        $i++;[m
[32m+[m[32m        switch (ord($str[$i])){[m
[32m+[m[32m          case 0: # NEW LINE[m
[32m+[m[32m            while (count($pixels)%$lineWidth!=0)[m
[32m+[m[32m              $pixels[]=0;[m
[32m+[m[32m            break;[m
[32m+[m[32m          case 1: # END OF FILE[m
[32m+[m[32m            while (count($pixels)%$lineWidth!=0)[m
[32m+[m[32m              $pixels[]=0;[m
[32m+[m[32m            break 3;[m
[32m+[m[32m          case 2: # DELTA[m
[32m+[m[32m            $i += 2;[m
[32m+[m[32m            break;[m
[32m+[m[32m          default: # ABSOLUTE MODE[m
[32m+[m[32m            $num = ord($str[$i]);[m
[32m+[m[32m            for ($j = 0; $j < $num; $j++){[m
[32m+[m[32m              if ($j%2 == 0){[m
[32m+[m[32m                $c = ord($str[++$i]);[m
[32m+[m[32m                $pixels[] = ($c & 240)>>4;[m
[32m+[m[32m              } else[m
[32m+[m[32m                $pixels[] = $c & 15;[m
[32m+[m[32m            }[m
[32m+[m[32m            if ($num % 2) $i++;[m
[32m+[m[32m       }[m
[32m+[m[32m       break;[m
[32m+[m[32m      default:[m
[32m+[m[32m        $c = ord($str[++$i]);[m
[32m+[m[32m        for ($j = 0; $j < $o; $j++)[m
[32m+[m[32m          $pixels[] = ($j%2==0 ? ($c & 240)>>4 : $c & 15);[m
[32m+[m[32m    }[m
[32m+[m[32m  }[m
[32m+[m[41m  [m
[32m+[m[32m  $out = '';[m
[32m+[m[32m  if (count($pixels)%2) $pixels[]=0;[m
[32m+[m[32m  $cnt = count($pixels)/2;[m
[32m+[m[41m  [m
[32m+[m[32m  for ($i = 0; $i < $cnt; $i++)[m
[32m+[m[32m    $out .= chr(16*$pixels[2*$i] + $pixels[2*$i+1]);[m
[32m+[m[41m    [m
[32m+[m[32m  return $out;[m
[32m+[m[32m}[m[41m [m
[32m+[m
[32m+[m[32mif ( !function_exists("imagecreatefrombmp") ) {[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Credit goes to mgutt[m[41m [m
[32m+[m[32m * http://www.programmierer-forum.de/function-imagecreatefrombmp-welche-variante-laeuft-t143137.htm[m
[32m+[m[32m * Modified by Fabien Menager to support RGB555 BMP format[m
[32m+[m[32m */[m
[32m+[m[32mfunction imagecreatefrombmp($filename) {[m
[32m+[m[32m  try {[m
[32m+[m[32m  // version 1.00[m
[32m+[m[32m  if (!($fh = fopen($filename, 'rb'))) {[m
[32m+[m[32m    trigger_error('imagecreatefrombmp: Can not open ' . $filename, E_USER_WARNING);[m
[32m+[m[32m    return false;[m
[32m+[m[32m  }[m
[32m+[m[41m  [m
[32m+[m[32m  // read file header[m
[32m+[m[32m  $meta = unpack('vtype/Vfilesize/Vreserved/Voffset', fread($fh, 14));[m
[32m+[m[41m  [m
[32m+[m[32m  // check for bitmap[m
[32m+[m[32m  if ($meta['type'] != 19778) {[m
[32m+[m[32m    trigger_error('imagecreatefrombmp: ' . $filename . ' is not a bitmap!', E_USER_WARNING);[m
[32m+[m[32m    return false;[m
[32m+[m[32m  }[m
[32m+[m[41m  [m
[32m+[m[32m  // read image header[m
[32m+[m[32m  $meta += unpack('Vheadersize/Vwidth/Vheight/vplanes/vbits/Vcompression/Vimagesize/Vxres/Vyres/Vcolors/Vimportant', fread($fh, 40));[m
[32m+[m[41m  [m
[32m+[m[32m  // read additional bitfield header[m
[32m+[m[32m  if ($meta['compression'] == 3) {[m
[32m+[m[32m    $meta += unpack('VrMask/VgMask/VbMask', fread($fh, 12));[m
[32m+[m[32m  }[m
[32m+[m[41m  [m
[32m+[m[32m  //pre_r($filename);pre_r($meta);[m
[32m+[m[41m  [m
[32m+[m[32m  // set bytes and padding[m
[32m+[m[32m  $meta['bytes'] = $meta['bits'] / 8;[m
[32m+[m[32m  $meta['decal'] = 4 - (4 * (($meta['width'] * $meta['bytes'] / 4)- floor($meta['width'] * $meta['bytes'] / 4)));[m
[32m+[m[32m  if ($meta['decal'] == 4) {[m
[32m+[m[32m    $meta['decal'] = 0;[m
[32m+[m[32m  }[m
[32m+[m[41m  [m
[32m+[m[32m  // obtain imagesize[m
[32m+[m[32m  if ($meta['imagesize'] < 1) {[m
[32m+[m[32m    $meta['imagesize'] = $meta['filesize'] - $meta['offset'];[m
[32m+[m[32m    // in rare cases filesize is equal to offset so we need to read physical size[m
[32m+[m[32m    if ($meta['imagesize'] < 1) {[m
[32m+[m[32m      $meta['imagesize'] = @filesize($filename) - $meta['offset'];[m
[32m+[m[32m      if ($meta['imagesize'] < 1) {[m
[32m+[m[32m        trigger_error('imagecreatefrombmp: Can not obtain filesize of ' . $filename . '!', E_USER_WARNING);[m
[32m+[m[32m        return false;[m
[32m+[m[32m      }[m
[32m+[m[32m    }[m
[32m+[m[32m  }[m
[32m+[m[41m  [m
[32m+[m[32m  // calculate colors[m
[32m+[m[32m  $meta['colors'] = !$meta['colors'] ? pow(2, $meta['bits']) : $meta['colors'];[m
[32m+[m[41m  [m
[32m+[m[32m  // read color palette[m
[32m+[m[32m  $palette = array();[m
[32m+[m[32m  if ($meta['bits'] < 16) {[m
[32m+[m[32m    $palette = unpack('l' . $meta['colors'], fread($fh, $meta['colors'] * 4));[m
[32m+[m[32m    // in rare cases the color value is signed[m
[32m+[m[32m    if ($palette[1] < 0) {[m
[32m+[m[32m      foreach ($palette as $i => $color) {[m
[32m+[m[32m        $palette[$i] = $color + 16777216;[m
[32m+[m[32m      }[m
[32m+[m[32m    }[m
[32m+[m[32m  }[m
[32m+[m[41m  [m
[32m+[m[32m  // create gd image[m
[32m+[m[32m  $im = imagecreatetruecolor($meta['width'], $meta['height']);[m
[32m+[m[32m  $data = fread($fh, $meta['imagesize']);[m
[32m+[m[41m  [m
[32m+[m[32m  // uncompress data[m
[32m+[m[32m  switch ($meta['compression']) {[m
[32m+[m[32m    case 1: $data = rle8_decode($data, $meta['width']); break;[m
[32m+[m[32m    case 2: $data = rle4_decode($data, $meta['width']); break;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  $p = 0;[m
[32m+[m[32m  $vide = chr(0);[m
[32m+[m[32m  $y = $meta['height'] - 1;[m
[32m+[m[32m  $error = 'imagecreatefrombmp: ' . $filename . ' has not enough data!';[m
[32m+[m
[32m+[m[32m  // loop through the image data beginning with the lower left corner[m
[32m+[m[32m  while ($y >= 0) {[m
[32m+[m[32m    $x = 0;[m
[32m+[m[32m    while ($x < $meta['width']) {[m
[32m+[m[32m      switch ($meta['bits']) {[m
[32m+[m[32m        case 32:[m
[32m+[m[32m        case 24:[m
[32m+[m[32m          if (!($part = substr($data, $p, 3 /*$meta['bytes']*/))) {[m
[32m+[m[32m            trigger_error($error, E_USER_WARNING);[m
[32m+[m[32m            return $im;[m
[32m+[m[32m          }[m
[32m+[m[32m          $color = unpack('V', $part . $vide);[m
[32m+[m[32m          break;[m
[32m+[m[32m        case 16:[m
[32m+[m[32m          if (!($part = substr($data, $p, 2 /*$meta['bytes']*/))) {[m
[32m+[m[32m            trigger_error($error, E_USER_WARNING);[m
[32m+[m[32m            return $im;[m
[32m+[m[32m          }[m
[32m+[m[32m          $color = unpack('v', $part);[m
[32m+[m
[32m+[m[32m          if (empty($meta['rMask']) || $meta['rMask'] != 0xf800)[m
[32m+[m[32m            $color[1] = (($color[1] & 0x7c00) >> 7) * 65536 + (($color[1] & 0x03e0) >> 2) * 256 + (($color[1] & 0x001f) << 3); // 555[m
[32m+[m[32m          else[m[41m [m
[32m+[m[32m            $color[1] = (($color[1] & 0xf800) >> 8) * 65536 + (($color[1] & 0x07e0) >> 3) * 256 + (($color[1] & 0x001f) << 3); // 565[m
[32m+[m[32m          break;[m
[32m+[m[32m        case 8:[m
[32m+[m[32m          $color = unpack('n', $vide . substr($data, $p, 1));[m
[32m+[m[32m          $color[1] = $palette[ $color[1] + 1 ];[m
[32m+[m[32m          break;[m
[32m+[m[32m        case 4:[m
[32m+[m[32m          $color = unpack('n', $vide . substr($data, floor($p), 1));[m
[32m+[m[32m          $color[1] = ($p * 2) % 2 == 0 ? $color[1] >> 4 : $color[1] & 0x0F;[m
[32m+[m[32m          $color[1] = $palette[ $color[1] + 1 ];[m
[32m+[m[32m          break;[m
[32m+[m[32m        case 1:[m
[32m+[m[32m          $color = unpack('n', $vide . substr($data, floor($p), 1));[m
[32m+[m[32m          switch (($p * 8) % 8) {[m
[32m+[m[32m            case 0: $color[1] =  $color[1] >> 7; break;[m
[32m+[m[32m            case 1: $color[1] = ($color[1] & 0x40) >> 6; break;[m
[32m+[m[32m            case 2: $color[1] = ($color[1] & 0x20) >> 5; break;[m
[32m+[m[32m            case 3: $color[1] = ($color[1] & 0x10) >> 4; break;[m
[32m+[m[32m            case 4: $color[1] = ($color[1] & 0x8 ) >> 3; break;[m
[32m+[m[32m            case 5: $color[1] = ($color[1] & 0x4 ) >> 2; break;[m
[32m+[m[32m            case 6: $color[1] = ($color[1] & 0x2 ) >> 1; break;[m
[32m+[m[32m            case 7: $color[1] = ($color[1] & 0x1 );      break;[m
[32m+[m[32m          }[m
[32m+[m[32m          $color[1] = $palette[ $color[1] + 1 ];[m
[32m+[m[32m          break;[m
[32m+[m[32m        default:[m
[32m+[m[32m          trigger_error('imagecreatefrombmp: ' . $filename . ' has ' . $meta['bits'] . ' bits and this is not supported!', E_USER_WARNING);[m
[32m+[m[32m          return false;[m
[32m+[m[32m      }[m
[32m+[m[32m      imagesetpixel($im, $x, $y, $color[1]);[m
[32m+[m[32m      $x++;[m
[32m+[m[32m      $p += $meta['bytes'];[m
[32m+[m[32m    }[m
[32m+[m[32m    $y--;[m
[32m+[m[32m    $p += $meta['decal'];[m
[32m+[m[32m  }[m
[32m+[m[32m  fclose($fh);[m
[32m+[m[32m  return $im;[m
[32m+[m[32m  } catch (Exception $e) {var_dump($e);}[m
[32m+[m[32m}[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * getimagesize doesn't give a good size for 32bit BMP image v5[m
[32m+[m[32m *[m[41m [m
[32m+[m[32m * @param string $filename[m
[32m+[m[32m * @return array The same format as getimagesize($filename)[m
[32m+[m[32m */[m
[32m+[m[32mfunction dompdf_getimagesize($filename) {[m
[32m+[m[32m  $size = getimagesize($filename);[m
[32m+[m[41m  [m
[32m+[m[32m  if ( $size[0] == null || $size[1] == null ) {[m
[32m+[m[32m    $data = file_get_contents($filename, null, null, 0, 26);[m
[32m+[m[41m    [m
[32m+[m[32m    if ( substr($data, 0, 2) === "BM" ) {[m
[32m+[m[32m      $meta = unpack('vtype/Vfilesize/Vreserved/Voffset/Vheadersize/Vwidth/Vheight', $data);[m
[32m+[m[32m      $size[0] = (int)$meta['width'];[m
[32m+[m[32m      $size[1] = (int)$meta['height'];[m
[32m+[m[32m    }[m
[32m+[m[32m  }[m
[32m+[m[41m  [m
[32m+[m[32m  return $size;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Converts a CMYK color to RGB[m
[32m+[m[32m *[m[41m [m
[32m+[m[32m * @param int $c[m
[32m+[m[32m * @param int $m[m
[32m+[m[32m * @param int $y[m
[32m+[m[32m * @param int $k[m
[32m+[m[32m * @return object[m
[32m+[m[32m */[m
[32m+[m[32mfunction cmyk_to_rgb($c, $m = null, $y = null, $k = null) {[m
[32m+[m[32m  if (is_array($c)) {[m
[32m+[m[32m    list($c, $m, $y, $k) = $c;[m
[32m+[m[32m  }[m
[32m+[m[41m  [m
[32m+[m[32m  $c *= 255;[m
[32m+[m[32m  $m *= 255;[m
[32m+[m[32m  $y *= 255;[m
[32m+[m[32m  $k *= 255;[m
[32m+[m[41m  [m
[32m+[m[32m  $r = (1 - round(2.55 * ($c+$k))) ;[m
[32m+[m[32m  $g = (1 - round(2.55 * ($m+$k))) ;[m
[32m+[m[32m  $b = (1 - round(2.55 * ($y+$k))) ;[m
[32m+[m[41m    [m
[32m+[m[32m  if($r<0) $r = 0;[m
[32m+[m[32m  if($g<0) $g = 0;[m
[32m+[m[32m  if($b<0) $b = 0;[m
[32m+[m[41m    [m
[32m+[m[32m  return array([m
[32m+[m[32m    $r, $g, $b,[m
[32m+[m[32m    "r" => $r, "g" => $g, "b" => $b[m
[32m+[m[32m  );[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mfunction unichr($c) {[m
[32m+[m[32m  if ($c <= 0x7F) {[m
[32m+[m[32m    return chr($c);[m
[32m+[m[32m  } else if ($c <= 0x7FF) {[m
[32m+[m[32m    return chr(0xC0 | $c >>  6) . chr(0x80 | $c & 0x3F);[m
[32m+[m[32m  } else if ($c <= 0xFFFF) {[m
[32m+[m[32m    return chr(0xE0 | $c >> 12) . chr(0x80 | $c >> 6 & 0x3F)[m
[32m+[m[32m                                . chr(0x80 | $c & 0x3F);[m
[32m+[m[32m  } else if ($c <= 0x10FFFF) {[m
[32m+[m[32m    return chr(0xF0 | $c >> 18) . chr(0x80 | $c >> 12 & 0x3F)[m
[32m+[m[32m                                . chr(0x80 | $c >> 6 & 0x3F)[m
[32m+[m[32m                                . chr(0x80 | $c & 0x3F);[m
[32m+[m[32m  }[m
[32m+[m[32m  return false;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mif ( !function_exists("date_default_timezone_get") ) {[m
[32m+[m[32m  function date_default_timezone_get() {[m
[32m+[m[32m    return "";[m
[32m+[m[32m  }[m
[32m+[m[41m  [m
[32m+[m[32m  function date_default_timezone_set($timezone_identifier) {[m
[32m+[m[32m    return true;[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Stores warnings in an array for display later[m
[32m+[m[32m *[m
[32m+[m[32m * This function allows warnings generated by the DomDocument parser[m
[32m+[m[32m * and CSS loader ({@link Stylesheet}) to be captured and displayed[m
[32m+[m[32m * later.  Without this function, errors are displayed immediately and[m
[32m+[m[32m * PDF streaming is impossible.[m
[32m+[m[32m *[m
[32m+[m[32m * @see http://www.php.net/manual/en/function.set-error_handler.php[m
[32m+[m[32m *[m
[32m+[m[32m * @param int $errno[m
[32m+[m[32m * @param string $errstr[m
[32m+[m[32m * @param string $errfile[m
[32m+[m[32m * @param string $errline[m
[32m+[m[32m */[m
[32m+[m[32mfunction record_warnings($errno, $errstr, $errfile, $errline) {[m
[32m+[m
[32m+[m[32m  if ( !($errno & (E_WARNING | E_NOTICE | E_USER_NOTICE | E_USER_WARNING )) ) // Not a warning or notice[m
[32m+[m[32m    throw new DOMPDF_Exception($errstr . " $errno");[m
[32m+[m
[32m+[m[32m  global $_dompdf_warnings;[m
[32m+[m[32m  global $_dompdf_show_warnings;[m
[32m+[m
[32m+[m[32m  if ( $_dompdf_show_warnings )[m
[32m+[m[32m    echo $errstr . "\n";[m
[32m+[m
[32m+[m[32m  $_dompdf_warnings[] = $errstr;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Print a useful backtrace[m
[32m+[m[32m */[m
[32m+[m[32mfunction bt() {[m
[32m+[m[32m  if ( php_sapi_name() !== "cli")[m
[32m+[m[32m    echo("<pre>");[m
[32m+[m[41m    [m
[32m+[m[32m  $bt = debug_backtrace();[m
[32m+[m
[32m+[m[32m  array_shift($bt); // remove actual bt() call[m
[32m+[m[32m  echo "\n";[m
[32m+[m
[32m+[m[32m  $i = 0;[m
[32m+[m[32m  foreach ($bt as $call) {[m
[32m+[m[32m    $file = basename($call["file"]) . " (" . $call["line"] . ")";[m
[32m+[m[32m    if ( isset($call["class"]) ) {[m
[32m+[m[32m      $func = $call["class"] . "->" . $call["function"] . "()";[m
[32m+[m[32m    } else {[m
[32m+[m[32m      $func = $call["function"] . "()";[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    echo "#" . str_pad($i, 2, " ", STR_PAD_RIGHT) . ": " . str_pad($file.":", 42) . " $func\n";[m
[32m+[m[32m    $i++;[m
[32m+[m[32m  }[m
[32m+[m[32m  echo "\n";[m
[32m+[m[41m  [m
[32m+[m[32m  if ( php_sapi_name() !== "cli")[m
[32m+[m[32m    echo("</pre>");[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Print debug messages[m
[32m+[m[32m *[m
[32m+[m[32m * @param string $type  The type of debug messages to print[m
[32m+[m[32m */[m
[32m+[m[32mfunction dompdf_debug($type, $msg) {[m
[32m+[m[32m  global $_DOMPDF_DEBUG_TYPES, $_dompdf_show_warnings, $_dompdf_debug;[m
[32m+[m[32m  if ( isset($_DOMPDF_DEBUG_TYPES[$type]) && ($_dompdf_show_warnings || $_dompdf_debug) ) {[m
[32m+[m[32m    $arr = debug_backtrace();[m
[32m+[m
[32m+[m[32m    echo basename($arr[0]["file"]) . " (" . $arr[0]["line"] ."): " . $arr[1]["function"] . ": ";[m
[32m+[m[32m    pre_r($msg);[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mif ( !function_exists("print_memusage") ) {[m
[32m+[m[32m/**[m
[32m+[m[32m * Dump memory usage[m
[32m+[m[32m */[m
[32m+[m[32mfunction print_memusage() {[m
[32m+[m[32m  global $memusage;[m
[32m+[m[32m  echo ("Memory Usage\n");[m
[32m+[m[32m  $prev = 0;[m
[32m+[m[32m  $initial = reset($memusage);[m
[32m+[m[32m  echo (str_pad("Initial:", 40) . $initial . "\n\n");[m
[32m+[m
[32m+[m[32m  foreach ($memusage as $key=>$mem) {[m
[32m+[m[32m    $mem -= $initial;[m
[32m+[m[32m    echo (str_pad("$key:" , 40));[m
[32m+[m[32m    echo (str_pad("$mem", 12) . "(diff: " . ($mem - $prev) . ")\n");[m
[32m+[m[32m    $prev = $mem;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  echo ("\n" . str_pad("Total:", 40) . memory_get_usage()) . "\n";[m
[32m+[m[32m}[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mif ( !function_exists("enable_mem_profile") ) {[m
[32m+[m[32m/**[m
[32m+[m[32m * Initialize memory profiling code[m
[32m+[m[32m */[m
[32m+[m[32mfunction enable_mem_profile() {[m
[32m+[m[32m    global $memusage;[m
[32m+[m[32m    $memusage = array("Startup" => memory_get_usage());[m
[32m+[m[32m    register_shutdown_function("print_memusage");[m
[32m+[m[32m}[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mif ( !function_exists("mark_memusage") ) {[m
[32m+[m[32m/**[m
[32m+[m[32m * Record the current memory usage[m
[32m+[m[32m *[m
[32m+[m[32m * @param string $location a meaningful location[m
[32m+[m[32m */[m
[32m+[m[32mfunction mark_memusage($location) {[m
[32m+[m[32m  global $memusage;[m
[32m+[m[32m  if ( isset($memusage) )[m
[32m+[m[32m    $memusage[$location] = memory_get_usage();[m
[32m+[m[32m}[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mif ( !function_exists('sys_get_temp_dir')) {[m
[32m+[m[32m/**[m
[32m+[m[32m * Find the current system temporary directory[m
[32m+[m[32m *[m
[32m+[m[32m * @link http://us.php.net/manual/en/function.sys-get-temp-dir.php#85261[m
[32m+[m[32m */[m
[32m+[m[32mfunction sys_get_temp_dir() {[m
[32m+[m[32m  if (!empty($_ENV['TMP'])) { return realpath($_ENV['TMP']); }[m
[32m+[m[32m  if (!empty($_ENV['TMPDIR'])) { return realpath( $_ENV['TMPDIR']); }[m
[32m+[m[32m  if (!empty($_ENV['TEMP'])) { return realpath( $_ENV['TEMP']); }[m
[32m+[m[32m  $tempfile=tempnam(uniqid(rand(),TRUE),'');[m
[32m+[m[32m  if (file_exists($tempfile)) {[m
[32m+[m[32m  unlink($tempfile);[m
[32m+[m[32m  return realpath(dirname($tempfile));[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mif ( function_exists("memory_get_peak_usage") ) {[m
[32m+[m[32m  function DOMPDF_memory_usage(){[m
[32m+[m[32m    return memory_get_peak_usage(true);[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[32m+[m[32melse if ( function_exists("memory_get_peak_usage") ) {[m
[32m+[m[32m  function DOMPDF_memory_usage(){[m
[32m+[m[32m    return memory_get_usage(true);[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[32m+[m[32melse {[m
[32m+[m[32m  function DOMPDF_memory_usage(){[m
[32m+[m[32m    return "N/A";[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Affect null to the unused objects[m
[32m+[m[32m * @param unknown_type $object[m
[32m+[m[32m */[m
[32m+[m[32mfunction clear_object(&$object) {[m
[32m+[m[32m  if ( is_object($object) ) {[m
[32m+[m[32m    foreach (array_keys((array)$object) as $key) {[m
[32m+[m[32m      clear_object($property);[m
[32m+[m[32m    }[m
[32m+[m[32m    foreach(get_class_vars(get_class($object)) as $property => $value) {[m
[32m+[m[32m      clear_object($property);[m
[32m+[m[32m    }[m
[32m+[m[32m  }[m
[32m+[m[32m  $object = null;[m
[32m+[m[32m  unset($object);[m
[32m+[m[32m}[m
[1mdiff --git a/application/third_party/dompdf/include/gd_adapter.cls.php b/application/third_party/dompdf/include/gd_adapter.cls.php[m
[1mnew file mode 100644[m
[1mindex 0000000..58dde2d[m
[1m--- /dev/null[m
[1m+++ b/application/third_party/dompdf/include/gd_adapter.cls.php[m
[36m@@ -0,0 +1,840 @@[m
[32m+[m[32m<?php[m
[32m+[m[32m/**[m
[32m+[m[32m * DOMPDF - PHP5 HTML to PDF renderer[m
[32m+[m[32m *[m
[32m+[m[32m * File: $RCSfile: gd_adapter.cls.php,v $[m
[32m+[m[32m * Created on: 2004-06-06[m
[32m+[m[32m *[m
[32m+[m[32m * Copyright (c) 2004 - Benj Carson <benjcarson@digitaljunkies.ca>[m
[32m+[m[32m *[m
[32m+[m[32m * This library is free software; you can redistribute it and/or[m
[32m+[m[32m * modify it under the terms of the GNU Lesser General Public[m
[32m+[m[32m * License as published by the Free Software Foundation; either[m
[32m+[m[32m * version 2.1 of the License, or (at your option) any later version.[m
[32m+[m[32m *[m
[32m+[m[32m * This library is distributed in the hope that it will be useful,[m
[32m+[m[32m * but WITHOUT ANY WARRANTY; without even the implied warranty of[m
[32m+[m[32m * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU[m
[32m+[m[32m * Lesser General Public License for more details.[m
[32m+[m[32m *[m
[32m+[m[32m * You should have received a copy of the GNU Lesser General Public License[m
[32m+[m[32m * along with this library in the file LICENSE.LGPL; if not, write to the[m
[32m+[m[32m * Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA[m
[32m+[m[32m * 02111-1307 USA[m
[32m+[m[32m *[m
[32m+[m[32m * Alternatively, you may distribute this software under the terms of the[m
[32m+[m[32m * PHP License, version 3.0 or later.  A copy of this license should have[m
[32m+[m[32m * been distributed with this file in the file LICENSE.PHP .  If this is not[m
[32m+[m[32m * the case, you can obtain a copy at http://www.php.net/license/3_0.txt.[m
[32m+[m[32m *[m
[32m+[m[32m * The latest version of DOMPDF might be available at:[m
[32m+[m[32m * http://www.dompdf.com/[m
[32m+[m[32m *[m
[32m+[m[32m * @link http://www.dompdf.com/[m
[32m+[m[32m * @copyright 2004 Benj Carson[m
[32m+[m[32m * @author Benj Carson <benjcarson@digitaljunkies.ca>[m
[32m+[m[32m * @package dompdf[m
[32m+[m
[32m+[m[32m */[m
[32m+[m
[32m+[m[32m/* $Id: gd_adapter.cls.php 355 2011-01-27 07:44:54Z fabien.menager $ */[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Image rendering interface[m
[32m+[m[32m *[m
[32m+[m[32m * Renders to an image format supported by GD (jpeg, gif, png, xpm).[m
[32m+[m[32m * Not super-useful day-to-day but handy nonetheless[m
[32m+[m[32m *[m
[32m+[m[32m * @package dompdf[m
[32m+[m[32m */[m
[32m+[m[32mclass GD_Adapter implements Canvas {[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Resoure handle for the image[m
[32m+[m[32m   *[m
[32m+[m[32m   * @var resource[m
[32m+[m[32m   */[m
[32m+[m[32m  private $_img;[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Image width in pixels[m
[32m+[m[32m   *[m
[32m+[m[32m   * @var int[m
[32m+[m[32m   */[m
[32m+[m[32m  private $_width;[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Image height in pixels[m
[32m+[m[32m   *[m
[32m+[m[32m   * @var int[m
[32m+[m[32m   */[m
[32m+[m[32m  private $_height;[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Current page number[m
[32m+[m[32m   *[m
[32m+[m[32m   * @var int[m
[32m+[m[32m   */[m
[32m+[m[32m  private $_page_number;[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Total number of pages[m
[32m+[m[32m   *[m
[32m+[m[32m   * @var int[m
[32m+[m[32m   */[m
[32m+[m[32m  private $_page_count;[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Image antialias factor[m
[32m+[m[32m   *[m
[32m+[m[32m   * @var float[m
[32m+[m[32m   */[m
[32m+[m[32m  private $_aa_factor;[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Allocated colors[m
[32m+[m[32m   *[m
[32m+[m[32m   * @var array[m
[32m+[m[32m   */[m
[32m+[m[32m  private $_colors;[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Background color[m
[32m+[m[32m   *[m
[32m+[m[32m   * @var int[m
[32m+[m[32m   */[m
[32m+[m[32m  private $_bg_color;[m
[32m+[m[41m  [m
[32m+[m[32m  /**[m
[32m+[m[32m   * Class constructor[m
[32m+[m[32m   *[m
[32m+[m[32m   * @param mixed  $size         The size of image to create: array(x1,y1,x2,y2) or "letter", "legal", etc.[m
[32m+[m[32m   * @param string $orientation  The orientation of the document (either 'landscape' or 'portrait')[m
[32m+[m[32m   * @param float  $aa_factor    Anti-aliasing factor, 1 for no AA[m
[32m+[m[32m   * @param array  $bg_color     Image background color: array(r,g,b,a), 0 <= r,g,b,a <= 1[m
[32m+[m[32m   */[m
[32m+[m[32m  function __construct($size, $orientation = "portrait", $aa_factor = 1, $bg_color = array(1,1,1,0) ) {[m
[32m+[m
[32m+[m[32m    if ( !is_array($size) ) {[m
[32m+[m[32m      $size = strtolower($size);[m
[32m+[m[41m      [m
[32m+[m[32m      if ( isset(CPDF_Adapter::$PAPER_SIZES[$size]) )[m[41m [m
[32m+[m[32m        $size = CPDF_Adapter::$PAPER_SIZES[$size];[m
[32m+[m[32m      else[m
[32m+[m[32m        $size = CPDF_Adapter::$PAPER_SIZES["letter"];[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    if ( strtolower($orientation) === "landscape" ) {[m
[32m+[m[32m      list($size[2],$size[3]) = array($size[3],$size[2]);[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    if ( $aa_factor < 1 )[m
[32m+[m[32m      $aa_factor = 1;[m
[32m+[m
[32m+[m[32m    $this->_aa_factor = $aa_factor;[m
[32m+[m[41m    [m
[32m+[m[32m    $size[2] *= $aa_factor;[m
[32m+[m[32m    $size[3] *= $aa_factor;[m
[32m+[m[41m    [m
[32m+[m[32m    $this->_width = $size[2] - $size[0];[m
[32m+[m[32m    $this->_height = $size[3] - $size[1];[m
[32m+[m
[32m+[m[32m    $this->_img = imagecreatetruecolor($this->_width, $this->_height);[m
[32m+[m
[32m+[m[32m    if ( is_null($bg_color) || !is_array($bg_color) ) {[m
[32m+[m[32m      // Pure white bg[m
[32m+[m[32m      $bg_color = array(1,1,1,0);[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    $this->_bg_color = $this->_allocate_color($bg_color);[m
[32m+[m[32m    imagealphablending($this->_img, true);[m
[32m+[m[32m    imagesavealpha($this->_img, true);[m
[32m+[m[32m    imagefill($this->_img, 0, 0, $this->_bg_color);[m
[32m+[m[41m    [m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Return the GF image resource[m
[32m+[m[32m   *[m
[32m+[m[32m   * @return resource[m
[32m+[m[32m   */[m
[32m+[m[32m  function get_image() { return $this->_img; }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Return the image's width in pixels[m
[32m+[m[32m   *[m
[32m+[m[32m   * @return float[m
[32m+[m[32m   */[m
[32m+[m[32m  function get_width() { return $this->_width / $this->_aa_factor; }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Return the image's height in pixels[m
[32m+[m[32m   *[m
[32m+[m[32m   * @return float[m
[32m+[m[32m   */[m
[32m+[m[32m  function get_height() { return $this->_height / $this->_aa_factor; }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Returns the current page number[m
[32m+[m[32m   * @return int[m
[32m+[m[32m   */[m
[32m+[m[32m  function get_page_number() { return $this->_page_number; }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Returns the total number of pages in the document[m
[32m+[m[32m   * @return int[m
[32m+[m[32m   */[m
[32m+[m[32m  function get_page_count() { return $this->_page_count; }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Sets the current page number[m
[32m+[m[32m   *[m
[32m+[m[32m   * @param int $num[m
[32m+[m[32m   */[m
[32m+[m[32m  function set_page_number($num) { $this->_page_number = $num; }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Sets the page count[m
[32m+[m[32m   *[m
[32m+[m[32m   * @param int $count[m
[32m+[m[32m   */[m
[32m+[m[32m  function set_page_count($count) {  $this->_page_count = $count; }[m
[32m+[m[41m  [m
[32m+[m[32m  /**[m
[32m+[m[32m   * Sets the opacity[m[41m [m
[32m+[m[32m   *[m[41m [m
[32m+[m[32m   * @param $opacity[m
[32m+[m[32m   * @param $mode[m
[32m+[m[32m   */[m
[32m+[m[32m  function set_opacity($opacity, $mode = "Normal") {[m
[32m+[m[32m    // FIXME[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Allocate a new color.  Allocate with GD as needed and store[m
[32m+[m[32m   * previously allocated colors in $this->_colors.[m
[32m+[m[32m   *[m
[32m+[m[32m   * @param array $color  The new current color[m
[32m+[m[32m   * @return int           The allocated color[m
[32m+[m[32m   */[m
[32m+[m[32m  private function _allocate_color($color) {[m
[32m+[m[41m    [m
[32m+[m[32m    if ( isset($color["c"]) ) {[m
[32m+[m[32m      $color = cmyk_to_rgb($color);[m
[32m+[m[32m    }[m
[32m+[m[41m    [m
[32m+[m[32m    // Full opacity if no alpha set[m
[32m+[m[32m    if ( !isset($color[3]) )[m[41m [m
[32m+[m[32m      $color[3] = 0;[m
[32m+[m[41m    [m
[32m+[m[32m    list($r,$g,$b,$a) = $color;[m
[32m+[m[41m    [m
[32m+[m[32m    $r *= 255;[m
[32m+[m[32m    $g *= 255;[m
[32m+[m[32m    $b *= 255;[m
[32m+[m[32m    $a *= 127;[m
[32m+[m[41m    [m
[32m+[m[32m    // Clip values[m
[32m+[m[32m    $r = $r > 255 ? 255 : $r;[m
[32m+[m[32m    $g = $g > 255 ? 255 : $g;[m
[32m+[m[32m    $b = $b > 255 ? 255 : $b;[m
[32m+[m[32m    $a = $a > 127 ? 127 : $a;[m
[32m+[m[41m      [m
[32m+[m[32m    $r = $r < 0 ? 0 : $r;[m
[32m+[m[32m    $g = $g < 0 ? 0 : $g;[m
[32m+[m[32m    $b = $b < 0 ? 0 : $b;[m
[32m+[m[32m    $a = $a < 0 ? 0 : $a;[m
[32m+[m[41m      [m
[32m+[m[32m    $key = sprintf("#%02X%02X%02X%02X", $r, $g, $b, $a);[m
[32m+[m[41m      [m
[32m+[m[32m    if ( isset($this->_colors[$key]) )[m
[32m+[m[32m      return $this->_colors[$key];[m
[32m+[m
[32m+[m[32m    if ( $a != 0 )[m[41m [m
[32m+[m[32m      $this->_colors[$key] = imagecolorallocatealpha($this->_img, $r, $g, $b, $a);[m
[32m+[m[32m    else[m
[32m+[m[32m      $this->_colors[$key] = imagecolorallocate($this->_img, $r, $g, $b);[m
[32m+[m[41m      [m
[32m+[m[32m    return $this->_colors[$key];[m
[32m+[m[41m    [m
[32m+[m[32m  }[m
[32m+[m[41m  [m
[32m+[m[32m  /**[m
[32m+[m[32m   * Draws a line from x1,y1 to x2,y2[m
[32m+[m[32m   *[m
[32m+[m[32m   * See {@link Style::munge_color()} for the format of the color array.[m
[32m+[m[32m   * See {@link Cpdf::setLineStyle()} for a description of the format of the[m
[32m+[m[32m   * $style parameter (aka dash).[m
[32m+[m[32m   *[m
[32m+[m[32m   * @param float $x1[m
[32m+[m[32m   * @param float $y1[m
[32m+[m[32m   * @param float $x2[m
[32m+[m[32m   * @param float $y2[m
[32m+[m[32m   * @param array $color[m
[32m+[m[32m   * @param float $width[m
[32m+[m[32m   * @param array $style[m
[32m+[m[32m   */[m
[32m+[m[32m  function line($x1, $y1, $x2, $y2, $color, $width, $style = null) {[m
[32m+[m
[32m+[m[32m    // Scale by the AA factor[m
[32m+[m[32m    $x1 *= $this->_aa_factor;[m
[32m+[m[32m    $y1 *= $this->_aa_factor;[m
[32m+[m[32m    $x2 *= $this->_aa_factor;[m
[32m+[m[32m    $y2 *= $this->_aa_factor;[m
[32m+[m[32m    $width *= $this->_aa_factor;[m
[32m+[m
[32m+[m[32m    $c = $this->_allocate_color($color);[m
[32m+[m
[32m+[m[32m    // Convert the style array if required[m
[32m+[m[32m    if ( !is_null($style) ) {[m
[32m+[m[32m      $gd_style = array();[m
[32m+[m
[32m+[m[32m      if ( count($style) == 1 ) {[m
[32m+[m[32m        for ($i = 0; $i < $style[0] * $this->_aa_factor; $i++) {[m
[32m+[m[32m          $gd_style[] = $c;[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        for ($i = 0; $i < $style[0] * $this->_aa_factor; $i++) {[m
[32m+[m[32m          $gd_style[] = $this->_bg_color;[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m      } else {[m
[32m+[m
[32m+[m[32m        $i = 0;[m
[32m+[m[32m        foreach ($style as $length) {[m
[32m+[m
[32m+[m[32m          if ( $i % 2 == 0 ) {[m
[32m+[m[32m            // 'On' pattern[m
[32m+[m[32m            for ($i = 0; $i < $style[0] * $this->_aa_factor; $i++)[m[41m [m
[32m+[m[32m              $gd_style[] = $c;[m
[32m+[m[41m            [m
[32m+[m[32m          } else {[m
[32m+[m[32m            // Off pattern[m
[32m+[m[32m            for ($i = 0; $i < $style[0] * $this->_aa_factor; $i++)[m[41m [m
[32m+[m[32m              $gd_style[] = $this->_bg_color;[m
[32m+[m[41m            [m
[32m+[m[32m          }[m
[32m+[m[32m          $i++;[m
[32m+[m[32m        }[m
[32m+[m[32m      }[m
[32m+[m[41m      [m
[32m+[m[32m      imagesetstyle($this->_img, $gd_style);[m
[32m+[m[32m      $c = IMG_COLOR_STYLED;[m
[32m+[m[32m    }[m
[32m+[m[41m    [m
[32m+[m[32m    imagesetthickness($this->_img, $width);[m
[32m+[m
[32m+[m[32m    imageline($this->_img, $x1, $y1, $x2, $y2, $c);[m
[32m+[m[41m    [m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Draws a rectangle at x1,y1 with width w and height h[m
[32m+[m[32m   *[m
[32m+[m[32m   * See {@link Style::munge_color()} for the format of the color array.[m
[32m+[m[32m   * See {@link Cpdf::setLineStyle()} for a description of the $style[m
[32m+[m[32m   * parameter (aka dash)[m
[32m+[m[32m   *[m
[32m+[m[32m   * @param float $x1[m
[32m+[m[32m   * @param float $y1[m
[32m+[m[32m   * @param float $w[m
[32m+[m[32m   * @param float $h[m
[32m+[m[32m   * @param array $color[m
[32m+[m[32m   * @param float $width[m
[32m+[m[32m   * @param array $style[m
[32m+[m[32m   */[m[41m   [m
[32m+[m[32m  function rectangle($x1, $y1, $w, $h, $color, $width, $style = null) {[m
[32m+[m
[32m+[m[32m    // Scale by the AA factor[m
[32m+[m[32m    $x1 *= $this->_aa_factor;[m
[32m+[m[32m    $y1 *= $this->_aa_factor;[m
[32m+[m[32m    $w *= $this->_aa_factor;[m
[32m+[m[32m    $h *= $this->_aa_factor;[m
[32m+[m
[32m+[m[32m    $c = $this->_allocate_color($color);[m
[32m+[m
[32m+[m[32m    // Convert the style array if required[m
[32m+[m[32m    if ( !is_null($style) ) {[m
[32m+[m[32m      $gd_style = array();[m
[32m+[m
[32m+[m[32m      foreach ($style as $length) {[m
[32m+[m[32m        for ($i = 0; $i < $length; $i++) {[m
[32m+[m[32m          $gd_style[] = $c;[m
[32m+[m[32m        }[m
[32m+[m[32m      }[m
[32m+[m
[32m+[m[32m      imagesetstyle($this->_img, $gd_style);[m
[32m+[m[32m      $c = IMG_COLOR_STYLED;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    imagesetthickness($this->_img, $width);[m
[32m+[m
[32m+[m[32m    imagerectangle($this->_img, $x1, $y1, $x1 + $w, $y1 + $h, $c);[m
[32m+[m[41m    [m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Draws a filled rectangle at x1,y1 with width w and height h[m
[32m+[m[32m   *[m
[32m+[m[32m   * See {@link Style::munge_color()} for the format of the color array.[m
[32m+[m[32m   *[m
[32m+[m[32m   * @param float $x1[m
[32m+[m[32m   * @param float $y1[m
[32m+[m[32m   * @param float $w[m
[32m+[m[32m   * @param float $h[m
[32m+[m[32m   * @param array $color[m
[32m+[m[32m   */[m[41m   [m
[32m+[m[32m  function filled_rectangle($x1, $y1, $w, $h, $color) {[m
[32m+[m
[32m+[m[32m    // Scale by the AA factor[m
[32m+[m[32m    $x1 *= $this->_aa_factor;[m
[32m+[m[32m    $y1 *= $this->_aa_factor;[m
[32m+[m[32m    $w *= $this->_aa_factor;[m
[32m+[m[32m    $h *= $this->_aa_factor;[m
[32m+[m
[32m+[m[32m    $c = $this->_allocate_color($color);[m
[32m+[m
[32m+[m[32m    imagefilledrectangle($this->_img, $x1, $y1, $x1 + $w, $y1 + $h, $c);[m
[32m+[m
[32m+[m[32m  }[m
[32m+[m[41m  [m
[32m+[m[32m  /**[m
[32m+[m[32m   * Starts a clipping rectangle at x1,y1 with width w and height h[m
[32m+[m[32m   *[m
[32m+[m[32m   * @param float $x1[m
[32m+[m[32m   * @param float $y1[m
[32m+[m[32m   * @param float $w[m
[32m+[m[32m   * @param float $h[m
[32m+[m[32m   */[m[41m   [m
[32m+[m[32m  function clipping_rectangle($x1, $y1, $w, $h) {[m
[32m+[m[32m    // @todo[m
[32m+[m[32m  }[m
[32m+[m[41m  [m
[32m+[m[32m  /**[m
[32m+[m[32m   * Ends the last clipping shape[m
[32m+[m[32m   */[m[41m  [m
[32m+[m[32m  function clipping_end() {[m
[32m+[m[32m    // @todo[m
[32m+[m[32m  }[m
[32m+[m[41m  [m
[32m+[m[32m  function save() {[m
[32m+[m[32m    // @todo[m
[32m+[m[32m  }[m
[32m+[m[41m  [m
[32m+[m[32m  function restore() {[m
[32m+[m[32m    // @todo[m
[32m+[m[32m  }[m
[32m+[m[41m  [m
[32m+[m[32m  function rotate($angle, $x, $y) {[m
[32m+[m[32m    // @todo[m
[32m+[m[32m  }[m
[32m+[m[41m  [m
[32m+[m[32m  function skew($angle_x, $angle_y, $x, $y) {[m
[32m+[m[32m    // @todo[m
[32m+[m[32m  }[m
[32m+[m[41m  [m
[32m+[m[32m  function scale($s_x, $s_y, $x, $y) {[m
[32m+[m[32m    // @todo[m
[32m+[m[32m  }[m
[32m+[m[41m  [m
[32m+[m[32m  function translate($t_x, $t_y) {[m
[32m+[m[32m    // @todo[m
[32m+[m[32m  }[m
[32m+[m[41m  [m
[32m+[m[32m  function transform($a, $b, $c, $d, $e, $f) {[m
[32m+[m[32m    // @todo[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Draws a polygon[m
[32m+[m[32m   *[m
[32m+[m[32m   * The polygon is formed by joining all the points stored in the $points[m
[32m+[m[32m   * array.  $points has the following structure:[m
[32m+[m[32m   * <code>[m
[32m+[m[32m   * array(0 => x1,[m
[32m+[m[32m   *       1 => y1,[m
[32m+[m[32m   *       2 => x2,[m
[32m+[m[32m   *       3 => y2,[m
[32m+[m[32m   *       ...[m
[32m+[m[32m   *       );[m
[32m+[m[32m   * </code>[m
[32m+[m[32m   *[m
[32m+[m[32m   * See {@link Style::munge_color()} for the format of the color array.[m
[32m+[m[32m   * See {@link Cpdf::setLineStyle()} for a description of the $style[m
[32m+[m[32m   * parameter (aka dash)[m[41m   [m
[32m+[m[32m   *[m
[32m+[m[32m   * @param array $points[m
[32m+[m[32m   * @param array $color[m
[32m+[m[32m   * @param float $width[m
[32m+[m[32m   * @param array $style[m
[32m+[m[32m   * @param bool  $fill  Fills the polygon if true[m
[32m+[m[32m   */[m
[32m+[m[32m  function polygon($points, $color, $width = null, $style = null, $fill = false) {[m
[32m+[m
[32m+[m[32m    // Scale each point by the AA factor[m
[32m+[m[32m    foreach (array_keys($points) as $i)[m
[32m+[m[32m      $points[$i] *= $this->_aa_factor;[m
[32m+[m
[32m+[m[32m    $c = $this->_allocate_color($color);[m
[32m+[m
[32m+[m[32m    // Convert the style array if required[m
[32m+[m[32m    if ( !is_null($style) && !$fill ) {[m
[32m+[m[32m      $gd_style = array();[m
[32m+[m
[32m+[m[32m      foreach ($style as $length) {[m
[32m+[m[32m        for ($i = 0; $i < $length; $i++) {[m
[32m+[m[32m          $gd_style[] = $c;[m
[32m+[m[32m        }[m
[32m+[m[32m      }[m
[32m+[m
[32m+[m[32m      imagesetstyle($this->_img, $gd_style);[m
[32m+[m[32m      $c = IMG_COLOR_STYLED;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    imagesetthickness($this->_img, $width);[m
[32m+[m
[32m+[m[32m    if ( $fill )[m[41m [m
[32m+[m[32m      imagefilledpolygon($this->_img, $points, count($points) / 2, $c);[m
[32m+[m[32m    else[m
[32m+[m[32m      imagepolygon($this->_img, $points, count($points) / 2, $c);[m
[32m+[m[41m        [m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Draws a circle at $x,$y with radius $r[m
[32m+[m[32m   *[m
[32m+[m[32m   * See {@link Style::munge_color()} for the format of the color array.[m
[32m+[m[32m   * See {@link Cpdf::setLineStyle()} for a description of the $style[m
[32m+[m[32m   * parameter (aka dash)[m
[32m+[m[32m   *[m
[32m+[m[32m   * @param float $x[m
[32m+[m[32m   * @param float $y[m
[32m+[m[32m   * @param float $r[m
[32m+[m[32m   * @param array $color[m
[32m+[m[32m   * @param float $width[m
[32m+[m[32m   * @param array $style[m
[32m+[m[32m   * @param bool $fill Fills the circle if true[m[41m   [m
[32m+[m[32m   */[m[41m   [m
[32m+[m[32m  function circle($x, $y, $r, $color, $width = null, $style = null, $fill = false) {[m
[32m+[m
[32m+[m[32m    // Scale by the AA factor[m
[32m+[m[32m    $x *= $this->_aa_factor;[m
[32m+[m[32m    $y *= $this->_aa_factor;[m
[32m+[m[32m    $r *= $this->_aa_factor;[m
[32m+[m
[32m+[m[32m    $c = $this->_allocate_color($color);[m
[32m+[m
[32m+[m[32m    // Convert the style array if required[m
[32m+[m[32m    if ( !is_null($style) && !$fill ) {[m
[32m+[m[32m      $gd_style = array();[m
[32m+[m
[32m+[m[32m      foreach ($style as $length) {[m
[32m+[m[32m        for ($i = 0; $i < $length; $i++) {[m
[32m+[m[32m          $gd_style[] = $c;[m
[32m+[m[32m        }[m
[32m+[m[32m      }[m
[32m+[m
[32m+[m[32m      imagesetstyle($this->_img, $gd_style);[m
[32m+[m[32m      $c = IMG_COLOR_STYLED;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    imagesetthickness($this->_img, $width);[m
[32m+[m
[32m+[m[32m    if ( $fill )[m
[32m+[m[32m      imagefilledellipse($this->_img, $x, $y, $r, $r, $c);[m
[32m+[m[32m    else[m
[32m+[m[32m      imageellipse($this->_img, $x, $y, $r, $r, $c);[m
[32m+[m[41m        [m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Add an image to the pdf.[m
[32m+[m[32m   *[m
[32m+[m[32m   * The image is placed at the specified x and y coordinates with the[m
[32m+[m[32m   * given width and height.[m
[32m+[m[32m   *[m
[32m+[m[32m   * @param string $img_url the path to the image[m
[32m+[m[32m   * @param string $img_type the type (e.g. extension) of the image[m
[32m+[m[32m   * @param float $x x position[m
[32m+[m[32m   * @param float $y y position[m
[32m+[m[32m   * @param int $w width (in pixels)[m
[32m+[m[32m   * @param int $h height (in pixels)[m
[32m+[m[32m   */[m
[32m+[m[32m  function image($img_url, $img_type, $x, $y, $w, $h) {[m
[32m+[m
[32m+[m[32m    switch ($img_type) {[m
[32m+[m[32m    case "png":[m
[32m+[m[32m      $src = @imagecreatefrompng($img_url);[m
[32m+[m[32m      break;[m
[32m+[m[41m      [m
[32m+[m[32m    case "gif":[m
[32m+[m[32m      $src = @imagecreatefromgif($img_url);[m
[32m+[m[32m      break;[m
[32m+[m[41m      [m
[32m+[m[32m    case "bmp":[m
[32m+[m[32m      $src = @imagecreatefrombmp($img_url);[m
[32m+[m[32m      break;[m
[32m+[m[41m      [m
[32m+[m[32m    case "jpg":[m
[32m+[m[32m    case "jpeg":[m
[32m+[m[32m      $src = @imagecreatefromjpeg($img_url);[m
[32m+[m[32m      break;[m
[32m+[m
[32m+[m[32m    default:[m
[32m+[m[32m      break;[m
[32m+[m[41m      [m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    if ( !$src )[m
[32m+[m[32m      return; // Probably should add to $_dompdf_errors or whatever here[m
[32m+[m[41m    [m
[32m+[m[32m    // Scale by the AA factor[m
[32m+[m[32m    $x *= $this->_aa_factor;[m
[32m+[m[32m    $y *= $this->_aa_factor;[m
[32m+[m
[32m+[m[32m    $w *= $this->_aa_factor;[m
[32m+[m[32m    $h *= $this->_aa_factor;[m
[32m+[m[41m    [m
[32m+[m[32m    $img_w = imagesx($src);[m
[32m+[m[32m    $img_h = imagesy($src);[m
[32m+[m
[32m+[m[41m    [m
[32m+[m[32m    imagecopyresampled($this->_img, $src, $x, $y, 0, 0, $w, $h, $img_w, $img_h);[m
[32m+[m[41m    [m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Writes text at the specified x and y coordinates[m
[32m+[m[32m   *[m
[32m+[m[32m   * See {@link Style::munge_color()} for the format of the color array.[m
[32m+[m[32m   *[m
[32m+[m[32m   * @param float $x[m
[32m+[m[32m   * @param float $y[m
[32m+[m[32m   * @param string $text the text to write[m
[32m+[m[32m   * @param string $font the font file to use[m
[32m+[m[32m   * @param float $size the font size, in points[m
[32m+[m[32m   * @param array $color[m
[32m+[m[32m   * @param float $adjust word spacing adjustment[m
[32m+[m[32m   * @param float $angle Text angle[m
[32m+[m[32m   */[m
[32m+[m[32m  function text($x, $y, $text, $font, $size, $color = array(0,0,0), $word_spacing = 0, $char_spacing = 0, $angle = 0) {[m
[32m+[m
[32m+[m[32m    // Scale by the AA factor[m
[32m+[m[32m    $x *= $this->_aa_factor;[m
[32m+[m[32m    $y *= $this->_aa_factor;[m
[32m+[m[32m    $size *= $this->_aa_factor;[m
[32m+[m[41m    [m
[32m+[m[32m    $h = $this->get_font_height($font, $size);[m
[32m+[m[32m    $c = $this->_allocate_color($color);[m
[32m+[m[41m    [m
[32m+[m[32m    $text = mb_encode_numericentity($text, array(0x0080, 0xff, 0, 0xff), 'UTF-8');[m
[32m+[m
[32m+[m[32m    if ( strpos($font, '.ttf') === false )[m
[32m+[m[32m      $font .= ".ttf";[m
[32m+[m
[32m+[m[32m    // FIXME: word spacing[m
[32m+[m[32m    @imagettftext($this->_img, $size, $angle, $x, $y + $h, $c, $font, $text);[m
[32m+[m[41m    [m
[32m+[m[32m  }[m
[32m+[m[41m  [m
[32m+[m[32m  function javascript($code) {[m
[32m+[m[32m    // Not implemented[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Add a named destination (similar to <a name="foo">...</a> in html)[m
[32m+[m[32m   *[m
[32m+[m[32m   * @param string $anchorname The name of the named destination[m
[32m+[m[32m   */[m
[32m+[m[32m  function add_named_dest($anchorname) {[m
[32m+[m[32m    // Not implemented[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Add a link to the pdf[m
[32m+[m[32m   *[m
[32m+[m[32m   * @param string $url The url to link to[m
[32m+[m[32m   * @param float  $x   The x position of the link[m
[32m+[m[32m   * @param float  $y   The y position of the link[m
[32m+[m[32m   * @param float  $width   The width of the link[m
[32m+[m[32m   * @param float  $height   The height of the link[m
[32m+[m[32m   */[m
[32m+[m[32m  function add_link($url, $x, $y, $width, $height) {[m
[32m+[m[32m    // Not implemented[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Add meta information to the PDF[m
[32m+[m[32m   *[m
[32m+[m[32m   * @param string $label  label of the value (Creator, Producer, etc.)[m
[32m+[m[32m   * @param string $value  the text to set[m
[32m+[m[32m   */[m
[32m+[m[32m  function add_info($label, $value) {[m
[32m+[m[32m    // N/A[m
[32m+[m[32m  }[m
[32m+[m[41m  [m
[32m+[m[32m  /**[m
[32m+[m[32m   * Calculates text size, in points[m
[32m+[m[32m   *[m
[32m+[m[32m   * @param string $text the text to be sized[m
[32m+[m[32m   * @param string $font the desired font[m
[32m+[m[32m   * @param float  $size the desired font size[m
[32m+[m[32m   * @param float  $spacing word spacing, if any[m
[32m+[m[32m   * @return float[m
[32m+[m[32m   */[m
[32m+[m[32m  function get_text_width($text, $font, $size, $word_spacing = 0, $char_spacing = 0) {[m[41m    [m
[32m+[m
[32m+[m[32m    if ( strpos($font, '.ttf') === false )[m
[32m+[m[32m      $font .= ".ttf";[m
[32m+[m[41m      [m
[32m+[m[32m    $text = mb_encode_numericentity($text, array(0x0080, 0xffff, 0, 0xffff), 'UTF-8');[m
[32m+[m
[32m+[m[32m    // FIXME: word spacing[m
[32m+[m[32m    list($x1,,$x2) = @imagettfbbox($size, 0, $font, $text);[m
[32m+[m[32m    return $x2 - $x1;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Calculates font height, in points[m
[32m+[m[32m   *[m
[32m+[m[32m   * @param string $font[m
[32m+[m[32m   * @param float $size[m
[32m+[m[32m   * @return float[m
[32m+[m[32m   */[m
[32m+[m[32m  function get_font_height($font, $size) {[m
[32m+[m[32m    if ( strpos($font, '.ttf') === false )[m
[32m+[m[32m      $font .= ".ttf";[m
[32m+[m
[32m+[m[32m    // FIXME: word spacing[m
[32m+[m[32m    list(,$y2,,,,$y1) = imagettfbbox($size, 0, $font, "MXjpqytfhl");  // Test string with ascenders, descenders and caps[m
[32m+[m[32m    return ($y2 - $y1) * DOMPDF_FONT_HEIGHT_RATIO;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[41m  [m
[32m+[m[32m  /**[m
[32m+[m[32m   * Starts a new page[m
[32m+[m[32m   *[m
[32m+[m[32m   * Subsequent drawing operations will appear on the new page.[m
[32m+[m[32m   */[m
[32m+[m[32m  function new_page() {[m
[32m+[m[32m    $this->_page_number++;[m
[32m+[m[32m    $this->_page_count++;[m
[32m+[m[32m  }[m[41m    [m
[32m+[m
[32m+[m[32m  function open_object(){[m
[32m+[m[32m    // N/A[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  function close_object(){[m
[32m+[m[32m    // N/A[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  function add_object(){[m
[32m+[m[32m    // N/A[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  function page_text(){[m
[32m+[m[32m    // N/A[m
[32m+[m[32m  }[m
[32m+[m[41m  [m
[32m+[m[32m  /**[m
[32m+[m[32m   * Streams the image directly to the browser[m
[32m+[m[32m   *[m
[32m+[m[32m   * @param string $filename the name of the image file (ignored)[m
[32m+[m[32m   * @param array  $options associative array, 'type' => jpeg|jpg|png, 'quality' => 0 - 100 (jpeg only)[m
[32m+[m[32m   */[m
[32m+[m[32m  function stream($filename, $options = null) {[m
[32m+[m
[32m+[m[32m    // Perform any antialiasing[m
[32m+[m[32m    if ( $this->_aa_factor != 1 ) {[m
[32m+[m[32m      $dst_w = $this->_width / $this->_aa_factor;[m
[32m+[m[32m      $dst_h = $this->_height / $this->_aa_factor;[m
[32m+[m[32m      $dst = imagecreatetruecolor($dst_w, $dst_h);[m
[32m+[m[32m      imagecopyresampled($dst, $this->_img, 0, 0, 0, 0,[m
[32m+[m[32m                         $dst_w, $dst_h,[m
[32m+[m[32m                         $this->_width, $this->_height);[m
[32m+[m[32m    } else {[m
[32m+[m[32m      $dst = $this->_img;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    if ( !isset($options["type"]) )[m
[32m+[m[32m      $options["type"] = "png";[m
[32m+[m
[32m+[m[32m    $type = strtolower($options["type"]);[m
[32m+[m[41m    [m
[32m+[m[32m    header("Cache-Control: private");[m
[32m+[m[41m    [m
[32m+[m[32m    switch ($type) {[m
[32m+[m
[32m+[m[32m    case "jpg":[m
[32m+[m[32m    case "jpeg":[m
[32m+[m[32m      if ( !isset($options["quality"]) )[m
[32m+[m[32m        $options["quality"] = 75;[m
[32m+[m[41m      [m
[32m+[m[32m      header("Content-type: image/jpeg");[m
[32m+[m[32m      imagejpeg($dst, '', $options["quality"]);[m
[32m+[m[32m      break;[m
[32m+[m
[32m+[m[32m    case "png":[m
[32m+[m[32m    default:[m
[32m+[m[32m      header("Content-type: image/png");[m
[32m+[m[32m      imagepng($dst);[m
[32m+[m[32m      break;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    if ( $this->_aa_factor != 1 )[m[41m [m
[32m+[m[32m      imagedestroy($dst);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Returns the PNG as a string[m
[32m+[m[32m   *[m
[32m+[m[32m   * @param array  $options associative array, 'type' => jpeg|jpg|png, 'quality' => 0 - 100 (jpeg only)[m
[32m+[m[32m   * @return string[m
[32m+[m[32m   */[m
[32m+[m[32m  function output($options = null) {[m
[32m+[m
[32m+[m[32m    if ( $this->_aa_factor != 1 ) {[m
[32m+[m[32m      $dst_w = $this->_width / $this->_aa_factor;[m
[32m+[m[32m      $dst_h = $this->_height / $this->_aa_factor;[m
[32m+[m[32m      $dst = imagecreatetruecolor($dst_w, $dst_h);[m
[32m+[m[32m      imagecopyresampled($dst, $this->_img, 0, 0, 0, 0,[m
[32m+[m[32m                         $dst_w, $dst_h,[m
[32m+[m[32m                         $this->_width, $this->_height);[m
[32m+[m[32m    } else {[m
[32m+[m[32m      $dst = $this->_img;[m
[32m+[m[32m    }[m
[32m+[m[41m    [m
[32m+[m[32m    if ( !isset($options["type"]) )[m
[32m+[m[32m      $options["type"] = "png";[m
[32m+[m
[32m+[m[32m    $type = $options["type"];[m
[32m+[m[41m    [m
[32m+[m[32m    ob_start();[m
[32m+[m
[32m+[m[32m    switch ($type) {[m
[32m+[m
[32m+[m[32m    case "jpg":[m
[32m+[m[32m    case "jpeg":[m
[32m+[m[32m      if ( !isset($options["quality"]) )[m
[32m+[m[32m        $options["quality"] = 75;[m
[32m+[m[41m      [m
[32m+[m[32m      imagejpeg($dst, '', $options["quality"]);[m
[32m+[m[32m      break;[m
[32m+[m
[32m+[m[32m    case "png":[m
[32m+[m[32m    default:[m
[32m+[m[32m      imagepng($dst);[m
[32m+[m[32m      break;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    $image = ob_get_clean();[m
[32m+[m
[32m+[m[32m    if ( $this->_aa_factor != 1 )[m
[32m+[m[32m      imagedestroy($dst);[m
[32m+[m[41m    [m
[32m+[m[32m    return $image;[m
[32m+[m[32m  }[m
[32m+[m[41m  [m
[32m+[m[41m  [m
[32m+[m[32m}[m
[1mdiff --git a/application/third_party/dompdf/include/image_cache.cls.php b/application/third_party/dompdf/include/image_cache.cls.php[m
[1mnew file mode 100644[m
[1mindex 0000000..46dc0c6[m
[1m--- /dev/null[m
[1m+++ b/application/third_party/dompdf/include/image_cache.cls.php[m
[36m@@ -0,0 +1,231 @@[m
[32m+[m[32m<?php[m
[32m+[m[32m/**[m
[32m+[m[32m * DOMPDF - PHP5 HTML to PDF renderer[m
[32m+[m[32m *[m
[32m+[m[32m * File: $RCSfile: image_cache.cls.php,v $[m
[32m+[m[32m * Created on: 2004-08-08[m
[32m+[m[32m *[m
[32m+[m[32m * Copyright (c) 2004 - Benj Carson <benjcarson@digitaljunkies.ca>[m
[32m+[m[32m *[m
[32m+[m[32m * This library is free software; you can redistribute it and/or[m
[32m+[m[32m * modify it under the terms of the GNU Lesser General Public[m
[32m+[m[32m * License as published by the Free Software Foundation; either[m
[32m+[m[32m * version 2.1 of the License, or (at your option) any later version.[m
[32m+[m[32m *[m
[32m+[m[32m * This library is distributed in the hope that it will be useful,[m
[32m+[m[32m * but WITHOUT ANY WARRANTY; without even the implied warranty of[m
[32m+[m[32m * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU[m
[32m+[m[32m * Lesser General Public License for more details.[m
[32m+[m[32m *[m
[32m+[m[32m * You should have received a copy of the GNU Lesser General Public License[m
[32m+[m[32m * along with this library in the file LICENSE.LGPL; if not, write to the[m
[32m+[m[32m * Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA[m
[32m+[m[32m * 02111-1307 USA[m
[32m+[m[32m *[m
[32m+[m[32m * Alternatively, you may distribute this software under the terms of the[m
[32m+[m[32m * PHP License, version 3.0 or later.  A copy of this license should have[m
[32m+[m[32m * been distributed with this file in the file LICENSE.PHP .  If this is not[m
[32m+[m[32m * the case, you can obtain a copy at http://www.php.net/license/3_0.txt.[m
[32m+[m[32m *[m
[32m+[m[32m * The latest version of DOMPDF might be available at:[m
[32m+[m[32m * http://www.dompdf.com/[m
[32m+[m[32m *[m
[32m+[m[32m * @link http://www.dompdf.com/[m
[32m+[m[32m * @copyright 2004 Benj Carson[m
[32m+[m[32m * @author Benj Carson <benjcarson@digitaljunkies.ca>[m
[32m+[m[32m * @contributor Helmut Tischer <htischer@weihenstephan.org>[m
[32m+[m[32m * @package dompdf[m
[32m+[m[32m *[m
[32m+[m[32m * Changes[m
[32m+[m[32m * @contributor Helmut Tischer <htischer@weihenstephan.org>[m
[32m+[m[32m * @version 0.5.1.htischer.20090507[m
[32m+[m[32m * - On getting type of images don't require any file endings[m
[32m+[m[32m *   and don't strip off url parameters,[m
[32m+[m[32m *   to allowing dynamically generated sites with image id[m
[32m+[m[32m *   in url parameters and not at end of url or missing file extension[m
[32m+[m[32m * @contributor Helmut Tischer <htischer@weihenstephan.org>[m
[32m+[m[32m * @version dompdf_trunk_with_helmut_mods.20090524[m
[32m+[m[32m * - Made debug messages more individually configurable[m
[32m+[m[32m * @version 20090622[m
[32m+[m[32m * - don't cache broken image, but refer to original broken image replacement[m
[32m+[m[32m */[m
[32m+[m
[32m+[m[32m/* $Id: image_cache.cls.php 354 2011-01-24 21:59:54Z fabien.menager $ */[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Static class that resolves image urls and downloads and caches[m
[32m+[m[32m * remote images if required.[m
[32m+[m[32m *[m
[32m+[m[32m * @access private[m
[32m+[m[32m * @package dompdf[m
[32m+[m[32m */[m
[32m+[m[32mclass Image_Cache {[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Array of downloaded images.  Cached so that identical images are[m
[32m+[m[32m   * not needlessly downloaded.[m
[32m+[m[32m   *[m
[32m+[m[32m   * @var array[m
[32m+[m[32m   */[m
[32m+[m[32m  static protected $_cache = array();[m
[32m+[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Resolve and fetch an image for use.[m
[32m+[m[32m   *[m
[32m+[m[32m   * @param string $url        The url of the image[m
[32m+[m[32m   * @param string $proto      Default protocol if none specified in $url[m
[32m+[m[32m   * @param string $host       Default host if none specified in $url[m
[32m+[m[32m   * @param string $base_path  Default path if none specified in $url[m
[32m+[m[32m   * @return array             An array with two elements: The local path to the image and the image extension[m
[32m+[m[32m   */[m
[32m+[m[32m  static function resolve_url($url, $proto, $host, $base_path) {[m
[32m+[m[32m    global $_dompdf_warnings;[m
[32m+[m
[32m+[m[32m    $parsed_url = explode_url($url);[m
[32m+[m
[32m+[m[32m    $DEBUGPNG=DEBUGPNG; //=DEBUGPNG; Allow override of global setting for ad hoc debug[m
[32m+[m[32m    $full_url_dbg = '';[m
[32m+[m[41m    [m
[32m+[m[32m    //debugpng[m
[32m+[m[32m    if ($DEBUGPNG) print 'resolve_url('.$url.','.$proto.','.$host.','.$base_path.')('.$parsed_url['protocol'].')';[m
[32m+[m
[32m+[m[32m    $remote = ($proto != "" && $proto !== "file://");[m
[32m+[m[32m    $remote = $remote || ($parsed_url['protocol'] != "");[m
[32m+[m[41m    [m
[32m+[m[32m    $datauri = strpos($parsed_url['protocol'], "data:") === 0;[m
[32m+[m
[32m+[m[32m    if ( !DOMPDF_ENABLE_REMOTE && $remote && !$datauri ) {[m
[32m+[m[32m      $resolved_url = DOMPDF_LIB_DIR . "/res/broken_image.png";[m
[32m+[m[32m      $ext = "png";[m
[32m+[m
[32m+[m[32m      //debugpng[m
[32m+[m[32m      if ($DEBUGPNG) $full_url_dbg = '(blockedremote)';[m
[32m+[m
[32m+[m[32m    }[m[41m [m
[32m+[m[32m    else if ( DOMPDF_ENABLE_REMOTE && $remote || $datauri ) {[m
[32m+[m[32m      // Download remote files to a temporary directory[m
[32m+[m[32m      $full_url = build_url($proto, $host, $base_path, $url);[m
[32m+[m
[32m+[m[32m      if ( isset(self::$_cache[$full_url]) ) {[m
[32m+[m[32m        list($resolved_url,$ext) = self::$_cache[$full_url];[m
[32m+[m
[32m+[m[32m        //debugpng[m
[32m+[m[32m        if ($DEBUGPNG) $full_url_dbg = $full_url.'(cache)';[m
[32m+[m
[32m+[m[32m      } else {[m
[32m+[m
[32m+[m[32m        $resolved_url = tempnam(DOMPDF_TEMP_DIR, "ca_dompdf_img_");[m
[32m+[m[32m        //debugpng[m
[32m+[m[32m        if ($DEBUGPNG) echo $resolved_url . "\n";[m
[32m+[m
[32m+[m[32m        if ($datauri) {[m
[32m+[m[32m          if ($parsed_data_uri = parse_data_uri($url)) {[m
[32m+[m[32m            $image = $parsed_data_uri['data'];[m
[32m+[m[32m            list(, $ext) = explode('/', $parsed_data_uri['mime'], 2);[m[41m [m
[32m+[m[32m          }[m
[32m+[m[32m        }[m
[32m+[m[32m        else {[m
[32m+[m[32m          $old_err = set_error_handler("record_warnings");[m
[32m+[m[32m          $image = file_get_contents($full_url);[m
[32m+[m[32m          restore_error_handler();[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        if ( strlen($image) == 0 ) {[m
[32m+[m[32m          //target image not found[m
[32m+[m[32m          $resolved_url = DOMPDF_LIB_DIR . "/res/broken_image.png";[m
[32m+[m[32m          $ext = "png";[m
[32m+[m
[32m+[m[32m          //debugpng[m
[32m+[m[32m          if ($DEBUGPNG) $full_url_dbg = $full_url.'(missing)';[m
[32m+[m
[32m+[m[32m        } else {[m
[32m+[m
[32m+[m[32m        file_put_contents($resolved_url, $image);[m
[32m+[m
[32m+[m		[32m//e.g. fetch.php?media=url.jpg&cache=1[m
[32m+[m		[32m//- Image file name might be one of the dynamic parts of the url, don't strip off![m
[32m+[m		[32m//  if ( preg_match("/.*\.(\w+)/",$url,$match) ) $ext = $match[1];[m
[32m+[m		[32m//- a remote url does not need to have a file extension at all[m
[32m+[m[32m        //- local cached file does not have a matching file extension[m
[32m+[m[32m        //Therefore get image type from the content[m
[32m+[m
[32m+[m[32m        $imagedim = dompdf_getimagesize($resolved_url);[m
[32m+[m[41m        [m
[32m+[m[32m        if( $imagedim[0] && $imagedim[1] &&[m[41m [m
[32m+[m[32m            in_array($imagedim[2], array(IMAGETYPE_GIF, IMAGETYPE_PNG, IMAGETYPE_JPEG, IMAGETYPE_BMP)) ) {[m
[32m+[m[32m        //target image is valid[m
[32m+[m
[32m+[m[32m        $imagetypes = array('','gif','jpeg','png','swf','psd','bmp');[m
[32m+[m[32m        $ext = $imagetypes[$imagedim[2]];[m
[32m+[m[32m        if ( rename($resolved_url,$resolved_url.'.'.$ext) ) {[m
[32m+[m[32m          $resolved_url .= '.'.$ext;[m
[32m+[m[32m        }[m
[32m+[m[41m [m
[32m+[m[41m [m		[32m//Don't put replacement image into cache - otherwise it will be deleted on cache cleanup.[m
[32m+[m[41m [m		[32m//Only execute on successfull caching of remote image.[m
[32m+[m[32m        self::$_cache[$full_url] = array($resolved_url,$ext);[m
[32m+[m
[32m+[m[32m        } else {[m
[32m+[m[32m          //target image is not valid.[m
[32m+[m[32m          unlink($resolved_url);[m
[32m+[m[41m          [m
[32m+[m[32m          $resolved_url = DOMPDF_LIB_DIR . "/res/broken_image.png";[m
[32m+[m[32m          $ext = "png";[m
[32m+[m[32m        }[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m      }[m
[32m+[m
[32m+[m[32m    } else {[m
[32m+[m
[32m+[m[32m      $resolved_url = build_url($proto, $host, $base_path, $url);[m
[32m+[m[32m      if ($DEBUGPNG) print 'build_url('.$proto.','.$host.','.$base_path.','.$url.')('.$resolved_url.')';[m
[32m+[m
[32m+[m[32m      if ( !preg_match("/.*\.(\w+)/",$url,$match) ) {[m
[32m+[m[32m        //debugpng[m
[32m+[m[32m        if ($DEBUGPNG) print '[resolve_url exception '.$url.']';[m
[32m+[m[32m          throw new DOMPDF_Exception("Unknown image type: $url.");[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        $ext = $match[1];[m
[32m+[m
[32m+[m[32m        //debugpng[m
[32m+[m[32m        if ($DEBUGPNG) $full_url_dbg = '(local)';[m
[32m+[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    if ( !is_readable($resolved_url) || !filesize($resolved_url) ) {[m
[32m+[m
[32m+[m[32m      //debugpng[m
[32m+[m[32m      if ($DEBUGPNG) $full_url_dbg .= '(nocache'.$resolved_url.')';[m
[32m+[m
[32m+[m[32m      $_dompdf_warnings[] = "File " .$resolved_url . " is not readable or is an empty file.\n";[m
[32m+[m[32m      $resolved_url = DOMPDF_LIB_DIR . "/res/broken_image.png";[m
[32m+[m[32m      $ext = "png";[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    //debugpng[m
[32m+[m[32m    if ($DEBUGPNG) print '[resolve_url '.$url.'|'.$full_url_dbg.'|'.$resolved_url.'|'.$ext.']';[m
[32m+[m
[32m+[m[32m    return array($resolved_url, $ext);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Unlink all cached images (i.e. temporary images either downloaded[m
[32m+[m[32m   * or converted)[m
[32m+[m[32m   */[m
[32m+[m[32m  static function clear() {[m
[32m+[m[32m    if ( count(self::$_cache) ) {[m
[32m+[m[32m      while ($entry = array_shift(self::$_cache)) {[m
[32m+[m[32m        list($file, $ext) = $entry;[m
[32m+[m[32m        //debugpng[m
[32m+[m[32m        if (DEBUGPNG) print '[clear unlink '.$file.']';[m
[32m+[m[32m        if (!DEBUGKEEPTEMP)[m
[32m+[m[32m          //XXX: Should we have some kind of fallback or warning if unlink() fails?[m
[32m+[m[32m          unlink($file);[m
[32m+[m[32m      }[m
[32m+[m[32m    }[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m}[m
[1mdiff --git a/application/third_party/dompdf/include/image_frame_decorator.cls.php b/application/third_party/dompdf/include/image_frame_decorator.cls.php[m
[1mnew file mode 100644[m
[1mindex 0000000..e81a4cf[m
[1m--- /dev/null[m
[1m+++ b/application/third_party/dompdf/include/image_frame_decorator.cls.php[m
[36m@@ -0,0 +1,116 @@[m
[32m+[m[32m<?php[m
[32m+[m[32m/**[m
[32m+[m[32m * DOMPDF - PHP5 HTML to PDF renderer[m
[32m+[m[32m *[m
[32m+[m[32m * File: $RCSfile: image_frame_decorator.cls.php,v $[m
[32m+[m[32m * Created on: 2004-08-08[m
[32m+[m[32m *[m
[32m+[m[32m * Copyright (c) 2004 - Benj Carson <benjcarson@digitaljunkies.ca>[m
[32m+[m[32m *[m
[32m+[m[32m * This library is free software; you can redistribute it and/or[m
[32m+[m[32m * modify it under the terms of the GNU Lesser General Public[m
[32m+[m[32m * License as published by the Free Software Foundation; either[m
[32m+[m[32m * version 2.1 of the License, or (at your option) any later version.[m
[32m+[m[32m *[m
[32m+[m[32m * This library is distributed in the hope that it will be useful,[m
[32m+[m[32m * but WITHOUT ANY WARRANTY; without even the implied warranty of[m
[32m+[m[32m * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU[m
[32m+[m[32m * Lesser General Public License for more details.[m
[32m+[m[32m *[m
[32m+[m[32m * You should have received a copy of the GNU Lesser General Public License[m
[32m+[m[32m * along with this library in the file LICENSE.LGPL; if not, write to the[m
[32m+[m[32m * Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA[m
[32m+[m[32m * 02111-1307 USA[m
[32m+[m[32m *[m
[32m+[m[32m * Alternatively, you may distribute this software under the terms of the[m
[32m+[m[32m * PHP License, version 3.0 or later.  A copy of this license should have[m
[32m+[m[32m * been distributed with this file in the file LICENSE.PHP .  If this is not[m
[32m+[m[32m * the case, you can obtain a copy at http://www.php.net/license/3_0.txt.[m
[32m+[m[32m *[m
[32m+[m[32m * The latest version of DOMPDF might be available at:[m
[32m+[m[32m * http://www.dompdf.com/[m
[32m+[m[32m *[m
[32m+[m[32m * @link http://www.dompdf.com/[m
[32m+[m[32m * @copyright 2004 Benj Carson[m
[32m+[m[32m * @author Benj Carson <benjcarson@digitaljunkies.ca>[m
[32m+[m[32m * @contributor Helmut Tischer <htischer@weihenstephan.org>[m
[32m+[m[32m * @package dompdf[m
[32m+[m[32m *[m
[32m+[m[32m * Changes[m
[32m+[m[32m * @contributor Helmut Tischer <htischer@weihenstephan.org>[m
[32m+[m[32m * @version 0.5.1.htischer.20090507[m
[32m+[m[32m * - add optional debug output[m
[32m+[m[32m */[m
[32m+[m
[32m+[m[32m/* $Id: image_frame_decorator.cls.php 283 2010-07-19 17:57:40Z fabien.menager $ */[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Decorates frames for image layout and rendering[m
[32m+[m[32m *[m
[32m+[m[32m * @access private[m
[32m+[m[32m * @package dompdf[m
[32m+[m[32m */[m
[32m+[m[32mclass Image_Frame_Decorator extends Frame_Decorator {[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * The path to the image file (note that remote images are[m
[32m+[m[32m   * downloaded locally to DOMPDF_TEMP_DIR).[m
[32m+[m[32m   *[m
[32m+[m[32m   * @var string[m
[32m+[m[32m   */[m
[32m+[m[32m  protected $_image_url;[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * The image's file extension (i.e. png, jpeg, gif)[m
[32m+[m[32m   *[m
[32m+[m[32m   * @var string[m
[32m+[m[32m   */[m
[32m+[m[32m  protected $_image_ext;[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Class constructor[m
[32m+[m[32m   *[m
[32m+[m[32m   * @param Frame $frame the frame to decorate[m
[32m+[m[32m   * @param DOMPDF $dompdf the document's dompdf object (required to resolve relative & remote urls)[m
[32m+[m[32m   */[m
[32m+[m[32m  function __construct(Frame $frame, DOMPDF $dompdf) {[m
[32m+[m[32m    global $_dompdf_warnings;[m
[32m+[m[41m    [m
[32m+[m[32m    parent::__construct($frame, $dompdf);[m
[32m+[m[32m    $url = $frame->get_node()->getAttribute("src");[m
[32m+[m[41m      [m
[32m+[m[32m    //debugpng[m
[32m+[m[32m    if (DEBUGPNG) print '[__construct '.$url.']';[m
[32m+[m
[32m+[m[32m    list($this->_image_url, $this->_image_ext) = Image_Cache::resolve_url($url,[m
[32m+[m[32m                                                                          $dompdf->get_protocol(),[m
[32m+[m[32m                                                                          $dompdf->get_host(),[m
[32m+[m[32m                                                                          $dompdf->get_base_path());[m
[32m+[m
[32m+[m[32m    if ( strrpos( $this->_image_url, DOMPDF_LIB_DIR . "/res/broken_image.png", 0) !== false &&[m
[32m+[m[32m         $alt = $frame->get_node()->getAttribute("alt") ) {[m
[32m+[m[32m      $style = $frame->get_style();[m
[32m+[m[32m      $style->width  = (4/3)*Font_Metrics::get_text_width($alt, $style->font_family, $style->font_size, $style->word_spacing);[m
[32m+[m[32m      $style->height = Font_Metrics::get_font_height($style->font_family, $style->font_size);[m
[32m+[m[32m    }[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Return the image's url[m
[32m+[m[32m   *[m
[32m+[m[32m   * @return string The url of this image[m
[32m+[m[32m   */[m
[32m+[m[32m  function get_image_url() {[m
[32m+[m[32m    return $this->_image_url;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Return the image's file extension[m
[32m+[m[32m   *[m
[32m+[m[32m   * @return string The image's file extension[m
[32m+[m[32m   */[m
[32m+[m[32m  function get_image_ext() {[m
[32m+[m[32m    return $this->_image_ext;[m
[32m+[m[32m  }[m
[32m+[m[41m  [m
[32m+[m[32m}[m
[1mdiff --git a/application/third_party/dompdf/include/image_frame_reflower.cls.php b/application/third_party/dompdf/include/image_frame_reflower.cls.php[m
[1mnew file mode 100644[m
[1mindex 0000000..153fa3e[m
[1m--- /dev/null[m
[1m+++ b/application/third_party/dompdf/include/image_frame_reflower.cls.php[m
[36m@@ -0,0 +1,162 @@[m
[32m+[m[32m<?php[m
[32m+[m[32m/**[m
[32m+[m[32m * DOMPDF - PHP5 HTML to PDF renderer[m
[32m+[m[32m *[m
[32m+[m[32m * File: $RCSfile: image_frame_reflower.cls.php,v $[m
[32m+[m[32m * Created on: 2004-08-08[m
[32m+[m[32m *[m
[32m+[m[32m * Copyright (c) 2004 - Benj Carson <benjcarson@digitaljunkies.ca>[m
[32m+[m[32m *[m
[32m+[m[32m * This library is free software; you can redistribute it and/or[m
[32m+[m[32m * modify it under the terms of the GNU Lesser General Public[m
[32m+[m[32m * License as published by the Free Software Foundation; either[m
[32m+[m[32m * version 2.1 of the License, or (at your option) any later version.[m
[32m+[m[32m *[m
[32m+[m[32m * This library is distributed in the hope that it will be useful,[m
[32m+[m[32m * but WITHOUT ANY WARRANTY; without even the implied warranty of[m
[32m+[m[32m * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU[m
[32m+[m[32m * Lesser General Public License for more details.[m
[32m+[m[32m *[m
[32m+[m[32m * You should have received a copy of the GNU Lesser General Public License[m
[32m+[m[32m * along with this library in the file LICENSE.LGPL; if not, write to the[m
[32m+[m[32m * Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA[m
[32m+[m[32m * 02111-1307 USA[m
[32m+[m[32m *[m
[32m+[m[32m * Alternatively, you may distribute this software under the terms of the[m
[32m+[m[32m * PHP License, version 3.0 or later.  A copy of this license should have[m
[32m+[m[32m * been distributed with this file in the file LICENSE.PHP .  If this is not[m
[32m+[m[32m * the case, you can obtain a copy at http://www.php.net/license/3_0.txt.[m
[32m+[m[32m *[m
[32m+[m[32m * The latest version of DOMPDF might be available at:[m
[32m+[m[32m * http://www.dompdf.com/[m
[32m+[m[32m *[m
[32m+[m[32m * @link http://www.dompdf.com/[m
[32m+[m[32m * @copyright 2004 Benj Carson[m
[32m+[m[32m * @author Benj Carson <benjcarson@digitaljunkies.ca>[m
[32m+[m[32m * @contributor Helmut Tischer <htischer@weihenstephan.org>[m
[32m+[m[32m * @package dompdf[m
[32m+[m[32m *[m
[32m+[m[32m * Changes[m
[32m+[m[32m * @contributor Helmut Tischer <htischer@weihenstephan.org>[m
[32m+[m[32m * @version 0.5.1.htischer.20090507[m
[32m+[m[32m * - Fix image size as percent of wrapping box[m
[32m+[m[32m * - Fix arithmetic rounding of image size[m
[32m+[m[32m * - Time consuming additional image file scan only when really needed[m
[32m+[m[32m */[m
[32m+[m
[32m+[m[32m/* $Id: image_frame_reflower.cls.php 357 2011-01-30 20:56:46Z fabien.menager $ */[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Image reflower class[m
[32m+[m[32m *[m
[32m+[m[32m * @access private[m
[32m+[m[32m * @package dompdf[m
[32m+[m[32m */[m
[32m+[m[32mclass Image_Frame_Reflower extends Frame_Reflower {[m
[32m+[m
[32m+[m[32m  function __construct(Image_Frame_Decorator $frame) {[m
[32m+[m[32m    parent::__construct($frame);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  function reflow(Frame_Decorator $block = null) {[m
[32m+[m[32m    $this->_frame->position();[m
[32m+[m[41m    [m
[32m+[m[32m    //FLOAT[m
[32m+[m[32m    //$frame = $this->_frame;[m
[32m+[m[32m    //$page = $frame->get_root();[m
[32m+[m[32m    //if (DOMPDF_ENABLE_CSS_FLOAT && $frame->get_style()->float !== "none" ) {[m
[32m+[m[32m    //  $page->add_floating_frame($this);[m
[32m+[m[32m    //}[m
[32m+[m[32m    // Set the frame's width[m
[32m+[m[32m    $this->get_min_max_width();[m
[32m+[m[41m    [m
[32m+[m[32m    if ( $block ) {[m
[32m+[m[32m      $block->add_frame_to_line($this->_frame);[m
[32m+[m[32m    }[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  function get_min_max_width() {[m
[32m+[m[32m    if (DEBUGPNG) {[m
[32m+[m[32m      // Determine the image's size. Time consuming. Only when really needed?[m
[32m+[m[32m      list($img_width, $img_height) = dompdf_getimagesize($this->_frame->get_image_url());[m
[32m+[m[32m      print "get_min_max_width() ".[m
[32m+[m[32m        $this->_frame->get_style()->width.' '.[m
[32m+[m[32m        $this->_frame->get_style()->height.';'.[m
[32m+[m[32m        $this->_frame->get_parent()->get_style()->width." ".[m
[32m+[m[32m        $this->_frame->get_parent()->get_style()->height.";".[m
[32m+[m[32m        $this->_frame->get_parent()->get_parent()->get_style()->width.' '.[m
[32m+[m[32m        $this->_frame->get_parent()->get_parent()->get_style()->height.';'.[m
[32m+[m[32m        $img_width. ' '.[m
[32m+[m[32m        $img_height.'|' ;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    $style = $this->_frame->get_style();[m
[32m+[m
[32m+[m[32m    //own style auto or invalid value: use natural size in px[m
[32m+[m[32m    //own style value: ignore suffix text including unit, use given number as px[m
[32m+[m[32m    //own style %: walk up parent chain until found available space in pt; fill available space[m
[32m+[m[32m    //[m
[32m+[m[32m    //special ignored unit: e.g. 10ex: e treated as exponent; x ignored; 10e completely invalid ->like auto[m
[32m+[m
[32m+[m[32m    $width = ($style->width > 0 ? $style->width : 0);[m
[32m+[m[32m    if ( is_percent($width) ) {[m
[32m+[m[32m      $t = 0.0;[m
[32m+[m[32m      for ($f = $this->_frame->get_parent(); $f; $f = $f->get_parent()) {[m
[32m+[m[32m        $t = (float)($f->get_style()->width); //always in pt[m
[32m+[m[32m        if ((float)$t != 0) {[m
[32m+[m[41m        [m	[32mbreak;[m
[32m+[m[32m        }[m
[32m+[m[32m      }[m
[32m+[m[32m      $width = ((float)rtrim($width,"%") * $t)/100; //maybe 0[m
[32m+[m[32m    } elseif ( !mb_strpos($width, 'pt') ) {[m
[32m+[m[32m      // Don't set image original size if "%" branch was 0 or size not given.[m
[32m+[m[32m      // Otherwise aspect changed on %/auto combination for width/height[m
[32m+[m[32m      // Resample according to px per inch[m
[32m+[m[32m      // See also List_Bullet_Image_Frame_Decorator::__construct[m
[32m+[m[32m      $width = (float)($width * 72) / DOMPDF_DPI;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    $height = ($style->height > 0 ? $style->height : 0);[m
[32m+[m[32m    if ( is_percent($height) ) {[m
[32m+[m[32m      $t = 0.0;[m
[32m+[m[32m      for ($f = $this->_frame->get_parent(); $f; $f = $f->get_parent()) {[m
[32m+[m[32m        $t = (float)($f->get_style()->height); //always in pt[m
[32m+[m[32m        if ((float)$t != 0) {[m
[32m+[m[41m        [m	[32mbreak;[m
[32m+[m[32m        }[m
[32m+[m[32m      }[m
[32m+[m[32m      $height = ((float)rtrim($height,"%") * $t)/100; //maybe 0[m
[32m+[m[32m    } elseif ( !mb_strpos($height, 'pt') ) {[m
[32m+[m[32m      // Don't set image original size if "%" branch was 0 or size not given.[m
[32m+[m[32m      // Otherwise aspect changed on %/auto combination for width/height[m
[32m+[m[32m      // Resample according to px per inch[m
[32m+[m[32m      // See also List_Bullet_Image_Frame_Decorator::__construct[m
[32m+[m[32m      $height = (float)($height * 72) / DOMPDF_DPI;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    if ($width == 0 || $height == 0) {[m
[32m+[m[32m      // Determine the image's size. Time consuming. Only when really needed![m
[32m+[m[32m      list($img_width, $img_height) = dompdf_getimagesize($this->_frame->get_image_url());[m
[32m+[m[41m      [m
[32m+[m[32m      // don't treat 0 as error. Can be downscaled or can be catched elsewhere if image not readable.[m
[32m+[m[32m      // Resample according to px per inch[m
[32m+[m[32m      // See also List_Bullet_Image_Frame_Decorator::__construct[m
[32m+[m[32m      if ($width == 0 && $height == 0) {[m
[32m+[m[32m        $width = (float)($img_width * 72) / DOMPDF_DPI;[m
[32m+[m[32m        $height = (float)($img_height * 72) / DOMPDF_DPI;[m
[32m+[m[32m      } elseif ($height == 0 && $width != 0) {[m
[32m+[m[32m        $height = ($width / $img_width) * $img_height; //keep aspect ratio[m
[32m+[m[32m      } elseif ($width == 0 && $height != 0) {[m
[32m+[m[32m        $width = ($height / $img_height) * $img_width; //keep aspect ratio[m
[32m+[m[32m      }[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    if (DEBUGPNG) print $width.' '.$height.';';[m
[32m+[m
[32m+[m[32m    $style->width = $width . "pt";[m
[32m+[m[32m    $style->height = $height . "pt";[m
[32m+[m
[32m+[m[32m    return array( $width, $width, "min" => $width, "max" => $width);[m
[32m+[m[41m    [m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[1mdiff --git a/application/third_party/dompdf/include/image_renderer.cls.php b/application/third_party/dompdf/include/image_renderer.cls.php[m
[1mnew file mode 100644[m
[1mindex 0000000..6fef82a[m
[1m--- /dev/null[m
[1m+++ b/application/third_party/dompdf/include/image_renderer.cls.php[m
[36m@@ -0,0 +1,95 @@[m
[32m+[m[32m<?php[m
[32m+[m[32m/**[m
[32m+[m[32m * DOMPDF - PHP5 HTML to PDF renderer[m
[32m+[m[32m *[m
[32m+[m[32m * File: $RCSfile: image_renderer.cls.php,v $[m
[32m+[m[32m * Created on: 2004-08-04[m
[32m+[m[32m *[m
[32m+[m[32m * Copyright (c) 2004 - Benj Carson <benjcarson@digitaljunkies.ca>[m
[32m+[m[32m *[m
[32m+[m[32m * This library is free software; you can redistribute it and/or[m
[32m+[m[32m * modify it under the terms of the GNU Lesser General Public[m
[32m+[m[32m * License as published by the Free Software Foundation; either[m
[32m+[m[32m * version 2.1 of the License, or (at your option) any later version.[m
[32m+[m[32m *[m
[32m+[m[32m * This library is distributed in the hope that it will be useful,[m
[32m+[m[32m * but WITHOUT ANY WARRANTY; without even the implied warranty of[m
[32m+[m[32m * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU[m
[32m+[m[32m * Lesser General Public License for more details.[m
[32m+[m[32m *[m
[32m+[m[32m * You should have received a copy of the GNU Lesser General Public License[m
[32m+[m[32m * along with this library in the file LICENSE.LGPL; if not, write to the[m
[32m+[m[32m * Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA[m
[32m+[m[32m * 02111-1307 USA[m
[32m+[m[32m *[m
[32m+[m[32m * Alternatively, you may distribute this software under the terms of the[m
[32m+[m[32m * PHP License, version 3.0 or later.  A copy of this license should have[m
[32m+[m[32m * been distributed with this file in the file LICENSE.PHP .  If this is not[m
[32m+[m[32m * the case, you can obtain a copy at http://www.php.net/license/3_0.txt.[m
[32m+[m[32m *[m
[32m+[m[32m * The latest version of DOMPDF might be available at:[m
[32m+[m[32m * http://www.dompdf.com/[m
[32m+[m[32m *[m
[32m+[m[32m * @link http://www.dompdf.com/[m
[32m+[m[32m * @copyright 2004 Benj Carson[m
[32m+[m[32m * @author Benj Carson <benjcarson@digitaljunkies.ca>[m
[32m+[m[32m * @package dompdf[m
[32m+[m
[32m+[m[32m */[m
[32m+[m
[32m+[m[32m/* $Id: image_renderer.cls.php 325 2010-11-07 18:05:59Z fabien.menager $ */[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Image renderer[m
[32m+[m[32m *[m
[32m+[m[32m * @access private[m
[32m+[m[32m * @package dompdf[m
[32m+[m[32m */[m
[32m+[m[32mclass Image_Renderer extends Block_Renderer {[m
[32m+[m
[32m+[m[32m  function render(Frame $frame) {[m
[32m+[m[32m    // Render background & borders[m
[32m+[m[32m    $style = $frame->get_style();[m
[32m+[m[32m    $cb = $frame->get_containing_block();[m
[32m+[m[32m    list($x, $y, $w, $h) = $frame->get_border_box();[m
[32m+[m[41m  [m
[32m+[m[32m    $this->_set_opacity( $frame->get_opacity( $style->opacity ) );[m[41m  [m
[32m+[m
[32m+[m[32m    // Handle the last child[m
[32m+[m[32m    if ( ($bg = $style->background_color) !== "transparent" )[m[41m [m
[32m+[m[32m      $this->_canvas->filled_rectangle( $x + $widths[3], $y + $widths[0], $w, $h, $bg);[m
[32m+[m
[32m+[m[32m    if ( ($url = $style->background_image) && $url !== "none" )[m[41m           [m
[32m+[m[32m      $this->_background_image($url, $x + $widths[3], $y + $widths[0], $w, $h, $style);[m
[32m+[m[41m    [m
[32m+[m[32m    $this->_render_border($frame);[m
[32m+[m[32m    $this->_render_outline($frame);[m
[32m+[m[41m    [m
[32m+[m[32m    list($x, $y) = $frame->get_padding_box();[m
[32m+[m[32m    $x += $style->length_in_pt($style->padding_left, $cb["w"]);[m
[32m+[m[32m    $y += $style->length_in_pt($style->padding_top, $cb["h"]);[m
[32m+[m[41m    [m
[32m+[m[32m    $w = $style->length_in_pt($style->width, $cb["w"]);[m
[32m+[m[32m    $h = $style->length_in_pt($style->height, $cb["h"]);[m
[32m+[m
[32m+[m[32m    if ( strrpos( $frame->get_image_url(), DOMPDF_LIB_DIR . "/res/broken_image.png", 0) !== false &&[m
[32m+[m[32m      $alt = $frame->get_node()->getAttribute("alt") ) {[m
[32m+[m[32m      $font = $style->font_family;[m
[32m+[m[32m      $size = $style->font_size;[m
[32m+[m[32m      $spacing = $style->word_spacing;[m
[32m+[m[32m      $this->_canvas->text($x, $y, $alt,[m
[32m+[m[32m                           $font, $size,[m
[32m+[m[32m                           $style->color, $spacing);[m
[32m+[m[32m    }[m
[32m+[m[32m    else {[m
[32m+[m[32m      $this->_canvas->image( $frame->get_image_url(), $frame->get_image_ext(), $x, $y, $w, $h);[m
[32m+[m[32m    }[m
[32m+[m[41m    [m
[32m+[m[32m    if (DEBUG_LAYOUT && DEBUG_LAYOUT_BLOCKS) {[m
[32m+[m[32m      $this->_debug_layout($frame->get_border_box(), "blue");[m
[32m+[m[32m      if (DEBUG_LAYOUT_PADDINGBOX) {[m
[32m+[m[32m        $this->_debug_layout($frame->get_padding_box(), "blue", array(0.5, 0.5));[m
[32m+[m[32m      }[m
[32m+[m[32m    }[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[1mdiff --git a/application/third_party/dompdf/include/inline_frame_decorator.cls.php b/application/third_party/dompdf/include/inline_frame_decorator.cls.php[m
[1mnew file mode 100644[m
[1mindex 0000000..efd66d0[m
[1m--- /dev/null[m
[1m+++ b/application/third_party/dompdf/include/inline_frame_decorator.cls.php[m
[36m@@ -0,0 +1,112 @@[m
[32m+[m[32m<?php[m
[32m+[m[32m/**[m
[32m+[m[32m * DOMPDF - PHP5 HTML to PDF renderer[m
[32m+[m[32m *[m
[32m+[m[32m * File: $RCSfile: inline_frame_decorator.cls.php,v $[m
[32m+[m[32m * Created on: 2004-06-02[m
[32m+[m[32m *[m
[32m+[m[32m * Copyright (c) 2004 - Benj Carson <benjcarson@digitaljunkies.ca>[m
[32m+[m[32m *[m
[32m+[m[32m * This library is free software; you can redistribute it and/or[m
[32m+[m[32m * modify it under the terms of the GNU Lesser General Public[m
[32m+[m[32m * License as published by the Free Software Foundation; either[m
[32m+[m[32m * version 2.1 of the License, or (at your option) any later version.[m
[32m+[m[32m *[m
[32m+[m[32m * This library is distributed in the hope that it will be useful,[m
[32m+[m[32m * but WITHOUT ANY WARRANTY; without even the implied warranty of[m
[32m+[m[32m * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU[m
[32m+[m[32m * Lesser General Public License for more details.[m
[32m+[m[32m *[m
[32m+[m[32m * You should have received a copy of the GNU Lesser General Public License[m
[32m+[m[32m * along with this library in the file LICENSE.LGPL; if not, write to the[m
[32m+[m[32m * Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA[m
[32m+[m[32m * 02111-1307 USA[m
[32m+[m[32m *[m
[32m+[m[32m * Alternatively, you may distribute this software under the terms of the[m
[32m+[m[32m * PHP License, version 3.0 or later.  A copy of this license should have[m
[32m+[m[32m * been distributed with this file in the file LICENSE.PHP .  If this is not[m
[32m+[m[32m * the case, you can obtain a copy at http://www.php.net/license/3_0.txt.[m
[32m+[m[32m *[m
[32m+[m[32m * The latest version of DOMPDF might be available at:[m
[32m+[m[32m * http://www.dompdf.com/[m
[32m+[m[32m *[m
[32m+[m[32m * @link http://www.dompdf.com/[m
[32m+[m[32m * @copyright 2004 Benj Carson[m
[32m+[m[32m * @author Benj Carson <benjcarson@digitaljunkies.ca>[m
[32m+[m[32m * @contributor Helmut Tischer <htischer@weihenstephan.org>[m
[32m+[m[32m * @package dompdf[m
[32m+[m
[32m+[m[32m *[m
[32m+[m[32m * Changes[m
[32m+[m[32m * @contributor Helmut Tischer <htischer@weihenstephan.org>[m
[32m+[m[32m * @version 20090610[m
[32m+[m[32m * - don't repeat non repeatable background images after a line break[m
[32m+[m[32m */[m
[32m+[m
[32m+[m[32m/* $Id: inline_frame_decorator.cls.php 252 2010-04-19 08:10:45Z flaviencrochard $ */[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Decorates frames for inline layout[m
[32m+[m[32m *[m
[32m+[m[32m * @access private[m
[32m+[m[32m * @package dompdf[m
[32m+[m[32m */[m
[32m+[m[32mclass Inline_Frame_Decorator extends Frame_Decorator {[m
[32m+[m[41m  [m
[32m+[m[32m  function __construct(Frame $frame, DOMPDF $dompdf) { parent::__construct($frame, $dompdf); }[m
[32m+[m
[32m+[m[32m  function split($frame = null, $force_pagebreak = false) {[m
[32m+[m
[32m+[m[32m    if ( is_null($frame) ) {[m
[32m+[m[32m      $this->get_parent()->split($this, $force_pagebreak);[m
[32m+[m[32m      return;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    if ( $frame->get_parent() !== $this )[m
[32m+[m[32m      throw new DOMPDF_Exception("Unable to split: frame is not a child of this one.");[m
[32m+[m[41m        [m
[32m+[m[32m    $split = $this->copy( $this->_frame->get_node()->cloneNode() );[m[41m [m
[32m+[m[32m    $this->get_parent()->insert_child_after($split, $this);[m
[32m+[m
[32m+[m[32m    // Unset the current node's right style properties[m
[32m+[m[32m    $style = $this->_frame->get_style();[m
[32m+[m[32m    $style->margin_right = "0";[m
[32m+[m[32m    $style->padding_right = "0";[m
[32m+[m[32m    $style->border_right_width = "0";[m
[32m+[m
[32m+[m[32m    // Unset the split node's left style properties since we don't want them[m
[32m+[m[32m    // to propagate[m
[32m+[m[32m    $style = $split->get_style();[m
[32m+[m[32m    $style->margin_left = "0";[m
[32m+[m[32m    $style->padding_left = "0";[m
[32m+[m[32m    $style->border_left_width = "0";[m
[32m+[m
[32m+[m[32m    //On continuation of inline element on next line,[m
[32m+[m[32m    //don't repeat non-vertically repeatble background images[m
[32m+[m[32m    //See e.g. in testcase image_variants, long desriptions[m
[32m+[m[32m    if ( ($url = $style->background_image) && $url !== "none"[m
[32m+[m[32m         && ($repeat = $style->background_repeat) && $repeat !== "repeat" &&  $repeat !== "repeat-y"[m
[32m+[m[32m       ) {[m
[32m+[m[32m      $style->background_image = "none";[m
[32m+[m[32m    }[m[41m           [m
[32m+[m
[32m+[m[32m    // Add $frame and all following siblings to the new split node[m
[32m+[m[32m    $iter = $frame;[m
[32m+[m[32m    while ($iter) {[m
[32m+[m[32m      $frame = $iter;[m[41m      [m
[32m+[m[32m      $iter = $iter->get_next_sibling();[m
[32m+[m[32m      $frame->reset();[m
[32m+[m[32m      $split->append_child($frame);[m
[32m+[m[32m    }[m
[32m+[m[41m		[m
[32m+[m[32m    $page_breaks = array("always", "left", "right");[m
[32m+[m[32m    $frame_style = $frame->get_style();[m
[32m+[m[32m    if( $force_pagebreak ||[m
[32m+[m[32m      in_array($frame_style->page_break_before, $page_breaks) ||[m
[32m+[m[32m      in_array($frame_style->page_break_after, $page_breaks) ) {[m
[32m+[m
[32m+[m[32m      $this->get_parent()->split($split, true);[m
[32m+[m[32m    }[m
[32m+[m[32m  }[m
[32m+[m[41m  [m
[32m+[m[32m}[m[41m [m
[1mdiff --git a/application/third_party/dompdf/include/inline_frame_reflower.cls.php b/application/third_party/dompdf/include/inline_frame_reflower.cls.php[m
[1mnew file mode 100644[m
[1mindex 0000000..be2e175[m
[1m--- /dev/null[m
[1m+++ b/application/third_party/dompdf/include/inline_frame_reflower.cls.php[m
[36m@@ -0,0 +1,99 @@[m
[32m+[m[32m<?php[m
[32m+[m[32m/**[m
[32m+[m[32m * DOMPDF - PHP5 HTML to PDF renderer[m
[32m+[m[32m *[m
[32m+[m[32m * File: $RCSfile: inline_frame_reflower.cls.php,v $[m
[32m+[m[32m * Created on: 2004-06-17[m
[32m+[m[32m *[m
[32m+[m[32m * Copyright (c) 2004 - Benj Carson <benjcarson@digitaljunkies.ca>[m
[32m+[m[32m *[m
[32m+[m[32m * This library is free software; you can redistribute it and/or[m
[32m+[m[32m * modify it under the terms of the GNU Lesser General Public[m
[32m+[m[32m * License as published by the Free Software Foundation; either[m
[32m+[m[32m * version 2.1 of the License, or (at your option) any later version.[m
[32m+[m[32m *[m
[32m+[m[32m * This library is distributed in the hope that it will be useful,[m
[32m+[m[32m * but WITHOUT ANY WARRANTY; without even the implied warranty of[m
[32m+[m[32m * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU[m
[32m+[m[32m * Lesser General Public License for more details.[m
[32m+[m[32m *[m
[32m+[m[32m * You should have received a copy of the GNU Lesser General Public License[m
[32m+[m[32m * along with this library in the file LICENSE.LGPL; if not, write to the[m
[32m+[m[32m * Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA[m
[32m+[m[32m * 02111-1307 USA[m
[32m+[m[32m *[m
[32m+[m[32m * Alternatively, you may distribute this software under the terms of the[m
[32m+[m[32m * PHP License, version 3.0 or later.  A copy of this license should have[m
[32m+[m[32m * been distributed with this file in the file LICENSE.PHP .  If this is not[m
[32m+[m[32m * the case, you can obtain a copy at http://www.php.net/license/3_0.txt.[m
[32m+[m[32m *[m
[32m+[m[32m * The latest version of DOMPDF might be available at:[m
[32m+[m[32m * http://www.dompdf.com/[m
[32m+[m[32m *[m
[32m+[m[32m * @link http://www.dompdf.com/[m
[32m+[m[32m * @copyright 2004 Benj Carson[m
[32m+[m[32m * @author Benj Carson <benjcarson@digitaljunkies.ca>[m
[32m+[m[32m * @package dompdf[m
[32m+[m
[32m+[m[32m */[m
[32m+[m
[32m+[m[32m/* $Id: inline_frame_reflower.cls.php 357 2011-01-30 20:56:46Z fabien.menager $ */[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Reflows inline frames[m
[32m+[m[32m *[m
[32m+[m[32m * @access private[m
[32m+[m[32m * @package dompdf[m
[32m+[m[32m */[m
[32m+[m[32mclass Inline_Frame_Reflower extends Frame_Reflower {[m
[32m+[m
[32m+[m[32m  function __construct(Frame $frame) { parent::__construct($frame); }[m
[32m+[m[41m  [m
[32m+[m[32m  //........................................................................[m
[32m+[m
[32m+[m[32m  function reflow(Frame_Decorator $block = null) {[m
[32m+[m[32m    $frame = $this->_frame;[m
[32m+[m[41m    [m
[32m+[m[41m  [m	[32m// Check if a page break is forced[m
[32m+[m[32m    $page = $frame->get_root();[m
[32m+[m[32m    $page->check_forced_page_break($frame);[m
[32m+[m[41m    [m
[32m+[m[32m    if ( $page->is_full() )[m
[32m+[m[32m      return;[m
[32m+[m[41m      [m
[32m+[m[32m    $style = $frame->get_style();[m
[32m+[m[41m    [m
[32m+[m[32m    // Generated content[m
[32m+[m[32m    $this->_set_content();[m
[32m+[m[41m    [m
[32m+[m[32m    $frame->position();[m
[32m+[m
[32m+[m[32m    $cb = $frame->get_containing_block();[m
[32m+[m
[32m+[m[32m    // Add our margin, padding & border to the first and last children[m
[32m+[m[32m    if ( ($f = $frame->get_first_child()) && $f instanceof Text_Frame_Decorator ) {[m
[32m+[m[32m      $f_style = $f->get_style();[m
[32m+[m[32m      $f_style->margin_left  = $style->margin_left;[m
[32m+[m[32m      $f_style->padding_left = $style->padding_left;[m
[32m+[m[32m      $f_style->border_left  = $style->border_left;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    if ( ($l = $frame->get_last_child()) && $l instanceof Text_Frame_Decorator ) {[m
[32m+[m[32m      $l_style = $l->get_style();[m
[32m+[m[32m      $l_style->margin_right  = $style->margin_right;[m
[32m+[m[32m      $l_style->padding_right = $style->padding_right;[m
[32m+[m[32m      $l_style->border_right  = $style->border_right;[m
[32m+[m[32m    }[m
[32m+[m[41m    [m
[32m+[m[32m    if ( $block ) {[m
[32m+[m[32m      $block->add_frame_to_line($this->_frame);[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    // Set the containing blocks and reflow each child.  The containing[m
[32m+[m[32m    // block is not changed by line boxes.[m
[32m+[m[32m    foreach ( $frame->get_children() as $child ) {[m
[32m+[m[32m      $child->set_containing_block($cb);[m
[32m+[m[32m      $child->reflow($block);[m
[32m+[m[32m    }[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[1mdiff --git a/application/third_party/dompdf/include/inline_positioner.cls.php b/application/third_party/dompdf/include/inline_positioner.cls.php[m
[1mnew file mode 100644[m
[1mindex 0000000..79bd776[m
[1m--- /dev/null[m
[1m+++ b/application/third_party/dompdf/include/inline_positioner.cls.php[m
[36m@@ -0,0 +1,102 @@[m
[32m+[m[32m<?php[m
[32m+[m[32m/**[m
[32m+[m[32m * DOMPDF - PHP5 HTML to PDF renderer[m
[32m+[m[32m *[m
[32m+[m[32m * File: $RCSfile: inline_positioner.cls.php,v $[m
[32m+[m[32m * Created on: 2004-06-08[m
[32m+[m[32m *[m
[32m+[m[32m * Copyright (c) 2004 - Benj Carson <benjcarson@digitaljunkies.ca>[m
[32m+[m[32m *[m
[32m+[m[32m * This library is free software; you can redistribute it and/or[m
[32m+[m[32m * modify it under the terms of the GNU Lesser General Public[m
[32m+[m[32m * License as published by the Free Software Foundation; either[m
[32m+[m[32m * version 2.1 of the License, or (at your option) any later version.[m
[32m+[m[32m *[m
[32m+[m[32m * This library is distributed in the hope that it will be useful,[m
[32m+[m[32m * but WITHOUT ANY WARRANTY; without even the implied warranty of[m
[32m+[m[32m * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU[m
[32m+[m[32m * Lesser General Public License for more details.[m
[32m+[m[32m *[m
[32m+[m[32m * You should have received a copy of the GNU Lesser General Public License[m
[32m+[m[32m * along with this library in the file LICENSE.LGPL; if not, write to the[m
[32m+[m[32m * Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA[m
[32m+[m[32m * 02111-1307 USA[m
[32m+[m[32m *[m
[32m+[m[32m * Alternatively, you may distribute this software under the terms of the[m
[32m+[m[32m * PHP License, version 3.0 or later.  A copy of this license should have[m
[32m+[m[32m * been distributed with this file in the file LICENSE.PHP .  If this is not[m
[32m+[m[32m * the case, you can obtain a copy at http://www.php.net/license/3_0.txt.[m
[32m+[m[32m *[m
[32m+[m[32m * The latest version of DOMPDF might be available at:[m
[32m+[m[32m * http://www.dompdf.com/[m
[32m+[m[32m *[m
[32m+[m[32m * @link http://www.dompdf.com/[m
[32m+[m[32m * @copyright 2004 Benj Carson[m
[32m+[m[32m * @author Benj Carson <benjcarson@digitaljunkies.ca>[m
[32m+[m[32m * @package dompdf[m
[32m+[m
[32m+[m[32m */[m
[32m+[m
[32m+[m[32m/* $Id: inline_positioner.cls.php 357 2011-01-30 20:56:46Z fabien.menager $ */[m
[32m+[m[32m/**[m
[32m+[m[32m * Positions inline frames[m
[32m+[m[32m *[m
[32m+[m[32m * @access private[m
[32m+[m[32m * @package dompdf[m
[32m+[m[32m */[m
[32m+[m[32mclass Inline_Positioner extends Positioner {[m
[32m+[m
[32m+[m[32m  function __construct(Frame_Decorator $frame) { parent::__construct($frame); }[m
[32m+[m
[32m+[m[32m  //........................................................................[m
[32m+[m
[32m+[m[32m  function position() {[m
[32m+[m[32m    // Find our nearest block level parent and access its lines property.[m
[32m+[m[32m    $p = $this->_frame->find_block_parent();[m
[32m+[m
[32m+[m[32m    // Debugging code:[m
[32m+[m
[32m+[m[32m//     pre_r("\nPositioning:");[m
[32m+[m[32m//     pre_r("Me: " . $this->_frame->get_node()->nodeName . " (" . spl_object_hash($this->_frame->get_node()) . ")");[m
[32m+[m[32m//     pre_r("Parent: " . $p->get_node()->nodeName . " (" . spl_object_hash($p->get_node()) . ")");[m
[32m+[m
[32m+[m[32m    // End debugging[m
[32m+[m
[32m+[m[32m    if ( !$p )[m
[32m+[m[32m      throw new DOMPDF_Exception("No block-level parent found.  Not good.");[m
[32m+[m
[32m+[m[32m    $f = $this->_frame;[m
[32m+[m[41m    [m
[32m+[m[32m    $cb = $f->get_containing_block();[m
[32m+[m[32m    $style = $f->get_style();[m
[32m+[m[32m    $line = $p->get_current_line();[m
[32m+[m
[32m+[m[32m    // Skip the page break if in a fixed position element[m
[32m+[m[32m    $is_fixed = false;[m
[32m+[m[32m    while($f = $f->get_parent()) {[m
[32m+[m[32m      if($f->get_style()->position === "fixed") {[m
[32m+[m[32m        $is_fixed = true;[m
[32m+[m[32m        break;[m
[32m+[m[32m      }[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    $f = $this->_frame;[m
[32m+[m
[32m+[m[32m    if ( !$is_fixed && $f->get_parent() &&[m
[32m+[m[32m         $f->get_parent() instanceof Inline_Frame_Decorator &&[m
[32m+[m[32m         $f->get_node()->nodeName === "#text" ) {[m
[32m+[m[41m      [m
[32m+[m[32m      $min_max = $f->get_reflower()->get_min_max_width();[m
[32m+[m[32m      $initialcb = $f->get_root()->get_containing_block();[m
[32m+[m[32m      $height = $style->length_in_pt($style->height, $initialcb["h"]);[m
[32m+[m[41m      [m
[32m+[m[32m      // If the frame doesn't fit in the current line, a line break occurs[m
[32m+[m[32m      if ( $min_max["min"] > ($cb["w"]-$line["left"]-$line["w"]-$line["right"]) ) {[m
[32m+[m[32m        $p->add_line();[m
[32m+[m[32m      }[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    $this->_frame->set_position($cb["x"] + $line["w"], $line["y"]);[m
[32m+[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[1mdiff --git a/application/third_party/dompdf/include/inline_renderer.cls.php b/application/third_party/dompdf/include/inline_renderer.cls.php[m
[1mnew file mode 100644[m
[1mindex 0000000..131e843[m
[1m--- /dev/null[m
[1m+++ b/application/third_party/dompdf/include/inline_renderer.cls.php[m
[36m@@ -0,0 +1,207 @@[m
[32m+[m[32m<?php[m
[32m+[m[32m/**[m
[32m+[m[32m * DOMPDF - PHP5 HTML to PDF renderer[m
[32m+[m[32m *[m
[32m+[m[32m * File: $RCSfile: inline_renderer.cls.php,v $[m
[32m+[m[32m * Created on: 2004-06-30[m
[32m+[m[32m *[m
[32m+[m[32m * Copyright (c) 2004 - Benj Carson <benjcarson@digitaljunkies.ca>[m
[32m+[m[32m *[m
[32m+[m[32m * This library is free software; you can redistribute it and/or[m
[32m+[m[32m * modify it under the terms of the GNU Lesser General Public[m
[32m+[m[32m * License as published by the Free Software Foundation; either[m
[32m+[m[32m * version 2.1 of the License, or (at your option) any later version.[m
[32m+[m[32m *[m
[32m+[m[32m * This library is distributed in the hope that it will be useful,[m
[32m+[m[32m * but WITHOUT ANY WARRANTY; without even the implied warranty of[m
[32m+[m[32m * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU[m
[32m+[m[32m * Lesser General Public License for more details.[m
[32m+[m[32m *[m
[32m+[m[32m * You should have received a copy of the GNU Lesser General Public License[m
[32m+[m[32m * along with this library in the file LICENSE.LGPL; if not, write to the[m
[32m+[m[32m * Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA[m
[32m+[m[32m * 02111-1307 USA[m
[32m+[m[32m *[m
[32m+[m[32m * Alternatively, you may distribute this software under the terms of the[m
[32m+[m[32m * PHP License, version 3.0 or later.  A copy of this license should have[m
[32m+[m[32m * been distributed with this file in the file LICENSE.PHP .  If this is not[m
[32m+[m[32m * the case, you can obtain a copy at http://www.php.net/license/3_0.txt.[m
[32m+[m[32m *[m
[32m+[m[32m * The latest version of DOMPDF might be available at:[m
[32m+[m[32m * http://www.dompdf.com/[m
[32m+[m[32m *[m
[32m+[m[32m * @link http://www.dompdf.com/[m
[32m+[m[32m * @copyright 2004 Benj Carson[m
[32m+[m[32m * @author Benj Carson <benjcarson@digitaljunkies.ca>[m
[32m+[m[32m * @package dompdf[m
[32m+[m
[32m+[m[32m */[m
[32m+[m
[32m+[m[32m/* $Id: inline_renderer.cls.php 332 2010-11-27 14:06:34Z fabien.menager $ */[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Renders inline frames[m
[32m+[m[32m *[m
[32m+[m[32m * @access private[m
[32m+[m[32m * @package dompdf[m
[32m+[m[32m */[m
[32m+[m[32mclass Inline_Renderer extends Abstract_Renderer {[m
[32m+[m[41m  [m
[32m+[m[32m  //........................................................................[m
[32m+[m
[32m+[m[32m  function render(Frame $frame) {[m
[32m+[m[32m    $style = $frame->get_style();[m
[32m+[m
[32m+[m[32m    if ( !$frame->get_first_child() )[m
[32m+[m[32m      return; // No children, no service[m
[32m+[m[41m    [m
[32m+[m[32m    // Draw the left border if applicable[m
[32m+[m[32m    $bp = $style->get_border_properties();[m
[32m+[m[32m    $widths = array($style->length_in_pt($bp["top"]["width"]),[m
[32m+[m[32m                    $style->length_in_pt($bp["right"]["width"]),[m
[32m+[m[32m                    $style->length_in_pt($bp["bottom"]["width"]),[m
[32m+[m[32m                    $style->length_in_pt($bp["left"]["width"]));[m
[32m+[m
[32m+[m[32m    // Draw the background & border behind each child.  To do this we need[m
[32m+[m[32m    // to figure out just how much space each child takes:[m
[32m+[m[32m    list($x, $y) = $frame->get_first_child()->get_position();[m
[32m+[m[32m    $w = null;[m
[32m+[m[32m    $h = 0;[m
[32m+[m[32m//     $x += $widths[3];[m
[32m+[m[32m//     $y += $widths[0];[m
[32m+[m[41m    [m
[32m+[m[32m    $this->_set_opacity( $frame->get_opacity( $style->opacity ) );[m
[32m+[m[41m    [m
[32m+[m[32m    $first_row = true;[m
[32m+[m
[32m+[m[32m    foreach ($frame->get_children() as $child) {[m
[32m+[m[32m      list($child_x, $child_y, $child_w, $child_h) = $child->get_padding_box();[m
[32m+[m[41m      [m
[32m+[m[32m      if ( !is_null($w) && $child_x < $x + $w ) {[m
[32m+[m[32m        //This branch seems to be supposed to being called on the first part[m
[32m+[m[32m        //of an inline html element, and the part after the if clause for the[m
[32m+[m[32m        //parts after a line break.[m
[32m+[m[32m        //But because $w initially mostly is 0, and gets updated only on the next[m
[32m+[m[32m        //round, this seem to be never executed and the common close always.[m
[32m+[m
[32m+[m[32m        // The next child is on another line.  Draw the background &[m
[32m+[m[32m        // borders on this line.[m
[32m+[m
[32m+[m[32m        // Background:[m
[32m+[m[32m        if ( ($bg = $style->background_color) !== "transparent" )[m
[32m+[m[32m          $this->_canvas->filled_rectangle( $x, $y, $w, $h, $bg);[m
[32m+[m
[32m+[m[32m        if ( ($url = $style->background_image) && $url !== "none" ) {[m
[32m+[m[32m          $this->_background_image($url, $x, $y, $w, $h, $style);[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        // If this is the first row, draw the left border[m
[32m+[m[32m        if ( $first_row ) {[m
[32m+[m
[32m+[m[32m          if ( $bp["left"]["style"] !== "none" && $bp["left"]["color"] !== "transparent" && $bp["left"]["width"] > 0 ) {[m
[32m+[m[32m            $method = "_border_" . $bp["left"]["style"];[m[41m            [m
[32m+[m[32m            $this->$method($x, $y, $h + $widths[0] + $widths[2], $bp["left"]["color"], $widths, "left");[m
[32m+[m[32m          }[m
[32m+[m[32m          $first_row = false;[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        // Draw the top & bottom borders[m
[32m+[m[32m        if ( $bp["top"]["style"] !== "none" && $bp["top"]["color"] !== "transparent" && $bp["top"]["width"] > 0 ) {[m
[32m+[m[32m          $method = "_border_" . $bp["top"]["style"];[m
[32m+[m[32m          $this->$method($x, $y, $w + $widths[1] + $widths[3], $bp["top"]["color"], $widths, "top");[m
[32m+[m[32m        }[m
[32m+[m[41m        [m
[32m+[m[32m        if ( $bp["bottom"]["style"] !== "none" && $bp["bottom"]["color"] !== "transparent" && $bp["bottom"]["width"] > 0 ) {[m
[32m+[m[32m          $method = "_border_" . $bp["bottom"]["style"];[m
[32m+[m[32m          $this->$method($x, $y + $h + $widths[0] + $widths[2], $w + $widths[1] + $widths[3], $bp["bottom"]["color"], $widths, "bottom");[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        // Handle anchors & links[m
[32m+[m[32m        if ( $frame->get_node()->nodeName === "a" ) {[m
[32m+[m[32m          if ( $href = $frame->get_node()->getAttribute("href") )[m
[32m+[m[32m            $this->_canvas->add_link($href, $x, $y, $w, $h);[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        $x = $child_x;[m
[32m+[m[32m        $y = $child_y;[m
[32m+[m[32m        $w = $child_w;[m
[32m+[m[32m        $h = $child_h;[m
[32m+[m[32m        continue;[m
[32m+[m[32m      }[m
[32m+[m
[32m+[m[32m      if ( is_null($w) )[m
[32m+[m[32m        $w = $child_w;[m
[32m+[m[32m      else[m
[32m+[m[32m        $w += $child_w;[m
[32m+[m[41m      [m
[32m+[m[32m      $h = max($h, $child_h);[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[41m    [m
[32m+[m[32m    // Handle the last child[m
[32m+[m[32m    if ( ($bg = $style->background_color) !== "transparent" )[m[41m [m
[32m+[m[32m      $this->_canvas->filled_rectangle( $x + $widths[3], $y + $widths[0], $w, $h, $bg);[m
[32m+[m
[32m+[m[32m    //On continuation lines (after line break) of inline elements, the style got copied.[m
[32m+[m[32m    //But a non repeatable background image should not be repeated on the next line.[m
[32m+[m[32m    //But removing the background image above has never an effect, and removing it below[m
[32m+[m[32m    //removes it always, even on the initial line.[m
[32m+[m[32m    //Need to handle it elsewhere, e.g. on certain ...clone()... usages.[m[41m    [m
[32m+[m[32m    // Repeat not given: default is Style::__construct[m
[32m+[m[32m    // ... && (!($repeat = $style->background_repeat) || $repeat === "repeat" ...[m
[32m+[m[32m    //different position? $this->_background_image($url, $x, $y, $w, $h, $style);[m
[32m+[m[32m    if ( ($url = $style->background_image) && $url !== "none" )[m[41m           [m
[32m+[m[32m      $this->_background_image($url, $x + $widths[3], $y + $widths[0], $w, $h, $style);[m
[32m+[m[41m        [m
[32m+[m[32m    // Add the border widths[m
[32m+[m[32m    $w += $widths[1] + $widths[3];[m
[32m+[m[32m    $h += $widths[0] + $widths[2];[m
[32m+[m
[32m+[m[32m    // make sure the border and background start inside the left margin[m
[32m+[m[32m    $left_margin = $style->length_in_pt($style->margin_left);[m
[32m+[m[32m    $x += $left_margin;[m
[32m+[m
[32m+[m[32m    // If this is the first row, draw the left border too[m
[32m+[m[32m    if ( $first_row && $bp["left"]["style"] !== "none" && $bp["left"]["color"] !== "transparent" && $widths[3] > 0 ) {[m
[32m+[m[32m      $method = "_border_" . $bp["left"]["style"];[m
[32m+[m[32m      $this->$method($x, $y, $h, $bp["left"]["color"], $widths, "left");[m
[32m+[m[32m    }[m
[32m+[m[41m    [m
[32m+[m[32m    // Draw the top & bottom borders[m
[32m+[m[32m    if ( $bp["top"]["style"] !== "none" && $bp["top"]["color"] !== "transparent" && $widths[0] > 0 ) {[m
[32m+[m[32m      $method = "_border_" . $bp["top"]["style"];[m
[32m+[m[32m      $this->$method($x, $y, $w, $bp["top"]["color"], $widths, "top");[m
[32m+[m[32m    }[m
[32m+[m[41m    [m
[32m+[m[32m    if ( $bp["bottom"]["style"] !== "none" && $bp["bottom"]["color"] !== "transparent" && $widths[2] > 0 ) {[m
[32m+[m[32m      $method = "_border_" . $bp["bottom"]["style"];[m
[32m+[m[32m      $this->$method($x, $y + $h, $w, $bp["bottom"]["color"], $widths, "bottom");[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    //    pre_var_dump(get_class($frame->get_next_sibling()));[m
[32m+[m[32m    //    $last_row = get_class($frame->get_next_sibling()) !== 'Inline_Frame_Decorator';[m
[32m+[m[32m    // Draw the right border if this is the last row[m
[32m+[m[32m    if ( $bp["right"]["style"] !== "none" && $bp["right"]["color"] !== "transparent" && $widths[1] > 0 ) {[m
[32m+[m[32m      $method = "_border_" . $bp["right"]["style"];[m
[32m+[m[32m      $this->$method($x + $w, $y, $h, $bp["right"]["color"], $widths, "right");[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    $node = $frame->get_node();[m
[32m+[m[41m    [m
[32m+[m[32m    // Handle anchors & links[m
[32m+[m[32m    if ( $node->nodeName === "a" ) {[m
[32m+[m[32m      if ( $name = $node->getAttribute("name") )[m
[32m+[m[32m        $this->_canvas->add_named_dest($name);[m
[32m+[m
[32m+[m[32m      if ( $href = $node->getAttribute("href") )[m
[32m+[m[32m        $this->_canvas->add_link($href, $x, $y, $w, $h);[m
[32m+[m[32m    }[m
[32m+[m[41m    [m
[32m+[m[32m    if (DEBUG_LAYOUT && DEBUG_LAYOUT_INLINE) {[m
[32m+[m[32m      $this->_debug_layout($child->get_border_box(), "blue");[m
[32m+[m[32m      if (DEBUG_LAYOUT_PADDINGBOX) {[m
[32m+[m[32m        $this->_debug_layout($child->get_padding_box(), "blue", array(0.5, 0.5));[m
[32m+[m[32m      }[m
[32m+[m[32m    }[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[1mdiff --git a/application/third_party/dompdf/include/javascript_embedder.cls.php b/application/third_party/dompdf/include/javascript_embedder.cls.php[m
[1mnew file mode 100644[m
[1mindex 0000000..087f0e5[m
[1m--- /dev/null[m
[1m+++ b/application/third_party/dompdf/include/javascript_embedder.cls.php[m
[36m@@ -0,0 +1,68 @@[m
[32m+[m[32m<?php[m
[32m+[m[32m/**[m
[32m+[m[32m * DOMPDF - PHP5 HTML to PDF renderer[m
[32m+[m[32m *[m
[32m+[m[32m * File: $RCSfile: php_evaluator.cls.php,v $[m
[32m+[m[32m * Created on: 2004-07-12[m
[32m+[m[32m *[m
[32m+[m[32m * Copyright (c) 2004 - Benj Carson <benjcarson@digitaljunkies.ca>[m
[32m+[m[32m *[m
[32m+[m[32m * This library is free software; you can redistribute it and/or[m
[32m+[m[32m * modify it under the terms of the GNU Lesser General Public[m
[32m+[m[32m * License as published by the Free Software Foundation; either[m
[32m+[m[32m * version 2.1 of the License, or (at your option) any later version.[m
[32m+[m[32m *[m
[32m+[m[32m * This library is distributed in the hope that it will be useful,[m
[32m+[m[32m * but WITHOUT ANY WARRANTY; without even the implied warranty of[m
[32m+[m[32m * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU[m
[32m+[m[32m * Lesser General Public License for more details.[m
[32m+[m[32m *[m
[32m+[m[32m * You should have received a copy of the GNU Lesser General Public License[m
[32m+[m[32m * along with this library in the file LICENSE.LGPL; if not, write to the[m
[32m+[m[32m * Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA[m
[32m+[m[32m * 02111-1307 USA[m
[32m+[m[32m *[m
[32m+[m[32m * Alternatively, you may distribute this software under the terms of the[m
[32m+[m[32m * PHP License, version 3.0 or later.  A copy of this license should have[m
[32m+[m[32m * been distributed with this file in the file LICENSE.PHP .  If this is not[m
[32m+[m[32m * the case, you can obtain a copy at http://www.php.net/license/3_0.txt.[m
[32m+[m[32m *[m
[32m+[m[32m * The latest version of DOMPDF might be available at:[m
[32m+[m[32m * http://www.dompdf.com/[m
[32m+[m[32m *[m
[32m+[m[32m * @link http://www.dompdf.com/[m
[32m+[m[32m * @copyright 2004 Benj Carson[m
[32m+[m[32m * @author Benj Carson <benjcarson@digitaljunkies.ca>[m
[32m+[m[32m * @package dompdf[m
[32m+[m[32m */[m
[32m+[m
[32m+[m[32m/* $Id: javascript_embedder.cls.php 291 2010-08-02 20:55:23Z fabien.menager $ */[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Embeds Javascript into the PDF document[m
[32m+[m[32m *[m
[32m+[m[32m * @access private[m
[32m+[m[32m * @package dompdf[m
[32m+[m[32m */[m
[32m+[m[32mclass Javascript_Embedder {[m
[32m+[m[41m  [m
[32m+[m[32m  /**[m
[32m+[m[32m   * @var DOMPDF[m
[32m+[m[32m   */[m
[32m+[m[32m  protected $_dompdf;[m
[32m+[m
[32m+[m[32m  function __construct(DOMPDF $dompdf) {[m
[32m+[m[32m    $this->_dompdf = $dompdf;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  function insert($code) {[m
[32m+[m[32m    $this->_dompdf->get_canvas()->javascript($code);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  function render($frame) {[m
[32m+[m[32m    if ( !DOMPDF_ENABLE_JAVASCRIPT )[m
[32m+[m[32m      return;[m
[32m+[m[41m      [m
[32m+[m[32m    $this->insert($frame->get_node()->nodeValue);[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[1mdiff --git a/application/third_party/dompdf/include/list_bullet_frame_decorator.cls.php b/application/third_party/dompdf/include/list_bullet_frame_decorator.cls.php[m
[1mnew file mode 100644[m
[1mindex 0000000..2821019[m
[1m--- /dev/null[m
[1m+++ b/application/third_party/dompdf/include/list_bullet_frame_decorator.cls.php[m
[36m@@ -0,0 +1,96 @@[m
[32m+[m[32m<?php[m
[32m+[m[32m/**[m
[32m+[m[32m * DOMPDF - PHP5 HTML to PDF renderer[m
[32m+[m[32m *[m
[32m+[m[32m * File: $RCSfile: list_bullet_frame_decorator.cls.php,v $[m
[32m+[m[32m * Created on: 2004-06-23[m
[32m+[m[32m *[m
[32m+[m[32m * Copyright (c) 2004 - Benj Carson <benjcarson@digitaljunkies.ca>[m
[32m+[m[32m *[m
[32m+[m[32m * This library is free software; you can redistribute it and/or[m
[32m+[m[32m * modify it under the terms of the GNU Lesser General Public[m
[32m+[m[32m * License as published by the Free Software Foundation; either[m
[32m+[m[32m * version 2.1 of the License, or (at your option) any later version.[m
[32m+[m[32m *[m
[32m+[m[32m * This library is distributed in the hope that it will be useful,[m
[32m+[m[32m * but WITHOUT ANY WARRANTY; without even the implied warranty of[m
[32m+[m[32m * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU[m
[32m+[m[32m * Lesser General Public License for more details.[m
[32m+[m[32m *[m
[32m+[m[32m * You should have received a copy of the GNU Lesser General Public License[m
[32m+[m[32m * along with this library in the file LICENSE.LGPL; if not, write to the[m
[32m+[m[32m * Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA[m
[32m+[m[32m * 02111-1307 USA[m
[32m+[m[32m *[m
[32m+[m[32m * Alternatively, you may distribute this software under the terms of the[m
[32m+[m[32m * PHP License, version 3.0 or later.  A copy of this license should have[m
[32m+[m[32m * been distributed with this file in the file LICENSE.PHP .  If this is not[m
[32m+[m[32m * the case, you can obtain a copy at http://www.php.net/license/3_0.txt.[m
[32m+[m[32m *[m
[32m+[m[32m * The latest version of DOMPDF might be available at:[m
[32m+[m[32m * http://www.dompdf.com/[m
[32m+[m[32m *[m
[32m+[m[32m * @link http://www.dompdf.com/[m
[32m+[m[32m * @copyright 2004 Benj Carson[m
[32m+[m[32m * @author Benj Carson <benjcarson@digitaljunkies.ca>[m
[32m+[m[32m * @contributor Helmut Tischer <htischer@weihenstephan.org>[m
[32m+[m[32m * @package dompdf[m
[32m+[m
[32m+[m[32m *[m
[32m+[m[32m * Changes[m
[32m+[m[32m * @contributor Helmut Tischer <htischer@weihenstephan.org>[m
[32m+[m[32m * @version 20090622[m
[32m+[m[32m * - bullet size proportional to font size, center position[m
[32m+[m[32m */[m
[32m+[m
[32m+[m[32m/* $Id: list_bullet_frame_decorator.cls.php 325 2010-11-07 18:05:59Z fabien.menager $ */[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Decorates frames for list bullet rendering[m
[32m+[m[32m *[m
[32m+[m[32m * @access private[m
[32m+[m[32m * @package dompdf[m[41m [m
[32m+[m[32m */[m
[32m+[m[32mclass List_Bullet_Frame_Decorator extends Frame_Decorator {[m
[32m+[m
[32m+[m[32m  const BULLET_PADDING = 1; // Distance from bullet to text in pt[m
[32m+[m[32m  // As fraction of font size (including descent). See also DECO_THICKNESS.[m
[32m+[m[32m  const BULLET_THICKNESS = 0.04;   // Thickness of bullet outline. Screen: 0.08, print: better less, e.g. 0.04[m
[32m+[m[32m  const BULLET_DESCENT = 0.3;  //descent of font below baseline. Todo: Guessed for now.[m
[32m+[m[32m  const BULLET_SIZE = 0.35;   // bullet diameter. For now 0.5 of font_size without descent.[m
[32m+[m[41m  [m
[32m+[m[32m  static $BULLET_TYPES = array("disc", "circle", "square");[m
[32m+[m[41m  [m
[32m+[m[32m  //........................................................................[m
[32m+[m
[32m+[m[32m  function __construct(Frame $frame, DOMPDF $dompdf) {[m
[32m+[m[32m    parent::__construct($frame, $dompdf);[m
[32m+[m[32m  }[m
[32m+[m[41m  [m
[32m+[m[32m  function get_margin_width() {[m
[32m+[m[32m    $style = $this->_frame->get_style();[m
[32m+[m[32m    // Small hack to prevent extra indenting of list text on list_style_position === "inside"[m
[32m+[m[32m    // and on suppressed bullet[m
[32m+[m[32m    if ( $style->list_style_position === "outside" ||[m
[32m+[m[32m         $style->list_style_type === "none" )[m
[32m+[m[32m      return 0;[m
[32m+[m[32m    return $style->get_font_size()*self::BULLET_SIZE + 2 * self::BULLET_PADDING;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  //hits only on "inset" lists items, to increase height of box[m
[32m+[m[32m  function get_margin_height() {[m
[32m+[m[32m    $style = $this->_frame->get_style();[m
[32m+[m[32m    if ( $style->list_style_type === 'none' ) return 0;[m
[32m+[m[32m    return $style->get_font_size() * self::BULLET_SIZE + 2 * self::BULLET_PADDING;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  function get_width() {[m
[32m+[m[32m    return $this->get_margin_height();[m
[32m+[m[32m  }[m
[32m+[m[41m  [m
[32m+[m[32m  function get_height() {[m
[32m+[m[32m    return $this->get_margin_height();[m
[32m+[m[32m  }[m
[32m+[m[41m  [m
[32m+[m[32m  //........................................................................[m
[32m+[m[32m}[m
[1mdiff --git a/application/third_party/dompdf/include/list_bullet_frame_reflower.cls.php b/application/third_party/dompdf/include/list_bullet_frame_reflower.cls.php[m
[1mnew file mode 100644[m
[1mindex 0000000..fcc75e4[m
[1m--- /dev/null[m
[1m+++ b/application/third_party/dompdf/include/list_bullet_frame_reflower.cls.php[m
[36m@@ -0,0 +1,66 @@[m
[32m+[m[32m<?php[m
[32m+[m[32m/**[m
[32m+[m[32m * DOMPDF - PHP5 HTML to PDF renderer[m
[32m+[m[32m *[m
[32m+[m[32m * File: $RCSfile: list_bullet_frame_reflower.cls.php,v $[m
[32m+[m[32m * Created on: 2004-06-23[m
[32m+[m[32m *[m
[32m+[m[32m * Copyright (c) 2004 - Benj Carson <benjcarson@digitaljunkies.ca>[m
[32m+[m[32m *[m
[32m+[m[32m * This library is free software; you can redistribute it and/or[m
[32m+[m[32m * modify it under the terms of the GNU Lesser General Public[m
[32m+[m[32m * License as published by the Free Software Foundation; either[m
[32m+[m[32m * version 2.1 of the License, or (at your option) any later version.[m
[32m+[m[32m *[m
[32m+[m[32m * This library is distributed in the hope that it will be useful,[m
[32m+[m[32m * but WITHOUT ANY WARRANTY; without even the implied warranty of[m
[32m+[m[32m * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU[m
[32m+[m[32m * Lesser General Public License for more details.[m
[32m+[m[32m *[m
[32m+[m[32m * You should have received a copy of the GNU Lesser General Public License[m
[32m+[m[32m * along with this library in the file LICENSE.LGPL; if not, write to the[m
[32m+[m[32m * Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA[m
[32m+[m[32m * 02111-1307 USA[m
[32m+[m[32m *[m
[32m+[m[32m * Alternatively, you may distribute this software under the terms of the[m
[32m+[m[32m * PHP License, version 3.0 or later.  A copy of this license should have[m
[32m+[m[32m * been distributed with this file in the file LICENSE.PHP .  If this is not[m
[32m+[m[32m * the case, you can obtain a copy at http://www.php.net/license/3_0.txt.[m
[32m+[m[32m *[m
[32m+[m[32m * The latest version of DOMPDF might be available at:[m
[32m+[m[32m * http://www.dompdf.com/[m
[32m+[m[32m *[m
[32m+[m[32m * @link http://www.dompdf.com/[m
[32m+[m[32m * @copyright 2004 Benj Carson[m
[32m+[m[32m * @author Benj Carson <benjcarson@digitaljunkies.ca>[m
[32m+[m[32m * @package dompdf[m
[32m+[m
[32m+[m[32m */[m
[32m+[m
[32m+[m[32m/* $Id: list_bullet_frame_reflower.cls.php 357 2011-01-30 20:56:46Z fabien.menager $ */[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Reflows list bullets[m
[32m+[m[32m *[m
[32m+[m[32m * @access private[m
[32m+[m[32m * @package dompdf[m
[32m+[m[32m */[m
[32m+[m[32mclass List_Bullet_Frame_Reflower extends Frame_Reflower {[m
[32m+[m
[32m+[m[32m  function __construct(Frame_Decorator $frame) { parent::__construct($frame); }[m
[32m+[m[41m    [m
[32m+[m[32m  //........................................................................[m
[32m+[m
[32m+[m[32m  function reflow(Frame_Decorator $block = null) {[m
[32m+[m[32m    $style = $this->_frame->get_style();[m
[32m+[m
[32m+[m[32m    $style->width = $this->_frame->get_width();[m
[32m+[m[32m    $this->_frame->position();[m
[32m+[m
[32m+[m[32m    if ( $style->list_style_position === "inside" ) {[m
[32m+[m[32m      $p = $this->_frame->find_block_parent();[m
[32m+[m[32m      $p->add_frame_to_line($this->_frame);[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[1mdiff --git a/application/third_party/dompdf/include/list_bullet_image_frame_decorator.cls.php b/application/third_party/dompdf/include/list_bullet_image_frame_decorator.cls.php[m
[1mnew file mode 100644[m
[1mindex 0000000..cfbeb18[m
[1m--- /dev/null[m
[1m+++ b/application/third_party/dompdf/include/list_bullet_image_frame_decorator.cls.php[m
[36m@@ -0,0 +1,188 @@[m
[32m+[m[32m<?php[m
[32m+[m[32m/**[m
[32m+[m[32m * DOMPDF - PHP5 HTML to PDF renderer[m
[32m+[m[32m *[m
[32m+[m[32m * File: $RCSfile: list_bullet_image_frame_decorator.cls.php,v $[m
[32m+[m[32m * Created on: 2005-06-28[m
[32m+[m[32m *[m
[32m+[m[32m * Copyright (c) 2004 - Benj Carson <benjcarson@digitaljunkies.ca>[m
[32m+[m[32m *[m
[32m+[m[32m * This library is free software; you can redistribute it and/or[m
[32m+[m[32m * modify it under the terms of the GNU Lesser General Public[m
[32m+[m[32m * License as published by the Free Software Foundation; either[m
[32m+[m[32m * version 2.1 of the License, or (at your option) any later version.[m
[32m+[m[32m *[m
[32m+[m[32m * This library is distributed in the hope that it will be useful,[m
[32m+[m[32m * but WITHOUT ANY WARRANTY; without even the implied warranty of[m
[32m+[m[32m * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU[m
[32m+[m[32m * Lesser General Public License for more details.[m
[32m+[m[32m *[m
[32m+[m[32m * You should have received a copy of the GNU Lesser General Public License[m
[32m+[m[32m * along with this library in the file LICENSE.LGPL; if not, write to the[m
[32m+[m[32m * Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA[m
[32m+[m[32m * 02111-1307 USA[m
[32m+[m[32m *[m
[32m+[m[32m * Alternatively, you may distribute this software under the terms of the[m
[32m+[m[32m * PHP License, version 3.0 or later.  A copy of this license should have[m
[32m+[m[32m * been distributed with this file in the file LICENSE.PHP .  If this is not[m
[32m+[m[32m * the case, you can obtain a copy at http://www.php.net/license/3_0.txt.[m
[32m+[m[32m *[m
[32m+[m[32m * The latest version of DOMPDF might be available at:[m
[32m+[m[32m * http://www.dompdf.com/[m
[32m+[m[32m *[m
[32m+[m[32m * @link http://www.dompdf.com/[m
[32m+[m[32m * @copyright 2004 Benj Carson[m
[32m+[m[32m * @author Benj Carson <benjcarson@digitaljunkies.ca>[m
[32m+[m[32m * @contributor Helmut Tischer <htischer@weihenstephan.org>[m
[32m+[m[32m * @package dompdf[m
[32m+[m[32m *[m
[32m+[m[32m * Changes[m
[32m+[m[32m * @contributor Helmut Tischer <htischer@weihenstephan.org>[m
[32m+[m[32m * @version 0.5.1.htischer.20090507[m
[32m+[m[32m * - added comment[m
[32m+[m[32m */[m
[32m+[m
[32m+[m[32m/* $Id: list_bullet_image_frame_decorator.cls.php 354 2011-01-24 21:59:54Z fabien.menager $ */[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Decorates frames for list bullets with custom images[m
[32m+[m[32m *[m
[32m+[m[32m * @access private[m
[32m+[m[32m * @package dompdf[m
[32m+[m[32m */[m
[32m+[m[32mclass List_Bullet_Image_Frame_Decorator extends Frame_Decorator {[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * The underlying image frame[m
[32m+[m[32m   *[m[41m [m
[32m+[m[32m   * @var Image_Frame_Decorator[m
[32m+[m[32m   */[m
[32m+[m[32m  protected $_img;[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * The image's width in pixels[m
[32m+[m[32m   *[m
[32m+[m[32m   * @var int[m
[32m+[m[32m   */[m
[32m+[m[32m  protected $_width;[m
[32m+[m[41m  [m
[32m+[m[32m  /**[m
[32m+[m[32m   * The image's height in pixels[m
[32m+[m[32m   *[m
[32m+[m[32m   * @var int[m
[32m+[m[32m   */[m
[32m+[m[32m  protected $_height;[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Class constructor[m
[32m+[m[32m   *[m
[32m+[m[32m   * @param Frame $frame the bullet frame to decorate[m
[32m+[m[32m   * @param DOMPDF $dompdf the document's dompdf object[m
[32m+[m[32m   */[m
[32m+[m[32m  function __construct(Frame $frame, DOMPDF $dompdf) {[m
[32m+[m[32m    $style = $frame->get_style();[m
[32m+[m[32m    $url = $style->list_style_image;[m
[32m+[m[32m    $frame->get_node()->setAttribute("src", $url);[m
[32m+[m[32m    $this->_img = new Image_Frame_Decorator($frame, $dompdf);[m
[32m+[m[32m    parent::__construct($this->_img, $dompdf);[m
[32m+[m[32m    list($width, $height) = dompdf_getimagesize($this->_img->get_image_url());[m
[32m+[m
[32m+[m[32m    // Resample the bullet image to be consistent with 'auto' sized images[m
[32m+[m[32m    // See also Image_Frame_Reflower::get_min_max_width[m
[32m+[m[32m    // Tested php ver: value measured in px, suffix "px" not in value: rtrim unnecessary.[m
[32m+[m[32m    $this->_width = (((float)rtrim($width, "px")) * 72) / DOMPDF_DPI;[m
[32m+[m[32m    $this->_height = (((float)rtrim($height, "px")) * 72) / DOMPDF_DPI;[m
[32m+[m[41m [m
[32m+[m[32m    //If an image is taller as the containing block/box, the box should be extended.[m
[32m+[m[32m    //Neighbour elements are overwriting the overlapping image areas.[m
[32m+[m[32m    //Todo: Where can the box size be extended?[m[41m   [m
[32m+[m[32m    //Code below has no effect.[m
[32m+[m[32m    //See block_frame_reflower _calculate_restricted_height[m
[32m+[m[32m    //See generated_frame_reflower, Dompdf:render() "list-item", "-dompdf-list-bullet"S.[m
[32m+[m[32m    //Leave for now[m[41m    [m
[32m+[m[32m    //if ($style->min_height < $this->_height ) {[m
[32m+[m[32m    //  $style->min_height = $this->_height;[m
[32m+[m[32m    //}[m
[32m+[m[32m    //$style->height = "auto";[m[41m   [m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Return the bullet's width[m
[32m+[m[32m   *[m
[32m+[m[32m   * @return int[m
[32m+[m[32m   */[m
[32m+[m[32m  function get_width() {[m
[32m+[m[32m    //ignore image width, use same width as on predefined bullet List_Bullet_Frame_Decorator[m
[32m+[m[32m    //for proper alignment of bullet image and text. Allow image to not fitting on left border.[m
[32m+[m[32m    //This controls the distance between bullet image and text[m[41m [m
[32m+[m[32m    //return $this->_width;[m
[32m+[m[32m    return $this->_frame->get_style()->get_font_size()*List_Bullet_Frame_Decorator::BULLET_SIZE +[m[41m [m
[32m+[m[32m      2 * List_Bullet_Frame_Decorator::BULLET_PADDING;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Return the bullet's height[m
[32m+[m[32m   *[m
[32m+[m[32m   * @return int[m
[32m+[m[32m   */[m
[32m+[m[32m  function get_height() {[m
[32m+[m[32m    //based on image height[m
[32m+[m[32m    return $this->_height;[m
[32m+[m[32m  }[m
[32m+[m[41m  [m
[32m+[m[32m  /**[m
[32m+[m[32m   * Override get_margin_width[m
[32m+[m[32m   *[m
[32m+[m[32m   * @return int[m
[32m+[m[32m   */[m
[32m+[m[32m  function get_margin_width() {[m
[32m+[m[32m    //ignore image width, use same width as on predefined bullet List_Bullet_Frame_Decorator[m
[32m+[m[32m    //for proper alignment of bullet image and text. Allow image to not fitting on left border.[m
[32m+[m[32m    //This controls the extra indentation of text to make room for the bullet image.[m
[32m+[m[32m    //Here use actual image size, not predefined bullet size[m[41m [m
[32m+[m[32m    //return $this->_frame->get_style()->get_font_size()*List_Bullet_Frame_Decorator::BULLET_SIZE +[m[41m [m
[32m+[m[32m    //  2 * List_Bullet_Frame_Decorator::BULLET_PADDING;[m
[32m+[m
[32m+[m[32m    // Small hack to prevent indenting of list text[m
[32m+[m[32m    // Image Might not exist, then position like on list_bullet_frame_decorator fallback to none.[m[41m [m
[32m+[m[32m    if ( $this->_frame->get_style()->list_style_position === "outside" ||[m
[32m+[m[32m         $this->_width == 0)[m[41m [m
[32m+[m[32m      return 0;[m
[32m+[m[32m    //This aligns the "inside" image position with the text.[m
[32m+[m[32m    //The text starts to the right of the image.[m
[32m+[m[32m    //Between the image and the text there is an added margin of image width.[m
[32m+[m[32m    //Where this comes from is unknown.[m
[32m+[m[32m    //The corresponding List_Bullet_Frame_Decorator sets a smaller margin. bullet size?[m
[32m+[m[32m    return $this->_width + 2 * List_Bullet_Frame_Decorator::BULLET_PADDING;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Override get_margin_height()[m
[32m+[m[32m   *[m
[32m+[m[32m   * @return int[m
[32m+[m[32m   */[m
[32m+[m[32m  function get_margin_height() {[m
[32m+[m[32m    //Hits only on "inset" lists items, to increase height of box[m
[32m+[m[32m    //based on image height[m
[32m+[m[32m    return $this->_height + 2 * List_Bullet_Frame_Decorator::BULLET_PADDING;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Return image url[m
[32m+[m[32m   *[m
[32m+[m[32m   * @return string[m
[32m+[m[32m   */[m
[32m+[m[32m  function get_image_url() {[m
[32m+[m[32m    return $this->_img->get_image_url();[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Return the image extension[m
[32m+[m[32m   *[m
[32m+[m[32m   * @return string[m
[32m+[m[32m   */[m
[32m+[m[32m  function get_image_ext() {[m
[32m+[m[32m    return $this->_img->get_image_ext();[m
[32m+[m[32m  }[m
[32m+[m[41m  [m
[32m+[m[32m}[m
[1mdiff --git a/application/third_party/dompdf/include/list_bullet_positioner.cls.php b/application/third_party/dompdf/include/list_bullet_positioner.cls.php[m
[1mnew file mode 100644[m
[1mindex 0000000..66a5c12[m
[1m--- /dev/null[m
[1m+++ b/application/third_party/dompdf/include/list_bullet_positioner.cls.php[m
[36m@@ -0,0 +1,111 @@[m
[32m+[m[32m<?php[m
[32m+[m[32m/**[m
[32m+[m[32m * DOMPDF - PHP5 HTML to PDF renderer[m
[32m+[m[32m *[m
[32m+[m[32m * File: $RCSfile: list_bullet_positioner.cls.php,v $[m
[32m+[m[32m * Created on: 2004-06-23[m
[32m+[m[32m *[m
[32m+[m[32m * Copyright (c) 2004 - Benj Carson <benjcarson@digitaljunkies.ca>[m
[32m+[m[32m *[m
[32m+[m[32m * This library is free software; you can redistribute it and/or[m
[32m+[m[32m * modify it under the terms of the GNU Lesser General Public[m
[32m+[m[32m * License as published by the Free Software Foundation; either[m
[32m+[m[32m * version 2.1 of the License, or (at your option) any later version.[m
[32m+[m[32m *[m
[32m+[m[32m * This library is distributed in the hope that it will be useful,[m
[32m+[m[32m * but WITHOUT ANY WARRANTY; without even the implied warranty of[m
[32m+[m[32m * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU[m
[32m+[m[32m * Lesser General Public License for more details.[m
[32m+[m[32m *[m
[32m+[m[32m * You should have received a copy of the GNU Lesser General Public License[m
[32m+[m[32m * along with this library in the file LICENSE.LGPL; if not, write to the[m
[32m+[m[32m * Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA[m
[32m+[m[32m * 02111-1307 USA[m
[32m+[m[32m *[m
[32m+[m[32m * Alternatively, you may distribute this software under the terms of the[m
[32m+[m[32m * PHP License, version 3.0 or later.  A copy of this license should have[m
[32m+[m[32m * been distributed with this file in the file LICENSE.PHP .  If this is not[m
[32m+[m[32m * the case, you can obtain a copy at http://www.php.net/license/3_0.txt.[m
[32m+[m[32m *[m
[32m+[m[32m * The latest version of DOMPDF might be available at:[m
[32m+[m[32m * http://www.dompdf.com/[m
[32m+[m[32m *[m
[32m+[m[32m * @link http://www.dompdf.com/[m
[32m+[m[32m * @copyright 2004 Benj Carson[m
[32m+[m[32m * @author Benj Carson <benjcarson@digitaljunkies.ca>[m
[32m+[m[32m * @contributor Helmut Tischer <htischer@weihenstephan.org>[m
[32m+[m[32m * @package dompdf[m
[32m+[m
[32m+[m[32m *[m
[32m+[m[32m * Changes[m
[32m+[m[32m * @contributor Helmut Tischer <htischer@weihenstephan.org>[m
[32m+[m[32m * @version 20090622[m
[32m+[m[32m * - try to adjust top position of bullet to top corner of subsequent font[m
[32m+[m[32m */[m
[32m+[m
[32m+[m[32m/* $Id: list_bullet_positioner.cls.php 216 2010-03-11 22:49:18Z ryan.masten $ */[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Positions list bullets[m
[32m+[m[32m *[m
[32m+[m[32m * @access private[m
[32m+[m[32m * @package dompdf[m
[32m+[m[32m */[m
[32m+[m[32mclass List_Bullet_Positioner extends Positioner {[m
[32m+[m
[32m+[m[32m  function __construct(Frame_Decorator $frame) { parent::__construct($frame); }[m
[32m+[m[41m  [m
[32m+[m[32m  //........................................................................[m
[32m+[m
[32m+[m[32m  function position() {[m
[32m+[m[41m    [m
[32m+[m[32m    // Bullets & friends are positioned an absolute distance to the left of[m
[32m+[m[32m    // the content edge of their parent element[m
[32m+[m[32m    $cb = $this->_frame->get_containing_block();[m
[32m+[m[32m    $style = $this->_frame->get_style();[m
[32m+[m[41m    [m
[32m+[m[32m    // Note: this differs from most frames in that we must position[m
[32m+[m[32m    // ourselves after determining our width[m
[32m+[m[32m    $x = $cb["x"] - $this->_frame->get_width();[m
[32m+[m
[32m+[m[32m    $p = $this->_frame->find_block_parent();[m
[32m+[m
[32m+[m[32m    $y = $p->get_current_line("y");[m
[32m+[m
[32m+[m[32m    // This is a bit of a hack...[m
[32m+[m[32m    $n = $this->_frame->get_next_sibling();[m
[32m+[m[32m    if ( $n ) {[m
[32m+[m[32m      $style = $n->get_style();[m
[32m+[m[32m      $y += $style->length_in_pt( array($style->margin_top, $style->padding_top),[m
[32m+[m[32m                                  $n->get_containing_block("w") );[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m	[32m// Now the position is the left top of the block which should be marked with the bullet.[m
[32m+[m	[32m// We tried to find out the y of the start of the first text character within the block.[m
[32m+[m	[32m// But the top margin/padding does not fit, neither from this nor from the next sibling[m
[32m+[m	[32m// The "bit of a hack" above does not work also.[m
[32m+[m[41m	[m
[32m+[m	[32m// Instead let's position the bullet vertically centered to the block which should be marked.[m
[32m+[m	[32m// But for get_next_sibling() the get_containing_block is all zero, and for find_block_parent()[m
[32m+[m	[32m// the get_containing_block is paper width and the entire list as height.[m
[32m+[m[41m	[m
[32m+[m[32m    // if ($p) {[m
[32m+[m[32m    //   //$cb = $n->get_containing_block();[m
[32m+[m[32m    //   $cb = $p->get_containing_block();[m
[32m+[m[32m    //   $y += $cb["h"]/2;[m
[32m+[m[32m    // print 'cb:'.$cb["x"].':'.$cb["y"].':'.$cb["w"].':'.$cb["h"].':';[m
[32m+[m[32m    // }[m[41m	 [m
[32m+[m
[32m+[m	[32m// Todo:[m
[32m+[m	[32m// For now give up on the above. Use Guesswork with font y-pos in the middle of the line spacing[m
[32m+[m
[32m+[m[32m    $style = $p->get_style();[m
[32m+[m[32m    $font_size = $style->get_font_size();[m
[32m+[m[32m    $line_height = $style->length_in_pt($style->line_height, $font_size);[m
[32m+[m[32m    $y += ($line_height - $font_size) / 2;[m[41m  	[m
[32m+[m[41m	 [m
[32m+[m[32m    //Position is x-end y-top of character position of the bullet.[m[41m    [m
[32m+[m[32m    $this->_frame->set_position($x, $y);[m
[32m+[m[41m    [m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[1mdiff --git a/application/third_party/dompdf/include/list_bullet_renderer.cls.php b/application/third_party/dompdf/include/list_bullet_renderer.cls.php[m
[1mnew file mode 100644[m
[1mindex 0000000..8655ffd[m
[1m--- /dev/null[m
[1m+++ b/application/third_party/dompdf/include/list_bullet_renderer.cls.php[m
[36m@@ -0,0 +1,200 @@[m
[32m+[m[32m<?php[m
[32m+[m[32m/**[m
[32m+[m[32m * DOMPDF - PHP5 HTML to PDF renderer[m
[32m+[m[32m *[m
[32m+[m[32m * File: $RCSfile: list_bullet_renderer.cls.php,v $[m
[32m+[m[32m * Created on: 2004-06-23[m
[32m+[m[32m *[m
[32m+[m[32m * Copyright (c) 2004 - Benj Carson <benjcarson@digitaljunkies.ca>[m
[32m+[m[32m *[m
[32m+[m[32m * This library is free software; you can redistribute it and/or[m
[32m+[m[32m * modify it under the terms of the GNU Lesser General Public[m
[32m+[m[32m * License as published by the Free Software Foundation; either[m
[32m+[m[32m * version 2.1 of the License, or (at your option) any later version.[m
[32m+[m[32m *[m
[32m+[m[32m * This library is distributed in the hope that it will be useful,[m
[32m+[m[32m * but WITHOUT ANY WARRANTY; without even the implied warranty of[m
[32m+[m[32m * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU[m
[32m+[m[32m * Lesser General Public License for more details.[m
[32m+[m[32m *[m
[32m+[m[32m * You should have received a copy of the GNU Lesser General Public License[m
[32m+[m[32m * along with this library in the file LICENSE.LGPL; if not, write to the[m
[32m+[m[32m * Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA[m
[32m+[m[32m * 02111-1307 USA[m
[32m+[m[32m *[m
[32m+[m[32m * Alternatively, you may distribute this software under the terms of the[m
[32m+[m[32m * PHP License, version 3.0 or later.  A copy of this license should have[m
[32m+[m[32m * been distributed with this file in the file LICENSE.PHP .  If this is not[m
[32m+[m[32m * the case, you can obtain a copy at http://www.php.net/license/3_0.txt.[m
[32m+[m[32m *[m
[32m+[m[32m * The latest version of DOMPDF might be available at:[m
[32m+[m[32m * http://www.dompdf.com/[m
[32m+[m[32m *[m
[32m+[m[32m * @link http://www.dompdf.com/[m
[32m+[m[32m * @copyright 2004 Benj Carson[m
[32m+[m[32m * @author Benj Carson <benjcarson@digitaljunkies.ca>[m
[32m+[m[32m * @contributor Helmut Tischer <htischer@weihenstephan.org>[m
[32m+[m[32m * @package dompdf[m
[32m+[m
[32m+[m[32m *[m
[32m+[m[32m * Changes[m
[32m+[m[32m * @contributor Helmut Tischer <htischer@weihenstephan.org>[m
[32m+[m[32m * @version 20090622[m
[32m+[m[32m * - bullet size proportional to font size, center position[m
[32m+[m[32m */[m
[32m+[m
[32m+[m[32m/* $Id: list_bullet_renderer.cls.php 354 2011-01-24 21:59:54Z fabien.menager $ */[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Renders list bullets[m
[32m+[m[32m *[m
[32m+[m[32m * @access private[m
[32m+[m[32m * @package dompdf[m
[32m+[m[32m */[m
[32m+[m[32mclass List_Bullet_Renderer extends Abstract_Renderer {[m
[32m+[m
[32m+[m[32m  //........................................................................[m
[32m+[m[32m  private function make_counter($n, $type, $pad = null){[m
[32m+[m[32m    $n = intval($n);[m
[32m+[m[32m    $text = "";[m
[32m+[m[32m    $uppercase = false;[m
[32m+[m[41m    [m
[32m+[m[32m    switch ($type) {[m
[32m+[m[32m      case "decimal-leading-zero":[m
[32m+[m[32m      case "decimal":[m
[32m+[m[32m      case "1":[m
[32m+[m[32m        if ($pad)[m[41m [m
[32m+[m[32m          $text = str_pad($n, $pad, "0", STR_PAD_LEFT);[m
[32m+[m[32m        else[m[41m [m
[32m+[m[32m          $text = $n;[m
[32m+[m[32m        break;[m
[32m+[m[41m      [m
[32m+[m[32m      case "upper-alpha":[m
[32m+[m[32m      case "upper-latin":[m
[32m+[m[32m      case "A":[m
[32m+[m[32m        $uppercase = true;[m
[32m+[m[32m      case "lower-alpha":[m
[32m+[m[32m      case "lower-latin":[m
[32m+[m[32m      case "a":[m
[32m+[m[32m        $text = chr( ($n % 26) + ord('a') - 1);[m
[32m+[m[32m        break;[m
[32m+[m[41m        [m
[32m+[m[32m      case "upper-roman":[m
[32m+[m[32m      case "I":[m
[32m+[m[32m        $uppercase = true;[m
[32m+[m[32m      case "lower-roman":[m
[32m+[m[32m      case "i":[m
[32m+[m[32m        $text = dec2roman($n);[m
[32m+[m[32m        break;[m
[32m+[m[41m      [m
[32m+[m[32m      case "lower-greek":[m
[32m+[m[32m        $text = unichr($n + 944);[m
[32m+[m[32m        break;[m
[32m+[m[32m    }[m
[32m+[m[41m    [m
[32m+[m[32m    if ($uppercase)[m[41m [m
[32m+[m[32m      $text = strtoupper($text);[m
[32m+[m[41m      [m
[32m+[m[32m    return $text.".";[m
[32m+[m[32m  }[m
[32m+[m[41m  [m
[32m+[m[32m  function render(Frame $frame) {[m
[32m+[m
[32m+[m[32m    $style = $frame->get_style();[m
[32m+[m[32m    $font_size = $style->get_font_size();[m
[32m+[m[32m    $line_height = $style->length_in_pt($style->line_height, $frame->get_containing_block("w"));[m
[32m+[m
[32m+[m[32m    $this->_set_opacity( $frame->get_opacity( $style->opacity ) );[m
[32m+[m[41m    [m
[32m+[m[32m    // Handle list-style-image[m
[32m+[m[32m    // If list style image is requested but missing, fall back to predefined types[m
[32m+[m[32m    if ( $style->list_style_image !== "none" &&[m
[32m+[m[32m         strcmp($img = $frame->get_image_url(), DOMPDF_LIB_DIR . "/res/broken_image.png") != 0) {[m
[32m+[m
[32m+[m[32m      list($x,$y) = $frame->get_position();[m
[32m+[m[41m      [m
[32m+[m[32m      //For expected size and aspect, instead of box size, use image natural size scaled to DPI.[m
[32m+[m[32m      // Resample the bullet image to be consistent with 'auto' sized images[m
[32m+[m[32m      // See also Image_Frame_Reflower::get_min_max_width[m
[32m+[m[32m      // Tested php ver: value measured in px, suffix "px" not in value: rtrim unnecessary.[m
[32m+[m[32m      //$w = $frame->get_width();[m
[32m+[m[32m      //$h = $frame->get_height();[m
[32m+[m[32m      list($width, $height) = dompdf_getimagesize($img);[m
[32m+[m[32m      $w = (((float)rtrim($width, "px")) * 72) / DOMPDF_DPI;[m
[32m+[m[32m      $h = (((float)rtrim($height, "px")) * 72) / DOMPDF_DPI;[m
[32m+[m[41m      [m
[32m+[m[32m      $x -= $w;[m
[32m+[m[32m      $y -= ($line_height - $font_size)/2; //Reverse hinting of list_bullet_positioner[m
[32m+[m
[32m+[m[32m      $this->_canvas->image( $img, $frame->get_image_ext(), $x, $y, $w, $h);[m
[32m+[m
[32m+[m[32m    } else {[m
[32m+[m
[32m+[m[32m      $bullet_style = $style->list_style_type;[m
[32m+[m
[32m+[m[32m      $fill = false;[m
[32m+[m
[32m+[m[32m      switch ($bullet_style) {[m
[32m+[m
[32m+[m[32m      default:[m
[32m+[m[32m      case "disc":[m
[32m+[m[32m        $fill = true;[m
[32m+[m
[32m+[m[32m      case "circle":[m
[32m+[m[32m        list($x,$y) = $frame->get_position();[m
[32m+[m[32m        $r = ($font_size*(List_Bullet_Frame_Decorator::BULLET_SIZE /*-List_Bullet_Frame_Decorator::BULLET_THICKNESS*/ ))/2;[m
[32m+[m[32m        $x -= $font_size*(List_Bullet_Frame_Decorator::BULLET_SIZE/2);[m
[32m+[m[32m        $y += ($font_size*(1-List_Bullet_Frame_Decorator::BULLET_DESCENT))/2;[m
[32m+[m[32m        $o = $font_size*List_Bullet_Frame_Decorator::BULLET_THICKNESS;[m
[32m+[m[32m        $this->_canvas->circle($x, $y, $r, $style->color, $o, null, $fill);[m
[32m+[m[32m        break;[m
[32m+[m
[32m+[m[32m      case "square":[m
[32m+[m[32m        list($x, $y) = $frame->get_position();[m
[32m+[m[32m        $w = $font_size*List_Bullet_Frame_Decorator::BULLET_SIZE;[m
[32m+[m[32m        $x -= $w;[m
[32m+[m[32m        $y += ($font_size*(1-List_Bullet_Frame_Decorator::BULLET_DESCENT-List_Bullet_Frame_Decorator::BULLET_SIZE))/2;[m
[32m+[m[32m        $this->_canvas->filled_rectangle($x, $y, $w, $w, $style->color);[m
[32m+[m[32m        break;[m
[32m+[m[41m		[m
[32m+[m[32m      case "decimal-leading-zero":[m
[32m+[m[32m      case "decimal":[m
[32m+[m[32m      case "lower-alpha":[m
[32m+[m[32m      case "lower-latin":[m
[32m+[m[32m      case "lower-roman":[m
[32m+[m[32m      case "lower-greek":[m
[32m+[m[32m      case "upper-alpha":[m
[32m+[m[32m      case "upper-latin":[m
[32m+[m[32m      case "upper-roman":[m
[32m+[m[32m      case "1": // HTML 4.0 compatibility[m
[32m+[m[32m      case "a":[m
[32m+[m[32m      case "i":[m
[32m+[m[32m      case "A":[m
[32m+[m[32m      case "I":[m
[32m+[m[32m        list($x,$y) = $frame->get_position();[m
[32m+[m[41m        [m
[32m+[m[32m        $pad = null;[m
[32m+[m[32m        if ( $bullet_style === "decimal-leading-zero" ) {[m
[32m+[m[32m          $pad = strlen($frame->get_parent()->get_parent()->get_node()->getAttribute("dompdf-children-count"));[m
[32m+[m[32m        }[m
[32m+[m[41m        [m
[32m+[m[32m        $index = $frame->get_node()->getAttribute("dompdf-counter");[m
[32m+[m[32m        $text = $this->make_counter($index, $bullet_style, $pad);[m
[32m+[m[32m        $font_family = $style->font_family;[m
[32m+[m[32m        $spacing = 0; //$frame->get_text_spacing() + $style->word_spacing;[m
[32m+[m[41m        [m
[32m+[m[32m        if ( trim($text) == "" )[m
[32m+[m[32m          return;[m
[32m+[m
[32m+[m[32m        $x -= Font_Metrics::get_text_width($text, $font_family, $font_size, $spacing);[m
[32m+[m[41m        [m
[32m+[m[32m        $this->_canvas->text($x, $y, $text,[m
[32m+[m[32m                             $font_family, $font_size,[m
[32m+[m[32m                             $style->color, $spacing);[m
[32m+[m[41m      [m
[32m+[m[32m      case "none":[m
[32m+[m[32m        break;[m
[32m+[m[32m      }[m
[32m+[m[32m    }[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[1mdiff --git a/application/third_party/dompdf/include/null_frame_decorator.cls.php b/application/third_party/dompdf/include/null_frame_decorator.cls.php[m
[1mnew file mode 100644[m
[1mindex 0000000..ff3f955[m
[1m--- /dev/null[m
[1m+++ b/application/third_party/dompdf/include/null_frame_decorator.cls.php[m
[36m@@ -0,0 +1,59 @@[m
[32m+[m[32m<?php[m
[32m+[m[32m/**[m
[32m+[m[32m * DOMPDF - PHP5 HTML to PDF renderer[m
[32m+[m[32m *[m
[32m+[m[32m * File: $RCSfile: null_frame_decorator.cls.php,v $[m
[32m+[m[32m * Created on: 2004-07-12[m
[32m+[m[32m *[m
[32m+[m[32m * Copyright (c) 2004 - Benj Carson <benjcarson@digitaljunkies.ca>[m
[32m+[m[32m *[m
[32m+[m[32m * This library is free software; you can redistribute it and/or[m
[32m+[m[32m * modify it under the terms of the GNU Lesser General Public[m
[32m+[m[32m * License as published by the Free Software Foundation; either[m
[32m+[m[32m * version 2.1 of the License, or (at your option) any later version.[m
[32m+[m[32m *[m
[32m+[m[32m * This library is distributed in the hope that it will be useful,[m
[32m+[m[32m * but WITHOUT ANY WARRANTY; without even the implied warranty of[m
[32m+[m[32m * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU[m
[32m+[m[32m * Lesser General Public License for more details.[m
[32m+[m[32m *[m
[32m+[m[32m * You should have received a copy of the GNU Lesser General Public License[m
[32m+[m[32m * along with this library in the file LICENSE.LGPL; if not, write to the[m
[32m+[m[32m * Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA[m
[32m+[m[32m * 02111-1307 USA[m
[32m+[m[32m *[m
[32m+[m[32m * Alternatively, you may distribute this software under the terms of the[m
[32m+[m[32m * PHP License, version 3.0 or later.  A copy of this license should have[m
[32m+[m[32m * been distributed with this file in the file LICENSE.PHP .  If this is not[m
[32m+[m[32m * the case, you can obtain a copy at http://www.php.net/license/3_0.txt.[m
[32m+[m[32m *[m
[32m+[m[32m * The latest version of DOMPDF might be available at:[m
[32m+[m[32m * http://www.dompdf.com/[m
[32m+[m[32m *[m
[32m+[m[32m * @link http://www.dompdf.com/[m
[32m+[m[32m * @copyright 2004 Benj Carson[m
[32m+[m[32m * @author Benj Carson <benjcarson@digitaljunkies.ca>[m
[32m+[m[32m * @package dompdf[m
[32m+[m
[32m+[m[32m */[m
[32m+[m
[32m+[m[32m/* $Id: null_frame_decorator.cls.php 216 2010-03-11 22:49:18Z ryan.masten $ */[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Dummy decorator[m
[32m+[m[32m *[m
[32m+[m[32m * @access private[m
[32m+[m[32m * @package dompdf[m
[32m+[m[32m */[m
[32m+[m[32mclass Null_Frame_Decorator extends Frame_Decorator {[m
[32m+[m
[32m+[m[32m  function __construct(Frame $frame, DOMPDF $dompdf) {[m
[32m+[m[32m    parent::__construct($frame, $dompdf);[m
[32m+[m[32m    $style = $this->_frame->get_style();[m
[32m+[m[32m    $style->width = 0;[m
[32m+[m[32m    $style->height = 0;[m
[32m+[m[32m    $style->margin = 0;[m
[32m+[m[32m    $style->padding = 0;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m}[m
[1mdiff --git a/application/third_party/dompdf/include/null_frame_reflower.cls.php b/application/third_party/dompdf/include/null_frame_reflower.cls.php[m
[1mnew file mode 100644[m
[1mindex 0000000..6af18ac[m
[1m--- /dev/null[m
[1m+++ b/application/third_party/dompdf/include/null_frame_reflower.cls.php[m
[36m@@ -0,0 +1,54 @@[m
[32m+[m[32m<?php[m
[32m+[m[32m/**[m
[32m+[m[32m * DOMPDF - PHP5 HTML to PDF renderer[m
[32m+[m[32m *[m
[32m+[m[32m * File: $RCSfile: null_frame_reflower.cls.php,v $[m
[32m+[m[32m * Created on: 2004-07-12[m
[32m+[m[32m *[m
[32m+[m[32m * Copyright (c) 2004 - Benj Carson <benjcarson@digitaljunkies.ca>[m
[32m+[m[32m *[m
[32m+[m[32m * This library is free software; you can redistribute it and/or[m
[32m+[m[32m * modify it under the terms of the GNU Lesser General Public[m
[32m+[m[32m * License as published by the Free Software Foundation; either[m
[32m+[m[32m * version 2.1 of the License, or (at your option) any later version.[m
[32m+[m[32m *[m
[32m+[m[32m * This library is distributed in the hope that it will be useful,[m
[32m+[m[32m * but WITHOUT ANY WARRANTY; without even the implied warranty of[m
[32m+[m[32m * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU[m
[32m+[m[32m * Lesser General Public License for more details.[m
[32m+[m[32m *[m
[32m+[m[32m * You should have received a copy of the GNU Lesser General Public License[m
[32m+[m[32m * along with this library in the file LICENSE.LGPL; if not, write to the[m
[32m+[m[32m * Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA[m
[32m+[m[32m * 02111-1307 USA[m
[32m+[m[32m *[m
[32m+[m[32m * Alternatively, you may distribute this software under the terms of the[m
[32m+[m[32m * PHP License, version 3.0 or later.  A copy of this license should have[m
[32m+[m[32m * been distributed with this file in the file LICENSE.PHP .  If this is not[m
[32m+[m[32m * the case, you can obtain a copy at http://www.php.net/license/3_0.txt.[m
[32m+[m[32m *[m
[32m+[m[32m * The latest version of DOMPDF might be available at:[m
[32m+[m[32m * http://www.dompdf.com/[m
[32m+[m[32m *[m
[32m+[m[32m * @link http://www.dompdf.com/[m
[32m+[m[32m * @copyright 2004 Benj Carson[m
[32m+[m[32m * @author Benj Carson <benjcarson@digitaljunkies.ca>[m
[32m+[m[32m * @package dompdf[m
[32m+[m
[32m+[m[32m */[m
[32m+[m
[32m+[m[32m/* $Id: null_frame_reflower.cls.php 357 2011-01-30 20:56:46Z fabien.menager $ */[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Dummy reflower[m
[32m+[m[32m *[m
[32m+[m[32m * @access private[m
[32m+[m[32m * @package dompdf[m
[32m+[m[32m */[m
[32m+[m[32mclass Null_Frame_Reflower extends Frame_Reflower {[m
[32m+[m
[32m+[m[32m  function __construct(Frame $frame) { parent::__construct($frame); }[m
[32m+[m
[32m+[m[32m  function reflow(Frame_Decorator $block = null) { return; }[m
[32m+[m[41m  [m
[32m+[m[32m}[m
[1mdiff --git a/application/third_party/dompdf/include/null_positioner.cls.php b/application/third_party/dompdf/include/null_positioner.cls.php[m
[1mnew file mode 100644[m
[1mindex 0000000..0e79f81[m
[1m--- /dev/null[m
[1m+++ b/application/third_party/dompdf/include/null_positioner.cls.php[m
[36m@@ -0,0 +1,56 @@[m
[32m+[m[32m<?php[m
[32m+[m[32m/**[m
[32m+[m[32m * DOMPDF - PHP5 HTML to PDF renderer[m
[32m+[m[32m *[m
[32m+[m[32m * File: $RCSfile: null_positioner.cls.php,v $[m
[32m+[m[32m * Created on: 2004-07-12[m
[32m+[m[32m *[m
[32m+[m[32m * Copyright (c) 2004 - Benj Carson <benjcarson@digitaljunkies.ca>[m
[32m+[m[32m *[m
[32m+[m[32m * This library is free software; you can redistribute it and/or[m
[32m+[m[32m * modify it under the terms of the GNU Lesser General Public[m
[32m+[m[32m * License as published by the Free Software Foundation; either[m
[32m+[m[32m * version 2.1 of the License, or (at your option) any later version.[m
[32m+[m[32m *[m
[32m+[m[32m * This library is distributed in the hope that it will be useful,[m
[32m+[m[32m * but WITHOUT ANY WARRANTY; without even the implied warranty of[m
[32m+[m[32m * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU[m
[32m+[m[32m * Lesser General Public License for more details.[m
[32m+[m[32m *[m
[32m+[m[32m * You should have received a copy of the GNU Lesser General Public License[m
[32m+[m[32m * along with this library in the file LICENSE.LGPL; if not, write to the[m
[32m+[m[32m * Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA[m
[32m+[m[32m * 02111-1307 USA[m
[32m+[m[32m *[m
[32m+[m[32m * Alternatively, you may distribute this software under the terms of the[m
[32m+[m[32m * PHP License, version 3.0 or later.  A copy of this license should have[m
[32m+[m[32m * been distributed with this file in the file LICENSE.PHP .  If this is not[m
[32m+[m[32m * the case, you can obtain a copy at http://www.php.net/license/3_0.txt.[m
[32m+[m[32m *[m
[32m+[m[32m * The latest version of DOMPDF might be available at:[m
[32m+[m[32m * http://www.dompdf.com/[m
[32m+[m[32m *[m
[32m+[m[32m * @link http://www.dompdf.com/[m
[32m+[m[32m * @copyright 2004 Benj Carson[m
[32m+[m[32m * @author Benj Carson <benjcarson@digitaljunkies.ca>[m
[32m+[m[32m * @package dompdf[m
[32m+[m
[32m+[m[32m */[m
[32m+[m
[32m+[m[32m/* $Id: null_positioner.cls.php 216 2010-03-11 22:49:18Z ryan.masten $ */[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Dummy positioner[m
[32m+[m[32m *[m
[32m+[m[32m * @access private[m
[32m+[m[32m * @package dompdf[m
[32m+[m[32m */[m
[32m+[m[32mclass Null_Positioner extends Positioner {[m
[32m+[m
[32m+[m[32m  function __construct(Frame_Decorator $frame) {[m
[32m+[m[32m    parent::__construct($frame);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  function position() { return; }[m
[32m+[m[41m  [m
[32m+[m[32m}[m
[1mdiff --git a/application/third_party/dompdf/include/page_cache.cls.php b/application/third_party/dompdf/include/page_cache.cls.php[m
[1mnew file mode 100644[m
[1mindex 0000000..a7b7dc8[m
[1m--- /dev/null[m
[1m+++ b/application/third_party/dompdf/include/page_cache.cls.php[m
[36m@@ -0,0 +1,159 @@[m
[32m+[m[32m<?php[m
[32m+[m[32m/**[m
[32m+[m[32m * DOMPDF - PHP5 HTML to PDF renderer[m
[32m+[m[32m *[m
[32m+[m[32m * File: $RCSfile: page_cache.cls.php,v $[m
[32m+[m[32m * Created on: 2004-07-23[m
[32m+[m[32m *[m
[32m+[m[32m * Copyright (c) 2004 - Benj Carson <benjcarson@digitaljunkies.ca>[m
[32m+[m[32m *[m
[32m+[m[32m * This library is free software; you can redistribute it and/or[m
[32m+[m[32m * modify it under the terms of the GNU Lesser General Public[m
[32m+[m[32m * License as published by the Free Software Foundation; either[m
[32m+[m[32m * version 2.1 of the License, or (at your option) any later version.[m
[32m+[m[32m *[m
[32m+[m[32m * This library is distributed in the hope that it will be useful,[m
[32m+[m[32m * but WITHOUT ANY WARRANTY; without even the implied warranty of[m
[32m+[m[32m * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU[m
[32m+[m[32m * Lesser General Public License for more details.[m
[32m+[m[32m *[m
[32m+[m[32m * You should have received a copy of the GNU Lesser General Public License[m
[32m+[m[32m * along with this library in the file LICENSE.LGPL; if not, write to the[m
[32m+[m[32m * Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA[m
[32m+[m[32m * 02111-1307 USA[m
[32m+[m[32m *[m
[32m+[m[32m * Alternatively, you may distribute this software under the terms of the[m
[32m+[m[32m * PHP License, version 3.0 or later.  A copy of this license should have[m
[32m+[m[32m * been distributed with this file in the file LICENSE.PHP .  If this is not[m
[32m+[m[32m * the case, you can obtain a copy at http://www.php.net/license/3_0.txt.[m
[32m+[m[32m *[m
[32m+[m[32m * The latest version of DOMPDF might be available at:[m
[32m+[m[32m * http://www.dompdf.com/[m
[32m+[m[32m *[m
[32m+[m[32m * @link http://www.dompdf.com/[m
[32m+[m[32m * @copyright 2004 Benj Carson[m
[32m+[m[32m * @author Benj Carson <benjcarson@digitaljunkies.ca>[m
[32m+[m[32m * @package dompdf[m
[32m+[m
[32m+[m[32m */[m
[32m+[m
[32m+[m[32m/* $Id: page_cache.cls.php 216 2010-03-11 22:49:18Z ryan.masten $ */[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Caches individual rendered PDF pages[m
[32m+[m[32m *[m
[32m+[m[32m * Not totally implmented yet.  Use at your own risk ;)[m
[32m+[m[32m *[m[41m [m
[32m+[m[32m * @access private[m
[32m+[m[32m * @package dompdf[m
[32m+[m[32m * @static[m
[32m+[m[32m */[m
[32m+[m[32mclass Page_Cache {[m
[32m+[m
[32m+[m[32m  const DB_USER = "dompdf_page_cache";[m
[32m+[m[32m  const DB_PASS = "some meaningful password";[m
[32m+[m[32m  const DB_NAME = "dompdf_page_cache";[m
[32m+[m[41m  [m
[32m+[m[32m  static private $__connection = null;[m
[32m+[m[41m  [m
[32m+[m[32m  function init() {[m
[32m+[m[32m    if ( is_null(self::$__connection) ) {[m
[32m+[m[32m      $con_str = "host=" . DB_HOST .[m
[32m+[m[32m        " dbname=" . self::DB_NAME .[m
[32m+[m[32m        " user=" . self::DB_USER .[m
[32m+[m[32m        " password=" . self::DB_PASS;[m
[32m+[m[41m      [m
[32m+[m[32m      if ( !self::$__connection = pg_connect($con_str) )[m
[32m+[m[32m        throw new Exception("Database connection failed.");[m
[32m+[m[32m    }[m
[32m+[m[32m  }[m
[32m+[m[41m  [m
[32m+[m[32m  function __construct() { throw new Exception("Can not create instance of Page_Class.  Class is static."); }[m
[32m+[m
[32m+[m[32m  private static function __query($sql) {[m
[32m+[m[32m    if ( !($res = pg_query(self::$__connection, $sql)) )[m
[32m+[m[32m      throw new Exception(pg_last_error(self::$__connection));[m
[32m+[m[32m    return $res;[m
[32m+[m[32m  }[m
[32m+[m[41m  [m
[32m+[m[32m  static function store_page($id, $page_num, $data) {[m
[32m+[m[32m    $where = "WHERE id='" . pg_escape_string($id) . "' AND ".[m
[32m+[m[32m      "page_num=". pg_escape_string($page_num);[m
[32m+[m
[32m+[m[32m    $res = self::__query("SELECT timestamp FROM page_cache ". $where);[m
[32m+[m
[32m+[m[32m    $row = pg_fetch_assoc($res);[m
[32m+[m[41m    [m
[32m+[m[32m    if ( $row )[m[41m [m
[32m+[m[32m      self::__query("UPDATE page_cache SET data='" . pg_escape_string($data) . "' " . $where);[m
[32m+[m[32m    else[m[41m [m
[32m+[m[32m      self::__query("INSERT INTO page_cache (id, page_num, data) VALUES ('" . pg_escape_string($id) . "', ".[m
[32m+[m[32m                     pg_escape_string($page_num) . ", ".[m
[32m+[m[32m                     "'". pg_escape_string($data) . "')");[m
[32m+[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  static function store_fonts($id, $fonts) {[m
[32m+[m[32m    self::__query("BEGIN");[m
[32m+[m[32m    // Update the font information[m
[32m+[m[32m    self::__query("DELETE FROM page_fonts WHERE id='" . pg_escape_string($id) . "'");[m
[32m+[m
[32m+[m[32m    foreach (array_keys($fonts) as $font)[m
[32m+[m[32m      self::__query("INSERT INTO page_fonts (id, font_name) VALUES ('" .[m
[32m+[m[32m                    pg_escape_string($id) . "', '" . pg_escape_string($font) . "')");[m
[32m+[m[32m    self::__query("COMMIT");[m
[32m+[m[32m  }[m
[32m+[m[41m  [m
[32m+[m[32m//   static function retrieve_page($id, $page_num) {[m
[32m+[m
[32m+[m[32m//     $res = self::__query("SELECT data FROM page_cache WHERE id='" . pg_escape_string($id) . "' AND ".[m
[32m+[m[32m//                           "page_num=". pg_escape_string($page_num));[m
[32m+[m
[32m+[m[32m//     $row = pg_fetch_assoc($res);[m
[32m+[m
[32m+[m[32m//     return pg_unescape_bytea($row["data"]);[m
[32m+[m[41m    [m
[32m+[m[32m//   }[m
[32m+[m
[32m+[m[32m  static function get_page_timestamp($id, $page_num) {[m
[32m+[m[32m    $res = self::__query("SELECT timestamp FROM page_cache WHERE id='" . pg_escape_string($id) . "' AND ".[m
[32m+[m[32m                          "page_num=". pg_escape_string($page_num));[m
[32m+[m
[32m+[m[32m    $row = pg_fetch_assoc($res);[m
[32m+[m
[32m+[m[32m    return $row["timestamp"];[m
[32m+[m[41m    [m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  // Adds the cached document referenced by $id to the provided pdf[m
[32m+[m[32m  static function insert_cached_document(CPDF_Adapter $pdf, $id, $new_page = true) {[m
[32m+[m[32m    $res = self::__query("SELECT font_name FROM page_fonts WHERE id='" . pg_escape_string($id) . "'");[m
[32m+[m
[32m+[m[32m    // Ensure that the fonts needed by the cached document are loaded into[m
[32m+[m[32m    // the pdf[m
[32m+[m[32m    while ($row = pg_fetch_assoc($res))[m[41m [m
[32m+[m[32m      $pdf->get_cpdf()->selectFont($row["font_name"]);[m
[32m+[m[41m    [m
[32m+[m[32m    $res = self::__query("SELECT data FROM page_cache WHERE id='" . pg_escape_string($id) . "'");[m
[32m+[m
[32m+[m[32m    if ( $new_page )[m
[32m+[m[32m      $pdf->new_page();[m
[32m+[m
[32m+[m[32m    $first = true;[m
[32m+[m[32m    while ($row = pg_fetch_assoc($res)) {[m
[32m+[m
[32m+[m[32m      if ( !$first )[m[41m [m
[32m+[m[32m        $pdf->new_page();[m
[32m+[m[32m      else[m[41m [m
[32m+[m[32m        $first = false;[m[41m        [m
[32m+[m[41m      [m
[32m+[m[32m      $page = $pdf->reopen_serialized_object($row["data"]);[m
[32m+[m[32m      //$pdf->close_object();[m
[32m+[m[32m      $pdf->add_object($page, "add");[m
[32m+[m
[32m+[m[32m    }[m
[32m+[m[41m      [m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mPage_Cache::init();[m
[1mdiff --git a/application/third_party/dompdf/include/page_frame_decorator.cls.php b/application/third_party/dompdf/include/page_frame_decorator.cls.php[m
[1mnew file mode 100644[m
[1mindex 0000000..eaa823b[m
[1m--- /dev/null[m
[1m+++ b/application/third_party/dompdf/include/page_frame_decorator.cls.php[m
[36m@@ -0,0 +1,583 @@[m
[32m+[m[32m<?php[m
[32m+[m[32m/**[m
[32m+[m[32m * DOMPDF - PHP5 HTML to PDF renderer[m
[32m+[m[32m *[m
[32m+[m[32m * File: $RCSfile: page_frame_decorator.cls.php,v $[m
[32m+[m[32m * Created on: 2004-06-15[m
[32m+[m[32m *[m
[32m+[m[32m * Copyright (c) 2004 - Benj Carson <benjcarson@digitaljunkies.ca>[m
[32m+[m[32m *[m
[32m+[m[32m * This library is free software; you can redistribute it and/or[m
[32m+[m[32m * modify it under the terms of the GNU Lesser General Public[m
[32m+[m[32m * License as published by the Free Software Foundation; either[m
[32m+[m[32m * version 2.1 of the License, or (at your option) any later version.[m
[32m+[m[32m *[m
[32m+[m[32m * This library is distributed in the hope that it will be useful,[m
[32m+[m[32m * but WITHOUT ANY WARRANTY; without even the implied warranty of[m
[32m+[m[32m * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU[m
[32m+[m[32m * Lesser General Public License for more details.[m
[32m+[m[32m *[m
[32m+[m[32m * You should have received a copy of the GNU Lesser General Public License[m
[32m+[m[32m * along with this library in the file LICENSE.LGPL; if not, write to the[m
[32m+[m[32m * Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA[m
[32m+[m[32m * 02111-1307 USA[m
[32m+[m[32m *[m
[32m+[m[32m * Alternatively, you may distribute this software under the terms of the[m
[32m+[m[32m * PHP License, version 3.0 or later.  A copy of this license should have[m
[32m+[m[32m * been distributed with this file in the file LICENSE.PHP .  If this is not[m
[32m+[m[32m * the case, you can obtain a copy at http://www.php.net/license/3_0.txt.[m
[32m+[m[32m *[m
[32m+[m[32m * The latest version of DOMPDF might be available at:[m
[32m+[m[32m * http://www.dompdf.com/[m
[32m+[m[32m *[m
[32m+[m[32m * @link http://www.dompdf.com/[m
[32m+[m[32m * @copyright 2004 Benj Carson[m
[32m+[m[32m * @author Benj Carson <benjcarson@digitaljunkies.ca>[m
[32m+[m[32m * @package dompdf[m
[32m+[m
[32m+[m[32m */[m
[32m+[m
[32m+[m[32m/* $Id: page_frame_decorator.cls.php 337 2010-12-01 21:30:27Z fabien.menager $ */[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Decorates frames for page layout[m
[32m+[m[32m *[m
[32m+[m[32m * @access private[m
[32m+[m[32m * @package dompdf[m
[32m+[m[32m */[m
[32m+[m[32mclass Page_Frame_Decorator extends Frame_Decorator {[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * y value of bottom page margin[m
[32m+[m[32m   *[m
[32m+[m[32m   * @var float[m
[32m+[m[32m   */[m
[32m+[m[32m  protected $_bottom_page_margin;[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Flag indicating page is full.[m
[32m+[m[32m   *[m
[32m+[m[32m   * @var bool[m
[32m+[m[32m   */[m
[32m+[m[32m  protected $_page_full;[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Number of tables currently being reflowed[m
[32m+[m[32m   *[m
[32m+[m[32m   * @var int[m
[32m+[m[32m   */[m
[32m+[m[32m  protected $_in_table;[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * The pdf renderer[m
[32m+[m[32m   *[m
[32m+[m[32m   * @var Renderer[m
[32m+[m[32m   */[m
[32m+[m[32m  protected $_renderer;[m
[32m+[m
[32m+[m[32m  //........................................................................[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Class constructor[m
[32m+[m[32m   *[m
[32m+[m[32m   * @param Frame $frame the frame to decorate[m
[32m+[m[32m   */[m
[32m+[m[32m  function __construct(Frame $frame, DOMPDF $dompdf) {[m
[32m+[m[32m    parent::__construct($frame, $dompdf);[m
[32m+[m[32m    $this->_page_full = false;[m
[32m+[m[32m    $this->_in_table = 0;[m
[32m+[m[32m    $this->_bottom_page_margin = null;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Set the renderer used for this pdf[m
[32m+[m[32m   *[m
[32m+[m[32m   * @param Renderer $renderer the renderer to use[m
[32m+[m[32m   */[m
[32m+[m[32m  function set_renderer($renderer) {[m
[32m+[m[32m    $this->_renderer = $renderer;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Return the renderer used for this pdf[m
[32m+[m[32m   *[m
[32m+[m[32m   * @return Renderer[m
[32m+[m[32m   */[m
[32m+[m[32m  function get_renderer() {[m
[32m+[m[32m    return $this->_renderer;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Set the frame's containing block.  Overridden to set $this->_bottom_page_margin.[m
[32m+[m[32m   *[m
[32m+[m[32m   * @param float $x[m
[32m+[m[32m   * @param float $y[m
[32m+[m[32m   * @param float $w[m
[32m+[m[32m   * @param float $h[m
[32m+[m[32m   */[m
[32m+[m[32m  function set_containing_block($x = null, $y = null, $w = null, $h = null) {[m
[32m+[m[32m    parent::set_containing_block($x,$y,$w,$h);[m
[32m+[m[32m    $w = $this->get_containing_block("w");[m
[32m+[m[32m    if ( isset($h) )[m
[32m+[m[32m      $this->_bottom_page_margin = $h; // - $this->_frame->get_style()->length_in_pt($this->_frame->get_style()->margin_bottom, $w);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Returns true if the page is full and is no longer accepting frames.[m
[32m+[m[32m   *[m
[32m+[m[32m   * @return bool[m
[32m+[m[32m   */[m
[32m+[m[32m  function is_full() {[m
[32m+[m[32m    return $this->_page_full;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Start a new page by resetting the full flag.[m
[32m+[m[32m   */[m
[32m+[m[32m  function next_page() {[m
[32m+[m[32m    $this->_renderer->new_page();[m
[32m+[m[32m    $this->_page_full = false;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Indicate to the page that a table is currently being reflowed.[m
[32m+[m[32m   */[m
[32m+[m[32m  function table_reflow_start() {[m
[32m+[m[32m    $this->_in_table++;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Indicate to the page that table reflow is finished.[m
[32m+[m[32m   */[m
[32m+[m[32m  function table_reflow_end() {[m
[32m+[m[32m    $this->_in_table--;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Return whether we are currently in a nested table or not[m
[32m+[m[32m   *[m
[32m+[m[32m   * @return bool[m
[32m+[m[32m   */[m
[32m+[m[32m  function in_nested_table() {[m
[32m+[m[32m    return $this->_in_table > 1;[m
[32m+[m[32m  }[m
[32m+[m[41m  [m
[32m+[m[32m  /**[m
[32m+[m[32m   * Check if a forced page break is required before $frame.  This uses the[m
[32m+[m[32m   * frame's page_break_before property as well as the preceeding frame's[m
[32m+[m[32m   * page_break_after property.[m
[32m+[m[32m   *[m
[32m+[m[32m   * @link http://www.w3.org/TR/CSS21/page.html#forced[m
[32m+[m[32m   *[m
[32m+[m[32m   * @param Frame $frame the frame to check[m
[32m+[m[32m   * @return bool true if a page break occured[m
[32m+[m[32m   */[m
[32m+[m[32m  function check_forced_page_break(Frame $frame) {[m
[32m+[m[41m    	[m
[32m+[m[32m    // Skip check if page is already split[m
[32m+[m[32m    if ( $this->_page_full )[m
[32m+[m[32m      return;[m
[32m+[m
[32m+[m[32m    $block_types = array("block", "list-item", "table", "inline");[m
[32m+[m[32m    $page_breaks = array("always", "left", "right");[m
[32m+[m
[32m+[m[32m    $style = $frame->get_style();[m
[32m+[m
[32m+[m[32m    if ( !in_array($style->display, $block_types) )[m
[32m+[m[32m      return false;[m
[32m+[m
[32m+[m[32m    // Find the previous block-level sibling[m
[32m+[m[32m    $prev = $frame->get_prev_sibling();[m
[32m+[m
[32m+[m[32m    while ( $prev && !in_array($prev->get_style()->display, $block_types) )[m
[32m+[m[32m      $prev = $prev->get_prev_sibling();[m
[32m+[m
[32m+[m
[32m+[m[32m    if ( in_array($style->page_break_before, $page_breaks) ) {[m
[32m+[m
[32m+[m[32m      // Prevent cascading splits[m
[32m+[m[32m      $frame->split(null, true);[m
[32m+[m[32m      // We have to grab the style again here because split() resets[m
[32m+[m[32m      // $frame->style to the frame's orignal style.[m
[32m+[m[32m      $frame->get_style()->page_break_before = "auto";[m
[32m+[m[32m      $this->_page_full = true;[m
[32m+[m[41m			[m
[32m+[m[32m      return true;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    if ( $prev && in_array($prev->get_style()->page_break_after, $page_breaks) ) {[m
[32m+[m[32m      // Prevent cascading splits[m
[32m+[m[32m      $frame->split(null, true);[m
[32m+[m[32m      $prev->get_style()->page_break_after = "auto";[m
[32m+[m[32m      $this->_page_full = true;[m
[32m+[m[32m      return true;[m
[32m+[m[32m    }[m
[32m+[m[41m		[m
[32m+[m[32m    if( $prev && $prev->get_last_child() && $frame->get_node()->nodeName != "body" ) {[m
[32m+[m[32m      $prev_last_child = $prev->get_last_child();[m
[32m+[m[32m      if ( in_array($prev_last_child->get_style()->page_break_after, $page_breaks) ) {[m
[32m+[m[32m        $frame->split(null, true);[m
[32m+[m[32m        $prev_last_child->get_style()->page_break_after = "auto";[m
[32m+[m[32m        $this->_page_full = true;[m
[32m+[m[32m        return true;[m
[32m+[m[32m      }[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m
[32m+[m[32m    return false;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Determine if a page break is allowed before $frame[m
[32m+[m[32m   * http://www.w3.org/TR/CSS21/page.html#allowed-page-breaks[m
[32m+[m[32m   *[m[41m [m
[32m+[m[32m   * In the normal flow, page breaks can occur at the following places:[m
[32m+[m[32m   *[m[41m [m
[32m+[m[32m   *    1. In the vertical margin between block boxes. When a page[m
[32m+[m[32m   *    break occurs here, the used values of the relevant[m
[32m+[m[32m   *    'margin-top' and 'margin-bottom' properties are set to '0'.[m
[32m+[m[32m   *    2. Between line boxes inside a block box.[m
[32m+[m[32m   *[m
[32m+[m[32m   * These breaks are subject to the following rules:[m
[32m+[m[32m   *[m[41m [m
[32m+[m[32m   *   * Rule A: Breaking at (1) is allowed only if the[m
[32m+[m[32m   *     'page-break-after' and 'page-break-before' properties of[m
[32m+[m[32m   *     all the elements generating boxes that meet at this margin[m
[32m+[m[32m   *     allow it, which is when at least one of them has the value[m
[32m+[m[32m   *     'always', 'left', or 'right', or when all of them are[m
[32m+[m[32m   *     'auto'.[m
[32m+[m[32m   *[m
[32m+[m[32m   *   * Rule B: However, if all of them are 'auto' and the[m
[32m+[m[32m   *     nearest common ancestor of all the elements has a[m
[32m+[m[32m   *     'page-break-inside' value of 'avoid', then breaking here is[m
[32m+[m[32m   *     not allowed.[m
[32m+[m[32m   *[m
[32m+[m[32m   *   * Rule C: Breaking at (2) is allowed only if the number of[m
[32m+[m[32m   *     line boxes between the break and the start of the enclosing[m
[32m+[m[32m   *     block box is the value of 'orphans' or more, and the number[m
[32m+[m[32m   *     of line boxes between the break and the end of the box is[m
[32m+[m[32m   *     the value of 'widows' or more.[m
[32m+[m[32m   *[m
[32m+[m[32m   *   * Rule D: In addition, breaking at (2) is allowed only if[m
[32m+[m[32m   *     the 'page-break-inside' property is 'auto'.[m
[32m+[m[32m   *[m
[32m+[m[32m   * If the above doesn't provide enough break points to keep[m
[32m+[m[32m   * content from overflowing the page boxes, then rules B and D are[m
[32m+[m[32m   * dropped in order to find additional breakpoints.[m
[32m+[m[32m   *[m
[32m+[m[32m   * If that still does not lead to sufficient break points, rules A[m
[32m+[m[32m   * and C are dropped as well, to find still more break points.[m
[32m+[m[32m   *[m
[32m+[m[32m   * We will also allow breaks between table rows.  However, when[m
[32m+[m[32m   * splitting a table, the table headers should carry over to the[m
[32m+[m[32m   * next page (but they don't yet).[m
[32m+[m[32m   *[m[41m [m
[32m+[m[32m   * @param Frame $frame the frame to check[m
[32m+[m[32m   * @return bool true if a break is allowed, false otherwise[m
[32m+[m[32m   */[m
[32m+[m[32m  protected function _page_break_allowed(Frame $frame) {[m
[32m+[m
[32m+[m[32m    $block_types = array("block", "list-item", "table", "-dompdf-image");[m
[32m+[m[32m    dompdf_debug("page-break", "_page_break_allowed(" . $frame->get_node()->nodeName. ")");[m
[32m+[m[32m    $display = $frame->get_style()->display;[m
[32m+[m
[32m+[m[32m    // Block Frames (1):[m
[32m+[m[32m    if ( in_array($display, $block_types) ) {[m
[32m+[m
[32m+[m[32m      // Avoid breaks within table-cells[m
[32m+[m[32m      if ( $this->_in_table ) {[m
[32m+[m[32m        dompdf_debug("page-break", "In table: " . $this->_in_table);[m
[32m+[m[32m        return false;[m
[32m+[m[32m      }[m
[32m+[m
[32m+[m[32m      // Rules A & B[m
[32m+[m
[32m+[m[32m      if ( $frame->get_style()->page_break_before === "avoid" ) {[m
[32m+[m[32m        dompdf_debug("page-break", "before: avoid");[m
[32m+[m[32m        return false;[m
[32m+[m[32m      }[m
[32m+[m
[32m+[m[32m      // Find the preceeding block-level sibling[m
[32m+[m[32m      $prev = $frame->get_prev_sibling();[m
[32m+[m[32m      while ( $prev && !in_array($prev->get_style()->display, $block_types) )[m
[32m+[m[32m        $prev = $prev->get_prev_sibling();[m
[32m+[m
[32m+[m[32m      // Does the previous element allow a page break after?[m
[32m+[m[32m      if ( $prev && $prev->get_style()->page_break_after === "avoid" ) {[m
[32m+[m[32m        dompdf_debug("page-break", "after: avoid");[m
[32m+[m[32m        return false;[m
[32m+[m[32m      }[m
[32m+[m
[32m+[m[32m      // If both $prev & $frame have the same parent, check the parent's[m
[32m+[m[32m      // page_break_inside property.[m
[32m+[m[32m      $parent = $frame->get_parent();[m
[32m+[m[32m      if ( $prev && $parent && $parent->get_style()->page_break_inside === "avoid" ) {[m
[32m+[m[32m          dompdf_debug("page-break", "parent inside: avoid");[m
[32m+[m[32m        return false;[m
[32m+[m[32m      }[m
[32m+[m
[32m+[m[32m      // To prevent cascading page breaks when a top-level element has[m
[32m+[m[32m      // page-break-inside: avoid, ensure that at least one frame is[m
[32m+[m[32m      // on the page before splitting.[m
[32m+[m[32m      if ( $parent->get_node()->nodeName === "body" && !$prev ) {[m
[32m+[m[32m        // We are the body's first child[m
[32m+[m[32m          dompdf_debug("page-break", "Body's first child.");[m
[32m+[m[32m        return false;[m
[32m+[m[32m      }[m
[32m+[m
[32m+[m[32m      // If the frame is the first block-level frame, use the value from[m
[32m+[m[32m      // $frame's parent instead.[m
[32m+[m[32m      if ( !$prev && $parent )[m
[32m+[m[32m        return $this->_page_break_allowed( $parent );[m
[32m+[m
[32m+[m[32m      dompdf_debug("page-break", "block: break allowed");[m
[32m+[m[32m      return true;[m
[32m+[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    // Inline frames (2):[m
[32m+[m[32m    else if ( in_array($display, Style::$INLINE_TYPES) ) {[m
[32m+[m
[32m+[m[32m      // Avoid breaks within table-cells[m
[32m+[m[32m      if ( $this->_in_table ) {[m
[32m+[m[32m          dompdf_debug("page-break", "In table: " . $this->_in_table);[m
[32m+[m[32m        return false;[m
[32m+[m[32m      }[m
[32m+[m
[32m+[m[32m      // Rule C[m
[32m+[m[32m      $block_parent = $frame->find_block_parent();[m
[32m+[m[32m      if ( count($block_parent->get_lines() ) < $frame->get_style()->orphans ) {[m
[32m+[m[32m          dompdf_debug("page-break", "orphans");[m
[32m+[m[32m        return false;[m
[32m+[m[32m      }[m
[32m+[m
[32m+[m[32m      // FIXME: Checking widows is tricky without having laid out the[m
[32m+[m[32m      // remaining line boxes.  Just ignore it for now...[m
[32m+[m
[32m+[m[32m      // Rule D[m
[32m+[m[32m      $p = $block_parent;[m
[32m+[m[32m      while ($p) {[m
[32m+[m[32m        if ( $p->get_style()->page_break_inside === "avoid" ) {[m
[32m+[m[32m          dompdf_debug("page-break", "parent->inside: avoid");[m
[32m+[m[32m          return false;[m
[32m+[m[32m        }[m
[32m+[m[32m        $p = $p->find_block_parent();[m
[32m+[m[32m      }[m
[32m+[m
[32m+[m[32m      // To prevent cascading page breaks when a top-level element has[m
[32m+[m[32m      // page-break-inside: avoid, ensure that at least one frame with[m
[32m+[m[32m      // some content is on the page before splitting.[m
[32m+[m[32m      $prev = $frame->get_prev_sibling();[m
[32m+[m[32m      while ( $prev && ($prev->get_node()->nodeName === "#text" && trim($prev->get_node()->nodeValue) == "") )[m
[32m+[m[32m        $prev = $prev->get_prev_sibling();[m
[32m+[m
[32m+[m[32m      if ( $block_parent->get_node()->nodeName === "body" && !$prev ) {[m
[32m+[m[32m        // We are the body's first child[m
[32m+[m[32m          dompdf_debug("page-break", "Body's first child.");[m
[32m+[m[32m        return false;[m
[32m+[m[32m      }[m
[32m+[m
[32m+[m[32m      // Skip breaks on empty text nodes[m
[32m+[m[32m      if ( $frame->get_node()->nodeName === "#text" &&[m
[32m+[m[32m           $frame->get_node()->nodeValue == "" )[m
[32m+[m[32m        return false;[m
[32m+[m
[32m+[m[32m      dompdf_debug("page-break", "inline: break allowed");[m
[32m+[m[32m      return true;[m
[32m+[m
[32m+[m[32m    // Table-rows[m
[32m+[m[32m    } else if ( $display === "table-row" ) {[m
[32m+[m
[32m+[m[32m      // Simply check if the parent table's page_break_inside property is[m
[32m+[m[32m      // not 'avoid'[m
[32m+[m[32m      $p = Table_Frame_Decorator::find_parent_table($frame);[m
[32m+[m
[32m+[m[32m      while ($p) {[m
[32m+[m[32m        if ( $p->get_style()->page_break_inside === "avoid" ) {[m
[32m+[m[32m          dompdf_debug("page-break", "parent->inside: avoid");[m
[32m+[m[32m          return false;[m
[32m+[m[32m        }[m
[32m+[m[32m        $p = $p->find_block_parent();[m
[32m+[m[32m      }[m
[32m+[m
[32m+[m[32m      // Avoid breaking after the first row of a table[m
[32m+[m[32m      if ( $p && $p->get_first_child() === $frame) {[m
[32m+[m[32m         dompdf_debug("page-break", "table: first-row");[m
[32m+[m[32m        return false;[m
[32m+[m[32m      }[m
[32m+[m
[32m+[m[32m      // If this is a nested table, prevent the page from breaking[m
[32m+[m[32m      if ( $this->_in_table > 1 ) {[m
[32m+[m[32m        dompdf_debug("page-break", "table: nested table");[m
[32m+[m[32m        return false;[m
[32m+[m[32m      }[m
[32m+[m
[32m+[m[32m      dompdf_debug("page-break","table-row/row-groups: break allowed");[m
[32m+[m[32m      return true;[m
[32m+[m
[32m+[m[32m    } else if ( in_array($display, Table_Frame_Decorator::$ROW_GROUPS) ) {[m
[32m+[m
[32m+[m[32m      // Disallow breaks at row-groups: only split at row boundaries[m
[32m+[m[32m      return false;[m
[32m+[m
[32m+[m[32m    } else {[m
[32m+[m
[32m+[m[32m      dompdf_debug("page-break", "? " . $frame->get_style()->display . "");[m
[32m+[m[32m      return false;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Check if $frame will fit on the page.  If the frame does not fit,[m
[32m+[m[32m   * the frame tree is modified so that a page break occurs in the[m
[32m+[m[32m   * correct location.[m
[32m+[m[32m   *[m
[32m+[m[32m   * @param Frame $frame the frame to check[m
[32m+[m[32m   * @return Frame the frame following the page break[m
[32m+[m[32m   */[m
[32m+[m[32m  function check_page_break(Frame $frame) {[m
[32m+[m[32m    // Do not split if we have already or if the frame was already[m[41m [m
[32m+[m[32m    // pushed to the next page (prevents infinite loops)[m
[32m+[m[32m    if ( $this->_page_full || $frame->_already_pushed ) {[m
[32m+[m[32m      return false;[m
[32m+[m[32m    }[m
[32m+[m[41m    [m
[32m+[m[32m    // If the frame is absolute of fixed it shouldn't break[m
[32m+[m[32m    $p = $frame;[m
[32m+[m[32m    do {[m
[32m+[m[32m      if ( in_array($p->get_style()->position, array("fixed", "absolute")) )[m
[32m+[m[32m        return false;[m
[32m+[m[32m    } while ( $p = $p->get_parent() );[m
[32m+[m[41m    [m
[32m+[m[32m    $margin_height = $frame->get_margin_height();[m
[32m+[m[41m    [m
[32m+[m[32m    // FIXME If the row is taller than the page and[m[41m [m
[32m+[m[32m    // if it the first of the page, we don't break[m
[32m+[m[32m    if ( $frame->get_style()->display === "table-row" &&[m
[32m+[m[32m         !$frame->get_prev_sibling() &&[m[41m [m
[32m+[m[32m         $margin_height > $this->get_margin_height() )[m
[32m+[m[32m      return false;[m
[32m+[m
[32m+[m[32m    // Determine the frame's maximum y value[m
[32m+[m[32m    $max_y = $frame->get_position("y") + $margin_height;[m
[32m+[m
[32m+[m[32m    // If a split is to occur here, then the bottom margins & paddings of all[m
[32m+[m[32m    // parents of $frame must fit on the page as well:[m
[32m+[m[32m    $p = $frame->get_parent();[m
[32m+[m[32m    while ( $p ) {[m
[32m+[m[32m      $style = $p->get_style();[m
[32m+[m[32m      $max_y += $style->length_in_pt(array($style->margin_bottom,[m
[32m+[m[32m                                           $style->padding_bottom,[m
[32m+[m[32m                                           $style->border_bottom_width));[m
[32m+[m[32m      $p = $p->get_parent();[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m
[32m+[m[32m    // Check if $frame flows off the page[m
[32m+[m[32m    if ( $max_y <= $this->_bottom_page_margin )[m
[32m+[m[32m      // no: do nothing[m
[32m+[m[32m      return false;[m
[32m+[m
[32m+[m[32m    dompdf_debug("page-break", "check_page_break");[m
[32m+[m[32m    dompdf_debug("page-break", "in_table: " . $this->_in_table);[m
[32m+[m
[32m+[m[32m    // yes: determine page break location[m
[32m+[m[32m    $iter = $frame;[m
[32m+[m[32m    $flg = false;[m
[32m+[m
[32m+[m[32m    $in_table = $this->_in_table;[m
[32m+[m
[32m+[m[32m    dompdf_debug("page-break","Starting search");[m
[32m+[m[32m    while ( $iter ) {[m
[32m+[m[32m//       echo "\nbacktrack: " .$iter->get_node()->nodeName ." ".spl_object_hash($iter->get_node()). "";[m
[32m+[m[32m      if ( $iter === $this ) {[m
[32m+[m[32m         dompdf_debug("page-break", "reached root.");[m
[32m+[m[32m        // We've reached the root in our search.  Just split at $frame.[m
[32m+[m[32m        break;[m
[32m+[m[32m      }[m
[32m+[m
[32m+[m[32m      if ( $this->_page_break_allowed($iter) ) {[m
[32m+[m[32m        dompdf_debug("page-break","break allowed, splitting.");[m
[32m+[m[32m        $iter->split(null, true);[m
[32m+[m[32m        $this->_page_full = true;[m
[32m+[m[32m        $this->_in_table = $in_table;[m
[32m+[m[32m        $frame->_already_pushed = true;[m
[32m+[m[32m        return true;[m
[32m+[m[32m      }[m
[32m+[m
[32m+[m[32m      if ( !$flg && $next = $iter->get_last_child() ) {[m
[32m+[m[32m         dompdf_debug("page-break", "following last child.");[m
[32m+[m
[32m+[m[32m        if ( in_array($next->get_style()->display, Style::$TABLE_TYPES) )[m
[32m+[m[32m          $this->_in_table++;[m
[32m+[m
[32m+[m[32m        $iter = $next;[m
[32m+[m[32m        continue;[m
[32m+[m[32m      }[m
[32m+[m
[32m+[m[32m      if ( $next = $iter->get_prev_sibling() ) {[m
[32m+[m[32m         dompdf_debug("page-break", "following prev sibling.");[m
[32m+[m
[32m+[m[32m        if ( in_array($next->get_style()->display, Style::$TABLE_TYPES) &&[m
[32m+[m[32m             !in_array($iter->get_style()->display, Style::$TABLE_TYPES) )[m
[32m+[m[32m          $this->_in_table++;[m
[32m+[m
[32m+[m[32m        else if ( !in_array($next->get_style()->display, Style::$TABLE_TYPES) &&[m
[32m+[m[32m                  in_array($iter->get_style()->display, Style::$TABLE_TYPES) )[m
[32m+[m[32m          $this->_in_table--;[m
[32m+[m
[32m+[m[32m        $iter = $next;[m
[32m+[m[32m        $flg = false;[m
[32m+[m[32m        continue;[m
[32m+[m[32m      }[m
[32m+[m
[32m+[m[32m      if ( $next = $iter->get_parent() ) {[m
[32m+[m[32m         dompdf_debug("page-break", "following parent.");[m
[32m+[m
[32m+[m[32m        if ( in_array($iter->get_style()->display, Style::$TABLE_TYPES) )[m
[32m+[m[32m          $this->_in_table--;[m
[32m+[m
[32m+[m[32m        $iter = $next;[m
[32m+[m[32m        $flg = true;[m
[32m+[m[32m        continue;[m
[32m+[m[32m      }[m
[32m+[m
[32m+[m[32m      break;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    $this->_in_table = $in_table;[m
[32m+[m
[32m+[m[32m    // No valid page break found.  Just break at $frame.[m
[32m+[m[32m    dompdf_debug("page-break", "no valid break found, just splitting.");[m
[32m+[m
[32m+[m[32m    // If we are in a table, backtrack to the nearest top-level table row[m
[32m+[m[32m    if ( $this->_in_table ) {[m
[32m+[m[32m      $num_tables = $this->_in_table - 1;[m
[32m+[m
[32m+[m[32m      $iter = $frame;[m
[32m+[m[32m      while ( $iter && $num_tables && $iter->get_style->display !== "table" ) {[m
[32m+[m[32m        $iter = $iter->get_parent();[m
[32m+[m[32m        $num_tables--;[m
[32m+[m[32m      }[m
[32m+[m
[32m+[m[32m      $iter = $frame;[m
[32m+[m[32m      while ($iter && $iter->get_style()->display !== "table-row" )[m
[32m+[m[32m        $iter = $iter->get_parent();[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    $frame->split(null, true);[m
[32m+[m[32m    $this->_page_full = true;[m
[32m+[m[32m    $frame->_already_pushed = true;[m
[32m+[m[32m    return true;[m
[32m+[m[41m    [m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  //........................................................................[m
[32m+[m
[32m+[m[32m  function split($frame = null, $force_pagebreak = false) {[m
[32m+[m[32m    // Do nothing[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m}[m
[1mdiff --git a/application/third_party/dompdf/include/page_frame_reflower.cls.php b/application/third_party/dompdf/include/page_frame_reflower.cls.php[m
[1mnew file mode 100644[m
[1mindex 0000000..249b343[m
[1m--- /dev/null[m
[1m+++ b/application/third_party/dompdf/include/page_frame_reflower.cls.php[m
[36m@@ -0,0 +1,245 @@[m
[32m+[m[32m<?php[m
[32m+[m[32m/**[m
[32m+[m[32m * DOMPDF - PHP5 HTML to PDF renderer[m
[32m+[m[32m *[m
[32m+[m[32m * File: $RCSfile: page_frame_reflower.cls.php,v $[m
[32m+[m[32m * Created on: 2004-06-16[m
[32m+[m[32m *[m
[32m+[m[32m * Copyright (c) 2004 - Benj Carson <benjcarson@digitaljunkies.ca>[m
[32m+[m[32m *[m
[32m+[m[32m * This library is free software; you can redistribute it and/or[m
[32m+[m[32m * modify it under the terms of the GNU Lesser General Public[m
[32m+[m[32m * License as published by the Free Software Foundation; either[m
[32m+[m[32m * version 2.1 of the License, or (at your option) any later version.[m
[32m+[m[32m *[m
[32m+[m[32m * This library is distributed in the hope that it will be useful,[m
[32m+[m[32m * but WITHOUT ANY WARRANTY; without even the implied warranty of[m
[32m+[m[32m * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU[m
[32m+[m[32m * Lesser General Public License for more details.[m
[32m+[m[32m *[m
[32m+[m[32m * You should have received a copy of the GNU Lesser General Public License[m
[32m+[m[32m * along with this library in the file LICENSE.LGPL; if not, write to the[m
[32m+[m[32m * Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA[m
[32m+[m[32m * 02111-1307 USA[m
[32m+[m[32m *[m
[32m+[m[32m * Alternatively, you may distribute this software under the terms of the[m
[32m+[m[32m * PHP License, version 3.0 or later.  A copy of this license should have[m
[32m+[m[32m * been distributed with this file in the file LICENSE.PHP .  If this is not[m
[32m+[m[32m * the case, you can obtain a copy at http://www.php.net/license/3_0.txt.[m
[32m+[m[32m *[m
[32m+[m[32m * The latest version of DOMPDF might be available at:[m
[32m+[m[32m * http://www.dompdf.com/[m
[32m+[m[32m *[m
[32m+[m[32m * @link http://www.dompdf.com/[m
[32m+[m[32m * @copyright 2004 Benj Carson[m
[32m+[m[32m * @author Benj Carson <benjcarson@digitaljunkies.ca>[m
[32m+[m[32m * @package dompdf[m
[32m+[m
[32m+[m[32m */[m
[32m+[m
[32m+[m[32m/* $Id: page_frame_reflower.cls.php 357 2011-01-30 20:56:46Z fabien.menager $ */[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Reflows pages[m
[32m+[m[32m *[m
[32m+[m[32m * @access private[m
[32m+[m[32m * @package dompdf[m
[32m+[m[32m */[m
[32m+[m[32mclass Page_Frame_Reflower extends Frame_Reflower {[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Cache of the callbacks array[m
[32m+[m[32m   *[m[41m [m
[32m+[m[32m   * @var array[m
[32m+[m[32m   */[m
[32m+[m[32m  private $_callbacks;[m
[32m+[m[41m  [m
[32m+[m[32m  /**[m
[32m+[m[32m   * Cache of the canvas[m
[32m+[m[32m   *[m
[32m+[m[32m   * @var Canvas[m
[32m+[m[32m   */[m
[32m+[m[32m  private $_canvas;[m
[32m+[m[41m  [m
[32m+[m[32m  /**[m
[32m+[m[32m   * This page's floating frames[m
[32m+[m[32m   *[m[41m [m
[32m+[m[32m   * @var array[m
[32m+[m[32m   */[m
[32m+[m[32m  private $_floating_frames;[m
[32m+[m[41m  [m
[32m+[m[32m  /**[m
[32m+[m[32m   * true if the page has floating frales[m
[32m+[m[32m   * Used to improve performances as it will[m
[32m+[m[32m   * be accesses everytime[m
[32m+[m[32m   * @var bool[m
[32m+[m[32m   */[m
[32m+[m[32m  private $_has_floating_frames;[m
[32m+[m[41m  [m
[32m+[m[32m  /**[m
[32m+[m[32m   * The stacking context, containing all z-indexed frames[m
[32m+[m[32m   * @var array[m
[32m+[m[32m   */[m
[32m+[m[32m  private $_stacking_context = array();[m
[32m+[m
[32m+[m[32m  function __construct(Page_Frame_Decorator $frame) { parent::__construct($frame); }[m
[32m+[m[41m  [m
[32m+[m[32m  /**[m
[32m+[m[32m   * @return array[m
[32m+[m[32m   */[m
[32m+[m[32m  function get_floating_frames() { return $this->_floating_frames; }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * @param $frame Frame[m
[32m+[m[32m   * @return void[m
[32m+[m[32m   */[m
[32m+[m[32m  function add_frame_to_stacking_context(Frame $frame, $z_index) {[m
[32m+[m[32m    $this->_stacking_context[$z_index][] = $frame;[m
[32m+[m[32m  }[m
[32m+[m[41m  [m
[32m+[m[32m  /**[m
[32m+[m[32m   * Add a floating frame[m
[32m+[m[32m   *[m[41m [m
[32m+[m[32m   * @param $child Frame[m
[32m+[m[32m   */[m
[32m+[m[32m  function add_floating_frame(Frame $frame) {[m
[32m+[m[32m    $this->_floating_frames[] = $frame;[m
[32m+[m[32m    $this->_has_floating_frames = true;[m
[32m+[m[32m  }[m
[32m+[m[41m  [m
[32m+[m[32m  /**[m
[32m+[m[32m   * Tells if the page has floating frames[m
[32m+[m[32m   *[m[41m [m
[32m+[m[32m   * @return bool[m[41m [m
[32m+[m[32m   */[m
[32m+[m[32m  function has_floating_frames() {[m
[32m+[m[32m    return $this->_has_floating_frames;[m
[32m+[m[32m  }[m
[32m+[m[41m  [m
[32m+[m[32m  //........................................................................[m
[32m+[m
[32m+[m[32m  function reflow(Frame_Decorator $block = null) {[m
[32m+[m[32m    $style = $this->_frame->get_style();[m
[32m+[m[41m    [m
[32m+[m[32m    // Paged layout:[m
[32m+[m[32m    // http://www.w3.org/TR/CSS21/page.html[m
[32m+[m
[32m+[m[32m    // Pages are only concerned with margins[m
[32m+[m[32m    $cb = $this->_frame->get_containing_block();[m
[32m+[m[32m    $left   = $style->length_in_pt($style->margin_left,   $cb["w"]);[m
[32m+[m[32m    $right  = $style->length_in_pt($style->margin_right,  $cb["w"]);[m
[32m+[m[32m    $top    = $style->length_in_pt($style->margin_top,    $cb["h"]);[m
[32m+[m[32m    $bottom = $style->length_in_pt($style->margin_bottom, $cb["h"]);[m
[32m+[m[41m    [m
[32m+[m[32m    $content_x = $cb["x"] + $left;[m
[32m+[m[32m    $content_y = $cb["y"] + $top;[m
[32m+[m[32m    $content_width = $cb["w"] - $left - $right;[m
[32m+[m[32m    $content_height = $cb["h"] - $top - $bottom;[m
[32m+[m[41m    [m
[32m+[m[32m    $fixed_children = array();[m
[32m+[m[41m    [m
[32m+[m[32m    $prev_child = null;[m
[32m+[m[32m    $child = $this->_frame->get_first_child();[m
[32m+[m[32m    $current_page = 0;[m
[32m+[m[41m		[m
[32m+[m[32m    while ($child) {[m
[32m+[m[32m      // Only if it's the first page, we save the nodes with a fixed position[m
[32m+[m[32m      if ($current_page == 0) {[m
[32m+[m[32m        $children = $child->get_children();[m
[32m+[m[32m        foreach ($children as $onechild) {[m
[32m+[m[32m          if ($onechild->get_style()->position === "fixed") {[m
[32m+[m[32m            $fixed_children[] = $onechild->deep_copy();[m
[32m+[m[32m          }[m
[32m+[m[32m        }[m
[32m+[m[32m        $fixed_children = array_reverse($fixed_children);[m
[32m+[m[32m      }[m
[32m+[m[41m      [m
[32m+[m[32m      $child->set_containing_block($content_x, $content_y, $content_width, $content_height);[m
[32m+[m[41m      [m
[32m+[m[32m      // Check for begin reflow callback[m
[32m+[m[32m      $this->_check_callbacks("begin_page_reflow", $child);[m
[32m+[m[41m    [m
[32m+[m[32m      //Insert a copy of each node which have a fixed position[m
[32m+[m[32m      if ($current_page >= 1) {[m
[32m+[m[32m        foreach ($fixed_children as $fixed_child) {[m
[32m+[m[32m          $child->insert_child_before($fixed_child->deep_copy(), $child->get_first_child());[m
[32m+[m[32m        }[m
[32m+[m[32m      }[m
[32m+[m[41m      [m
[32m+[m[32m      $child->reflow();[m
[32m+[m[32m      $next_child = $child->get_next_sibling();[m
[32m+[m[41m      [m
[32m+[m[32m      // Check for begin render callback[m
[32m+[m[32m      $this->_check_callbacks("begin_page_render", $child);[m
[32m+[m[41m      [m
[32m+[m[32m      $renderer = $this->_frame->get_renderer();[m
[32m+[m
[32m+[m[32m      // Render the page[m
[32m+[m[32m      $renderer->render($child);[m
[32m+[m[41m      [m
[32m+[m[32m      // http://www.w3.org/TR/CSS21/visuren.html#z-index[m
[32m+[m[32m      ksort($this->_stacking_context);[m
[32m+[m[41m      [m
[32m+[m[32m      foreach( $this->_stacking_context as $_z_index => $_frames ) {[m
[32m+[m[32m        foreach ( $_frames as $_frame ) {[m
[32m+[m[32m          $renderer->render($_frame);[m
[32m+[m[32m        }[m
[32m+[m[32m      }[m
[32m+[m[41m      [m
[32m+[m[32m      $this->_stacking_context = array();[m
[32m+[m[41m      [m
[32m+[m[32m      // Check for end render callback[m
[32m+[m[32m      $this->_check_callbacks("end_page_render", $child);[m
[32m+[m[41m      [m
[32m+[m[32m      if ( $next_child ) {[m
[32m+[m[32m        $this->_frame->next_page();[m
[32m+[m[32m      }[m
[32m+[m
[32m+[m[32m      // Wait to dispose of all frames on the previous page[m
[32m+[m[32m      // so callback will have access to them[m
[32m+[m[32m      if ( $prev_child ) {[m
[32m+[m[32m        $prev_child->dispose(true);[m
[32m+[m[32m      }[m
[32m+[m[32m      $prev_child = $child;[m
[32m+[m[32m      $child = $next_child;[m
[32m+[m[32m      $current_page++;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    // Dispose of previous page if it still exists[m
[32m+[m[32m    if ( $prev_child ) {[m
[32m+[m[32m      $prev_child->dispose(true);[m
[32m+[m[32m    }[m
[32m+[m[32m  }[m[41m  [m
[32m+[m[41m  [m
[32m+[m[32m  //........................................................................[m
[32m+[m[41m  [m
[32m+[m[32m  /**[m
[32m+[m[32m   * Check for callbacks that need to be performed when a given event[m
[32m+[m[32m   * gets triggered on a page[m
[32m+[m[32m   *[m
[32m+[m[32m   * @param string $event the type of event[m
[32m+[m[32m   * @param Frame $frame the frame that event is triggered on[m
[32m+[m[32m   */[m
[32m+[m[32m  protected function _check_callbacks($event, $frame) {[m
[32m+[m[32m    if (!isset($this->_callbacks)) {[m
[32m+[m[32m      $dompdf = $this->_frame->get_dompdf();[m
[32m+[m[32m      $this->_callbacks = $dompdf->get_callbacks();[m
[32m+[m[32m      $this->_canvas = $dompdf->get_canvas();[m
[32m+[m[32m    }[m
[32m+[m[41m    [m
[32m+[m[32m    if (is_array($this->_callbacks) && isset($this->_callbacks[$event])) {[m
[32m+[m[32m      $info = array(0 => $this->_canvas, "canvas" => $this->_canvas,[m
[32m+[m[32m                    1 => $frame, "frame" => $frame);[m
[32m+[m[32m      $fs = $this->_callbacks[$event];[m
[32m+[m[32m      foreach ($fs as $f) {[m
[32m+[m[32m        if (is_callable($f)) {[m
[32m+[m[32m          if (is_array($f)) {[m
[32m+[m[32m            $f[0]->$f[1]($info);[m
[32m+[m[32m          } else {[m
[32m+[m[32m            $f($info);[m
[32m+[m[32m          }[m
[32m+[m[32m        }[m
[32m+[m[32m      }[m
[32m+[m[32m    }[m
[32m+[m[32m  }[m[41m  [m
[32m+[m[32m}[m
[1mdiff --git a/application/third_party/dompdf/include/pdflib_adapter.cls.php b/application/third_party/dompdf/include/pdflib_adapter.cls.php[m
[1mnew file mode 100644[m
[1mindex 0000000..859b6be[m
[1m--- /dev/null[m
[1m+++ b/application/third_party/dompdf/include/pdflib_adapter.cls.php[m
[36m@@ -0,0 +1,1053 @@[m
[32m+[m[32m<?php[m
[32m+[m[32m/**[m
[32m+[m[32m * DOMPDF - PHP5 HTML to PDF renderer[m
[32m+[m[32m *[m
[32m+[m[32m * File: $RCSfile: pdflib_adapter.cls.php,v $[m
[32m+[m[32m * Created on: 2005-02-28[m
[32m+[m[32m *[m
[32m+[m[32m * Copyright (c) 2004 - Benj Carson <benjcarson@digitaljunkies.ca>[m
[32m+[m[32m *[m
[32m+[m[32m * This library is free software; you can redistribute it and/or[m
[32m+[m[32m * modify it under the terms of the GNU Lesser General Public[m
[32m+[m[32m * License as published by the Free Software Foundation; either[m
[32m+[m[32m * version 2.1 of the License, or (at your option) any later version.[m
[32m+[m[32m *[m
[32m+[m[32m * This library is distributed in the hope that it will be useful,[m
[32m+[m[32m * but WITHOUT ANY WARRANTY; without even the implied warranty of[m
[32m+[m[32m * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU[m
[32m+[m[32m * Lesser General Public License for more details.[m
[32m+[m[32m *[m
[32m+[m[32m * You should have received a copy of the GNU Lesser General Public License[m
[32m+[m[32m * along with this library in the file LICENSE.LGPL; if not, write to the[m
[32m+[m[32m * Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA[m
[32m+[m[32m * 02111-1307 USA[m
[32m+[m[32m *[m
[32m+[m[32m * Alternatively, you may distribute this software under the terms of the[m
[32m+[m[32m * PHP License, version 3.0 or later.  A copy of this license should have[m
[32m+[m[32m * been distributed with this file in the file LICENSE.PHP .  If this is not[m
[32m+[m[32m * the case, you can obtain a copy at http://www.php.net/license/3_0.txt.[m
[32m+[m[32m *[m
[32m+[m[32m * The latest version of DOMPDF might be available at:[m
[32m+[m[32m * http://www.dompdf.com/[m
[32m+[m[32m *[m
[32m+[m[32m * @link http://www.dompdf.com/[m
[32m+[m[32m * @copyright 2004 Benj Carson[m
[32m+[m[32m * @author Benj Carson <benjcarson@digitaljunkies.ca>[m
[32m+[m[32m * @contributor Helmut Tischer <htischer@weihenstephan.org>[m
[32m+[m[32m * @package dompdf[m
[32m+[m[32m *[m
[32m+[m[32m * Changes[m
[32m+[m[32m * @contributor Helmut Tischer <htischer@weihenstephan.org>[m
[32m+[m[32m * @version 0.5.1.htischer.20090507[m
[32m+[m[32m * - Clarify temp file name, optional debug output for temp file tracking[m
[32m+[m[32m */[m
[32m+[m
[32m+[m[32m/* $Id: pdflib_adapter.cls.php 355 2011-01-27 07:44:54Z fabien.menager $ */[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * PDF rendering interface[m
[32m+[m[32m *[m
[32m+[m[32m * PDFLib_Adapter provides a simple, stateless interface to the one[m
[32m+[m[32m * provided by PDFLib.[m
[32m+[m[32m *[m
[32m+[m[32m * Unless otherwise mentioned, all dimensions are in points (1/72 in).[m
[32m+[m[32m * The coordinate origin is in the top left corner and y values[m
[32m+[m[32m * increase downwards.[m
[32m+[m[32m *[m
[32m+[m[32m * See {@link http://www.pdflib.com/} for more complete documentation[m
[32m+[m[32m * on the underlying PDFlib functions.[m
[32m+[m[32m *[m
[32m+[m[32m * @package dompdf[m
[32m+[m[32m */[m
[32m+[m[32mclass PDFLib_Adapter implements Canvas {[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Dimensions of paper sizes in points[m
[32m+[m[32m   *[m
[32m+[m[32m   * @var array;[m
[32m+[m[32m   */[m
[32m+[m[32m  static public $PAPER_SIZES = array(); // Set to[m
[32m+[m[32m                                        // CPDF_Adapter::$PAPER_SIZES below.[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Whether to create PDFs in memory or on disk[m
[32m+[m[32m   *[m
[32m+[m[32m   * @var bool[m
[32m+[m[32m   */[m
[32m+[m[32m  static $IN_MEMORY = true;[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Instance of PDFLib class[m
[32m+[m[32m   *[m
[32m+[m[32m   * @var PDFlib[m
[32m+[m[32m   */[m
[32m+[m[32m  private $_pdf;[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Name of temporary file used for PDFs created on disk[m
[32m+[m[32m   *[m
[32m+[m[32m   * @var string[m
[32m+[m[32m   */[m
[32m+[m[32m  private $_file;[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * PDF width, in points[m
[32m+[m[32m   *[m
[32m+[m[32m   * @var float[m
[32m+[m[32m   */[m
[32m+[m[32m  private $_width;[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * PDF height, in points[m
[32m+[m[32m   *[m
[32m+[m[32m   * @var height[m
[32m+[m[32m   */[m
[32m+[m[32m  private $_height;[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Last fill colour used[m
[32m+[m[32m   *[m
[32m+[m[32m   * @var array[m
[32m+[m[32m   */[m
[32m+[m[32m  private $_last_fill_color;[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Last stroke colour used[m
[32m+[m[32m   *[m
[32m+[m[32m   * @var array[m
[32m+[m[32m   */[m
[32m+[m[32m  private $_last_stroke_color;[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Cache of image handles[m
[32m+[m[32m   *[m
[32m+[m[32m   * @var array[m
[32m+[m[32m   */[m
[32m+[m[32m  private $_imgs;[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Cache of font handles[m
[32m+[m[32m   *[m
[32m+[m[32m   * @var array[m
[32m+[m[32m   */[m
[32m+[m[32m  private $_fonts;[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * List of objects (templates) to add to multiple pages[m
[32m+[m[32m   *[m
[32m+[m[32m   * @var array[m
[32m+[m[32m   */[m
[32m+[m[32m  private $_objs;[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Current page number[m
[32m+[m[32m   *[m
[32m+[m[32m   * @var int[m
[32m+[m[32m   */[m
[32m+[m[32m  private $_page_number;[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Total number of pages[m
[32m+[m[32m   *[m
[32m+[m[32m   * @var int[m
[32m+[m[32m   */[m
[32m+[m[32m  private $_page_count;[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Text to display on every page[m
[32m+[m[32m   *[m
[32m+[m[32m   * @var array[m
[32m+[m[32m   */[m
[32m+[m[32m  private $_page_text;[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Array of pages for accesing after rendering is initially complete[m
[32m+[m[32m   *[m
[32m+[m[32m   * @var array[m
[32m+[m[32m   */[m
[32m+[m[32m  private $_pages;[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Class constructor[m
[32m+[m[32m   *[m
[32m+[m[32m   * @param mixed $paper The size of paper to use either a string (see {@link CPDF_Adapter::$PAPER_SIZES}) or[m
[32m+[m[32m   *                     an array(xmin,ymin,xmax,ymax)[m
[32m+[m[32m   * @param string $orientation The orientation of the document (either 'landscape' or 'portrait')[m
[32m+[m[32m   */[m
[32m+[m[32m  function __construct($paper = "letter", $orientation = "portrait") {[m
[32m+[m[32m    if ( is_array($paper) )[m
[32m+[m[32m      $size = $paper;[m
[32m+[m[32m    else if ( isset(self::$PAPER_SIZES[mb_strtolower($paper)]) )[m
[32m+[m[32m      $size = self::$PAPER_SIZES[mb_strtolower($paper)];[m
[32m+[m[32m    else[m
[32m+[m[32m      $size = self::$PAPER_SIZES["letter"];[m
[32m+[m
[32m+[m[32m    if ( mb_strtolower($orientation) === "landscape" ) {[m
[32m+[m[32m      list($size[2], $size[3]) = array($size[3], $size[2]);[m
[32m+[m[32m    }[m
[32m+[m[41m    [m
[32m+[m[32m    $this->_width = $size[2] - $size[0];[m
[32m+[m[32m    $this->_height= $size[3] - $size[1];[m
[32m+[m
[32m+[m[32m    $this->_pdf = new PDFLib();[m
[32m+[m
[32m+[m[32m    if ( defined("DOMPDF_PDFLIB_LICENSE") )[m
[32m+[m[32m      $this->_pdf->set_parameter( "license", DOMPDF_PDFLIB_LICENSE);[m
[32m+[m
[32m+[m[32m    $this->_pdf->set_parameter("textformat", "utf8");[m
[32m+[m[32m    $this->_pdf->set_parameter("fontwarning", "false");[m
[32m+[m
[32m+[m[32m    $this->_pdf->set_info("Creator", "DOMPDF");[m
[32m+[m
[32m+[m[32m    // Silence pedantic warnings about missing TZ settings[m
[32m+[m[32m    $tz = @date_default_timezone_get();[m
[32m+[m[32m    date_default_timezone_set("UTC");[m
[32m+[m[32m    $this->_pdf->set_info("Date", date("Y-m-d"));[m
[32m+[m[32m    date_default_timezone_set($tz);[m
[32m+[m
[32m+[m[32m    if ( self::$IN_MEMORY )[m
[32m+[m[32m      $this->_pdf->begin_document("","");[m
[32m+[m[32m    else {[m
[32m+[m[32m      $this->_file = tempnam(DOMPDF_TEMP_DIR, "libdompdf_pdf_").'.pdf';[m
[32m+[m[32m      $this->_pdf->begin_document($this->_file,"");[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    $this->_pdf->begin_page_ext($this->_width, $this->_height, "");[m
[32m+[m
[32m+[m[32m    $this->_page_number = $this->_page_count = 1;[m
[32m+[m[32m    $this->_page_text = array();[m
[32m+[m
[32m+[m[32m    $this->_imgs = array();[m
[32m+[m[32m    $this->_fonts = array();[m
[32m+[m[32m    $this->_objs = array();[m
[32m+[m
[32m+[m[32m    // Set up font paths[m
[32m+[m[32m    $families = Font_Metrics::get_font_families();[m
[32m+[m[32m    foreach ($families as $family => $files) {[m
[32m+[m[32m      foreach ($files as $style => $file) {[m
[32m+[m[32m        $face = basename($file);[m
[32m+[m
[32m+[m[32m        // Prefer ttfs to afms[m
[32m+[m[32m        if ( file_exists("$file.ttf") ) {[m
[32m+[m[32m          $outline = "$file.ttf";[m
[32m+[m[32m          $afm = null;[m
[32m+[m
[32m+[m[32m        } else if ( file_exists("$file.TTF") ) {[m
[32m+[m[32m          $outline = "$file.TTF";[m
[32m+[m[32m          $afm = null;[m
[32m+[m
[32m+[m[32m        } else if ( file_exists("$file.pfb") ) {[m
[32m+[m[32m          $outline = "$file.pfb";[m
[32m+[m
[32m+[m[32m          if ( file_exists("$file.afm") )[m
[32m+[m[32m            $afm = "$file.afm";[m
[32m+[m
[32m+[m[32m        } else if ( file_exists("$file.PFB") ) {[m
[32m+[m[32m          $outline = "$file.PFB";[m
[32m+[m[32m          if ( file_exists("$file.AFM") )[m
[32m+[m[32m            $afm = "$file.AFM";[m
[32m+[m[32m        } else[m
[32m+[m[32m          continue;[m
[32m+[m
[32m+[m[32m        $this->_pdf->set_parameter("FontOutline", "\{$face\}=\{$outline\}");[m
[32m+[m[32m        if ( !is_null($afm) )[m
[32m+[m[32m          $this->_pdf->set_parameter("FontAFM", "\{$face\}=\{$afm\}");[m
[32m+[m[32m      }[m
[32m+[m[32m    }[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Close the pdf[m
[32m+[m[32m   */[m
[32m+[m[32m  protected function _close() {[m
[32m+[m[32m    $this->_place_objects();[m
[32m+[m
[32m+[m[32m    // Close all pages[m
[32m+[m[32m    $this->_pdf->suspend_page("");[m
[32m+[m[32m    for ($p = 1; $p <= $this->_page_count; $p++) {[m
[32m+[m[32m      $this->_pdf->resume_page("pagenumber=$p");[m
[32m+[m[32m      $this->_pdf->end_page_ext("");[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    $this->_pdf->end_document("");[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Returns the PDFLib instance[m
[32m+[m[32m   *[m
[32m+[m[32m   * @return PDFLib[m
[32m+[m[32m   */[m
[32m+[m[32m  function get_pdflib() { return $this->_pdf; }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Add meta information to the PDF[m
[32m+[m[32m   *[m
[32m+[m[32m   * @param string $label  label of the value (Creator, Producter, etc.)[m
[32m+[m[32m   * @param string $value  the text to set[m
[32m+[m[32m   */[m
[32m+[m[32m  function add_info($label, $value) {[m
[32m+[m[32m    $this->_pdf->set_info($label, $value);[m
[32m+[m[32m  }[m
[32m+[m[41m  [m
[32m+[m[32m  /**[m
[32m+[m[32m   * Opens a new 'object' (template in PDFLib-speak)[m
[32m+[m[32m   *[m
[32m+[m[32m   * While an object is open, all drawing actions are recorded to the[m
[32m+[m[32m   * object instead of being drawn on the current page.  Objects can[m
[32m+[m[32m   * be added later to a specific page or to several pages.[m
[32m+[m[32m   *[m
[32m+[m[32m   * The return value is an integer ID for the new object.[m
[32m+[m[32m   *[m
[32m+[m[32m   * @see PDFLib_Adapter::close_object()[m
[32m+[m[32m   * @see PDFLib_Adapter::add_object()[m
[32m+[m[32m   *[m
[32m+[m[32m   * @return int[m
[32m+[m[32m   */[m
[32m+[m[32m  function open_object() {[m
[32m+[m[32m    $this->_pdf->suspend_page("");[m
[32m+[m[32m    $ret = $this->_pdf->begin_template($this->_width, $this->_height);[m
[32m+[m[32m    $this->_pdf->save();[m
[32m+[m[32m    $this->_objs[$ret] = array("start_page" => $this->_page_number);[m
[32m+[m[32m    return $ret;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Reopen an existing object (NOT IMPLEMENTED)[m
[32m+[m[32m   *[m
[32m+[m[32m   * PDFLib does not seem to support reopening templates.[m
[32m+[m[32m   *[m
[32m+[m[32m   * @param int $object the ID of a previously opened object[m
[32m+[m[32m   */[m
[32m+[m[32m  function reopen_object($object) {[m
[32m+[m[32m    throw new DOMPDF_Exception("PDFLib does not support reopening objects.");[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Close the current template[m
[32m+[m[32m   *[m
[32m+[m[32m   * @see PDFLib_Adapter::open_object()[m
[32m+[m[32m   */[m
[32m+[m[32m  function close_object() {[m
[32m+[m[32m    $this->_pdf->restore();[m
[32m+[m[32m    $this->_pdf->end_template();[m
[32m+[m[32m    $this->_pdf->resume_page("pagenumber=".$this->_page_number);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Adds the specified object to the document[m
[32m+[m[32m   *[m
[32m+[m[32m   * $where can be one of:[m
[32m+[m[32m   * - 'add' add to current page only[m
[32m+[m[32m   * - 'all' add to every page from the current one onwards[m
[32m+[m[32m   * - 'odd' add to all odd numbered pages from now on[m
[32m+[m[32m   * - 'even' add to all even numbered pages from now on[m
[32m+[m[32m   * - 'next' add the object to the next page only[m
[32m+[m[32m   * - 'nextodd' add to all odd numbered pages from the next one[m
[32m+[m[32m   * - 'nexteven' add to all even numbered pages from the next one[m
[32m+[m[32m   *[m
[32m+[m[32m   * @param int $object the object handle returned by open_object()[m
[32m+[m[32m   * @param string $where[m
[32m+[m[32m   */[m
[32m+[m[32m  function add_object($object, $where = 'all') {[m
[32m+[m
[32m+[m[32m    if ( mb_strpos($where, "next") !== false ) {[m
[32m+[m[32m      $this->_objs[$object]["start_page"]++;[m
[32m+[m[32m      $where = str_replace("next", "", $where);[m
[32m+[m[32m      if ( $where == "" )[m
[32m+[m[32m        $where = "add";[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    $this->_objs[$object]["where"] = $where;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Stops the specified template from appearing in the document.[m
[32m+[m[32m   *[m
[32m+[m[32m   * The object will stop being displayed on the page following the[m
[32m+[m[32m   * current one.[m
[32m+[m[32m   *[m
[32m+[m[32m   * @param int $object[m
[32m+[m[32m   */[m
[32m+[m[32m  function stop_object($object) {[m
[32m+[m
[32m+[m[32m    if ( !isset($this->_objs[$object]) )[m
[32m+[m[32m      return;[m
[32m+[m
[32m+[m[32m    $start = $this->_objs[$object]["start_page"];[m
[32m+[m[32m    $where = $this->_objs[$object]["where"];[m
[32m+[m
[32m+[m[32m    // Place the object on this page if required[m
[32m+[m[32m    if ( $this->_page_number >= $start &&[m
[32m+[m[32m         (($this->_page_number % 2 == 0 && $where === "even") ||[m
[32m+[m[32m          ($this->_page_number % 2 == 1 && $where === "odd") ||[m
[32m+[m[32m          ($where === "all")) )[m
[32m+[m[32m      $this->_pdf->fit_image($object,0,0,"");[m
[32m+[m
[32m+[m[32m    $this->_objs[$object] = null;[m
[32m+[m[32m    unset($this->_objs[$object]);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Add all active objects to the current page[m
[32m+[m[32m   */[m
[32m+[m[32m  protected function _place_objects() {[m
[32m+[m
[32m+[m[32m    foreach ( $this->_objs as $obj => $props ) {[m
[32m+[m[32m      $start = $props["start_page"];[m
[32m+[m[32m      $where = $props["where"];[m
[32m+[m
[32m+[m[32m      // Place the object on this page if required[m
[32m+[m[32m      if ( $this->_page_number >= $start &&[m
[32m+[m[32m           (($this->_page_number % 2 == 0 && $where === "even") ||[m
[32m+[m[32m            ($this->_page_number % 2 == 1 && $where === "odd") ||[m
[32m+[m[32m            ($where === "all")) ) {[m
[32m+[m[32m        $this->_pdf->fit_image($obj,0,0,"");[m
[32m+[m[32m      }[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  function get_width() { return $this->_width; }[m
[32m+[m
[32m+[m[32m  function get_height() { return $this->_height; }[m
[32m+[m
[32m+[m[32m  function get_page_number() { return $this->_page_number; }[m
[32m+[m
[32m+[m[32m  function get_page_count() { return $this->_page_count; }[m
[32m+[m
[32m+[m[32m  function set_page_number($num) { $this->_page_number = (int)$num; }[m
[32m+[m
[32m+[m[32m  function set_page_count($count) { $this->_page_count = (int)$count; }[m
[32m+[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Sets the line style[m
[32m+[m[32m   *[m
[32m+[m[32m   * @param float width[m
[32m+[m[32m   * @param string corner[m
[32m+[m[32m   * @param string join[m
[32m+[m[32m   * @param array dash[m
[32m+[m[32m   */[m
[32m+[m[32m  protected function _set_line_style($width, $cap, $join, $dash) {[m
[32m+[m
[32m+[m[32m    if ( count($dash) == 1 )[m
[32m+[m[32m      $dash[] = $dash[0];[m
[32m+[m
[32m+[m[32m    if ( count($dash) > 1 )[m
[32m+[m[32m      $this->_pdf->setdashpattern("dasharray={" . implode(" ", $dash) . "}");[m
[32m+[m[32m    else[m
[32m+[m[32m      $this->_pdf->setdash(0,0);[m
[32m+[m
[32m+[m[32m    switch ( $join ) {[m
[32m+[m[32m    case "miter":[m
[32m+[m[32m      $this->_pdf->setlinejoin(0);[m
[32m+[m[32m      break;[m
[32m+[m
[32m+[m[32m    case "round":[m
[32m+[m[32m      $this->_pdf->setlinejoin(1);[m
[32m+[m[32m      break;[m
[32m+[m
[32m+[m[32m    case "bevel":[m
[32m+[m[32m      $this->_pdf->setlinejoin(2);[m
[32m+[m[32m      break;[m
[32m+[m
[32m+[m[32m    default:[m
[32m+[m[32m      break;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    switch ( $cap ) {[m
[32m+[m[32m    case "butt":[m
[32m+[m[32m      $this->_pdf->setlinecap(0);[m
[32m+[m[32m      break;[m
[32m+[m
[32m+[m[32m    case "round":[m
[32m+[m[32m      $this->_pdf->setlinecap(1);[m
[32m+[m[32m      break;[m
[32m+[m
[32m+[m[32m    case "square":[m
[32m+[m[32m      $this->_pdf->setlinecap(2);[m
[32m+[m[32m      break;[m
[32m+[m
[32m+[m[32m    default:[m
[32m+[m[32m      break;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    $this->_pdf->setlinewidth($width);[m
[32m+[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Sets the line color[m
[32m+[m[32m   *[m
[32m+[m[32m   * @param array $color array(r,g,b)[m
[32m+[m[32m   */[m
[32m+[m[32m  protected function _set_stroke_color($color) {[m
[32m+[m[32m    if($this->_last_stroke_color == $color)[m
[32m+[m[41m    [m	[32mreturn;[m
[32m+[m
[32m+[m[32m    $this->_last_stroke_color = $color;[m
[32m+[m
[32m+[m[32m    if (isset($color[3])) {[m
[32m+[m[32m      $type = "cmyk";[m
[32m+[m[32m      list($c1, $c2, $c3, $c4) = array($color[0], $color[1], $color[2], $color[3]);[m
[32m+[m[32m    }[m
[32m+[m[32m    elseif (isset($color[2])) {[m
[32m+[m[32m      $type = "rgb";[m
[32m+[m[32m      list($c1, $c2, $c3, $c4) = array($color[0], $color[1], $color[2], null);[m
[32m+[m[32m    }[m
[32m+[m[32m    else {[m
[32m+[m[32m      $type = "gray";[m
[32m+[m[32m      list($c1, $c2, $c3, $c4) = array($color[0], $color[1], null, null);[m
[32m+[m[32m    }[m
[32m+[m[41m    [m
[32m+[m[32m    $this->_pdf->setcolor("stroke", $type, $c1, $c2, $c3, $c4);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Sets the fill color[m
[32m+[m[32m   *[m
[32m+[m[32m   * @param array $color array(r,g,b)[m
[32m+[m[32m   */[m
[32m+[m[32m  protected function _set_fill_color($color) {[m
[32m+[m[32m    if($this->_last_fill_color == $color)[m
[32m+[m[41m    [m	[32mreturn;[m
[32m+[m
[32m+[m[32m    $this->_last_fill_color = $color;[m
[32m+[m
[32m+[m[32m      if (isset($color[3])) {[m
[32m+[m[32m      $type = "cmyk";[m
[32m+[m[32m      list($c1, $c2, $c3, $c4) = array($color[0], $color[1], $color[2], $color[3]);[m
[32m+[m[32m    }[m
[32m+[m[32m    elseif (isset($color[2])) {[m
[32m+[m[32m      $type = "rgb";[m
[32m+[m[32m      list($c1, $c2, $c3, $c4) = array($color[0], $color[1], $color[2], null);[m
[32m+[m[32m    }[m
[32m+[m[32m    else {[m
[32m+[m[32m      $type = "gray";[m
[32m+[m[32m      list($c1, $c2, $c3, $c4) = array($color[0], $color[1], null, null);[m
[32m+[m[32m    }[m
[32m+[m[41m    [m
[32m+[m[32m    $this->_pdf->setcolor("fill", $type, $c1, $c2, $c3, $c4);[m
[32m+[m[32m  }[m
[32m+[m[41m  [m
[32m+[m[32m  /**[m
[32m+[m[32m   * Sets the opacity[m[41m [m
[32m+[m[32m   *[m[41m [m
[32m+[m[32m   * @param $opacity[m
[32m+[m[32m   * @param $mode[m
[32m+[m[32m   */[m
[32m+[m[32m  function set_opacity($opacity, $mode = "Normal") {[m
[32m+[m[32m    if ( $mode === "Normal" ) {[m
[32m+[m[32m      $gstate = $this->_pdf->create_gstate("opacityfill=$opacity opacitystroke=$opacity");[m
[32m+[m[32m      $this->_pdf->set_gstate($gstate);[m
[32m+[m[32m    }[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Loads a specific font and stores the corresponding descriptor.[m
[32m+[m[32m   *[m
[32m+[m[32m   * @param string $font[m
[32m+[m[32m   * @return int the font descriptor for the font[m
[32m+[m[32m   */[m
[32m+[m[32m  protected function _load_font($font, $encoding = null, $options = "") {[m
[32m+[m
[32m+[m[32m    // Check if the font is a native PDF font[m
[32m+[m[32m    // Embed non-native fonts[m
[32m+[m[32m    $native_fonts = array("courier", "courier-bold", "courier-oblique", "courier-boldoblique",[m
[32m+[m[32m                          "helvetica", "helvetica-bold", "helvetica-oblique", "helvetica-boldoblique",[m
[32m+[m[32m                          "times-roman", "times-bold", "times-italic", "times-bolditalic",[m
[32m+[m[32m                          "symbol", "zapfdinbats");[m
[32m+[m
[32m+[m[32m    $test = strtolower(basename($font));[m
[32m+[m[32m    if ( in_array($test, $native_fonts) ) {[m
[32m+[m[32m      $font = basename($font);[m
[32m+[m
[32m+[m[32m    } else {[m
[32m+[m[32m      // Embed non-native fonts[m
[32m+[m[32m      $options .= " embedding=true";[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    if ( is_null($encoding) ) {[m
[32m+[m
[32m+[m[32m      // Unicode encoding is only available for the commerical[m
[32m+[m[32m      // version of PDFlib and not PDFlib-Lite[m
[32m+[m[32m      if ( defined("DOMPDF_PDFLIB_LICENSE") )[m
[32m+[m[32m        $encoding = "unicode";[m
[32m+[m[32m      else[m
[32m+[m[32m        $encoding = "auto";[m
[32m+[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    $key = "$font:$encoding:$options";[m
[32m+[m
[32m+[m[32m    if ( isset($this->_fonts[$key]) )[m
[32m+[m[32m      return $this->_fonts[$key];[m
[32m+[m
[32m+[m[32m    else {[m
[32m+[m
[32m+[m[32m      $this->_fonts[$key] = $this->_pdf->load_font($font, $encoding, $options);[m
[32m+[m[32m      return $this->_fonts[$key];[m
[32m+[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Remaps y coords from 4th to 1st quadrant[m
[32m+[m[32m   *[m
[32m+[m[32m   * @param float $y[m
[32m+[m[32m   * @return float[m
[32m+[m[32m   */[m
[32m+[m[32m  protected function y($y) { return $this->_height - $y; }[m
[32m+[m
[32m+[m[32m  //........................................................................[m
[32m+[m
[32m+[m[32m  function line($x1, $y1, $x2, $y2, $color, $width, $style = null) {[m
[32m+[m[32m    $this->_set_line_style($width, "butt", "", $style);[m
[32m+[m[32m    $this->_set_stroke_color($color);[m
[32m+[m
[32m+[m[32m    $y1 = $this->y($y1);[m
[32m+[m[32m    $y2 = $this->y($y2);[m
[32m+[m
[32m+[m[32m    $this->_pdf->moveto($x1,$y1);[m
[32m+[m[32m    $this->_pdf->lineto($x2, $y2);[m
[32m+[m[32m    $this->_pdf->stroke();[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  //........................................................................[m
[32m+[m
[32m+[m[32m  function rectangle($x1, $y1, $w, $h, $color, $width, $style = null) {[m
[32m+[m[32m    $this->_set_stroke_color($color);[m
[32m+[m[32m    $this->_set_line_style($width, "butt", "", $style);[m
[32m+[m
[32m+[m[32m    $y1 = $this->y($y1) - $h;[m
[32m+[m
[32m+[m[32m    $this->_pdf->rect($x1, $y1, $w, $h);[m
[32m+[m[32m    $this->_pdf->stroke();[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  //........................................................................[m
[32m+[m
[32m+[m[32m  function filled_rectangle($x1, $y1, $w, $h, $color) {[m
[32m+[m[32m    $this->_set_fill_color($color);[m
[32m+[m
[32m+[m[32m    $y1 = $this->y($y1) - $h;[m
[32m+[m
[32m+[m[32m    $this->_pdf->rect(floatval($x1), floatval($y1), floatval($w), floatval($h));[m
[32m+[m[32m    $this->_pdf->fill();[m
[32m+[m[32m  }[m
[32m+[m[41m  [m
[32m+[m[32m  function clipping_rectangle($x1, $y1, $w, $h) {[m
[32m+[m[32m    $this->_pdf->save();[m
[32m+[m[41m    [m
[32m+[m[32m    $y1 = $this->y($y1) - $h;[m
[32m+[m[41m    [m
[32m+[m[32m    $this->_pdf->rect(floatval($x1), floatval($y1), floatval($w), floatval($h));[m
[32m+[m[32m    $this->_pdf->clip();[m
[32m+[m[32m  }[m
[32m+[m[41m  [m
[32m+[m[32m  function clipping_end() {[m
[32m+[m[32m    $this->_pdf->restore();[m
[32m+[m[32m  }[m
[32m+[m[41m  [m
[32m+[m[32m  function save() {[m
[32m+[m[32m    $this->_pdf->save();[m
[32m+[m[32m  }[m
[32m+[m[41m  [m
[32m+[m[32m  function restore() {[m
[32m+[m[32m    $this->_pdf->restore();[m
[32m+[m[32m  }[m
[32m+[m[41m  [m
[32m+[m[32m  function rotate($angle, $x, $y) {[m
[32m+[m[32m    $pdf = $this->_pdf;[m
[32m+[m[32m    $pdf->translate($x, $this->_height-$y);[m
[32m+[m[32m    $pdf->rotate(-$angle);[m
[32m+[m[32m    $pdf->translate(-$x, -$this->_height+$y);[m
[32m+[m[32m  }[m
[32m+[m[41m  [m
[32m+[m[32m  function skew($angle_x, $angle_y, $x, $y) {[m
[32m+[m[32m    $pdf = $this->_pdf;[m
[32m+[m[32m    $pdf->translate($x, $this->_height-$y);[m
[32m+[m[32m    $pdf->skew($angle_y, $angle_x); // Needs to be inverted[m
[32m+[m[32m    $pdf->translate(-$x, -$this->_height+$y);[m
[32m+[m[32m  }[m
[32m+[m[41m  [m
[32m+[m[32m  function scale($s_x, $s_y, $x, $y) {[m
[32m+[m[32m    $pdf = $this->_pdf;[m
[32m+[m[32m    $pdf->translate($x, $this->_height-$y);[m
[32m+[m[32m    $pdf->scale($s_x, $s_y);[m
[32m+[m[32m    $pdf->translate(-$x, -$this->_height+$y);[m
[32m+[m[32m  }[m
[32m+[m[41m  [m
[32m+[m[32m  function translate($t_x, $t_y) {[m
[32m+[m[32m    $this->_pdf->translate($t_x, -$t_y);[m
[32m+[m[32m  }[m
[32m+[m[41m  [m
[32m+[m[32m  function transform($a, $b, $c, $d, $e, $f) {[m
[32m+[m[32m    $this->_pdf->concat($a, $b, $c, $d, $e, $f);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  //........................................................................[m
[32m+[m
[32m+[m[32m  function polygon($points, $color, $width = null, $style = null, $fill = false) {[m
[32m+[m
[32m+[m[32m    $this->_set_fill_color($color);[m
[32m+[m[32m    $this->_set_stroke_color($color);[m
[32m+[m
[32m+[m[32m    if ( !$fill && isset($width) )[m
[32m+[m[32m      $this->_set_line_style($width, "square", "miter", $style);[m
[32m+[m
[32m+[m[32m    $y = $this->y(array_pop($points));[m
[32m+[m[32m    $x = array_pop($points);[m
[32m+[m[32m    $this->_pdf->moveto($x,$y);[m
[32m+[m
[32m+[m[32m    while (count($points) > 1) {[m
[32m+[m[32m      $y = $this->y(array_pop($points));[m
[32m+[m[32m      $x = array_pop($points);[m
[32m+[m[32m      $this->_pdf->lineto($x,$y);[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    if ( $fill )[m
[32m+[m[32m      $this->_pdf->fill();[m
[32m+[m[32m    else[m
[32m+[m[32m      $this->_pdf->closepath_stroke();[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  //........................................................................[m
[32m+[m
[32m+[m[32m  function circle($x, $y, $r, $color, $width = null, $style = null, $fill = false) {[m
[32m+[m
[32m+[m[32m    $this->_set_fill_color($color);[m
[32m+[m[32m    $this->_set_stroke_color($color);[m
[32m+[m
[32m+[m[32m    if ( !$fill && isset($width) )[m
[32m+[m[32m      $this->_set_line_style($width, "round", "round", $style);[m
[32m+[m
[32m+[m[32m    $y = $this->y($y);[m
[32m+[m
[32m+[m[32m    $this->_pdf->circle($x, $y, $r);[m
[32m+[m
[32m+[m[32m    if ( $fill )[m
[32m+[m[32m      $this->_pdf->fill();[m
[32m+[m[32m    else[m
[32m+[m[32m      $this->_pdf->stroke();[m
[32m+[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  //........................................................................[m
[32m+[m
[32m+[m[32m  function image($img_url, $img_type, $x, $y, $w, $h) {[m
[32m+[m[32m    $w = (int)$w;[m
[32m+[m[32m    $h = (int)$h;[m
[32m+[m
[32m+[m[32m    $img_type = strtolower($img_type);[m
[32m+[m
[32m+[m[32m    if ( $img_type === "jpg" )[m
[32m+[m[32m      $img_type = "jpeg";[m
[32m+[m
[32m+[m[32m    if ( isset($this->_imgs[$img_url]) )[m
[32m+[m[32m      $img = $this->_imgs[$img_url];[m
[32m+[m
[32m+[m[32m    else {[m
[32m+[m
[32m+[m[32m      $img = $this->_imgs[$img_url] = $this->_pdf->load_image($img_type, $img_url, "");[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    $y = $this->y($y) - $h;[m
[32m+[m[32m    $this->_pdf->fit_image($img, $x, $y, 'boxsize={'. "$w $h" .'} fitmethod=entire');[m
[32m+[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  //........................................................................[m
[32m+[m
[32m+[m[32m  function text($x, $y, $text, $font, $size, $color = array(0,0,0), $word_spacing = 0, $char_spacing = 0, $angle = 0) {[m
[32m+[m[32m    $fh = $this->_load_font($font);[m
[32m+[m
[32m+[m[32m    $this->_pdf->setfont($fh, $size);[m
[32m+[m[32m    $this->_set_fill_color($color);[m
[32m+[m
[32m+[m[32m    $y = $this->y($y) - Font_Metrics::get_font_height($font, $size);[m
[32m+[m
[32m+[m[32m    $word_spacing = (float)$word_spacing;[m
[32m+[m[32m    $char_spacing = (float)$char_spacing;[m
[32m+[m[32m    $angle        = -(float)$angle;[m
[32m+[m
[32m+[m[32m    $this->_pdf->fit_textline($text, $x, $y, "rotate=$angle wordspacing=$word_spacing charspacing=$char_spacing ");[m
[32m+[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  //........................................................................[m
[32m+[m[41m  [m
[32m+[m[32m  function javascript($code) {[m
[32m+[m[32m    if ( defined("DOMPDF_PDFLIB_LICENSE") ) {[m
[32m+[m[32m      $this->_pdf->create_action("JavaScript", $code);[m
[32m+[m[32m    }[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  //........................................................................[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Add a named destination (similar to <a name="foo">...</a> in html)[m
[32m+[m[32m   *[m
[32m+[m[32m   * @param string $anchorname The name of the named destination[m
[32m+[m[32m   */[m
[32m+[m[32m  function add_named_dest($anchorname) {[m
[32m+[m[32m    $this->_pdf->add_nameddest($anchorname,"");[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  //........................................................................[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Add a link to the pdf[m
[32m+[m[32m   *[m
[32m+[m[32m   * @param string $url The url to link to[m
[32m+[m[32m   * @param float  $x   The x position of the link[m
[32m+[m[32m   * @param float  $y   The y position of the link[m
[32m+[m[32m   * @param float  $width   The width of the link[m
[32m+[m[32m   * @param float  $height   The height of the link[m
[32m+[m[32m   */[m
[32m+[m[32m  function add_link($url, $x, $y, $width, $height) {[m
[32m+[m
[32m+[m[32m    $y = $this->y($y) - $height;[m
[32m+[m[32m    if ( strpos($url, '#') === 0 ) {[m
[32m+[m[32m      // Local link[m
[32m+[m[32m      $name = substr($url,1);[m
[32m+[m[32m      if ( $name )[m
[32m+[m[32m        $this->_pdf->create_annotation($x, $y, $x + $width, $y + $height, 'Link', "contents={$url} destname=". substr($url,1) . " linewidth=0");[m
[32m+[m[32m    } else {[m
[32m+[m
[32m+[m[32m      list($proto, $host, $path, $file) = explode_url($url);[m
[32m+[m
[32m+[m[32m      if ( $proto == "" || $proto === "file://" )[m
[32m+[m[32m        return; // Local links are not allowed[m
[32m+[m[32m      $url = build_url($proto, $host, $path, $file);[m
[32m+[m[32m      $url = '{' . rawurldecode($url) . '}';[m
[32m+[m[41m      [m
[32m+[m[32m      $action = $this->_pdf->create_action("URI", "url=" . $url);[m
[32m+[m[32m      $this->_pdf->create_annotation($x, $y, $x + $width, $y + $height, 'Link', "contents={$url} action={activate=$action} linewidth=0");[m
[32m+[m[32m    }[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  //........................................................................[m
[32m+[m
[32m+[m[32m  function get_text_width($text, $font, $size, $word_spacing = 0, $letter_spacing = 0) {[m
[32m+[m[32m    $fh = $this->_load_font($font);[m
[32m+[m
[32m+[m[32m    // Determine the additional width due to extra spacing[m
[32m+[m[32m    $num_spaces = mb_substr_count($text," ");[m
[32m+[m[32m    $delta = $word_spacing * $num_spaces;[m
[32m+[m[41m    [m
[32m+[m[32m    if ( $letter_spacing ) {[m
[32m+[m[32m      $num_chars = mb_strlen($text);[m
[32m+[m[32m      $delta += ($num_chars - $num_spaces) * $letter_spacing;[m
[32m+[m[32m    }[m
[32m+[m[41m    [m
[32m+[m[32m    return $this->_pdf->stringwidth($text, $fh, $size) + $delta;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  //........................................................................[m
[32m+[m
[32m+[m[32m  function get_font_height($font, $size) {[m
[32m+[m
[32m+[m[32m    $fh = $this->_load_font($font);[m
[32m+[m
[32m+[m[32m    $this->_pdf->setfont($fh, $size);[m
[32m+[m
[32m+[m[32m    $asc = $this->_pdf->get_value("ascender", $fh);[m
[32m+[m[32m    $desc = $this->_pdf->get_value("descender", $fh);[m
[32m+[m
[32m+[m[32m    // $desc is usually < 0,[m
[32m+[m[32m    return $size * ($asc - $desc) * DOMPDF_FONT_HEIGHT_RATIO;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  //........................................................................[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Writes text at the specified x and y coordinates on every page[m
[32m+[m[32m   *[m
[32m+[m[32m   * The strings '{PAGE_NUM}' and '{PAGE_COUNT}' are automatically replaced[m
[32m+[m[32m   * with their current values.[m
[32m+[m[32m   *[m
[32m+[m[32m   * See {@link Style::munge_colour()} for the format of the colour array.[m
[32m+[m[32m   *[m
[32m+[m[32m   * @param float $x[m
[32m+[m[32m   * @param float $y[m
[32m+[m[32m   * @param string $text the text to write[m
[32m+[m[32m   * @param string $font the font file to use[m
[32m+[m[32m   * @param float $size the font size, in points[m
[32m+[m[32m   * @param array $color[m
[32m+[m[32m   * @param float $adjust word spacing adjustment[m
[32m+[m[32m   * @param float $angle angle to write the text at, measured CW starting from the x-axis[m
[32m+[m[32m   */[m
[32m+[m[32m  function page_text($x, $y, $text, $font, $size, $color = array(0,0,0),[m
[32m+[m[32m                     $adjust = 0, $angle = 0) {[m
[32m+[m[32m    $_t = "text";[m
[32m+[m[32m    $this->_page_text[] = compact("_t", "x", "y", "text", "font", "size", "color", "adjust", "angle");[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  //........................................................................[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Processes a script on every page[m
[32m+[m[32m   *[m
[32m+[m[32m   * The variables $pdf, $PAGE_NUM, and $PAGE_COUNT are available.[m
[32m+[m[32m   *[m
[32m+[m[32m   * This function can be used to add page numbers to all pages[m
[32m+[m[32m   * after the first one, for example.[m
[32m+[m[32m   *[m
[32m+[m[32m   * @param string $code the script code[m
[32m+[m[32m   * @param string $type the language type for script[m
[32m+[m[32m   */[m
[32m+[m[32m  function page_script($code, $type = "text/php") {[m
[32m+[m[32m    $_t = "script";[m
[32m+[m[32m    $this->_page_text[] = compact("_t", "code", "type");[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  //........................................................................[m
[32m+[m
[32m+[m[32m  function new_page() {[m
[32m+[m
[32m+[m[32m    // Add objects to the current page[m
[32m+[m[32m    $this->_place_objects();[m
[32m+[m
[32m+[m[32m    $this->_pdf->suspend_page("");[m
[32m+[m[32m    $this->_pdf->begin_page_ext($this->_width, $this->_height, "");[m
[32m+[m[32m    $this->_page_number = ++$this->_page_count;[m
[32m+[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  //........................................................................[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Add text to each page after rendering is complete[m
[32m+[m[32m   */[m
[32m+[m[32m  protected function _add_page_text() {[m
[32m+[m
[32m+[m[32m    if ( !count($this->_page_text) )[m
[32m+[m[32m      return;[m
[32m+[m
[32m+[m[32m    $this->_pdf->suspend_page("");[m
[32m+[m
[32m+[m[32m    for ($p = 1; $p <= $this->_page_count; $p++) {[m
[32m+[m[32m      $this->_pdf->resume_page("pagenumber=$p");[m
[32m+[m
[32m+[m[32m      foreach ($this->_page_text as $pt) {[m
[32m+[m[32m        extract($pt);[m
[32m+[m
[32m+[m[32m        switch ($_t) {[m
[32m+[m
[32m+[m[32m        case "text":[m
[32m+[m[32m          $text = str_replace(array("{PAGE_NUM}","{PAGE_COUNT}"),[m
[32m+[m[32m                              array($p, $this->_page_count), $text);[m
[32m+[m[32m          $this->text($x, $y, $text, $font, $size, $color, $adjust, $angle);[m
[32m+[m[32m          break;[m
[32m+[m
[32m+[m[32m        case "script":[m
[32m+[m[32m          if (!$eval) {[m
[32m+[m[32m            $eval = new PHP_Evaluator($this);[m
[32m+[m[32m          }[m
[32m+[m[32m          $eval->evaluate($code, array('PAGE_NUM' => $p, 'PAGE_COUNT' => $this->_page_count));[m
[32m+[m[32m          break;[m
[32m+[m[32m        }[m
[32m+[m[32m      }[m
[32m+[m
[32m+[m[32m      $this->_pdf->suspend_page("");[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    $this->_pdf->resume_page("pagenumber=".$this->_page_number);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  //........................................................................[m
[32m+[m
[32m+[m[32m  function stream($filename, $options = null) {[m
[32m+[m
[32m+[m[32m    // Add page text[m
[32m+[m[32m    $this->_add_page_text();[m
[32m+[m
[32m+[m[32m    if ( isset($options["compress"]) && $options["compress"] != 1 )[m
[32m+[m[32m      $this->_pdf->set_value("compress", 0);[m
[32m+[m[32m    else[m
[32m+[m[32m      $this->_pdf->set_value("compress", 6);[m
[32m+[m
[32m+[m[32m    $this->_close();[m
[32m+[m
[32m+[m[32m    if ( self::$IN_MEMORY ) {[m
[32m+[m[32m      $data = $this->_pdf->get_buffer();[m
[32m+[m[32m      $size = strlen($data);[m
[32m+[m
[32m+[m[32m    } else[m
[32m+[m[32m      $size = filesize($this->_file);[m
[32m+[m
[32m+[m
[32m+[m[32m    $filename = str_replace(array("\n","'"),"", $filename);[m
[32m+[m[32m    $attach = (isset($options["Attachment"]) && $options["Attachment"]) ? "attachment" : "inline";[m
[32m+[m
[32m+[m[32m    header("Cache-Control: private");[m
[32m+[m[32m    header("Content-type: application/pdf");[m
[32m+[m[32m    header("Content-Disposition: $attach; filename=\"$filename\"");[m
[32m+[m
[32m+[m[32m    //header("Content-length: " . $size);[m
[32m+[m
[32m+[m[32m    if ( self::$IN_MEMORY )[m
[32m+[m[32m      echo $data;[m
[32m+[m
[32m+[m[32m    else {[m
[32m+[m
[32m+[m[32m      // Chunked readfile()[m
[32m+[m[32m      $chunk = (1 << 21); // 2 MB[m
[32m+[m[32m      $fh = fopen($this->_file, "rb");[m
[32m+[m[32m      if ( !$fh )[m
[32m+[m[32m        throw new DOMPDF_Exception("Unable to load temporary PDF file: " . $this->_file);[m
[32m+[m
[32m+[m[32m      while ( !feof($fh) )[m
[32m+[m[32m        echo fread($fh,$chunk);[m
[32m+[m[32m      fclose($fh);[m
[32m+[m
[32m+[m[32m      //debugpng[m
[32m+[m[32m      if (DEBUGPNG) print '[pdflib stream unlink '.$this->_file.']';[m
[32m+[m[32m      if (!DEBUGKEEPTEMP)[m
[32m+[m
[32m+[m[32m      unlink($this->_file);[m
[32m+[m[32m      $this->_file = null;[m
[32m+[m[32m      unset($this->_file);[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    flush();[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  //........................................................................[m
[32m+[m
[32m+[m[32m  function output($options = null) {[m
[32m+[m
[32m+[m[32m    // Add page text[m
[32m+[m[32m    $this->_add_page_text();[m
[32m+[m
[32m+[m[32m    if ( isset($options["compress"]) && $options["compress"] != 1 )[m
[32m+[m[32m      $this->_pdf->set_value("compress", 0);[m
[32m+[m[32m    else[m
[32m+[m[32m      $this->_pdf->set_value("compress", 6);[m
[32m+[m
[32m+[m[32m    $this->_close();[m
[32m+[m
[32m+[m[32m    if ( self::$IN_MEMORY )[m
[32m+[m[32m      $data = $this->_pdf->get_buffer();[m
[32m+[m
[32m+[m[32m    else {[m
[32m+[m[32m      $data = file_get_contents($this->_file);[m
[32m+[m
[32m+[m[32m      //debugpng[m
[32m+[m[32m      if (DEBUGPNG) print '[pdflib output unlink '.$this->_file.']';[m
[32m+[m[32m      if (!DEBUGKEEPTEMP)[m
[32m+[m
[32m+[m[32m      unlink($this->_file);[m
[32m+[m[32m      $this->_file = null;[m
[32m+[m[32m      unset($this->_file);[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    return $data;[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m// Workaround for idiotic limitation on statics...[m
[32m+[m[32mPDFLib_Adapter::$PAPER_SIZES = CPDF_Adapter::$PAPER_SIZES;[m
[1mdiff --git a/application/third_party/dompdf/include/php_evaluator.cls.php b/application/third_party/dompdf/include/php_evaluator.cls.php[m
[1mnew file mode 100644[m
[1mindex 0000000..fe45864[m
[1m--- /dev/null[m
[1m+++ b/application/third_party/dompdf/include/php_evaluator.cls.php[m
[36m@@ -0,0 +1,76 @@[m
[32m+[m[32m<?php[m
[32m+[m[32m/**[m
[32m+[m[32m * DOMPDF - PHP5 HTML to PDF renderer[m
[32m+[m[32m *[m
[32m+[m[32m * File: $RCSfile: php_evaluator.cls.php,v $[m
[32m+[m[32m * Created on: 2004-07-12[m
[32m+[m[32m *[m
[32m+[m[32m * Copyright (c) 2004 - Benj Carson <benjcarson@digitaljunkies.ca>[m
[32m+[m[32m *[m
[32m+[m[32m * This library is free software; you can redistribute it and/or[m
[32m+[m[32m * modify it under the terms of the GNU Lesser General Public[m
[32m+[m[32m * License as published by the Free Software Foundation; either[m
[32m+[m[32m * version 2.1 of the License, or (at your option) any later version.[m
[32m+[m[32m *[m
[32m+[m[32m * This library is distributed in the hope that it will be useful,[m
[32m+[m[32m * but WITHOUT ANY WARRANTY; without even the implied warranty of[m
[32m+[m[32m * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU[m
[32m+[m[32m * Lesser General Public License for more details.[m
[32m+[m[32m *[m
[32m+[m[32m * You should have received a copy of the GNU Lesser General Public License[m
[32m+[m[32m * along with this library in the file LICENSE.LGPL; if not, write to the[m
[32m+[m[32m * Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA[m
[32m+[m[32m * 02111-1307 USA[m
[32m+[m[32m *[m
[32m+[m[32m * Alternatively, you may distribute this software under the terms of the[m
[32m+[m[32m * PHP License, version 3.0 or later.  A copy of this license should have[m
[32m+[m[32m * been distributed with this file in the file LICENSE.PHP .  If this is not[m
[32m+[m[32m * the case, you can obtain a copy at http://www.php.net/license/3_0.txt.[m
[32m+[m[32m *[m
[32m+[m[32m * The latest version of DOMPDF might be available at:[m
[32m+[m[32m * http://www.dompdf.com/[m
[32m+[m[32m *[m
[32m+[m[32m * @link http://www.dompdf.com/[m
[32m+[m[32m * @copyright 2004 Benj Carson[m
[32m+[m[32m * @author Benj Carson <benjcarson@digitaljunkies.ca>[m
[32m+[m[32m * @package dompdf[m
[32m+[m
[32m+[m[32m */[m
[32m+[m
[32m+[m[32m/* $Id: php_evaluator.cls.php 216 2010-03-11 22:49:18Z ryan.masten $ */[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Executes inline PHP code during the rendering process[m
[32m+[m[32m *[m
[32m+[m[32m * @access private[m
[32m+[m[32m * @package dompdf[m
[32m+[m[32m */[m
[32m+[m[32mclass PHP_Evaluator {[m
[32m+[m[41m  [m
[32m+[m[32m  protected $_canvas;[m
[32m+[m
[32m+[m[32m  function __construct(Canvas $canvas) {[m
[32m+[m[32m    $this->_canvas = $canvas;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  function evaluate($code, $vars = array()) {[m
[32m+[m[32m    if ( !DOMPDF_ENABLE_PHP )[m
[32m+[m[32m      return;[m
[32m+[m[41m    [m
[32m+[m[32m    // Set up some variables for the inline code[m
[32m+[m[32m    $pdf = $this->_canvas;[m
[32m+[m[32m    $PAGE_NUM = $pdf->get_page_number();[m
[32m+[m[32m    $PAGE_COUNT = $pdf->get_page_count();[m
[32m+[m[41m    [m
[32m+[m[32m    // Override those variables if passed in[m
[32m+[m[32m    foreach ($vars as $k => $v) {[m
[32m+[m[32m        $$k = $v;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    eval(utf8_decode($code));[m[41m [m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  function render($frame) {[m
[32m+[m[32m    $this->evaluate($frame->get_node()->nodeValue);[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[1mdiff --git a/application/third_party/dompdf/include/positioner.cls.php b/application/third_party/dompdf/include/positioner.cls.php[m
[1mnew file mode 100644[m
[1mindex 0000000..f2e27af[m
[1m--- /dev/null[m
[1m+++ b/application/third_party/dompdf/include/positioner.cls.php[m
[36m@@ -0,0 +1,71 @@[m
[32m+[m[32m<?php[m
[32m+[m[32m/**[m
[32m+[m[32m * DOMPDF - PHP5 HTML to PDF renderer[m
[32m+[m[32m *[m
[32m+[m[32m * File: $RCSfile: positioner.cls.php,v $[m
[32m+[m[32m * Created on: 2004-06-08[m
[32m+[m[32m *[m
[32m+[m[32m * Copyright (c) 2004 - Benj Carson <benjcarson@digitaljunkies.ca>[m
[32m+[m[32m *[m
[32m+[m[32m * This library is free software; you can redistribute it and/or[m
[32m+[m[32m * modify it under the terms of the GNU Lesser General Public[m
[32m+[m[32m * License as published by the Free Software Foundation; either[m
[32m+[m[32m * version 2.1 of the License, or (at your option) any later version.[m
[32m+[m[32m *[m
[32m+[m[32m * This library is distributed in the hope that it will be useful,[m
[32m+[m[32m * but WITHOUT ANY WARRANTY; without even the implied warranty of[m
[32m+[m[32m * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU[m
[32m+[m[32m * Lesser General Public License for more details.[m
[32m+[m[32m *[m
[32m+[m[32m * You should have received a copy of the GNU Lesser General Public License[m
[32m+[m[32m * along with this library in the file LICENSE.LGPL; if not, write to the[m
[32m+[m[32m * Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA[m
[32m+[m[32m * 02111-1307 USA[m
[32m+[m[32m *[m
[32m+[m[32m * Alternatively, you may distribute this software under the terms of the[m
[32m+[m[32m * PHP License, version 3.0 or later.  A copy of this license should have[m
[32m+[m[32m * been distributed with this file in the file LICENSE.PHP .  If this is not[m
[32m+[m[32m * the case, you can obtain a copy at http://www.php.net/license/3_0.txt.[m
[32m+[m[32m *[m
[32m+[m[32m * The latest version of DOMPDF might be available at:[m
[32m+[m[32m * http://www.dompdf.com/[m
[32m+[m[32m *[m
[32m+[m[32m * @link http://www.dompdf.com/[m
[32m+[m[32m * @copyright 2004 Benj Carson[m
[32m+[m[32m * @author Benj Carson <benjcarson@digitaljunkies.ca>[m
[32m+[m[32m * @package dompdf[m
[32m+[m
[32m+[m[32m */[m
[32m+[m
[32m+[m[32m/* $Id: positioner.cls.php 283 2010-07-19 17:57:40Z fabien.menager $ */[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Base Positioner class[m
[32m+[m[32m *[m
[32m+[m[32m * Defines postioner interface[m
[32m+[m[32m *[m
[32m+[m[32m * @access private[m
[32m+[m[32m * @package dompdf[m
[32m+[m[32m */[m
[32m+[m[32mabstract class Positioner {[m
[32m+[m[41m  [m
[32m+[m[32m  // protected members[m
[32m+[m[32m  protected $_frame;[m
[32m+[m[41m  [m
[32m+[m[32m  //........................................................................[m
[32m+[m
[32m+[m[32m  function __construct(Frame_Decorator $frame) {[m
[32m+[m[32m    $this->_frame = $frame;[m
[32m+[m[32m  }[m
[32m+[m[41m  [m
[32m+[m[32m  /**[m
[32m+[m[32m   * Class destructor[m
[32m+[m[32m   */[m
[32m+[m[32m  function __destruct() {[m
[32m+[m[41m  [m	[32mclear_object($this);[m
[32m+[m[32m  }[m
[32m+[m[32m  //........................................................................[m
[32m+[m
[32m+[m[32m  abstract function position();[m
[32m+[m[41m  [m
[32m+[m[32m}[m
[1mdiff --git a/application/third_party/dompdf/include/renderer.cls.php b/application/third_party/dompdf/include/renderer.cls.php[m
[1mnew file mode 100644[m
[1mindex 0000000..d3d2162[m
[1m--- /dev/null[m
[1m+++ b/application/third_party/dompdf/include/renderer.cls.php[m
[36m@@ -0,0 +1,293 @@[m
[32m+[m[32m<?php[m
[32m+[m[32m/**[m
[32m+[m[32m * DOMPDF - PHP5 HTML to PDF renderer[m
[32m+[m[32m *[m
[32m+[m[32m * File: $RCSfile: renderer.cls.php,v $[m
[32m+[m[32m * Created on: 2004-06-03[m
[32m+[m[32m *[m
[32m+[m[32m * Copyright (c) 2004 - Benj Carson <benjcarson@digitaljunkies.ca>[m
[32m+[m[32m *[m
[32m+[m[32m * This library is free software; you can redistribute it and/or[m
[32m+[m[32m * modify it under the terms of the GNU Lesser General Public[m
[32m+[m[32m * License as published by the Free Software Foundation; either[m
[32m+[m[32m * version 2.1 of the License, or (at your option) any later version.[m
[32m+[m[32m *[m
[32m+[m[32m * This library is distributed in the hope that it will be useful,[m
[32m+[m[32m * but WITHOUT ANY WARRANTY; without even the implied warranty of[m
[32m+[m[32m * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU[m
[32m+[m[32m * Lesser General Public License for more details.[m
[32m+[m[32m *[m
[32m+[m[32m * You should have received a copy of the GNU Lesser General Public License[m
[32m+[m[32m * along with this library in the file LICENSE.LGPL; if not, write to the[m
[32m+[m[32m * Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA[m
[32m+[m[32m * 02111-1307 USA[m
[32m+[m[32m *[m
[32m+[m[32m * Alternatively, you may distribute this software under the terms of the[m
[32m+[m[32m * PHP License, version 3.0 or later.  A copy of this license should have[m
[32m+[m[32m * been distributed with this file in the file LICENSE.PHP .  If this is not[m
[32m+[m[32m * the case, you can obtain a copy at http://www.php.net/license/3_0.txt.[m
[32m+[m[32m *[m
[32m+[m[32m * The latest version of DOMPDF might be available at:[m
[32m+[m[32m * http://www.dompdf.com/[m
[32m+[m[32m *[m
[32m+[m[32m * @link http://www.dompdf.com/[m
[32m+[m[32m * @copyright 2004 Benj Carson[m
[32m+[m[32m * @author Benj Carson <benjcarson@digitaljunkies.ca>[m
[32m+[m[32m * @package dompdf[m
[32m+[m
[32m+[m[32m */[m
[32m+[m
[32m+[m[32m/* $Id: renderer.cls.php 351 2011-01-19 20:27:02Z fabien.menager $ */[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Concrete renderer[m
[32m+[m[32m *[m
[32m+[m[32m * Instantiates several specific renderers in order to render any given[m
[32m+[m[32m * frame.[m
[32m+[m[32m *[m
[32m+[m[32m * @access private[m
[32m+[m[32m * @package dompdf[m
[32m+[m[32m */[m
[32m+[m[32mclass Renderer extends Abstract_Renderer {[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Array of renderers for specific frame types[m
[32m+[m[32m   *[m
[32m+[m[32m   * @var array[m
[32m+[m[32m   */[m
[32m+[m[32m  protected $_renderers;[m
[32m+[m[41m    [m
[32m+[m[32m  /**[m
[32m+[m[32m   * Cache of the callbacks array[m
[32m+[m[32m   *[m[41m [m
[32m+[m[32m   * @var array[m
[32m+[m[32m   */[m
[32m+[m[32m  private $_callbacks;[m
[32m+[m[41m  [m
[32m+[m[32m  /**[m
[32m+[m[32m   * Class destructor[m
[32m+[m[32m   */[m
[32m+[m[32m  function __destruct() {[m
[32m+[m[41m  [m	[32mclear_object($this);[m
[32m+[m[32m  }[m
[32m+[m[41m  [m
[32m+[m[32m  /**[m
[32m+[m[32m   * Advance the canvas to the next page[m
[32m+[m[32m   */[m[41m  [m
[32m+[m[32m  function new_page() {[m
[32m+[m[32m    $this->_canvas->new_page();[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Render frames recursively[m
[32m+[m[32m   *[m
[32m+[m[32m   * @param Frame $frame the frame to render[m
[32m+[m[32m   */[m
[32m+[m[32m  function render(Frame $frame) {[m[41m    [m
[32m+[m[32m    global $_dompdf_debug;[m
[32m+[m
[32m+[m[32m    if ( $_dompdf_debug ) {[m
[32m+[m[32m      echo $frame;[m
[32m+[m[32m      flush();[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    $style = $frame->get_style();[m
[32m+[m[32m    $display = $style->display;[m
[32m+[m[41m    [m
[32m+[m[32m    // Starts the CSS transformation[m
[32m+[m[32m    if ( $style->transform && is_array($style->transform) ) {[m
[32m+[m[32m      $this->_canvas->save();[m
[32m+[m[32m      list($x, $y, $w, $h) = $frame->get_padding_box();[m
[32m+[m[32m      $origin = $style->transform_origin;[m
[32m+[m[41m      [m
[32m+[m[32m      foreach($style->transform as $transform) {[m
[32m+[m[32m        list($function, $values) = $transform;[m
[32m+[m[32m        if ( $function === "matrix" ) {[m
[32m+[m[32m          $function = "transform";[m
[32m+[m[32m        }[m
[32m+[m[41m        [m
[32m+[m[32m        $values = array_map("floatval", $values);[m
[32m+[m[32m        $values[] = $x + $style->length_in_pt($origin[0], $style->width);[m
[32m+[m[32m        $values[] = $y + $style->length_in_pt($origin[1], $style->height);[m
[32m+[m[41m        [m
[32m+[m[32m        call_user_func_array(array($this->_canvas, $function), $values);[m
[32m+[m[32m      }[m
[32m+[m[32m    }[m
[32m+[m[41m  [m
[32m+[m[32m    switch ($display) {[m
[32m+[m[41m      [m
[32m+[m[32m    case "block":[m
[32m+[m[32m    case "list-item":[m
[32m+[m[32m    case "inline-block":[m
[32m+[m[32m    case "table":[m
[32m+[m[32m    case "table-row-group":[m
[32m+[m[32m    case "table-header-group":[m
[32m+[m[32m    case "table-footer-group":[m
[32m+[m[32m    case "inline-table":[m
[32m+[m[32m      $this->_render_frame("block", $frame);[m
[32m+[m[32m      break;[m
[32m+[m
[32m+[m[32m    case "inline":[m
[32m+[m[32m      if ( $frame->get_node()->nodeName === "#text" )[m
[32m+[m[32m        $this->_render_frame("text", $frame);[m
[32m+[m[32m      else[m
[32m+[m[32m        $this->_render_frame("inline", $frame);[m
[32m+[m[32m      break;[m
[32m+[m
[32m+[m[32m    case "table-cell":[m
[32m+[m[32m      $this->_render_frame("table-cell", $frame);[m
[32m+[m[32m      break;[m
[32m+[m
[32m+[m[32m    case "-dompdf-list-bullet":[m
[32m+[m[32m      $this->_render_frame("list-bullet", $frame);[m
[32m+[m[32m      break;[m
[32m+[m
[32m+[m[32m    case "-dompdf-image":[m
[32m+[m[32m      $this->_render_frame("image", $frame);[m
[32m+[m[32m      break;[m
[32m+[m[41m      [m
[32m+[m[32m    case "none":[m
[32m+[m[32m      $node = $frame->get_node();[m
[32m+[m[41m          [m
[32m+[m[32m      if ( $node->nodeName === "script" ) {[m
[32m+[m[32m        if ( $node->getAttribute("type") === "text/php" ||[m
[32m+[m[32m             $node->getAttribute("language") === "php" ) {[m
[32m+[m[32m          // Evaluate embedded php scripts[m
[32m+[m[32m          $this->_render_frame("php", $frame);[m
[32m+[m[32m        }[m
[32m+[m[41m        [m
[32m+[m[32m        elseif ( $node->getAttribute("type") === "text/javascript" ||[m
[32m+[m[32m             $node->getAttribute("language") === "javascript" ) {[m
[32m+[m[32m          // Insert JavaScript[m
[32m+[m[32m          $this->_render_frame("javascript", $frame);[m
[32m+[m[32m        }[m
[32m+[m[32m      }[m
[32m+[m
[32m+[m[32m      // Don't render children, so skip to next iter[m
[32m+[m[32m      return;[m
[32m+[m[41m      [m
[32m+[m[32m    default:[m
[32m+[m[32m      break;[m
[32m+[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    // Check for begin frame callback[m
[32m+[m[32m    $this->_check_callbacks("begin_frame", $frame);[m
[32m+[m[41m    [m
[32m+[m[32m    // Starts the overflow: hidden box[m
[32m+[m[32m    if ( $style->overflow === "hidden" ) {[m
[32m+[m[32m      list($x, $y, $w, $h) = $frame->get_padding_box();[m
[32m+[m[32m      $this->_canvas->clipping_rectangle($x, $y, $w, $h);[m
[32m+[m[32m    }[m
[32m+[m[41m  [m
[32m+[m[32m    $page = $frame->get_root()->get_reflower();[m
[32m+[m[41m    [m
[32m+[m[32m    foreach ($frame->get_children() as $child) {[m
[32m+[m[32m      $child_style = $child->get_style();[m
[32m+[m[41m      [m
[32m+[m[32m      // Stacking context[m
[32m+[m[32m      if ( $child_style->z_index !== false && ($child_style->z_index !== "auto" || in_array($child_style->position, Style::$POSITIONNED_TYPES)) ) {[m
[32m+[m[32m        $z_index = ($child_style->z_index === "auto") ? 0 : intval($child_style->z_index);[m
[32m+[m[32m        $page->add_frame_to_stacking_context($child, $z_index);[m
[32m+[m[32m        $child_style->z_index = false;[m
[32m+[m[32m      }[m
[32m+[m[41m      [m
[32m+[m[32m      else {[m
[32m+[m[32m        $this->render($child);[m
[32m+[m[32m      }[m
[32m+[m[32m    }[m
[32m+[m[41m      [m
[32m+[m[32m    // Ends the overflow: hidden box[m
[32m+[m[32m    if ( $style->overflow === "hidden" ) {[m
[32m+[m[32m      $this->_canvas->clipping_end();[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    if ( $style->transform && is_array($style->transform) ) {[m
[32m+[m[32m      $this->_canvas->restore();[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    // Check for end frame callback[m
[32m+[m[32m    $this->_check_callbacks("end_frame", $frame);[m
[32m+[m[41m    [m
[32m+[m[32m  }[m
[32m+[m[41m  [m
[32m+[m[32m  /**[m
[32m+[m[32m   * Check for callbacks that need to be performed when a given event[m
[32m+[m[32m   * gets triggered on a frame[m
[32m+[m[32m   *[m
[32m+[m[32m   * @param string $event the type of event[m
[32m+[m[32m   * @param Frame $frame the frame that event is triggered on[m
[32m+[m[32m   */[m
[32m+[m[32m  protected function _check_callbacks($event, $frame) {[m
[32m+[m[32m    if (!isset($this->_callbacks)) {[m
[32m+[m[32m      $this->_callbacks = $this->_dompdf->get_callbacks();[m
[32m+[m[32m    }[m
[32m+[m[41m    [m
[32m+[m[32m    if (is_array($this->_callbacks) && isset($this->_callbacks[$event])) {[m
[32m+[m[32m      $info = array(0 => $this->_canvas, "canvas" => $this->_canvas,[m
[32m+[m[32m                    1 => $frame, "frame" => $frame);[m
[32m+[m[32m      $fs = $this->_callbacks[$event];[m
[32m+[m[32m      foreach ($fs as $f) {[m
[32m+[m[32m        if (is_callable($f)) {[m
[32m+[m[32m          if (is_array($f)) {[m
[32m+[m[32m            $f[0]->$f[1]($info);[m
[32m+[m[32m          } else {[m
[32m+[m[32m            $f($info);[m
[32m+[m[32m          }[m
[32m+[m[32m        }[m
[32m+[m[32m      }[m
[32m+[m[32m    }[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Render a single frame[m
[32m+[m[32m   *[m
[32m+[m[32m   * Creates Renderer objects on demand[m
[32m+[m[32m   *[m
[32m+[m[32m   * @param string $type type of renderer to use[m
[32m+[m[32m   * @param Frame $frame the frame to render[m
[32m+[m[32m   */[m
[32m+[m[32m  protected function _render_frame($type, $frame) {[m
[32m+[m
[32m+[m[32m    if ( !isset($this->_renderers[$type]) ) {[m
[32m+[m[41m      [m
[32m+[m[32m      switch ($type) {[m
[32m+[m[32m      case "block":[m
[32m+[m[32m        $this->_renderers[$type] = new Block_Renderer($this->_dompdf);[m
[32m+[m[32m        break;[m
[32m+[m
[32m+[m[32m      case "inline":[m
[32m+[m[32m        $this->_renderers[$type] = new Inline_Renderer($this->_dompdf);[m
[32m+[m[32m        break;[m
[32m+[m
[32m+[m[32m      case "text":[m
[32m+[m[32m        $this->_renderers[$type] = new Text_Renderer($this->_dompdf);[m
[32m+[m[32m        break;[m
[32m+[m
[32m+[m[32m      case "image":[m
[32m+[m[32m        $this->_renderers[$type] = new Image_Renderer($this->_dompdf);[m
[32m+[m[32m        break;[m
[32m+[m[41m      [m
[32m+[m[32m      case "table-cell":[m
[32m+[m[32m        $this->_renderers[$type] = new Table_Cell_Renderer($this->_dompdf);[m
[32m+[m[32m        break;[m
[32m+[m
[32m+[m[32m      case "list-bullet":[m
[32m+[m[32m        $this->_renderers[$type] = new List_Bullet_Renderer($this->_dompdf);[m
[32m+[m[32m        break;[m
[32m+[m
[32m+[m[32m      case "php":[m
[32m+[m[32m        $this->_renderers[$type] = new PHP_Evaluator($this->_canvas);[m
[32m+[m[32m        break;[m
[32m+[m
[32m+[m[32m      case "javascript":[m
[32m+[m[32m        $this->_renderers[$type] = new Javascript_Embedder($this->_dompdf);[m
[32m+[m[32m        break;[m
[32m+[m[41m        [m
[32m+[m[32m      }[m
[32m+[m[32m    }[m
[32m+[m[41m    [m
[32m+[m[32m    $this->_renderers[$type]->render($frame);[m
[32m+[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[1mdiff --git a/application/third_party/dompdf/include/style.cls.php b/application/third_party/dompdf/include/style.cls.php[m
[1mnew file mode 100644[m
[1mindex 0000000..594134b[m
[1m--- /dev/null[m
[1m+++ b/application/third_party/dompdf/include/style.cls.php[m
[36m@@ -0,0 +1,2149 @@[m
[32m+[m[32m<?php[m
[32m+[m[32m/**[m
[32m+[m[32m * DOMPDF - PHP5 HTML to PDF renderer[m
[32m+[m[32m *[m
[32m+[m[32m * File: $RCSfile: style.cls.php,v $[m
[32m+[m[32m * Created on: 2004-06-01[m
[32m+[m[32m *[m
[32m+[m[32m * Copyright (c) 2004 - Benj Carson <benjcarson@digitaljunkies.ca>[m
[32m+[m[32m *[m
[32m+[m[32m * This library is free software; you can redistribute it and/or[m
[32m+[m[32m * modify it under the terms of the GNU Lesser General Public[m
[32m+[m[32m * License as published by the Free Software Foundation; either[m
[32m+[m[32m * version 2.1 of the License, or (at your option) any later version.[m
[32m+[m[32m *[m
[32m+[m[32m * This library is distributed in the hope that it will be useful,[m
[32m+[m[32m * but WITHOUT ANY WARRANTY; without even the implied warranty of[m
[32m+[m[32m * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU[m
[32m+[m[32m * Lesser General Public License for more details.[m
[32m+[m[32m *[m
[32m+[m[32m * You should have received a copy of the GNU Lesser General Public License[m
[32m+[m[32m * along with this library in the file LICENSE.LGPL; if not, write to the[m
[32m+[m[32m * Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA[m
[32m+[m[32m * 02111-1307 USA[m
[32m+[m[32m *[m
[32m+[m[32m * Alternatively, you may distribute this software under the terms of the[m
[32m+[m[32m * PHP License, version 3.0 or later.  A copy of this license should have[m
[32m+[m[32m * been distributed with this file in the file LICENSE.PHP .  If this is not[m
[32m+[m[32m * the case, you can obtain a copy at http://www.php.net/license/3_0.txt.[m
[32m+[m[32m *[m
[32m+[m[32m * The latest version of DOMPDF might be available at:[m
[32m+[m[32m * http://www.dompdf.com/[m
[32m+[m[32m *[m
[32m+[m[32m * @link http://www.dompdf.com/[m
[32m+[m[32m * @copyright 2004 Benj Carson[m
[32m+[m[32m * @author Benj Carson <benjcarson@digitaljunkies.ca>[m
[32m+[m[32m * @contributor Helmut Tischer <htischer@weihenstephan.org>[m
[32m+[m[32m * @package dompdf[m
[32m+[m[32m *[m
[32m+[m[32m * Changes[m
[32m+[m[32m * @contributor Helmut Tischer <htischer@weihenstephan.org>[m
[32m+[m[32m * @version 0.5.1.htischer.20090507[m
[32m+[m[32m * - Fix px to pt conversion according to DOMPDF_DPI[m
[32m+[m[32m * - Recognize css styles with !important attribute, and store !important attribute within style[m
[32m+[m[32m * - Propagate !important by inherit and sequences of styles with merge.[m
[32m+[m[32m * - Add missing style property cache flushes for consistent rendering, e.g. on explicte assignments[m
[32m+[m[32m * - Add important set/get for access from outside of class[m
[32m+[m[32m * - Fix font_family search path with multiple fonts list in css attribute:[m
[32m+[m[32m *   On missing font, do not immediately fall back to default font,[m
[32m+[m[32m *   but try subsequent fonts in search chain. Only when none found, explicitely[m
[32m+[m[32m *   refer to default font.[m
[32m+[m[32m * - Allow read of background individual properties[m
[32m+[m[32m * - Add support for individual styles background-position, background-attachment, background-repeat[m
[32m+[m[32m * - Complete style components of list-style[m
[32m+[m[32m * - Add support for combined styles in addition to individual styles[m
[32m+[m[32m *   like {border: red 1px solid;}, { border-width: 1px;}, { border-right-color: red; } ...[m
[32m+[m[32m *   for font, background[m
[32m+[m[32m * - Propagate attributes including !important from combined style to individual component[m
[32m+[m[32m *   for border, background, padding, margin, font, list_style[m
[32m+[m[32m * - Refactor common code of border, background, padding, margin, font, list_style[m
[32m+[m[32m * - Refactor common code of list-style-image and background-image[m
[32m+[m[32m * - special treatment of css images "none" instead of url(...), otherwise would prepend string "none" with path name[m
[32m+[m[32m * - Added comments[m
[32m+[m[32m * - Added debug output[m
[32m+[m[32m * @contributor Helmut Tischer <htischer@weihenstephan.org>[m
[32m+[m[32m * @version dompdf_trunk_with_helmut_mods.20090524[m
[32m+[m[32m * - Allow superflous white space and string delimiter in font search path.[m
[32m+[m[32m * - Restore lost change of default font of above[m
[32m+[m[32m * @version 20090610[m
[32m+[m[32m * - Allow absolute path from web server root as html image reference[m
[32m+[m[32m * - More accurate handling of css property cache consistency[m
[32m+[m[32m */[m
[32m+[m
[32m+[m[32m/* $Id: style.cls.php 355 2011-01-27 07:44:54Z fabien.menager $ */[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Represents CSS properties.[m
[32m+[m[32m *[m
[32m+[m[32m * The Style class is responsible for handling and storing CSS properties.[m
[32m+[m[32m * It includes methods to resolve colours and lengths, as well as getters &[m
[32m+[m[32m * setters for many CSS properites.[m
[32m+[m[32m *[m
[32m+[m[32m * Actual CSS parsing is performed in the {@link Stylesheet} class.[m
[32m+[m[32m *[m
[32m+[m[32m * @package dompdf[m
[32m+[m[32m */[m
[32m+[m[32mclass Style {[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Default font size, in points.[m
[32m+[m[32m   *[m
[32m+[m[32m   * @var float[m
[32m+[m[32m   */[m
[32m+[m[32m  static $default_font_size = 12;[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Default line height, as a fraction of the font size.[m
[32m+[m[32m   *[m
[32m+[m[32m   * @var float[m
[32m+[m[32m   */[m
[32m+[m[32m  static $default_line_height = 1.2;[m
[32m+[m[41m  [m
[32m+[m[32m  /**[m
[32m+[m[32m   * Default "absolute" font sizes relative to the default font-size[m
[32m+[m[32m   * http://www.w3.org/TR/css3-fonts/#font-size-the-font-size-property[m
[32m+[m[32m   * @var array<float>[m
[32m+[m[32m   */[m
[32m+[m[32m  static $font_size_keywords = array([m
[32m+[m[32m    "xx-small" => 0.6,   // 3/5[m
[32m+[m[32m    "x-small"  => 0.75,  // 3/4[m
[32m+[m[32m    "small"    => 0.889, // 8/9[m
[32m+[m[32m    "medium"   => 1,     // 1[m
[32m+[m[32m    "large"    => 1.2,   // 6/5[m
[32m+[m[32m    "x-large"  => 1.5,   // 3/2[m
[32m+[m[32m    "xx-large" => 2.0,   // 2/1[m
[32m+[m[32m  );[m
[32m+[m[41m  [m
[32m+[m[32m  /**[m
[32m+[m[32m   * List of all inline types.  Should really be a constant.[m
[32m+[m[32m   *[m
[32m+[m[32m   * @var array[m
[32m+[m[32m   */[m
[32m+[m[32m  static $INLINE_TYPES = array("inline");[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * List of all block types.  Should really be a constant.[m
[32m+[m[32m   *[m
[32m+[m[32m   * @var array[m
[32m+[m[32m   */[m
[32m+[m[32m  static $BLOCK_TYPES = array("block", "inline-block", "table-cell", "list-item");[m
[32m+[m[41m  [m
[32m+[m[32m  /**[m
[32m+[m[32m   * List of all positionned types.  Should really be a constant.[m
[32m+[m[32m   *[m
[32m+[m[32m   * @var array[m
[32m+[m[32m   */[m
[32m+[m[32m  static $POSITIONNED_TYPES = array("relative", "absolute", "fixed");[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * List of all table types.  Should really be a constant.[m
[32m+[m[32m   *[m
[32m+[m[32m   * @var array;[m
[32m+[m[32m   */[m
[32m+[m[32m  static $TABLE_TYPES = array("table", "inline-table");[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * List of valid border styles.  Should also really be a constant.[m
[32m+[m[32m   *[m
[32m+[m[32m   * @var array[m
[32m+[m[32m   */[m
[32m+[m[32m  static $BORDER_STYLES = array("none", "hidden", "dotted", "dashed", "solid",[m
[32m+[m[32m                                "double", "groove", "ridge", "inset", "outset");[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Default style values.[m
[32m+[m[32m   *[m
[32m+[m[32m   * @link http://www.w3.org/TR/CSS21/propidx.html[m
[32m+[m[32m   *[m
[32m+[m[32m   * @var array[m
[32m+[m[32m   */[m
[32m+[m[32m  static protected $_defaults = null;[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * List of inherited properties[m
[32m+[m[32m   *[m
[32m+[m[32m   * @link http://www.w3.org/TR/CSS21/propidx.html[m
[32m+[m[32m   *[m
[32m+[m[32m   * @var array[m
[32m+[m[32m   */[m
[32m+[m[32m  static protected $_inherited = null;[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * The stylesheet this style belongs to[m
[32m+[m[32m   *[m
[32m+[m[32m   * @see Stylesheet[m
[32m+[m[32m   * @var Stylesheet[m
[32m+[m[32m   */[m
[32m+[m[32m  protected $_stylesheet; // stylesheet this style is attached to[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Main array of all CSS properties & values[m
[32m+[m[32m   *[m
[32m+[m[32m   * @var array[m
[32m+[m[32m   */[m
[32m+[m[32m  protected $_props;[m
[32m+[m
[32m+[m[32m  /* var instead of protected would allow access outside of class */[m
[32m+[m[32m  protected $_important_props;[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Cached property values[m
[32m+[m[32m   *[m
[32m+[m[32m   * @var array[m
[32m+[m[32m   */[m
[32m+[m[32m  protected $_prop_cache;[m
[32m+[m[41m  [m
[32m+[m[32m  /**[m
[32m+[m[32m   * Font size of parent element in document tree.  Used for relative font[m
[32m+[m[32m   * size resolution.[m
[32m+[m[32m   *[m
[32m+[m[32m   * @var float[m
[32m+[m[32m   */[m
[32m+[m[32m  protected $_parent_font_size; // Font size of parent element[m
[32m+[m[41m  [m
[32m+[m[32m  /**[m
[32m+[m[32m   * @var Frame[m
[32m+[m[32m   */[m
[32m+[m[32m  protected $_frame;[m
[32m+[m[41m  [m
[32m+[m[32m  // private members[m
[32m+[m[32m  /**[m
[32m+[m[32m   * True once the font size is resolved absolutely[m
[32m+[m[32m   *[m
[32m+[m[32m   * @var bool[m
[32m+[m[32m   */[m
[32m+[m[32m  private $__font_size_calculated; // Cache flag[m
[32m+[m[41m  [m
[32m+[m[32m  /**[m
[32m+[m[32m   * Class constructor[m
[32m+[m[32m   *[m
[32m+[m[32m   * @param Stylesheet $stylesheet the stylesheet this Style is associated with.[m
[32m+[m[32m   */[m
[32m+[m[32m  function __construct(Stylesheet $stylesheet) {[m
[32m+[m[32m    $this->_props = array();[m
[32m+[m[32m    $this->_important_props = array();[m
[32m+[m[32m    $this->_stylesheet = $stylesheet;[m
[32m+[m[32m    $this->_parent_font_size = null;[m
[32m+[m[32m    $this->__font_size_calculated = false;[m
[32m+[m[41m    [m
[32m+[m[32m    if ( !isset(self::$_defaults) ) {[m
[32m+[m[41m    [m
[32m+[m[32m      // Shorthand[m
[32m+[m[32m      $d =& self::$_defaults;[m
[32m+[m[41m    [m
[32m+[m[32m      // All CSS 2.1 properties, and their default values[m
[32m+[m[32m      $d["azimuth"] = "center";[m
[32m+[m[32m      $d["background_attachment"] = "scroll";[m
[32m+[m[32m      $d["background_color"] = "transparent";[m
[32m+[m[32m      $d["background_image"] = "none";[m
[32m+[m[32m      $d["background_position"] = "0% 0%";[m
[32m+[m[32m      $d["background_repeat"] = "repeat";[m
[32m+[m[32m      $d["background"] = "";[m
[32m+[m[32m      $d["border_collapse"] = "separate";[m
[32m+[m[32m      $d["border_color"] = "";[m
[32m+[m[32m      $d["border_spacing"] = "0";[m
[32m+[m[32m      $d["border_style"] = "";[m
[32m+[m[32m      $d["border_top"] = "";[m
[32m+[m[32m      $d["border_right"] = "";[m
[32m+[m[32m      $d["border_bottom"] = "";[m
[32m+[m[32m      $d["border_left"] = "";[m
[32m+[m[32m      $d["border_top_color"] = "";[m
[32m+[m[32m      $d["border_right_color"] = "";[m
[32m+[m[32m      $d["border_bottom_color"] = "";[m
[32m+[m[32m      $d["border_left_color"] = "";[m
[32m+[m[32m      $d["border_top_style"] = "none";[m
[32m+[m[32m      $d["border_right_style"] = "none";[m
[32m+[m[32m      $d["border_bottom_style"] = "none";[m
[32m+[m[32m      $d["border_left_style"] = "none";[m
[32m+[m[32m      $d["border_top_width"] = "medium";[m
[32m+[m[32m      $d["border_right_width"] = "medium";[m
[32m+[m[32m      $d["border_bottom_width"] = "medium";[m
[32m+[m[32m      $d["border_left_width"] = "medium";[m
[32m+[m[32m      $d["border_width"] = "medium";[m
[32m+[m[32m      $d["border"] = "";[m
[32m+[m[32m      $d["bottom"] = "auto";[m
[32m+[m[32m      $d["caption_side"] = "top";[m
[32m+[m[32m      $d["clear"] = "none";[m
[32m+[m[32m      $d["clip"] = "auto";[m
[32m+[m[32m      $d["color"] = "#000000";[m
[32m+[m[32m      $d["content"] = "normal";[m
[32m+[m[32m      $d["counter_increment"] = "none";[m
[32m+[m[32m      $d["counter_reset"] = "none";[m
[32m+[m[32m      $d["cue_after"] = "none";[m
[32m+[m[32m      $d["cue_before"] = "none";[m
[32m+[m[32m      $d["cue"] = "";[m
[32m+[m[32m      $d["cursor"] = "auto";[m
[32m+[m[32m      $d["direction"] = "ltr";[m
[32m+[m[32m      $d["display"] = "inline";[m
[32m+[m[32m      $d["elevation"] = "level";[m
[32m+[m[32m      $d["empty_cells"] = "show";[m
[32m+[m[32m      $d["float"] = "none";[m
[32m+[m[32m      $d["font_family"] = "serif";[m
[32m+[m[32m      $d["font_size"] = "medium";[m
[32m+[m[32m      $d["font_style"] = "normal";[m
[32m+[m[32m      $d["font_variant"] = "normal";[m
[32m+[m[32m      $d["font_weight"] = "normal";[m
[32m+[m[32m      $d["font"] = "";[m
[32m+[m[32m      $d["height"] = "auto";[m
[32m+[m[32m      $d["left"] = "auto";[m
[32m+[m[32m      $d["letter_spacing"] = "normal";[m
[32m+[m[32m      $d["line_height"] = "normal";[m
[32m+[m[32m      $d["list_style_image"] = "none";[m
[32m+[m[32m      $d["list_style_position"] = "outside";[m
[32m+[m[32m      $d["list_style_type"] = "disc";[m
[32m+[m[32m      $d["list_style"] = "";[m
[32m+[m[32m      $d["margin_right"] = "0";[m
[32m+[m[32m      $d["margin_left"] = "0";[m
[32m+[m[32m      $d["margin_top"] = "0";[m
[32m+[m[32m      $d["margin_bottom"] = "0";[m
[32m+[m[32m      $d["margin"] = "";[m
[32m+[m[32m      $d["max_height"] = "none";[m
[32m+[m[32m      $d["max_width"] = "none";[m
[32m+[m[32m      $d["min_height"] = "0";[m
[32m+[m[32m      $d["min_width"] = "0";[m
[32m+[m[32m      $d["opacity"] = "1.0"; // CSS3[m
[32m+[m[32m      $d["orphans"] = "2";[m
[32m+[m[32m      $d["outline_color"] = ""; // "invert" special color is not supported[m
[32m+[m[32m      $d["outline_style"] = "none";[m
[32m+[m[32m      $d["outline_width"] = "medium";[m
[32m+[m[32m      $d["outline"] = "";[m
[32m+[m[32m      $d["overflow"] = "visible";[m
[32m+[m[32m      $d["padding_top"] = "0";[m
[32m+[m[32m      $d["padding_right"] = "0";[m
[32m+[m[32m      $d["padding_bottom"] = "0";[m
[32m+[m[32m      $d["padding_left"] = "0";[m
[32m+[m[32m      $d["padding"] = "";[m
[32m+[m[32m      $d["page_break_after"] = "auto";[m
[32m+[m[32m      $d["page_break_before"] = "auto";[m
[32m+[m[32m      $d["page_break_inside"] = "auto";[m
[32m+[m[32m      $d["pause_after"] = "0";[m
[32m+[m[32m      $d["pause_before"] = "0";[m
[32m+[m[32m      $d["pause"] = "";[m
[32m+[m[32m      $d["pitch_range"] = "50";[m
[32m+[m[32m      $d["pitch"] = "medium";[m
[32m+[m[32m      $d["play_during"] = "auto";[m
[32m+[m[32m      $d["position"] = "static";[m
[32m+[m[32m      $d["quotes"] = "";[m
[32m+[m[32m      $d["richness"] = "50";[m
[32m+[m[32m      $d["right"] = "auto";[m
[32m+[m[32m      $d["size"] = "auto"; // @page[m
[32m+[m[32m      $d["speak_header"] = "once";[m
[32m+[m[32m      $d["speak_numeral"] = "continuous";[m
[32m+[m[32m      $d["speak_punctuation"] = "none";[m
[32m+[m[32m      $d["speak"] = "normal";[m
[32m+[m[32m      $d["speech_rate"] = "medium";[m
[32m+[m[32m      $d["stress"] = "50";[m
[32m+[m[32m      $d["table_layout"] = "auto";[m
[32m+[m[32m      $d["text_align"] = "left";[m
[32m+[m[32m      $d["text_decoration"] = "none";[m
[32m+[m[32m      $d["text_indent"] = "0";[m
[32m+[m[32m      $d["text_transform"] = "none";[m
[32m+[m[32m      $d["top"] = "auto";[m
[32m+[m[32m      $d["transform"] = "none"; // CSS3[m
[32m+[m[32m      $d["transform_origin"] = "50% 50%"; // CSS3[m
[32m+[m[32m      $d["_webkit_transform"] = $d["transform"]; // CSS3[m
[32m+[m[32m      $d["_webkit_transform_origin"] = $d["transform_origin"]; // CSS3[m
[32m+[m[32m      $d["unicode_bidi"] = "normal";[m
[32m+[m[32m      $d["vertical_align"] = "baseline";[m
[32m+[m[32m      $d["visibility"] = "visible";[m
[32m+[m[32m      $d["voice_family"] = "";[m
[32m+[m[32m      $d["volume"] = "medium";[m
[32m+[m[32m      $d["white_space"] = "normal";[m
[32m+[m[32m      $d["widows"] = "2";[m
[32m+[m[32m      $d["width"] = "auto";[m
[32m+[m[32m      $d["word_spacing"] = "normal";[m
[32m+[m[32m      $d["z_index"] = "auto";[m
[32m+[m[41m      [m
[32m+[m[32m      // for @font-face[m
[32m+[m[32m      $d["src"] = "";[m
[32m+[m[32m      $d["unicode_range"] = "";[m
[32m+[m
[32m+[m[32m      // Properties that inherit by default[m
[32m+[m[32m      self::$_inherited = array("azimuth",[m
[32m+[m[32m                                 "border_collapse",[m
[32m+[m[32m                                 "border_spacing",[m
[32m+[m[32m                                 "caption_side",[m
[32m+[m[32m                                 "color",[m
[32m+[m[32m                                 "cursor",[m
[32m+[m[32m                                 "direction",[m
[32m+[m[32m                                 "elevation",[m
[32m+[m[32m                                 "empty_cells",[m
[32m+[m[32m                                 "font_family",[m
[32m+[m[32m                                 "font_size",[m
[32m+[m[32m                                 "font_style",[m
[32m+[m[32m                                 "font_variant",[m
[32m+[m[32m                                 "font_weight",[m
[32m+[m[32m                                 "font",[m
[32m+[m[32m                                 "letter_spacing",[m
[32m+[m[32m                                 "line_height",[m
[32m+[m[32m                                 "list_style_image",[m
[32m+[m[32m                                 "list_style_position",[m
[32m+[m[32m                                 "list_style_type",[m
[32m+[m[32m                                 "list_style",[m
[32m+[m[32m                                 "orphans",[m
[32m+[m[32m                                 "page_break_inside",[m
[32m+[m[32m                                 "pitch_range",[m
[32m+[m[32m                                 "pitch",[m
[32m+[m[32m                                 "quotes",[m
[32m+[m[32m                                 "richness",[m
[32m+[m[32m                                 "speak_header",[m
[32m+[m[32m                                 "speak_numeral",[m
[32m+[m[32m                                 "speak_punctuation",[m
[32m+[m[32m                                 "speak",[m
[32m+[m[32m                                 "speech_rate",[m
[32m+[m[32m                                 "stress",[m
[32m+[m[32m                                 "text_align",[m
[32m+[m[32m                                 "text_indent",[m
[32m+[m[32m                                 "text_transform",[m
[32m+[m[32m                                 "visibility",[m
[32m+[m[32m                                 "voice_family",[m
[32m+[m[32m                                 "volume",[m
[32m+[m[32m                                 "white_space",[m
[32m+[m[32m                                 "widows",[m
[32m+[m[32m                                 "word_spacing");[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * "Destructor": forcibly free all references held by this object[m
[32m+[m[32m   */[m
[32m+[m[32m  function dispose() {[m
[32m+[m[32m    clear_object($this);[m
[32m+[m[32m  }[m
[32m+[m[41m  [m
[32m+[m[32m  function set_frame(Frame $frame) {[m
[32m+[m[32m    $this->_frame = $frame;[m
[32m+[m[32m  }[m
[32m+[m[41m  [m
[32m+[m[32m  function get_frame() {[m
[32m+[m[32m    return $this->_frame;[m
[32m+[m[32m  }[m
[32m+[m[41m  [m
[32m+[m[32m  /**[m
[32m+[m[32m   * returns the {@link Stylesheet} this Style is associated with.[m
[32m+[m[32m   *[m
[32m+[m[32m   * @return Stylesheet[m
[32m+[m[32m   */[m
[32m+[m[32m  function get_stylesheet() { return $this->_stylesheet; }[m
[32m+[m[41m  [m
[32m+[m[32m  /**[m
[32m+[m[32m   * Converts any CSS length value into an absolute length in points.[m
[32m+[m[32m   *[m
[32m+[m[32m   * length_in_pt() takes a single length (e.g. '1em') or an array of[m
[32m+[m[32m   * lengths and returns an absolute length.  If an array is passed, then[m
[32m+[m[32m   * the return value is the sum of all elements.[m
[32m+[m[32m   *[m
[32m+[m[32m   * If a reference size is not provided, the default font size is used[m
[32m+[m[32m   * ({@link Style::$default_font_size}).[m
[32m+[m[32m   *[m
[32m+[m[32m   * @param float|array $length   the length or array of lengths to resolve[m
[32m+[m[32m   * @param float       $ref_size  an absolute reference size to resolve percentage lengths[m
[32m+[m[32m   * @return float[m
[32m+[m[32m   */[m
[32m+[m[32m  function length_in_pt($length, $ref_size = null) {[m
[32m+[m
[32m+[m[32m    if ( !is_array($length) )[m
[32m+[m[32m      $length = array($length);[m
[32m+[m
[32m+[m[32m    if ( !isset($ref_size) )[m
[32m+[m[32m      $ref_size = self::$default_font_size;[m
[32m+[m
[32m+[m[32m    $ret = 0;[m
[32m+[m[32m    foreach ($length as $l) {[m
[32m+[m
[32m+[m[32m      if ( $l === "auto" )[m
[32m+[m[32m        return "auto";[m
[32m+[m[41m      [m
[32m+[m[32m      if ( $l === "none" )[m
[32m+[m[32m        return "none";[m
[32m+[m
[32m+[m[32m      // Assume numeric values are already in points[m
[32m+[m[32m      if ( is_numeric($l) ) {[m
[32m+[m[32m        $ret += $l;[m
[32m+[m[32m        continue;[m
[32m+[m[32m      }[m
[32m+[m[41m        [m
[32m+[m[32m      if ( $l === "normal" ) {[m
[32m+[m[32m        $ret += $ref_size;[m
[32m+[m[32m        continue;[m
[32m+[m[32m      }[m
[32m+[m
[32m+[m[32m      // Border lengths[m
[32m+[m[32m      if ( $l === "thin" ) {[m
[32m+[m[32m        $ret += 0.5;[m
[32m+[m[32m        continue;[m
[32m+[m[32m      }[m
[32m+[m[41m      [m
[32m+[m[32m      if ( $l === "medium" ) {[m
[32m+[m[32m        $ret += 1.5;[m
[32m+[m[32m        continue;[m
[32m+[m[32m      }[m
[32m+[m[41m    [m
[32m+[m[32m      if ( $l === "thick" ) {[m
[32m+[m[32m        $ret += 2.5;[m
[32m+[m[32m        continue;[m
[32m+[m[32m      }[m
[32m+[m
[32m+[m[32m      if ( ($i = mb_strpos($l, "px"))  !== false ) {[m
[32m+[m[32m        $ret += ( mb_substr($l, 0, $i)  * 72 ) / DOMPDF_DPI;[m
[32m+[m[32m        continue;[m
[32m+[m[32m      }[m
[32m+[m[41m      [m
[32m+[m[32m      if ( ($i = mb_strpos($l, "pt"))  !== false ) {[m
[32m+[m[32m        $ret += mb_substr($l, 0, $i);[m
[32m+[m[32m        continue;[m
[32m+[m[32m      }[m
[32m+[m
[32m+[m[32m      if ( ($i = mb_strpos($l, "em"))  !== false ) {[m
[32m+[m[32m        $ret += mb_substr($l, 0, $i) * $this->__get("font_size");[m
[32m+[m[32m        continue;[m
[32m+[m[32m      }[m
[32m+[m[41m      [m
[32m+[m[32m      if ( ($i = mb_strpos($l, "%"))  !== false ) {[m
[32m+[m[32m        $ret += mb_substr($l, 0, $i)/100 * $ref_size;[m
[32m+[m[32m        continue;[m
[32m+[m[32m      }[m
[32m+[m[41m          [m
[32m+[m[32m      if ( ($i = mb_strpos($l, "cm")) !== false ) {[m
[32m+[m[32m        $ret += mb_substr($l, 0, $i) * 72 / 2.54;[m
[32m+[m[32m        continue;[m
[32m+[m[32m      }[m
[32m+[m
[32m+[m[32m      if ( ($i = mb_strpos($l, "mm")) !== false ) {[m
[32m+[m[32m        $ret += mb_substr($l, 0, $i) * 72 / 25.4;[m
[32m+[m[32m        continue;[m
[32m+[m[32m      }[m
[32m+[m[41m      [m
[32m+[m[32m      // FIXME: em:ex ratio?[m
[32m+[m[32m      if ( ($i = mb_strpos($l, "ex"))  !== false ) {[m
[32m+[m[32m        $ret += mb_substr($l, 0, $i) * $this->__get("font_size");[m
[32m+[m[32m        continue;[m
[32m+[m[32m      }[m
[32m+[m[41m      [m
[32m+[m[32m      if ( ($i = mb_strpos($l, "in")) !== false ) {[m
[32m+[m[32m        $ret += mb_substr($l, 0, $i) * 72;[m
[32m+[m[32m        continue;[m
[32m+[m[32m      }[m
[32m+[m[41m          [m
[32m+[m[32m      if ( ($i = mb_strpos($l, "pc")) !== false ) {[m
[32m+[m[32m        $ret += mb_substr($l, 0, $i) / 12;[m
[32m+[m[32m        continue;[m
[32m+[m[32m      }[m
[32m+[m[41m          [m
[32m+[m[32m      // Bogus value[m
[32m+[m[32m      $ret += $ref_size;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    return $ret;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[41m  [m
[32m+[m[32m  /**[m
[32m+[m[32m   * Set inherited properties in this style using values in $parent[m
[32m+[m[32m   *[m
[32m+[m[32m   * @param Style $parent[m
[32m+[m[32m   */[m
[32m+[m[32m  function inherit(Style $parent) {[m
[32m+[m
[32m+[m[32m    // Set parent font size[m
[32m+[m[32m    $this->_parent_font_size = $parent->get_font_size();[m
[32m+[m[41m    [m
[32m+[m[32m    foreach (self::$_inherited as $prop) {[m
[32m+[m[32m      //inherit the !important property also.[m
[32m+[m[32m      //if local property is also !important, don't inherit.[m
[32m+[m[32m      if ( isset($parent->_props[$prop]) &&[m
[32m+[m[32m           ( !isset($this->_props[$prop]) ||[m
[32m+[m[32m             ( isset($parent->_important_props[$prop]) && !isset($this->_important_props[$prop]) )[m
[32m+[m[32m           )[m
[32m+[m[32m         ) {[m
[32m+[m[32m        if ( isset($parent->_important_props[$prop]) ) {[m
[32m+[m[32m          $this->_important_props[$prop] = true;[m
[32m+[m[32m        }[m
[32m+[m[32m        //see __set and __get, on all assignments clear cache![m
[32m+[m[32m        $this->_prop_cache[$prop] = null;[m
[32m+[m[32m        $this->_props[$prop] = $parent->_props[$prop];[m
[32m+[m[32m      }[m
[32m+[m[32m    }[m
[32m+[m[41m      [m
[32m+[m[32m    foreach (array_keys($this->_props) as $prop) {[m
[32m+[m[32m      if ( $this->_props[$prop] === "inherit" ) {[m
[32m+[m[32m        if ( isset($parent->_important_props[$prop]) ) {[m
[32m+[m[32m          $this->_important_props[$prop] = true;[m
[32m+[m[32m        }[m
[32m+[m[32m        //do not assign direct, but[m
[32m+[m[32m        //implicite assignment through __set, redirect to specialized, get value with __get[m
[32m+[m[32m        //This is for computing defaults if the parent setting is also missing.[m
[32m+[m[32m        //Therefore do not directly assign the value without __set[m
[32m+[m[32m        //set _important_props before that to be able to propagate.[m
[32m+[m[32m        //see __set and __get, on all assignments clear cache![m
[32m+[m[32m        //$this->_prop_cache[$prop] = null;[m
[32m+[m[32m        //$this->_props[$prop] = $parent->_props[$prop];[m
[32m+[m[32m        //props_set for more obvious explicite assignment not implemented, because[m
[32m+[m[32m        //too many implicite uses.[m
[32m+[m[32m        // $this->props_set($prop, $parent->$prop);[m
[32m+[m[32m        $this->$prop = $parent->$prop;[m
[32m+[m[32m      }[m
[32m+[m[32m    }[m
[32m+[m[41m          [m
[32m+[m[32m    return $this;[m
[32m+[m[32m  }[m
[32m+[m[41m  [m
[32m+[m[32m  /**[m
[32m+[m[32m   * Override properties in this style with those in $style[m
[32m+[m[32m   *[m
[32m+[m[32m   * @param Style $style[m
[32m+[m[32m   */[m
[32m+[m[32m  function merge(Style $style) {[m
[32m+[m[32m    //treat the !important attribute[m
[32m+[m[32m    //if old rule has !important attribute, override with new rule only if[m
[32m+[m[32m    //the new rule is also !important[m
[32m+[m[32m    foreach($style->_props as $prop => $val ) {[m
[32m+[m[32m      if (isset($style->_important_props[$prop])) {[m
[32m+[m[32m        $this->_important_props[$prop] = true;[m
[32m+[m[32m        //see __set and __get, on all assignments clear cache![m
[32m+[m[32m        $this->_prop_cache[$prop] = null;[m
[32m+[m[32m        $this->_props[$prop] = $val;[m
[32m+[m[32m      } else if ( !isset($this->_important_props[$prop]) ) {[m
[32m+[m[32m        //see __set and __get, on all assignments clear cache![m
[32m+[m[32m        $this->_prop_cache[$prop] = null;[m
[32m+[m[32m        $this->_props[$prop] = $val;[m
[32m+[m[32m      }[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    if ( isset($style->_props["font_size"]) )[m
[32m+[m[32m      $this->__font_size_calculated = false;[m
[32m+[m[32m  }[m
[32m+[m[41m  [m
[32m+[m[32m  /**[m
[32m+[m[32m   * Returns an array(r, g, b, "r"=> r, "g"=>g, "b"=>b, "hex"=>"#rrggbb")[m
[32m+[m[32m   * based on the provided CSS colour value.[m
[32m+[m[32m   *[m
[32m+[m[32m   * @param string $colour[m
[32m+[m[32m   * @return array[m
[32m+[m[32m   */[m
[32m+[m[32m  function munge_colour($colour) { return CSS_Color::parse($colour); }[m
[32m+[m[41m  [m
[32m+[m[32m  /**[m
[32m+[m[32m   * Alias for {@link Style::munge_colour()}[m
[32m+[m[32m   *[m
[32m+[m[32m   * @param string $color[m
[32m+[m[32m   * @return array[m
[32m+[m[32m   */[m
[32m+[m[32m  function munge_color($color) { return CSS_Color::parse($color); }[m
[32m+[m
[32m+[m[32m  /* direct access to _important_props array from outside would work only when declared as[m
[32m+[m[32m   * 'var $_important_props;' instead of 'protected $_important_props;'[m
[32m+[m[32m   * Don't call _set/__get on missing attribute. Therefore need a special access.[m
[32m+[m[32m   * Assume that __set will be also called when this is called, so do not check validity again.[m
[32m+[m[32m   * Only created, if !important exists -> always set true.[m
[32m+[m[32m   */[m
[32m+[m[32m  function important_set($prop) {[m
[32m+[m[32m    $prop = str_replace("-", "_", $prop);[m
[32m+[m[32m    $this->_important_props[$prop] = true;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  function important_get($prop) {[m
[32m+[m[32m    isset($this->_important_props[$prop]);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * PHP5 overloaded setter[m
[32m+[m[32m   *[m
[32m+[m[32m   * This function along with {@link Style::__get()} permit a user of the[m
[32m+[m[32m   * Style class to access any (CSS) property using the following syntax:[m
[32m+[m[32m   * <code>[m
[32m+[m[32m   *  Style->margin_top = "1em";[m
[32m+[m[32m   *  echo (Style->margin_top);[m
[32m+[m[32m   * </code>[m
[32m+[m[32m   *[m
[32m+[m[32m   * __set() automatically calls the provided set function, if one exists,[m
[32m+[m[32m   * otherwise it sets the property directly.  Typically, __set() is not[m
[32m+[m[32m   * called directly from outside of this class.[m
[32m+[m[32m   *[m
[32m+[m[32m   * On each modification clear cache to return accurate setting.[m
[32m+[m[32m   * Also affects direct settings not using __set[m
[32m+[m[32m   * For easier finding all assignments, attempted to allowing only explicite assignment:[m
[32m+[m[32m   * Very many uses, e.g. frame_reflower.cls.php -> for now leave as it is[m
[32m+[m[32m   * function __set($prop, $val) {[m
[32m+[m[32m   *   throw new DOMPDF_Exception("Implicite replacement of assignment by __set.  Not good.");[m
[32m+[m[32m   * }[m
[32m+[m[32m   * function props_set($prop, $val) { ... }[m
[32m+[m[32m   *[m
[32m+[m[32m   * @param string $prop  the property to set[m
[32m+[m[32m   * @param mixed  $val   the value of the property[m
[32m+[m[32m   *[m
[32m+[m[32m   */[m
[32m+[m[32m  function __set($prop, $val) {[m
[32m+[m[32m    $prop = str_replace("-", "_", $prop);[m
[32m+[m[32m    $this->_prop_cache[$prop] = null;[m
[32m+[m[41m    [m
[32m+[m[32m    if ( !isset(self::$_defaults[$prop]) ) {[m
[32m+[m[32m      global $_dompdf_warnings;[m
[32m+[m[32m      $_dompdf_warnings[] = "'$prop' is not a valid CSS2 property.";[m
[32m+[m[32m      return;[m
[32m+[m[32m    }[m
[32m+[m[41m    [m
[32m+[m[32m    if ( $prop !== "content" && is_string($val) && strlen($val) > 5 && mb_strpos($val, "url") === false ) {[m
[32m+[m[32m      $val = mb_strtolower(trim(str_replace(array("\n", "\t"), array(" "), $val)));[m
[32m+[m[32m      $val = preg_replace("/([0-9]+) (pt|px|pc|em|ex|in|cm|mm|%)/S", "\\1\\2", $val);[m
[32m+[m[32m    }[m
[32m+[m[41m    [m
[32m+[m[32m    $method = "set_$prop";[m
[32m+[m
[32m+[m[32m    if ( method_exists($this, $method) )[m
[32m+[m[32m      $this->$method($val);[m
[32m+[m[32m    else[m
[32m+[m[32m      $this->_props[$prop] = $val;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * PHP5 overloaded getter[m
[32m+[m[32m   *[m
[32m+[m[32m   * Along with {@link Style::__set()} __get() provides access to all CSS[m
[32m+[m[32m   * properties directly.  Typically __get() is not called directly outside[m
[32m+[m[32m   * of this class.[m
[32m+[m[32m   *[m
[32m+[m[32m   * On each modification clear cache to return accurate setting.[m
[32m+[m[32m   * Also affects direct settings not using __set[m
[32m+[m[32m   *[m
[32m+[m[32m   * @param string $prop[m
[32m+[m[32m   * @return mixed[m
[32m+[m[32m   */[m
[32m+[m[32m  function __get($prop) {[m
[32m+[m[32m    if ( !isset(self::$_defaults[$prop]) )[m
[32m+[m[32m      throw new DOMPDF_Exception("'$prop' is not a valid CSS2 property.");[m
[32m+[m
[32m+[m[32m    if ( isset($this->_prop_cache[$prop]) && $this->_prop_cache[$prop] != null )[m
[32m+[m[32m      return $this->_prop_cache[$prop];[m
[32m+[m[41m    [m
[32m+[m[32m    $method = "get_$prop";[m
[32m+[m
[32m+[m[32m    // Fall back on defaults if property is not set[m
[32m+[m[32m    if ( !isset($this->_props[$prop]) )[m
[32m+[m[32m      $this->_props[$prop] = self::$_defaults[$prop];[m
[32m+[m
[32m+[m[32m    if ( method_exists($this, $method) )[m
[32m+[m[32m      return $this->_prop_cache[$prop] = $this->$method();[m
[32m+[m
[32m+[m[32m    return $this->_prop_cache[$prop] = $this->_props[$prop];[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Getter for the 'font-family' CSS property.[m
[32m+[m[32m   *[m
[32m+[m[32m   * Uses the {@link Font_Metrics} class to resolve the font family into an[m
[32m+[m[32m   * actual font file.[m
[32m+[m[32m   *[m
[32m+[m[32m   * @link http://www.w3.org/TR/CSS21/fonts.html#propdef-font-family[m
[32m+[m[32m   * @return string[m
[32m+[m[32m   */[m
[32m+[m[32m  function get_font_family() {[m
[32m+[m[41m  [m
[32m+[m[32m    $DEBUGCSS=DEBUGCSS; //=DEBUGCSS; Allow override of global setting for ad hoc debug[m
[32m+[m
[32m+[m[32m    // Select the appropriate font.  First determine the subtype, then check[m
[32m+[m[32m    // the specified font-families for a candidate.[m
[32m+[m
[32m+[m[32m    // Resolve font-weight[m
[32m+[m[32m    $weight = $this->__get("font_weight");[m
[32m+[m[41m    [m
[32m+[m[32m    if ( is_numeric($weight) ) {[m
[32m+[m
[32m+[m[32m      if ( $weight < 600 )[m
[32m+[m[32m        $weight = "normal";[m
[32m+[m[32m      else[m
[32m+[m[32m        $weight = "bold";[m
[32m+[m
[32m+[m[32m    } else if ( $weight === "bold" || $weight === "bolder" ) {[m
[32m+[m[32m      $weight = "bold";[m
[32m+[m
[32m+[m[32m    } else {[m
[32m+[m[32m      $weight = "normal";[m
[32m+[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    // Resolve font-style[m
[32m+[m[32m    $font_style = $this->__get("font_style");[m
[32m+[m
[32m+[m[32m    if ( $weight === "bold" && ($font_style === "italic" || $font_style === "oblique") )[m
[32m+[m[32m      $subtype = "bold_italic";[m
[32m+[m[32m    else if ( $weight === "bold" && $font_style !== "italic" && $font_style !== "oblique" )[m
[32m+[m[32m      $subtype = "bold";[m
[32m+[m[32m    else if ( $weight !== "bold" && ($font_style === "italic" || $font_style === "oblique") )[m
[32m+[m[32m      $subtype = "italic";[m
[32m+[m[32m    else[m
[32m+[m[32m      $subtype = "normal";[m
[32m+[m[41m    [m
[32m+[m[32m    // Resolve the font family[m
[32m+[m[32m    if ($DEBUGCSS) {[m
[32m+[m[32m      print "<pre>[get_font_family:";[m
[32m+[m[32m      print '('.$this->_props["font_family"].'.'.$font_style.'.'.$this->__get("font_weight").'.'.$weight.'.'.$subtype.')';[m
[32m+[m[32m    }[m
[32m+[m[32m    $families = explode(",", $this->_props["font_family"]);[m
[32m+[m[32m    $families = array_map('trim',$families);[m
[32m+[m[32m    reset($families);[m
[32m+[m
[32m+[m[32m    $font = null;[m
[32m+[m[32m    while ( current($families) ) {[m
[32m+[m[32m      list(,$family) = each($families);[m
[32m+[m[32m      //remove leading and trailing string delimiters, e.g. on font names with spaces;[m
[32m+[m[32m      //remove leading and trailing whitespace[m
[32m+[m[32m      $family=trim($family," \t\n\r\x0B\"'");[m
[32m+[m[32m      if ($DEBUGCSS) print '('.$family.')';[m
[32m+[m[32m      $font = Font_Metrics::get_font($family, $subtype);[m
[32m+[m
[32m+[m[32m      if ( $font ) {[m
[32m+[m[32m        if ($DEBUGCSS)  print '('.$font.")get_font_family]\n</pre>";[m
[32m+[m[32m        return $font;[m
[32m+[m[32m      }[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    $family = null;[m
[32m+[m[32m    if ($DEBUGCSS)  print '(default)';[m
[32m+[m[32m    $font = Font_Metrics::get_font($family, $subtype);[m
[32m+[m
[32m+[m[32m    if ( $font ) {[m
[32m+[m[32m      if ($DEBUGCSS) print '('.$font.")get_font_family]\n</pre>";[m
[32m+[m[32m      return $font;[m
[32m+[m[32m    }[m
[32m+[m[32m    throw new DOMPDF_Exception("Unable to find a suitable font replacement for: '" . $this->_props["font_family"] ."'");[m
[32m+[m[41m    [m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Returns the resolved font size, in points[m
[32m+[m[32m   *[m
[32m+[m[32m   * @link http://www.w3.org/TR/CSS21/fonts.html#propdef-font-size[m
[32m+[m[32m   * @return float[m
[32m+[m[32m   */[m
[32m+[m[32m  function get_font_size() {[m
[32m+[m
[32m+[m[32m    if ( $this->__font_size_calculated )[m
[32m+[m[32m      return $this->_props["font_size"];[m
[32m+[m[41m    [m
[32m+[m[32m    if ( !isset($this->_props["font_size"]) )[m
[32m+[m[32m      $fs = self::$_defaults["font_size"];[m
[32m+[m[32m    else[m
[32m+[m[32m      $fs = $this->_props["font_size"];[m
[32m+[m[41m    [m
[32m+[m[32m    if ( !isset($this->_parent_font_size) )[m
[32m+[m[32m      $this->_parent_font_size = self::$default_font_size;[m
[32m+[m[41m    [m
[32m+[m[32m    switch ($fs) {[m
[32m+[m[32m    case "xx-small":[m
[32m+[m[32m    case "x-small":[m
[32m+[m[32m    case "small":[m
[32m+[m[32m    case "medium":[m
[32m+[m[32m    case "large":[m
[32m+[m[32m    case "x-large":[m
[32m+[m[32m    case "xx-large":[m
[32m+[m[32m      $fs = self::$default_font_size * self::$font_size_keywords[$fs];[m
[32m+[m[32m      break;[m
[32m+[m
[32m+[m[32m    case "smaller":[m
[32m+[m[32m      $fs = 8/9 * $this->_parent_font_size;[m
[32m+[m[32m      break;[m
[32m+[m[41m      [m
[32m+[m[32m    case "larger":[m
[32m+[m[32m      $fs = 6/5 * $this->_parent_font_size;[m
[32m+[m[32m      break;[m
[32m+[m[41m      [m
[32m+[m[32m    default:[m
[32m+[m[32m      break;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    // Ensure relative sizes resolve to something[m
[32m+[m[32m    if ( ($i = mb_strpos($fs, "em")) !== false )[m
[32m+[m[32m      $fs = mb_substr($fs, 0, $i) * $this->_parent_font_size;[m
[32m+[m
[32m+[m[32m    else if ( ($i = mb_strpos($fs, "ex")) !== false )[m
[32m+[m[32m      $fs = mb_substr($fs, 0, $i) * $this->_parent_font_size;[m
[32m+[m
[32m+[m[32m    else[m
[32m+[m[32m      $fs = $this->length_in_pt($fs);[m
[32m+[m
[32m+[m[32m    //see __set and __get, on all assignments clear cache![m
[32m+[m[32m    $this->_prop_cache["font_size"] = null;[m
[32m+[m[32m    $this->_props["font_size"] = $fs;[m
[32m+[m[32m    $this->__font_size_calculated = true;[m
[32m+[m[32m    return $this->_props["font_size"];[m
[32m+[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * @link http://www.w3.org/TR/CSS21/text.html#propdef-word-spacing[m
[32m+[m[32m   * @return float[m
[32m+[m[32m   */[m
[32m+[m[32m  function get_word_spacing() {[m
[32m+[m[32m    if ( $this->_props["word_spacing"] === "normal" )[m
[32m+[m[32m      return 0;[m
[32m+[m
[32m+[m[32m    return $this->_props["word_spacing"];[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * @link http://www.w3.org/TR/CSS21/text.html#propdef-letter-spacing[m
[32m+[m[32m   * @return float[m
[32m+[m[32m   */[m
[32m+[m[32m  function get_letter_spacing() {[m
[32m+[m[32m    if ( $this->_props["letter_spacing"] === "normal" )[m
[32m+[m[32m      return 0;[m
[32m+[m
[32m+[m[32m    return $this->_props["letter_spacing"];[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * @link http://www.w3.org/TR/CSS21/visudet.html#propdef-line-height[m
[32m+[m[32m   * @return float[m
[32m+[m[32m   */[m
[32m+[m[32m  function get_line_height() {[m
[32m+[m[32m    $line_height = $this->_props["line_height"];[m
[32m+[m[41m    [m
[32m+[m[32m    if ( $line_height === "normal" )[m
[32m+[m[32m      return self::$default_line_height * $this->get_font_size();[m
[32m+[m
[32m+[m[32m    if ( is_numeric($line_height) )[m
[32m+[m[32m      return $this->length_in_pt( $line_height . "em", $this->get_font_size());[m
[32m+[m[41m    [m
[32m+[m[32m    return $this->length_in_pt( $line_height, $this->get_font_size() );[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Returns the colour as an array[m
[32m+[m[32m   *[m
[32m+[m[32m   * The array has the following format:[m
[32m+[m[32m   * <code>array(r,g,b, "r" => r, "g" => g, "b" => b, "hex" => "#rrggbb")</code>[m
[32m+[m[32m   *[m
[32m+[m[32m   * @link http://www.w3.org/TR/CSS21/colors.html#propdef-color[m
[32m+[m[32m   * @return array[m
[32m+[m[32m   */[m
[32m+[m[32m  function get_color() {[m
[32m+[m[32m    return $this->munge_color( $this->_props["color"] );[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Returns the background colour as an array[m
[32m+[m[32m   *[m
[32m+[m[32m   * The returned array has the same format as {@link Style::get_color()}[m
[32m+[m[32m   *[m
[32m+[m[32m   * @link http://www.w3.org/TR/CSS21/colors.html#propdef-background-color[m
[32m+[m[32m   * @return array[m
[32m+[m[32m   */[m
[32m+[m[32m  function get_background_color() {[m
[32m+[m[32m    return $this->munge_color( $this->_props["background_color"] );[m
[32m+[m[32m  }[m
[32m+[m[41m  [m
[32m+[m[32m  /**[m
[32m+[m[32m   * Returns the background position as an array[m
[32m+[m[32m   *[m
[32m+[m[32m   * The returned array has the following format:[m
[32m+[m[32m   * <code>array(x,y, "x" => x, "y" => y)</code>[m
[32m+[m[32m   *[m
[32m+[m[32m   * @link http://www.w3.org/TR/CSS21/colors.html#propdef-background-position[m
[32m+[m[32m   * @return array[m
[32m+[m[32m   */[m
[32m+[m[32m  function get_background_position() {[m
[32m+[m[32m    $tmp = explode(" ", $this->_props["background_position"]);[m
[32m+[m
[32m+[m[32m    switch ($tmp[0]) {[m
[32m+[m
[32m+[m[32m    case "left":[m
[32m+[m[32m      $x = "0%";[m
[32m+[m[32m      break;[m
[32m+[m
[32m+[m[32m    case "right":[m
[32m+[m[32m      $x = "100%";[m
[32m+[m[32m      break;[m
[32m+[m
[32m+[m[32m    case "top":[m
[32m+[m[32m      $y = "0%";[m
[32m+[m[32m      break;[m
[32m+[m
[32m+[m[32m    case "bottom":[m
[32m+[m[32m      $y = "100%";[m
[32m+[m[32m      break;[m
[32m+[m
[32m+[m[32m    case "center":[m
[32m+[m[32m      $x = "50%";[m
[32m+[m[32m      $y = "50%";[m
[32m+[m[32m      break;[m
[32m+[m
[32m+[m[32m    default:[m
[32m+[m[32m      $x = $tmp[0];[m
[32m+[m[32m      break;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    if ( isset($tmp[1]) ) {[m
[32m+[m
[32m+[m[32m      switch ($tmp[1]) {[m
[32m+[m[32m      case "left":[m
[32m+[m[32m        $x = "0%";[m
[32m+[m[32m        break;[m
[32m+[m[41m        [m
[32m+[m[32m      case "right":[m
[32m+[m[32m        $x = "100%";[m
[32m+[m[32m        break;[m
[32m+[m[41m        [m
[32m+[m[32m      case "top":[m
[32m+[m[32m        $y = "0%";[m
[32m+[m[32m        break;[m
[32m+[m[41m        [m
[32m+[m[32m      case "bottom":[m
[32m+[m[32m        $y = "100%";[m
[32m+[m[32m        break;[m
[32m+[m[41m        [m
[32m+[m[32m      case "center":[m
[32m+[m[32m        if ( $tmp[0] === "left" || $tmp[0] === "right" || $tmp[0] === "center" )[m
[32m+[m[32m          $y = "50%";[m
[32m+[m[32m        else[m
[32m+[m[32m          $x = "50%";[m
[32m+[m[32m        break;[m
[32m+[m[41m        [m
[32m+[m[32m      default:[m
[32m+[m[32m        $y = $tmp[1];[m
[32m+[m[32m        break;[m
[32m+[m[32m      }[m
[32m+[m
[32m+[m[32m    } else {[m
[32m+[m[32m      $y = "50%";[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    if ( !isset($x) )[m
[32m+[m[32m      $x = "0%";[m
[32m+[m
[32m+[m[32m    if ( !isset($y) )[m
[32m+[m[32m      $y = "0%";[m
[32m+[m
[32m+[m[32m    return array( 0 => $x, "x" => $x,[m
[32m+[m[32m                  1 => $y, "y" => $y );[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Returns the background as it is currently stored[m
[32m+[m[32m   *[m
[32m+[m[32m   * (currently anyway only for completeness.[m
[32m+[m[32m   * not used for further processing)[m
[32m+[m[32m   *[m
[32m+[m[32m   * @link http://www.w3.org/TR/CSS21/colors.html#propdef-background-attachment[m
[32m+[m[32m   * @return string[m
[32m+[m[32m   */[m
[32m+[m[32m  function get_background_attachment() {[m
[32m+[m[32m    return $this->_props["background_attachment"];[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Returns the background_repeat as it is currently stored[m
[32m+[m[32m   *[m
[32m+[m[32m   * (currently anyway only for completeness.[m
[32m+[m[32m   * not used for further processing)[m
[32m+[m[32m   *[m
[32m+[m[32m   * @link http://www.w3.org/TR/CSS21/colors.html#propdef-background-repeat[m
[32m+[m[32m   * @return string[m
[32m+[m[32m   */[m
[32m+[m[32m  function get_background_repeat() {[m
[32m+[m[32m    return $this->_props["background_repeat"];[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Returns the background as it is currently stored[m
[32m+[m[32m   *[m
[32m+[m[32m   * (currently anyway only for completeness.[m
[32m+[m[32m   * not used for further processing, but the individual get_background_xxx)[m
[32m+[m[32m   *[m
[32m+[m[32m   * @link http://www.w3.org/TR/CSS21/colors.html#propdef-background[m
[32m+[m[32m   * @return string[m
[32m+[m[32m   */[m
[32m+[m[32m  function get_background() {[m
[32m+[m[32m    return $this->_props["background"];[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m
[32m+[m[32m  /**#@+[m
[32m+[m[32m   * Returns the border colour as an array[m
[32m+[m[32m   *[m
[32m+[m[32m   * See {@link Style::get_color()}[m
[32m+[m[32m   *[m
[32m+[m[32m   * @link http://www.w3.org/TR/CSS21/box.html#border-color-properties[m
[32m+[m[32m   * @return array[m
[32m+[m[32m   */[m
[32m+[m[32m  function get_border_top_color() {[m
[32m+[m[32m    if ( $this->_props["border_top_color"] === "" ) {[m
[32m+[m[32m      //see __set and __get, on all assignments clear cache![m
[32m+[m[32m      $this->_prop_cache["border_top_color"] = null;[m
[32m+[m[32m      $this->_props["border_top_color"] = $this->__get("color");[m
[32m+[m[32m    }[m
[32m+[m[32m    return $this->munge_color($this->_props["border_top_color"]);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  function get_border_right_color() {[m
[32m+[m[32m    if ( $this->_props["border_right_color"] === "" ) {[m
[32m+[m[32m      //see __set and __get, on all assignments clear cache![m
[32m+[m[32m      $this->_prop_cache["border_right_color"] = null;[m
[32m+[m[32m      $this->_props["border_right_color"] = $this->__get("color");[m
[32m+[m[32m    }[m
[32m+[m[32m    return $this->munge_color($this->_props["border_right_color"]);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  function get_border_bottom_color() {[m
[32m+[m[32m    if ( $this->_props["border_bottom_color"] === "" ) {[m
[32m+[m[32m      //see __set and __get, on all assignments clear cache![m
[32m+[m[32m      $this->_prop_cache["border_bottom_color"] = null;[m
[32m+[m[32m      $this->_props["border_bottom_color"] = $this->__get("color");[m
[32m+[m[32m    }[m
[32m+[m[32m    return $this->munge_color($this->_props["border_bottom_color"]);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  function get_border_left_color() {[m
[32m+[m[32m    if ( $this->_props["border_left_color"] === "" ) {[m
[32m+[m[32m      //see __set and __get, on all assignments clear cache![m
[32m+[m[32m      $this->_prop_cache["border_left_color"] = null;[m
[32m+[m[32m      $this->_props["border_left_color"] = $this->__get("color");[m
[32m+[m[32m    }[m
[32m+[m[32m    return $this->munge_color($this->_props["border_left_color"]);[m
[32m+[m[32m  }[m
[32m+[m[41m  [m
[32m+[m[32m  /**#@-*/[m
[32m+[m
[32m+[m[32m /**#@+[m
[32m+[m[32m   * Returns the border width, as it is currently stored[m
[32m+[m[32m   *[m
[32m+[m[32m   * @link http://www.w3.org/TR/CSS21/box.html#border-width-properties[m
[32m+[m[32m   * @return float|string[m
[32m+[m[32m   */[m
[32m+[m[32m  function get_border_top_width() {[m
[32m+[m[32m    $style = $this->__get("border_top_style");[m
[32m+[m[32m    return $style !== "none" && $style !== "hidden" ? $this->length_in_pt($this->_props["border_top_width"]) : 0;[m
[32m+[m[32m  }[m
[32m+[m[41m  [m
[32m+[m[32m  function get_border_right_width() {[m
[32m+[m[32m    $style = $this->__get("border_right_style");[m
[32m+[m[32m    return $style !== "none" && $style !== "hidden" ? $this->length_in_pt($this->_props["border_right_width"]) : 0;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  function get_border_bottom_width() {[m
[32m+[m[32m    $style = $this->__get("border_bottom_style");[m
[32m+[m[32m    return $style !== "none" && $style !== "hidden" ? $this->length_in_pt($this->_props["border_bottom_width"]) : 0;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  function get_border_left_width() {[m
[32m+[m[32m    $style = $this->__get("border_left_style");[m
[32m+[m[32m    return $style !== "none" && $style !== "hidden" ? $this->length_in_pt($this->_props["border_left_width"]) : 0;[m
[32m+[m[32m  }[m
[32m+[m[32m  /**#@-*/[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Return an array of all border properties.[m
[32m+[m[32m   *[m
[32m+[m[32m   * The returned array has the following structure:[m
[32m+[m[32m   * <code>[m
[32m+[m[32m   * array("top" => array("width" => [border-width],[m
[32m+[m[32m   *                      "style" => [border-style],[m
[32m+[m[32m   *                      "color" => [border-color (array)]),[m
[32m+[m[32m   *       "bottom" ... )[m
[32m+[m[32m   * </code>[m
[32m+[m[32m   *[m
[32m+[m[32m   * @return array[m
[32m+[m[32m   */[m
[32m+[m[32m  function get_border_properties() {[m
[32m+[m[32m    return array("top" => array("width" => $this->__get("border_top_width"),[m
[32m+[m[32m                                "style" => $this->__get("border_top_style"),[m
[32m+[m[32m                                "color" => $this->__get("border_top_color")),[m
[32m+[m[32m                 "bottom" => array("width" => $this->__get("border_bottom_width"),[m
[32m+[m[32m                                   "style" => $this->__get("border_bottom_style"),[m
[32m+[m[32m                                   "color" => $this->__get("border_bottom_color")),[m
[32m+[m[32m                 "right" => array("width" => $this->__get("border_right_width"),[m
[32m+[m[32m                                  "style" => $this->__get("border_right_style"),[m
[32m+[m[32m                                  "color" => $this->__get("border_right_color")),[m
[32m+[m[32m                 "left" => array("width" => $this->__get("border_left_width"),[m
[32m+[m[32m                                 "style" => $this->__get("border_left_style"),[m
[32m+[m[32m                                 "color" => $this->__get("border_left_color")));[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Return a single border property[m
[32m+[m[32m   *[m
[32m+[m[32m   * @return mixed[m
[32m+[m[32m   */[m
[32m+[m[32m  protected function _get_border($side) {[m
[32m+[m[32m    $color = $this->__get("border_" . $side . "_color");[m
[32m+[m[41m    [m
[32m+[m[32m    return $this->__get("border_" . $side . "_width") . " " .[m
[32m+[m[32m      $this->__get("border_" . $side . "_style") . " " . $color["hex"];[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**#@+[m
[32m+[m[32m   * Return full border properties as a string[m
[32m+[m[32m   *[m
[32m+[m[32m   * Border properties are returned just as specified in CSS:[m
[32m+[m[32m   * <pre>[width] [style] [color]</pre>[m
[32m+[m[32m   * e.g. "1px solid blue"[m
[32m+[m[32m   *[m
[32m+[m[32m   * @link http://www.w3.org/TR/CSS21/box.html#border-shorthand-properties[m
[32m+[m[32m   * @return string[m
[32m+[m[32m   */[m
[32m+[m[32m  function get_border_top() { return $this->_get_border("top"); }[m
[32m+[m[32m  function get_border_right() { return $this->_get_border("right"); }[m
[32m+[m[32m  function get_border_bottom() { return $this->_get_border("bottom"); }[m
[32m+[m[32m  function get_border_left() { return $this->_get_border("left"); }[m
[32m+[m[32m  /**#@-*/[m
[32m+[m[41m  [m
[32m+[m[32m  /**[m
[32m+[m[32m   * Returns the outline colour as an array[m
[32m+[m[32m   *[m
[32m+[m[32m   * See {@link Style::get_color()}[m
[32m+[m[32m   *[m
[32m+[m[32m   * @link http://www.w3.org/TR/CSS21/box.html#border-color-properties[m
[32m+[m[32m   * @return array[m
[32m+[m[32m   */[m
[32m+[m[32m  function get_outline_color() {[m
[32m+[m[32m    if ( $this->_props["outline_color"] === "" ) {[m
[32m+[m[32m      //see __set and __get, on all assignments clear cache![m
[32m+[m[32m      $this->_prop_cache["outline_color"] = null;[m
[32m+[m[32m      $this->_props["outline_color"] = $this->__get("color");[m
[32m+[m[32m    }[m
[32m+[m[32m    return $this->munge_color($this->_props["outline_color"]);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m /**#@+[m
[32m+[m[32m   * Returns the outline width, as it is currently stored[m
[32m+[m[32m   * @return float|string[m
[32m+[m[32m   */[m
[32m+[m[32m  function get_outline_width() {[m
[32m+[m[32m    $style = $this->__get("outline_style");[m
[32m+[m[32m    return $style !== "none" && $style !== "hidden" ? $this->length_in_pt($this->_props["outline_width"]) : 0;[m
[32m+[m[32m  }[m
[32m+[m[41m  [m
[32m+[m[32m  /**#@+[m
[32m+[m[32m   * Return full outline properties as a string[m
[32m+[m[32m   *[m
[32m+[m[32m   * Outline properties are returned just as specified in CSS:[m
[32m+[m[32m   * <pre>[width] [style] [color]</pre>[m
[32m+[m[32m   * e.g. "1px solid blue"[m
[32m+[m[32m   *[m
[32m+[m[32m   * @link http://www.w3.org/TR/CSS21/box.html#border-shorthand-properties[m
[32m+[m[32m   * @return string[m
[32m+[m[32m   */[m
[32m+[m[32m  function get_outline() {[m
[32m+[m[32m    $color = $this->__get("outline_color");[m
[32m+[m[32m    return[m[41m [m
[32m+[m[32m      $this->__get("outline_width") . " " .[m[41m [m
[32m+[m[32m      $this->__get("outline_style") . " " .[m[41m [m
[32m+[m[32m      $color["hex"];[m[41m [m
[32m+[m[32m  }[m
[32m+[m[32m  /**#@-*/[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Returns border spacing as an array[m
[32m+[m[32m   *[m
[32m+[m[32m   * The array has the format (h_space,v_space)[m
[32m+[m[32m   *[m
[32m+[m[32m   * @link http://www.w3.org/TR/CSS21/tables.html#propdef-border-spacing[m
[32m+[m[32m   * @return array[m
[32m+[m[32m   */[m
[32m+[m[32m  function get_border_spacing() {[m
[32m+[m[32m    return explode(" ", $this->_props["border_spacing"]);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m/*==============================*/[m
[32m+[m
[32m+[m[32m  /*[m
[32m+[m[32m   !important attribute[m
[32m+[m[32m   For basic functionality of the !important attribute with overloading[m
[32m+[m[32m   of several styles of an element, changes in inherit(), merge() and _parse_properties()[m
[32m+[m[32m   are sufficient [helpers var $_important_props, __construct(), important_set(), important_get()][m
[32m+[m
[32m+[m[32m   Only for combined attributes extra treatment needed. See below.[m
[32m+[m
[32m+[m[32m   div { border: 1px red; }[m
[32m+[m[32m   div { border: solid; } // Not combined! Only one occurence of same style per context[m
[32m+[m[32m   //[m
[32m+[m[32m   div { border: 1px red; }[m
[32m+[m[32m   div a { border: solid; } // Adding to border style ok by inheritance[m
[32m+[m[32m   //[m
[32m+[m[32m   div { border-style: solid; } // Adding to border style ok because of different styles[m
[32m+[m[32m   div { border: 1px red; }[m
[32m+[m[32m   //[m
[32m+[m[32m   div { border-style: solid; !important} // border: overrides, even though not !important[m
[32m+[m[32m   div { border: 1px dashed red; }[m
[32m+[m[32m   //[m
[32m+[m[32m   div { border: 1px red; !important }[m
[32m+[m[32m   div a { border-style: solid; } // Need to override because not set[m
[32m+[m
[32m+[m[32m   Special treatment:[m
[32m+[m[32m   At individual property like border-top-width need to check whether overriding value is also !important.[m
[32m+[m[32m   Also store the !important condition for later overrides.[m
[32m+[m[32m   Since not known who is initiating the override, need to get passed !importan as parameter.[m
[32m+[m[32m   !important Paramter taken as in the original style in the css file.[m
[32m+[m[32m   When poperty border !important given, do not mark subsets like border_style as important. Only[m
[32m+[m[32m   individual properties.[m
[32m+[m
[32m+[m[32m   Note:[m
[32m+[m[32m   Setting individual property directly from css with e.g. set_border_top_style() is not needed, because[m
[32m+[m[32m   missing set funcions handled by a generic handler __set(), including the !important.[m
[32m+[m[32m   Setting individual property of as sub-property is handled below.[m
[32m+[m
[32m+[m[32m   Implementation see at _set_style_side_type()[m
[32m+[m[32m   Callers _set_style_sides_type(), _set_style_type, _set_style_type_important()[m
[32m+[m
[32m+[m[32m   Related functionality for background, padding, margin, font, list_style[m
[32m+[m[32m  */[m
[32m+[m
[32m+[m[32m  /* Generalized set function for individual attribute of combined style.[m
[32m+[m[32m   * With check for !important[m
[32m+[m[32m   * Applicable for background, border, padding, margin, font, list_style[m
[32m+[m[32m   * Note: $type has a leading underscore (or is empty), the others not.[m
[32m+[m[32m   */[m
[32m+[m[32m  protected function _set_style_side_type($style,$side,$type,$val,$important) {[m
[32m+[m[32m    $prop = $style.'_'.$side.$type;[m
[32m+[m[41m    [m
[32m+[m[32m    if ( !isset($this->_important_props[$prop]) || $important) {[m
[32m+[m[32m      //see __set and __get, on all assignments clear cache![m
[32m+[m[32m      $this->_prop_cache[$prop] = null;[m
[32m+[m[32m      if ($important) {[m
[32m+[m[32m        $this->_important_props[$prop] = true;[m
[32m+[m[32m      }[m
[32m+[m[32m      $this->_props[$prop] = $val;[m
[32m+[m[32m    }[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  protected function _set_style_sides_type($style,$top,$right,$bottom,$left,$type,$important) {[m
[32m+[m[32m      $this->_set_style_side_type($style,'top',$type,$top,$important);[m
[32m+[m[32m      $this->_set_style_side_type($style,'right',$type,$right,$important);[m
[32m+[m[32m      $this->_set_style_side_type($style,'bottom',$type,$bottom,$important);[m
[32m+[m[32m      $this->_set_style_side_type($style,'left',$type,$left,$important);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  protected function _set_style_type($style,$type,$val,$important) {[m
[32m+[m[32m    $arr = explode(" ", $val);[m
[32m+[m[32m    switch (count($arr)) {[m
[32m+[m[32m    case 1:[m
[32m+[m[32m      $this->_set_style_sides_type($style,$arr[0],$arr[0],$arr[0],$arr[0],$type,$important);[m
[32m+[m[32m      break;[m
[32m+[m[32m    case 2:[m
[32m+[m[32m      $this->_set_style_sides_type($style,$arr[0],$arr[1],$arr[0],$arr[1],$type,$important);[m
[32m+[m[32m      break;[m
[32m+[m[32m    case 3:[m
[32m+[m[32m      $this->_set_style_sides_type($style,$arr[0],$arr[1],$arr[2],$arr[1],$type,$important);[m
[32m+[m[32m      break;[m
[32m+[m[32m    case 4:[m
[32m+[m[32m      $this->_set_style_sides_type($style,$arr[0],$arr[1],$arr[2],$arr[3],$type,$important);[m
[32m+[m[32m      break;[m
[32m+[m[32m    default:[m
[32m+[m[32m      break;[m
[32m+[m[32m    }[m
[32m+[m[32m    //see __set and __get, on all assignments clear cache![m
[32m+[m[32m    $this->_prop_cache[$style.$type] = null;[m
[32m+[m[32m    $this->_props[$style.$type] = $val;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  protected function _set_style_type_important($style,$type,$val) {[m
[32m+[m[32m    $this->_set_style_type($style,$type,$val,isset($this->_important_props[$style.$type]));[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /* Anyway only called if _important matches and is assigned[m
[32m+[m[32m   * E.g. _set_style_side_type($style,$side,'',str_replace("none", "0px", $val),isset($this->_important_props[$style.'_'.$side]));[m
[32m+[m[32m   */[m
[32m+[m[32m  protected function _set_style_side_width_important($style,$side,$val) {[m
[32m+[m[32m    //see __set and __get, on all assignments clear cache![m
[32m+[m[32m    $this->_prop_cache[$style.'_'.$side] = null;[m
[32m+[m[32m    $this->_props[$style.'_'.$side] = str_replace("none", "0px", $val);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  protected function _set_style($style,$val,$important) {[m
[32m+[m[32m    if ( !isset($this->_important_props[$style]) || $important) {[m
[32m+[m[32m      if ($important) {[m
[32m+[m[32m        $this->_important_props[$style] = true;[m
[32m+[m[32m      }[m
[32m+[m[32m      //see __set and __get, on all assignments clear cache![m
[32m+[m[32m      $this->_prop_cache[$style] = null;[m
[32m+[m[32m      $this->_props[$style] = $val;[m
[32m+[m[32m    }[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  protected function _image($val) {[m
[32m+[m[32m    $DEBUGCSS=DEBUGCSS;[m
[32m+[m[41m    [m
[32m+[m[32m    if ( mb_strpos($val, "url") === false ) {[m
[32m+[m[32m      $path = "none"; //Don't resolve no image -> otherwise would prefix path and no longer recognize as none[m
[32m+[m[32m    } else {[m
[32m+[m[32m      $val = preg_replace("/url\(['\"]?([^'\")]+)['\"]?\)/","\\1", trim($val));[m
[32m+[m
[32m+[m[32m      // Resolve the url now in the context of the current stylesheet[m
[32m+[m[32m      $parsed_url = explode_url($val);[m
[32m+[m[32m      if ( $parsed_url["protocol"] == "" && $this->_stylesheet->get_protocol() == "" ) {[m
[32m+[m[32m        if ($parsed_url["path"][0] === '/' || $parsed_url["path"][0] === '\\' ) {[m
[32m+[m[32m          $path = $_SERVER["DOCUMENT_ROOT"].'/';[m
[32m+[m[32m        } else {[m
[32m+[m[32m          $path = $this->_stylesheet->get_base_path();[m
[32m+[m[32m        }[m
[32m+[m[32m        $path .= $parsed_url["path"] . $parsed_url["file"];[m
[32m+[m[32m        $path = realpath($path);[m
[32m+[m[32m        // If realpath returns FALSE then specifically state that there is no background image[m
[32m+[m[32m        if (!$path) { $path = 'none'; }[m
[32m+[m[32m      } else {[m
[32m+[m[32m        $path = build_url($this->_stylesheet->get_protocol(),[m
[32m+[m[32m                          $this->_stylesheet->get_host(),[m
[32m+[m[32m                          $this->_stylesheet->get_base_path(),[m
[32m+[m[32m                          $val);[m
[32m+[m[32m      }[m
[32m+[m[32m    }[m
[32m+[m[32m    if ($DEBUGCSS) {[m
[32m+[m[32m      print "<pre>[_image\n";[m
[32m+[m[32m      print_r($parsed_url);[m
[32m+[m[32m      print $this->_stylesheet->get_protocol()."\n".$this->_stylesheet->get_base_path()."\n".$path."\n";[m
[32m+[m[32m      print "_image]</pre>";;[m
[32m+[m[32m    }[m
[32m+[m[32m    return $path;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m/*======================*/[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Sets colour[m
[32m+[m[32m   *[m
[32m+[m[32m   * The colour parameter can be any valid CSS colour value[m
[32m+[m[32m   *[m
[32m+[m[32m   * @link http://www.w3.org/TR/CSS21/colors.html#propdef-color[m
[32m+[m[32m   * @param string $colour[m
[32m+[m[32m   */[m
[32m+[m[32m  function set_color($colour) {[m
[32m+[m[32m    $col = $this->munge_colour($colour);[m
[32m+[m
[32m+[m[32m    if ( is_null($col) )[m
[32m+[m[32m      $col = self::$_defaults["color"];[m
[32m+[m
[32m+[m[32m    //see __set and __get, on all assignments clear cache, not needed on direct set through __set[m
[32m+[m[32m    $this->_prop_cache["color"] = null;[m
[32m+[m[32m    $this->_props["color"] = $col["hex"];[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Sets the background colour[m
[32m+[m[32m   *[m
[32m+[m[32m   * @link http://www.w3.org/TR/CSS21/colors.html#propdef-background-color[m
[32m+[m[32m   * @param string $colour[m
[32m+[m[32m   */[m
[32m+[m[32m  function set_background_color($colour) {[m
[32m+[m[32m    $col = $this->munge_colour($colour);[m
[32m+[m[32m    if ( is_null($col) )[m
[32m+[m[32m      $col = self::$_defaults["background_color"];[m
[32m+[m
[32m+[m[32m    //see __set and __get, on all assignments clear cache, not needed on direct set through __set[m
[32m+[m[32m    $this->_prop_cache["background_color"] = null;[m
[32m+[m[32m    $this->_props["background_color"] = is_array($col) ? $col["hex"] : $col;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Set the background image url[m
[32m+[m[32m   *[m
[32m+[m[32m   * @link http://www.w3.org/TR/CSS21/colors.html#background-properties[m
[32m+[m[32m   * @param string $url[m
[32m+[m[32m   */[m
[32m+[m[32m  function set_background_image($val) {[m
[32m+[m[32m    //see __set and __get, on all assignments clear cache, not needed on direct set through __set[m
[32m+[m[32m    $this->_prop_cache["background_image"] = null;[m
[32m+[m[32m    $this->_props["background_image"] = $this->_image($val);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Sets the background repeat[m
[32m+[m[32m   *[m
[32m+[m[32m   * @link http://www.w3.org/TR/CSS21/colors.html#propdef-background-repeat[m
[32m+[m[32m   * @param string $val[m
[32m+[m[32m   */[m
[32m+[m[32m  function set_background_repeat($val) {[m
[32m+[m[32m    if ( is_null($val) )[m
[32m+[m[32m      $val = self::$_defaults["background_repeat"];[m
[32m+[m[41m      [m
[32m+[m[32m    //see __set and __get, on all assignments clear cache, not needed on direct set through __set[m
[32m+[m[32m    $this->_prop_cache["background_repeat"] = null;[m
[32m+[m[32m    $this->_props["background_repeat"] = $val;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Sets the background attachment[m
[32m+[m[32m   *[m
[32m+[m[32m   * @link http://www.w3.org/TR/CSS21/colors.html#propdef-background-attachment[m
[32m+[m[32m   * @param string $val[m
[32m+[m[32m   */[m
[32m+[m[32m  function set_background_attachment($val) {[m
[32m+[m[32m    if ( is_null($val) )[m
[32m+[m[32m      $val = self::$_defaults["background_attachment"];[m
[32m+[m
[32m+[m[32m    //see __set and __get, on all assignments clear cache, not needed on direct set through __set[m
[32m+[m[32m    $this->_prop_cache["background_attachment"] = null;[m
[32m+[m[32m    $this->_props["background_attachment"] = $val;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Sets the background position[m
[32m+[m[32m   *[m
[32m+[m[32m   * @link http://www.w3.org/TR/CSS21/colors.html#propdef-background-position[m
[32m+[m[32m   * @param string $val[m
[32m+[m[32m   */[m
[32m+[m[32m  function set_background_position($val) {[m
[32m+[m[32m    if ( is_null($val) )[m
[32m+[m[32m      $val = self::$_defaults["background_position"];[m
[32m+[m
[32m+[m[32m    //see __set and __get, on all assignments clear cache, not needed on direct set through __set[m
[32m+[m[32m    $this->_prop_cache["background_position"] = null;[m
[32m+[m[32m    $this->_props["background_position"] = $val;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Sets the background - combined options[m
[32m+[m[32m   *[m
[32m+[m[32m   * @link http://www.w3.org/TR/CSS21/colors.html#propdef-background[m
[32m+[m[32m   * @param string $val[m
[32m+[m[32m   */[m
[32m+[m[32m  function set_background($val) {[m
[32m+[m[32m    $col = null;[m
[32m+[m[32m    $pos = array();[m
[32m+[m[32m    $tmp = preg_replace("/\s*\,\s*/", ",", $val); // when rgb() has spaces[m
[32m+[m[32m    $tmp = explode(" ", $tmp);[m
[32m+[m[32m    $important = isset($this->_important_props["background"]);[m
[32m+[m[41m    [m
[32m+[m[32m    foreach($tmp as $attr) {[m
[32m+[m[32m      if (mb_substr($attr, 0, 3) === "url" || $attr === "none") {[m
[32m+[m[32m        $this->_set_style("background_image", $this->_image($attr), $important);[m
[32m+[m[32m      } else if ($attr === "fixed" || $attr === "scroll") {[m
[32m+[m[32m        $this->_set_style("background_attachment", $attr, $important);[m
[32m+[m[32m      } else if ($attr === "repeat" || $attr === "repeat-x" || $attr === "repeat-y" || $attr === "no-repeat") {[m
[32m+[m[32m        $this->_set_style("background_repeat", $attr, $important);[m
[32m+[m[32m      } else if (($col = $this->munge_color($attr)) != null ) {[m
[32m+[m[32m        $this->_set_style("background_color", is_array($col) ? $col["hex"] : $col, $important);[m
[32m+[m[32m      } else {[m
[32m+[m[32m        $pos[] = $attr;[m
[32m+[m[32m      }[m
[32m+[m[32m    }[m
[32m+[m[41m    [m
[32m+[m[32m    if (count($pos)) {[m
[32m+[m[32m      $this->_set_style("background_position",implode(' ',$pos), $important);[m
[32m+[m[32m    }[m
[32m+[m[32m    //see __set and __get, on all assignments clear cache, not needed on direct set through __set[m
[32m+[m[32m    $this->_prop_cache["background"] = null;[m
[32m+[m[32m    $this->_props["background"] = $val;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Sets the font size[m
[32m+[m[32m   *[m
[32m+[m[32m   * $size can be any acceptable CSS size[m
[32m+[m[32m   *[m
[32m+[m[32m   * @link http://www.w3.org/TR/CSS21/fonts.html#propdef-font-size[m
[32m+[m[32m   * @param string|float $size[m
[32m+[m[32m   */[m
[32m+[m[32m  function set_font_size($size) {[m
[32m+[m[32m    $this->__font_size_calculated = false;[m
[32m+[m[32m    //see __set and __get, on all assignments clear cache, not needed on direct set through __set[m
[32m+[m[32m    $this->_prop_cache["font_size"] = null;[m
[32m+[m[32m    $this->_props["font_size"] = $size;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Sets the font style[m
[32m+[m[32m   *[m
[32m+[m[32m   * combined attributes[m
[32m+[m[32m   * set individual attributes also, respecting !important mark[m
[32m+[m[32m   * exactly this order, separate by space. Multiple fonts separated by comma:[m
[32m+[m[32m   * font-style, font-variant, font-weight, font-size, line-height, font-family[m
[32m+[m[32m   *[m
[32m+[m[32m   * Other than with border and list, existing partial attributes should[m
[32m+[m[32m   * reset when starting here, even when not mentioned.[m
[32m+[m[32m   * If individual attribute is !important and explicite or implicite replacement is not,[m
[32m+[m[32m   * keep individual attribute[m
[32m+[m[32m   *[m
[32m+[m[32m   * require whitespace as delimiters for single value attributes[m
[32m+[m[32m   * On delimiter "/" treat first as font height, second as line height[m
[32m+[m[32m   * treat all remaining at the end of line as font[m
[32m+[m[32m   * font-style, font-variant, font-weight, font-size, line-height, font-family[m
[32m+[m[32m   *[m
[32m+[m[32m   * missing font-size and font-family might be not allowed, but accept it here and[m
[32m+[m[32m   * use default (medium size, enpty font name)[m
[32m+[m[32m   *[m
[32m+[m[32m   * @link http://www.w3.org/TR/CSS21/generate.html#propdef-list-style[m
[32m+[m[32m   * @param $val[m
[32m+[m[32m   */[m
[32m+[m[32m  function set_font($val) {[m
[32m+[m[32m    $this->__font_size_calculated = false;[m
[32m+[m[32m    //see __set and __get, on all assignments clear cache, not needed on direct set through __set[m
[32m+[m[32m    $this->_prop_cache["font"] = null;[m
[32m+[m[32m    $this->_props["font"] = $val;[m
[32m+[m
[32m+[m[32m    $important = isset($this->_important_props["font"]);[m
[32m+[m
[32m+[m[32m    if ( preg_match("/^(italic|oblique|normal)\s*(.*)$/i",$val,$match) ) {[m
[32m+[m[32m      $this->_set_style("font_style", $match[1], $important);[m
[32m+[m[32m      $val = $match[2];[m
[32m+[m[32m    } else {[m
[32m+[m[32m      $this->_set_style("font_style", self::$_defaults["font_style"], $important);[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    if ( preg_match("/^(small-caps|normal)\s*(.*)$/i",$val,$match) ) {[m
[32m+[m[32m      $this->_set_style("font_variant", $match[1], $important);[m
[32m+[m[32m      $val = $match[2];[m
[32m+[m[32m    } else {[m
[32m+[m[32m      $this->_set_style("font_variant", self::$_defaults["font_variant"], $important);[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    //matching numeric value followed by unit -> this is indeed a subsequent font size. Skip![m
[32m+[m[32m    if ( preg_match("/^(bold|bolder|lighter|100|200|300|400|500|600|700|800|900|normal)\s*(.*)$/i",$val,$match) &&[m
[32m+[m[32m         !preg_match("/^(?:pt|px|pc|em|ex|in|cm|mm|%)/",$match[2])[m
[32m+[m[32m       ) {[m
[32m+[m[32m      $this->_set_style("font_weight", $match[1], $important);[m
[32m+[m[32m      $val = $match[2];[m
[32m+[m[32m    } else {[m
[32m+[m[32m      $this->_set_style("font_weight", self::$_defaults["font_weight"], $important);[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    if ( preg_match("/^(xx-small|x-small|small|medium|large|x-large|xx-large|smaller|larger|\d+\s*(?:pt|px|pc|em|ex|in|cm|mm|%))\s*(.*)$/i",$val,$match) ) {[m
[32m+[m[32m      $this->_set_style("font_size", $match[1], $important);[m
[32m+[m[32m      $val = $match[2];[m
[32m+[m[32m      if (preg_match("/^\/\s*(\d+\s*(?:pt|px|pc|em|ex|in|cm|mm|%))\s*(.*)$/i",$val,$match) ) {[m
[32m+[m[32m        $this->_set_style("line_height", $match[1], $important);[m
[32m+[m[32m        $val = $match[2];[m
[32m+[m[32m      } else {[m
[32m+[m[32m        $this->_set_style("line_height", self::$_defaults["line_height"], $important);[m
[32m+[m[32m      }[m
[32m+[m[32m    } else {[m
[32m+[m[32m      $this->_set_style("font_size", self::$_defaults["font_size"], $important);[m
[32m+[m[32m      $this->_set_style("line_height", self::$_defaults["line_height"], $important);[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    if(strlen($val) != 0) {[m
[32m+[m[32m      $this->_set_style("font_family", $val, $important);[m
[32m+[m[32m    } else {[m
[32m+[m[32m      $this->_set_style("font_family", self::$_defaults["font_family"], $important);[m
[32m+[m[32m    }[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**#@+[m
[32m+[m[32m   * Sets page break properties[m
[32m+[m[32m   *[m
[32m+[m[32m   * @link http://www.w3.org/TR/CSS21/page.html#page-breaks[m
[32m+[m[32m   * @param string $break[m
[32m+[m[32m   */[m
[32m+[m[32m  function set_page_break_before($break) {[m
[32m+[m[32m    if ($break === "left" || $break === "right")[m
[32m+[m[32m      $break = "always";[m
[32m+[m
[32m+[m[32m    //see __set and __get, on all assignments clear cache, not needed on direct set through __set[m
[32m+[m[32m    $this->_prop_cache["page_break_before"] = null;[m
[32m+[m[32m    $this->_props["page_break_before"] = $break;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  function set_page_break_after($break) {[m
[32m+[m[32m    if ($break === "left" || $break === "right")[m
[32m+[m[32m      $break = "always";[m
[32m+[m
[32m+[m[32m    //see __set and __get, on all assignments clear cache, not needed on direct set through __set[m
[32m+[m[32m    $this->_prop_cache["page_break_after"] = null;[m
[32m+[m[32m    $this->_props["page_break_after"] = $break;[m
[32m+[m[32m  }[m
[32m+[m[32m  /**#@-*/[m
[32m+[m[41m    [m
[32m+[m[32m  //........................................................................[m
[32m+[m
[32m+[m[32m  /**#@+[m
[32m+[m[32m   * Sets the margin size[m
[32m+[m[32m   *[m
[32m+[m[32m   * @link http://www.w3.org/TR/CSS21/box.html#margin-properties[m
[32m+[m[32m   * @param $val[m
[32m+[m[32m   */[m
[32m+[m[32m  function set_margin_top($val) {[m
[32m+[m[32m    $this->_set_style_side_width_important('margin','top',$val);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  function set_margin_right($val) {[m
[32m+[m[32m    $this->_set_style_side_width_important('margin','right',$val);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  function set_margin_bottom($val) {[m
[32m+[m[32m    $this->_set_style_side_width_important('margin','bottom',$val);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  function set_margin_left($val) {[m
[32m+[m[32m    $this->_set_style_side_width_important('margin','left',$val);[m
[32m+[m[32m  }[m
[32m+[m[41m  [m
[32m+[m[32m  function set_margin($val) {[m
[32m+[m[32m    $val = str_replace("none", "0px", $val);[m
[32m+[m[32m    $this->_set_style_type_important('margin','',$val);[m
[32m+[m[32m  }[m
[32m+[m[32m  /**#@-*/[m
[32m+[m
[32m+[m[32m  /**#@+[m
[32m+[m[32m   * Sets the padding size[m
[32m+[m[32m   *[m
[32m+[m[32m   * @link http://www.w3.org/TR/CSS21/box.html#padding-properties[m
[32m+[m[32m   * @param $val[m
[32m+[m[32m   */[m
[32m+[m[32m  function set_padding_top($val) {[m
[32m+[m[32m    $this->_set_style_side_width_important('padding','top',$val);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  function set_padding_right($val) {[m
[32m+[m[32m    $this->_set_style_side_width_important('padding','right',$val);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  function set_padding_bottom($val) {[m
[32m+[m[32m    $this->_set_style_side_width_important('padding','bottom',$val);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  function set_padding_left($val) {[m
[32m+[m[32m    $this->_set_style_side_width_important('padding','left',$val);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  function set_padding($val) {[m
[32m+[m[32m    $val = str_replace("none", "0px", $val);[m
[32m+[m[32m    $this->_set_style_type_important('padding','',$val);[m
[32m+[m[32m  }[m
[32m+[m[32m  /**#@-*/[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Sets a single border[m
[32m+[m[32m   *[m
[32m+[m[32m   * @param string $side[m
[32m+[m[32m   * @param string $border_spec  ([width] [style] [color])[m
[32m+[m[32m   */[m
[32m+[m[32m  protected function _set_border($side, $border_spec, $important) {[m
[32m+[m[32m    $border_spec = preg_replace("/\s*\,\s*/", ",", $border_spec);[m
[32m+[m[32m    //$border_spec = str_replace(",", " ", $border_spec); // Why did we have this ?? rbg(10, 102, 10) > rgb(10  102  10)[m
[32m+[m[32m    $arr = explode(" ", $border_spec);[m
[32m+[m
[32m+[m[32m    // FIXME: handle partial values[m
[32m+[m[41m [m
[32m+[m[32m    //For consistency of individal and combined properties, and with ie8 and firefox3[m
[32m+[m[32m    //reset all attributes, even if only partially given[m
[32m+[m[32m    $this->_set_style_side_type('border',$side,'_style',self::$_defaults['border_'.$side.'_style'],$important);[m
[32m+[m[32m    $this->_set_style_side_type('border',$side,'_width',self::$_defaults['border_'.$side.'_width'],$important);[m
[32m+[m[32m    $this->_set_style_side_type('border',$side,'_color',self::$_defaults['border_'.$side.'_color'],$important);[m
[32m+[m
[32m+[m[32m    foreach ($arr as $value) {[m
[32m+[m[32m      $value = trim($value);[m
[32m+[m[32m      if ( in_array($value, self::$BORDER_STYLES) ) {[m
[32m+[m[32m        $this->_set_style_side_type('border',$side,'_style',$value,$important);[m
[32m+[m
[32m+[m[32m      } else if ( preg_match("/[.0-9]+(?:px|pt|pc|em|ex|%|in|mm|cm)|(?:thin|medium|thick)/", $value ) ) {[m
[32m+[m[32m        $this->_set_style_side_type('border',$side,'_width',$value,$important);[m
[32m+[m
[32m+[m[32m      } else {[m
[32m+[m[32m        // must be colour[m
[32m+[m[32m        $this->_set_style_side_type('border',$side,'_color',$value,$important);[m
[32m+[m[32m      }[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    //see __set and __get, on all assignments clear cache![m
[32m+[m[32m    $this->_prop_cache['border_'.$side] = null;[m
[32m+[m[32m    $this->_props['border_'.$side] = $border_spec;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**#@+[m
[32m+[m[32m   * Sets the border styles[m
[32m+[m[32m   *[m
[32m+[m[32m   * @link http://www.w3.org/TR/CSS21/box.html#border-properties[m
[32m+[m[32m   * @param string $val[m
[32m+[m[32m   */[m
[32m+[m[32m  function set_border_top($val) { $this->_set_border("top", $val, isset($this->_important_props['border_top'])); }[m
[32m+[m[32m  function set_border_right($val) { $this->_set_border("right", $val, isset($this->_important_props['border_right'])); }[m
[32m+[m[32m  function set_border_bottom($val) { $this->_set_border("bottom", $val, isset($this->_important_props['border_bottom'])); }[m
[32m+[m[32m  function set_border_left($val) { $this->_set_border("left", $val, isset($this->_important_props['border_left'])); }[m
[32m+[m
[32m+[m[32m  function set_border($val) {[m
[32m+[m[32m    $important = isset($this->_important_props["border"]);[m
[32m+[m[32m    $this->_set_border("top", $val, $important);[m
[32m+[m[32m    $this->_set_border("right", $val, $important);[m
[32m+[m[32m    $this->_set_border("bottom", $val, $important);[m
[32m+[m[32m    $this->_set_border("left", $val, $important);[m
[32m+[m[32m    //see __set and __get, on all assignments clear cache, not needed on direct set through __set[m
[32m+[m[32m    $this->_prop_cache["border"] = null;[m
[32m+[m[32m    $this->_props["border"] = $val;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  function set_border_width($val) {[m
[32m+[m[32m    $this->_set_style_type_important('border','_width',$val);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  function set_border_color($val) {[m
[32m+[m[32m    $this->_set_style_type_important('border','_color',$val);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  function set_border_style($val) {[m
[32m+[m[32m    $this->_set_style_type_important('border','_style',$val);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**#@+[m
[32m+[m[32m   * Sets the outline styles[m
[32m+[m[32m   *[m
[32m+[m[32m   * @link http://www.w3.org/TR/CSS21/ui.html#dynamic-outlines[m
[32m+[m[32m   * @param string $val[m
[32m+[m[32m   */[m
[32m+[m[32m  function set_outline($val) {[m
[32m+[m[32m    $important = isset($this->_important_props["outline"]);[m
[32m+[m[41m    [m
[32m+[m[32m    $props = array([m
[32m+[m[32m      "outline_style",[m[41m [m
[32m+[m[32m      "outline_width",[m[41m [m
[32m+[m[32m      "outline_color",[m
[32m+[m[32m    );[m
[32m+[m[41m    [m
[32m+[m[32m    foreach($props as $prop) {[m
[32m+[m[32m      $_val = self::$_defaults[$prop];[m
[32m+[m[41m      [m
[32m+[m[32m      if ( !isset($this->_important_props[$prop]) || $important) {[m
[32m+[m[32m        //see __set and __get, on all assignments clear cache![m
[32m+[m[32m        $this->_prop_cache[$prop] = null;[m
[32m+[m[32m        if ($important) {[m
[32m+[m[32m          $this->_important_props[$prop] = true;[m
[32m+[m[32m        }[m
[32m+[m[32m        $this->_props[$prop] = $_val;[m
[32m+[m[32m      }[m
[32m+[m[32m    }[m
[32m+[m[41m    [m
[32m+[m[32m    $val = preg_replace("/\s*\,\s*/", ",", $val); // when rgb() has spaces[m
[32m+[m[32m    $arr = explode(" ", $val);[m
[32m+[m[32m    foreach ($arr as $value) {[m
[32m+[m[32m      $value = trim($value);[m
[32m+[m[32m      if ( in_array($value, self::$BORDER_STYLES) ) {[m
[32m+[m[32m        $this->set_outline_style($value);[m
[32m+[m[32m      } else if ( preg_match("/[.0-9]+(?:px|pt|pc|em|ex|%|in|mm|cm)|(?:thin|medium|thick)/", $value ) ) {[m
[32m+[m[32m        $this->set_outline_width($value);[m
[32m+[m[32m      } else {[m
[32m+[m[32m        // must be colour[m
[32m+[m[32m        $this->set_outline_color($value);[m
[32m+[m[32m      }[m
[32m+[m[32m    }[m
[32m+[m[41m    [m
[32m+[m[32m    //see __set and __get, on all assignments clear cache, not needed on direct set through __set[m
[32m+[m[32m    $this->_prop_cache["outline"] = null;[m
[32m+[m[32m    $this->_props["outline"] = $val;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  function set_outline_width($val) {[m
[32m+[m[32m    $this->_set_style_type_important('outline','_width',$val);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  function set_outline_color($val) {[m
[32m+[m[32m    $this->_set_style_type_important('outline','_color',$val);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  function set_outline_style($val) {[m
[32m+[m[32m    $this->_set_style_type_important('outline','_style',$val);[m
[32m+[m[32m  }[m
[32m+[m[32m  /**#@-*/[m
[32m+[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Sets the border spacing[m
[32m+[m[32m   *[m
[32m+[m[32m   * @link http://www.w3.org/TR/CSS21/box.html#border-properties[m
[32m+[m[32m   * @param float $val[m
[32m+[m[32m   */[m
[32m+[m[32m  function set_border_spacing($val) {[m
[32m+[m[32m    $arr = explode(" ", $val);[m
[32m+[m
[32m+[m[32m    if ( count($arr) == 1 )[m
[32m+[m[32m      $arr[1] = $arr[0];[m
[32m+[m
[32m+[m[32m    //see __set and __get, on all assignments clear cache, not needed on direct set through __set[m
[32m+[m[32m    $this->_prop_cache["border_spacing"] = null;[m
[32m+[m[32m    $this->_props["border_spacing"] = "$arr[0] $arr[1]";[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Sets the list style image[m
[32m+[m[32m   *[m
[32m+[m[32m   * @link http://www.w3.org/TR/CSS21/generate.html#propdef-list-style-image[m
[32m+[m[32m   * @param $val[m
[32m+[m[32m   */[m
[32m+[m[32m  function set_list_style_image($val) {[m
[32m+[m[32m    //see __set and __get, on all assignments clear cache, not needed on direct set through __set[m
[32m+[m[32m    $this->_prop_cache["list_style_image"] = null;[m
[32m+[m[32m    $this->_props["list_style_image"] = $this->_image($val);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Sets the list style[m
[32m+[m[32m   *[m
[32m+[m[32m   * @link http://www.w3.org/TR/CSS21/generate.html#propdef-list-style[m
[32m+[m[32m   * @param $val[m
[32m+[m[32m   */[m
[32m+[m[32m  function set_list_style($val) {[m
[32m+[m[32m    $important = isset($this->_important_props["list_style"]);[m
[32m+[m[32m    $arr = explode(" ", str_replace(",", " ", $val));[m
[32m+[m
[32m+[m[32m    static $types = array([m
[32m+[m[32m      "disc", "circle", "square",[m[41m [m
[32m+[m[32m      "decimal-leading-zero", "decimal", "1",[m
[32m+[m[32m      "lower-roman", "upper-roman", "a", "A",[m
[32m+[m[32m      "lower-greek",[m[41m [m
[32m+[m[32m      "lower-latin", "upper-latin",[m[41m [m
[32m+[m[32m      "lower-alpha", "upper-alpha",[m[41m [m
[32m+[m[32m      "armenian", "georgian", "hebrew",[m
[32m+[m[32m      "cjk-ideographic", "hiragana", "katakana",[m
[32m+[m[32m      "hiragana-iroha", "katakana-iroha", "none"[m
[32m+[m[32m    );[m
[32m+[m
[32m+[m[32m    static $positions = array("inside", "outside");[m
[32m+[m
[32m+[m[32m    foreach ($arr as $value) {[m
[32m+[m[32m      /* http://www.w3.org/TR/CSS21/generate.html#list-style[m
[32m+[m[32m       * A value of 'none' for the 'list-style' property sets both 'list-style-type' and 'list-style-image' to 'none'[m
[32m+[m[32m       */[m
[32m+[m[32m      if ($value === "none") {[m
[32m+[m[32m         $this->_set_style("list_style_type", $value, $important);[m
[32m+[m[32m         $this->_set_style("list_style_image", $value, $important);[m
[32m+[m[32m        continue;[m
[32m+[m[32m      }[m
[32m+[m
[32m+[m[32m      //On setting or merging or inheriting list_style_image as well as list_style_type,[m
[32m+[m[32m      //and url exists, then url has precedence, otherwise fall back to list_style_type[m
[32m+[m[32m      //Firefox is wrong here (list_style_image gets overwritten on explicite list_style_type)[m
[32m+[m[32m      //Internet Explorer 7/8 and dompdf is right.[m
[32m+[m[41m       [m
[32m+[m[32m      if (mb_substr($value, 0, 3) === "url") {[m
[32m+[m[32m        $this->_set_style("list_style_image", $this->_image($value), $important);[m
[32m+[m[32m        continue;[m
[32m+[m[32m      }[m
[32m+[m
[32m+[m[32m      if ( in_array($value, $types) ) {[m
[32m+[m[32m        $this->_set_style("list_style_type", $value, $important);[m
[32m+[m[32m      } else if ( in_array($value, $positions) ) {[m
[32m+[m[32m        $this->_set_style("list_style_position", $value, $important);[m
[32m+[m[32m      }[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    //see __set and __get, on all assignments clear cache, not needed on direct set through __set[m
[32m+[m[32m    $this->_prop_cache["list_style"] = null;[m
[32m+[m[32m    $this->_props["list_style"] = $val;[m
[32m+[m[32m  }[m
[32m+[m[41m  [m
[32m+[m[32m  function set_size($val) {[m
[32m+[m[32m    $length_re = "/(\d+\s*(?:pt|px|pc|em|ex|in|cm|mm|%))/";[m
[32m+[m
[32m+[m[32m    $val = mb_strtolower($val);[m
[32m+[m[41m    [m
[32m+[m[32m    if ( $val === "auto" ) {[m
[32m+[m[32m      return;[m
[32m+[m[32m    }[m
[32m+[m[41m        [m
[32m+[m[32m    $parts = preg_split("/\s+/", $val);[m
[32m+[m[41m    [m
[32m+[m[32m    $computed = array();[m
[32m+[m[32m    if ( preg_match($length_re, $parts[0]) ) {[m
[32m+[m[32m      $computed[] = $this->length_in_pt($parts[0]);[m
[32m+[m[41m      [m
[32m+[m[32m      if ( isset($parts[1]) && preg_match($length_re, $parts[1]) ) {[m
[32m+[m[32m        $computed[] = $this->length_in_pt($parts[1]);[m
[32m+[m[32m      }[m
[32m+[m[32m      else {[m
[32m+[m[32m        $computed[] = $computed[0];[m
[32m+[m[32m      }[m
[32m+[m[32m    }[m
[32m+[m[32m    elseif ( isset(CPDF_Adapter::$PAPER_SIZES[$parts[0]]) ) {[m
[32m+[m[32m      $computed = array_slice(CPDF_Adapter::$PAPER_SIZES[$parts[0]], 2, 2);[m
[32m+[m[41m      [m
[32m+[m[32m      if ( isset($parts[1]) && $parts[1] === "landscape" ) {[m
[32m+[m[32m        $computed = array_reverse($computed);[m
[32m+[m[32m      }[m
[32m+[m[32m    }[m
[32m+[m[32m    else {[m
[32m+[m[32m      return;[m
[32m+[m[32m    }[m
[32m+[m[41m    [m
[32m+[m[32m    $this->_props["size"] = $computed;[m
[32m+[m[32m  }[m
[32m+[m[41m  [m
[32m+[m[32m  /**[m
[32m+[m[32m   * Sets the CSS3 transform property[m
[32m+[m[32m   *[m
[32m+[m[32m   * @link http://www.w3.org/TR/css3-2d-transforms/#transform-property[m
[32m+[m[32m   * @param string $val[m
[32m+[m[32m   */[m
[32m+[m[32m  function set_transform($val) {[m
[32m+[m[32m    $number   = "\s*([^,\s]+)\s*";[m
[32m+[m[32m    $tr_value = "\s*([^,\s]+)\s*";[m
[32m+[m[32m    $angle    = "\s*([^,\s]+(?:deg|rad)?)\s*";[m
[32m+[m[41m    [m
[32m+[m[32m    if( !preg_match_all("/[a-z]+\([^\)]+\)/i", $val, $parts, PREG_SET_ORDER) ) {[m
[32m+[m[32m      return;[m
[32m+[m[32m    }[m
[32m+[m[41m    [m
[32m+[m[32m    $functions = array([m
[32m+[m[32m      //"matrix"     => "\($number,$number,$number,$number,$number,$number\)",[m
[32m+[m[41m    [m
[32m+[m[32m      "translate"  => "\($tr_value(?:,$tr_value)?\)",[m
[32m+[m[32m      "translateX" => "\($tr_value\)",[m
[32m+[m[32m      "translateY" => "\($tr_value\)",[m
[32m+[m[41m    [m
[32m+[m[32m      "scale"      => "\($number(?:,$number)?\)",[m
[32m+[m[32m      "scaleX"     => "\($number\)",[m
[32m+[m[32m      "scaleY"     => "\($number\)",[m
[32m+[m[41m    [m
[32m+[m[32m      "rotate"     => "\($angle\)",[m
[32m+[m[41m    [m
[32m+[m[32m      "skew"       => "\($angle(?:,$angle)?\)",[m
[32m+[m[32m      "skewX"      => "\($angle\)",[m
[32m+[m[32m      "skewY"      => "\($angle\)",[m
[32m+[m[32m    );[m
[32m+[m[41m    [m
[32m+[m[32m    $transforms = array();[m
[32m+[m[41m    [m
[32m+[m[32m    foreach($parts as $part) {[m
[32m+[m[32m      $t = $part[0];[m
[32m+[m[41m      [m
[32m+[m[32m      foreach($functions as $name => $pattern) {[m
[32m+[m[32m        if (preg_match("/$name\s*$pattern/i", $t, $matches)) {[m
[32m+[m[32m          $values = array_slice($matches, 1);[m
[32m+[m[41m          [m
[32m+[m[32m          switch($name) {[m
[32m+[m[32m            // <angle> units[m
[32m+[m[32m            case "rotate":[m
[32m+[m[32m            case "skew":[m
[32m+[m[32m            case "skewX":[m
[32m+[m[32m            case "skewY":[m
[32m+[m[41m              [m
[32m+[m[32m              foreach($values as $i => $value) {[m
[32m+[m[32m                if ( strpos($value, "rad") )[m[41m [m
[32m+[m[32m                  $values[$i] = rad2deg(floatval($value));[m
[32m+[m[32m                else[m
[32m+[m[32m                  $values[$i] = floatval($value);[m
[32m+[m[32m              }[m
[32m+[m[41m              [m
[32m+[m[32m              switch($name) {[m
[32m+[m[32m                case "skew":[m
[32m+[m[32m                  if ( !isset($values[1]) )[m[41m [m
[32m+[m[32m                    $values[1] = 0;[m
[32m+[m[32m                break;[m
[32m+[m[32m                case "skewX":[m
[32m+[m[32m                  $name = "skew";[m
[32m+[m[32m                  $values = array($values[0], 0);[m
[32m+[m[32m                break;[m
[32m+[m[32m                case "skewY":[m
[32m+[m[32m                  $name = "skew";[m
[32m+[m[32m                  $values = array(0, $values[0]);[m
[32m+[m[32m                break;[m
[32m+[m[32m              }[m
[32m+[m[32m            break;[m
[32m+[m[41m            [m
[32m+[m[32m            // <translation-value> units[m
[32m+[m[32m            case "translate":[m
[32m+[m[32m              $values[0] = $this->length_in_pt($values[0], $this->width);[m
[32m+[m[41m              [m
[32m+[m[32m              if ( isset($values[1]) )[m[41m [m
[32m+[m[32m                $values[1] = $this->length_in_pt($values[1], $this->height);[m
[32m+[m[32m              else[m
[32m+[m[32m                $values[1] = 0;[m
[32m+[m[32m            break;[m
[32m+[m[41m            [m
[32m+[m[32m            case "translateX":[m
[32m+[m[32m              $name = "translate";[m
[32m+[m[32m              $values = array($this->length_in_pt($values[0], $this->width), 0);[m
[32m+[m[32m            break;[m
[32m+[m[41m            [m
[32m+[m[32m            case "translateY":[m
[32m+[m[32m              $name = "translate";[m
[32m+[m[32m              $values = array(0, $this->length_in_pt($values[0], $this->height));[m
[32m+[m[32m            break;[m
[32m+[m[41m            [m
[32m+[m[32m            // <number> units[m
[32m+[m[32m            case "scale":[m
[32m+[m[32m              if ( !isset($values[1]) )[m[41m [m
[32m+[m[32m                $values[1] = $values[0];[m
[32m+[m[32m            break;[m
[32m+[m[41m            [m
[32m+[m[32m            case "scaleX":[m
[32m+[m[32m              $name = "scale";[m
[32m+[m[32m              $values = array($values[0], 1.0);[m
[32m+[m[32m            break;[m
[32m+[m[41m            [m
[32m+[m[32m            case "scaleY":[m
[32m+[m[32m              $name = "scale";[m
[32m+[m[32m              $values = array(1.0, $values[0]);[m
[32m+[m[32m            break;[m
[32m+[m[32m          }[m
[32m+[m[41m          [m
[32m+[m[32m          $transforms[] = array([m
[32m+[m[32m            $name,[m[41m [m
[32m+[m[32m            $values,[m
[32m+[m[32m          );[m
[32m+[m[32m        }[m
[32m+[m[32m      }[m
[32m+[m[32m    }[m
[32m+[m[41m    [m
[32m+[m[32m    //see __set and __get, on all assignments clear cache, not needed on direct set through __set[m
[32m+[m[32m    $this->_prop_cache["transform"] = null;[m
[32m+[m[32m    $this->_props["transform"] = $transforms;[m
[32m+[m[32m  }[m
[32m+[m[41m  [m
[32m+[m[32m  function set__webkit_transform($val) {[m
[32m+[m[32m    return $this->set_transform($val);[m
[32m+[m[32m  }[m
[32m+[m[41m  [m
[32m+[m[32m  function set__webkit_transform_origin($val) {[m
[32m+[m[32m    return $this->set_transform_origin($val);[m
[32m+[m[32m  }[m
[32m+[m[41m  [m
[32m+[m[32m  /**[m
[32m+[m[32m   * Sets the CSS3 transform-origin property[m
[32m+[m[32m   *[m
[32m+[m[32m   * @link http://www.w3.org/TR/css3-2d-transforms/#transform-origin[m
[32m+[m[32m   * @param string $val[m
[32m+[m[32m   */[m
[32m+[m[32m  function set_transform_origin($val) {[m
[32m+[m[32m    $values = preg_split("/\s+/", $val);[m
[32m+[m[41m    [m
[32m+[m[32m    if ( count($values) === 0) {[m
[32m+[m[32m      return;[m
[32m+[m[32m    }[m
[32m+[m[41m    [m
[32m+[m[32m    foreach($values as &$value) {[m
[32m+[m[32m      if ( in_array($value, array("top", "left")) ) {[m
[32m+[m[32m        $value = 0;[m
[32m+[m[32m      }[m
[32m+[m[41m      [m
[32m+[m[32m      if ( in_array($value, array("bottom", "right")) ) {[m
[32m+[m[32m        $value = "100%";[m
[32m+[m[32m      }[m
[32m+[m[32m    }[m
[32m+[m[41m    [m
[32m+[m[32m    if ( !isset($values[1]) ) {[m
[32m+[m[32m      $values[1] = $values[0];[m
[32m+[m[32m    }[m
[32m+[m[41m    [m
[32m+[m[32m    //see __set and __get, on all assignments clear cache, not needed on direct set through __set[m
[32m+[m[32m    $this->_prop_cache["transform_origin"] = null;[m
[32m+[m[32m    $this->_props["transform_origin"] = $values;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Generate a string representation of the Style[m
[32m+[m[32m   *[m
[32m+[m[32m   * This dumps the entire property array into a string via print_r.  Useful[m
[32m+[m[32m   * for debugging.[m
[32m+[m[32m   *[m
[32m+[m[32m   * @return string[m
[32m+[m[32m   */[m
[32m+[m[32m /*DEBUGCSS print: see below additional debugging util*/[m
[32m+[m[32m  function __toString() {[m
[32m+[m[32m    return print_r(array_merge(array("parent_font_size" => $this->_parent_font_size),[m
[32m+[m[32m                               $this->_props), true);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m/*DEBUGCSS*/  function debug_print()[m
[32m+[m[32m/*DEBUGCSS*/  {[m
[32m+[m[32m/*DEBUGCSS*/    print "parent_font_size:".$this->_parent_font_size . ";\n";[m
[32m+[m[32m/*DEBUGCSS*/    foreach($this->_props as $prop => $val ) {[m
[32m+[m[32m/*DEBUGCSS*/      print $prop.':'.$val;[m
[32m+[m[32m/*DEBUGCSS*/      if (isset($this->_important_props[$prop])) {[m
[32m+[m[32m/*DEBUGCSS*/        print '!important';[m
[32m+[m[32m/*DEBUGCSS*/      }[m
[32m+[m[32m/*DEBUGCSS*/      print ";\n";[m
[32m+[m[32m/*DEBUGCSS*/    }[m
[32m+[m[32m/*DEBUGCSS*/  }[m
[32m+[m[32m}[m
[1mdiff --git a/application/third_party/dompdf/include/stylesheet.cls.php b/application/third_party/dompdf/include/stylesheet.cls.php[m
[1mnew file mode 100644[m
[1mindex 0000000..3107d08[m
[1m--- /dev/null[m
[1m+++ b/application/third_party/dompdf/include/stylesheet.cls.php[m
[36m@@ -0,0 +1,1202 @@[m
[32m+[m[32m<?php[m
[32m+[m[32m/**[m
[32m+[m[32m * DOMPDF - PHP5 HTML to PDF renderer[m
[32m+[m[32m *[m
[32m+[m[32m * File: $RCSfile: stylesheet.cls.php,v $[m
[32m+[m[32m * Created on: 2004-06-01[m
[32m+[m[32m *[m
[32m+[m[32m * Copyright (c) 2004 - Benj Carson <benjcarson@digitaljunkies.ca>[m
[32m+[m[32m *[m
[32m+[m[32m * This library is free software; you can redistribute it and/or[m
[32m+[m[32m * modify it under the terms of the GNU Lesser General Public[m
[32m+[m[32m * License as published by the Free Software Foundation; either[m
[32m+[m[32m * version 2.1 of the License, or (at your option) any later version.[m
[32m+[m[32m *[m
[32m+[m[32m * This library is distributed in the hope that it will be useful,[m
[32m+[m[32m * but WITHOUT ANY WARRANTY; without even the implied warranty of[m
[32m+[m[32m * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU[m
[32m+[m[32m * Lesser General Public License for more details.[m
[32m+[m[32m *[m
[32m+[m[32m * You should have received a copy of the GNU Lesser General Public License[m
[32m+[m[32m * along with this library in the file LICENSE.LGPL; if not, write to the[m
[32m+[m[32m * Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA[m
[32m+[m[32m * 02111-1307 USA[m
[32m+[m[32m *[m
[32m+[m[32m * Alternatively, you may distribute this software under the terms of the[m
[32m+[m[32m * PHP License, version 3.0 or later.  A copy of this license should have[m
[32m+[m[32m * been distributed with this file in the file LICENSE.PHP .  If this is not[m
[32m+[m[32m * the case, you can obtain a copy at http://www.php.net/license/3_0.txt.[m
[32m+[m[32m *[m
[32m+[m[32m * The latest version of DOMPDF might be available at:[m
[32m+[m[32m * http://www.dompdf.com/[m
[32m+[m[32m *[m
[32m+[m[32m * @link http://www.dompdf.com/[m
[32m+[m[32m * @copyright 2004 Benj Carson[m
[32m+[m[32m * @author Benj Carson <benjcarson@digitaljunkies.ca>[m
[32m+[m[32m * @contributor Helmut Tischer <htischer@weihenstephan.org>[m
[32m+[m[32m * @package dompdf[m
[32m+[m[32m *[m
[32m+[m[32m * Changes[m
[32m+[m[32m * @contributor Helmut Tischer <htischer@weihenstephan.org>[m
[32m+[m[32m * @version 0.5.1.htischer.20090507[m
[32m+[m[32m * - Specifity of css selector chain was too small because leading whitespace[m
[32m+[m[32m *   to be counted as number of elements was removed[m
[32m+[m[32m * - On parsing css properties accept and register !important attribute[m
[32m+[m[32m * - Add optional debug output[m
[32m+[m[32m * @version 20090610[m
[32m+[m[32m * - _parse_properties on style property name and value remove augmenting superflous[m
[32m+[m[32m *   space for consistent parsing, in particular combined values like background[m
[32m+[m[32m */[m
[32m+[m
[32m+[m[32m/* $Id: stylesheet.cls.php 360 2011-02-15 19:33:52Z fabien.menager $ */[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * The location of the default built-in CSS file.[m
[32m+[m[32m * {@link Stylesheet::DEFAULT_STYLESHEET}[m
[32m+[m[32m */[m
[32m+[m[32mdefine('__DEFAULT_STYLESHEET', DOMPDF_LIB_DIR . DIRECTORY_SEPARATOR . "res" . DIRECTORY_SEPARATOR . "html.css");[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * The master stylesheet class[m
[32m+[m[32m *[m
[32m+[m[32m * The Stylesheet class is responsible for parsing stylesheets and style[m
[32m+[m[32m * tags/attributes.  It also acts as a registry of the individual Style[m
[32m+[m[32m * objects generated by the current set of loaded CSS files and style[m
[32m+[m[32m * elements.[m
[32m+[m[32m *[m
[32m+[m[32m * @see Style[m
[32m+[m[32m * @package dompdf[m
[32m+[m[32m */[m
[32m+[m[32mclass Stylesheet {[m
[32m+[m[41m  [m
[32m+[m[32m  /**[m
[32m+[m[32m   * The location of the default built-in CSS file.[m
[32m+[m[32m   */[m
[32m+[m[32m  const DEFAULT_STYLESHEET = __DEFAULT_STYLESHEET;[m[41m [m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Array of currently defined styles[m
[32m+[m[32m   * @var array[m
[32m+[m[32m   */[m
[32m+[m[32m  private $_styles;[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Base protocol of the document being parsed[m
[32m+[m[32m   * Used to handle relative urls.[m
[32m+[m[32m   * @var string[m
[32m+[m[32m   */[m
[32m+[m[32m  private $_protocol;[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Base hostname of the document being parsed[m
[32m+[m[32m   * Used to handle relative urls.[m
[32m+[m[32m   * @var string[m
[32m+[m[32m   */[m
[32m+[m[32m  private $_base_host;[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Base path of the document being parsed[m
[32m+[m[32m   * Used to handle relative urls.[m
[32m+[m[32m   * @var string[m
[32m+[m[32m   */[m
[32m+[m[32m  private $_base_path;[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * The style defined by @page rules[m
[32m+[m[32m   * @var Style[m
[32m+[m[32m   */[m
[32m+[m[32m  private $_page_style;[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * List of loaded files, used to prevent recursion[m
[32m+[m[32m   * @var array[m
[32m+[m[32m   */[m
[32m+[m[32m  private $_loaded_files;[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Accepted CSS media types[m
[32m+[m[32m   * List of types and parsing rules for future extensions:[m
[32m+[m[32m   * http://www.w3.org/TR/REC-html40/types.html[m
[32m+[m[32m   *   screen, tty, tv, projection, handheld, print, braille, aural, all[m
[32m+[m[32m   * The following are non standard extensions for undocumented specific environments.[m
[32m+[m[32m   *   static, visual, bitmap, paged, dompdf[m
[32m+[m[32m   * Note, even though the generated pdf file is intended for print output,[m
[32m+[m[32m   * the desired content might be different (e.g. screen or projection view of html file).[m
[32m+[m[32m   * Therefore allow specification of content by dompdf setting DOMPDF_DEFAULT_MEDIA_TYPE.[m
[32m+[m[32m   * If given, replace media "print" by DOMPDF_DEFAULT_MEDIA_TYPE.[m
[32m+[m[32m   * (Previous version $ACCEPTED_MEDIA_TYPES = $ACCEPTED_GENERIC_MEDIA_TYPES + $ACCEPTED_DEFAULT_MEDIA_TYPE)[m
[32m+[m[32m   */[m
[32m+[m[32m  static $ACCEPTED_DEFAULT_MEDIA_TYPE = "print";[m
[32m+[m[32m  static $ACCEPTED_GENERIC_MEDIA_TYPES = array("all", "static", "visual", "bitmap", "paged", "dompdf");[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * The class constructor.[m
[32m+[m[32m   *[m
[32m+[m[32m   * The base protocol, host & path are initialized to those of[m
[32m+[m[32m   * the current script.[m
[32m+[m[32m   */[m
[32m+[m[32m  function __construct() {[m
[32m+[m[32m    $this->_styles = array();[m
[32m+[m[32m    $this->_loaded_files = array();[m
[32m+[m[32m    list($this->_protocol, $this->_base_host, $this->_base_path) = explode_url($_SERVER["SCRIPT_FILENAME"]);[m
[32m+[m[32m    $this->_page_style = null;[m
[32m+[m[32m  }[m
[32m+[m[41m  [m
[32m+[m[32m  /**[m
[32m+[m[32m   * Class destructor[m
[32m+[m[32m   */[m
[32m+[m[32m  function __destruct() {[m
[32m+[m[32m    clear_object($this);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Set the base protocol[m
[32m+[m[32m   *[m
[32m+[m[32m   * @param string $proto[m
[32m+[m[32m   */[m
[32m+[m[32m  function set_protocol($proto) { $this->_protocol = $proto; }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Set the base host[m
[32m+[m[32m   *[m
[32m+[m[32m   * @param string $host[m
[32m+[m[32m   */[m
[32m+[m[32m  function set_host($host) { $this->_base_host = $host; }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Set the base path[m
[32m+[m[32m   *[m
[32m+[m[32m   * @param string $path[m
[32m+[m[32m   */[m
[32m+[m[32m  function set_base_path($path) { $this->_base_path = $path; }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Return the base protocol for this stylesheet[m
[32m+[m[32m   *[m
[32m+[m[32m   * @return string[m
[32m+[m[32m   */[m
[32m+[m[32m  function get_protocol() { return $this->_protocol; }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Return the base host for this stylesheet[m
[32m+[m[32m   *[m
[32m+[m[32m   * @return string[m
[32m+[m[32m   */[m
[32m+[m[32m  function get_host() { return $this->_base_host; }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Return the base path for this stylesheet[m
[32m+[m[32m   *[m
[32m+[m[32m   * @return string[m
[32m+[m[32m   */[m
[32m+[m[32m  function get_base_path() { return $this->_base_path; }[m
[32m+[m[41m  [m
[32m+[m[32m  /**[m
[32m+[m[32m   * Return the page style[m
[32m+[m[32m   *[m
[32m+[m[32m   * @return Style[m
[32m+[m[32m   */[m
[32m+[m[32m  function get_page_style() { return $this->_page_style; }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Add a new Style object to the stylesheet[m
[32m+[m[32m   *[m
[32m+[m[32m   * add_style() adds a new Style object to the current stylesheet, or[m
[32m+[m[32m   * merges a new Style with an existing one.[m
[32m+[m[32m   *[m
[32m+[m[32m   * @param string $key   the Style's selector[m
[32m+[m[32m   * @param Style $style  the Style to be added[m
[32m+[m[32m   */[m
[32m+[m[32m  function add_style($key, Style $style) {[m
[32m+[m[32m    if (!is_string($key))[m
[32m+[m[32m      throw new DOMPDF_Exception("CSS rule must be keyed by a string.");[m
[32m+[m
[32m+[m[32m    if ( isset($this->_styles[$key]) )[m
[32m+[m[32m      $this->_styles[$key]->merge($style);[m
[32m+[m[32m    else[m
[32m+[m[32m      $this->_styles[$key] = clone $style;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * lookup a specifc Style object[m
[32m+[m[32m   *[m
[32m+[m[32m   * lookup() returns the Style specified by $key, or null if the Style is[m
[32m+[m[32m   * not found.[m
[32m+[m[32m   *[m
[32m+[m[32m   * @param string $key   the selector of the requested Style[m
[32m+[m[32m   * @return Style[m
[32m+[m[32m   */[m
[32m+[m[32m  function lookup($key) {[m
[32m+[m[32m    if ( !isset($this->_styles[$key]) )[m
[32m+[m[32m      return null;[m
[32m+[m
[32m+[m[32m    return $this->_styles[$key];[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * create a new Style object associated with this stylesheet[m
[32m+[m[32m   *[m
[32m+[m[32m   * @param Style $parent The style of this style's parent in the DOM tree[m
[32m+[m[32m   * @return Style[m
[32m+[m[32m   */[m
[32m+[m[32m  function create_style(Style $parent = null) {[m
[32m+[m[32m    return new Style($this, $parent);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * load and parse a CSS string[m
[32m+[m[32m   *[m
[32m+[m[32m   * @param string $css[m
[32m+[m[32m   */[m
[32m+[m[32m  function load_css(&$css) { $this->_parse_css($css); }[m
[32m+[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * load and parse a CSS file[m
[32m+[m[32m   *[m
[32m+[m[32m   * @param string $file[m
[32m+[m[32m   */[m
[32m+[m[32m  function load_css_file($file) {[m
[32m+[m[32m    global $_dompdf_warnings;[m
[32m+[m
[32m+[m[32m    // Prevent circular references[m
[32m+[m[32m    if ( isset($this->_loaded_files[$file]) )[m
[32m+[m[32m      return;[m
[32m+[m
[32m+[m[32m    $this->_loaded_files[$file] = true;[m
[32m+[m[32m    $parsed_url = explode_url($file);[m
[32m+[m
[32m+[m[32m    list($this->_protocol, $this->_base_host, $this->_base_path, $filename) = $parsed_url;[m
[32m+[m
[32m+[m[32m    if ( !DOMPDF_ENABLE_REMOTE &&[m
[32m+[m[32m         ($this->_protocol != "" && $this->_protocol !== "file://") ) {[m
[32m+[m[32m      record_warnings(E_USER_WARNING, "Remote CSS file '$file' requested, but DOMPDF_ENABLE_REMOTE is false.", __FILE__, __LINE__);[m
[32m+[m[32m      return;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    // Fix submitted by Nick Oostveen for aliased directory support:[m
[32m+[m[32m    if ( $this->_protocol == "" )[m
[32m+[m[32m      $file = $this->_base_path . $filename;[m
[32m+[m[32m    else[m
[32m+[m[32m      $file = build_url($this->_protocol, $this->_base_host, $this->_base_path, $filename);[m
[32m+[m
[32m+[m[32m    set_error_handler("record_warnings");[m
[32m+[m[32m    $css = file_get_contents($file);[m
[32m+[m[32m    restore_error_handler();[m
[32m+[m
[32m+[m[32m    if ( $css == "" ) {[m
[32m+[m[32m      record_warnings(E_USER_WARNING, "Unable to load css file $file", __FILE__, __LINE__);;[m
[32m+[m[32m      return;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    $this->_parse_css($css);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * @link http://www.w3.org/TR/CSS21/cascade.html#specificity}[m
[32m+[m[32m   *[m
[32m+[m[32m   * @param string $selector[m
[32m+[m[32m   * @return int[m
[32m+[m[32m   */[m
[32m+[m[32m  private function _specificity($selector) {[m
[32m+[m[32m    // http://www.w3.org/TR/CSS21/cascade.html#specificity[m
[32m+[m[32m    // ignoring the ":" pseudoclass modifyers[m
[32m+[m[32m    // also ignored in _css_selector_to_xpath[m
[32m+[m
[32m+[m[32m    $a = ($selector === "!style attribute") ? 1 : 0;[m
[32m+[m
[32m+[m[32m    $b = min(mb_substr_count($selector, "#"), 255);[m
[32m+[m
[32m+[m[32m    $c = min(mb_substr_count($selector, ".") +[m
[32m+[m[32m             mb_substr_count($selector, "["), 255);[m
[32m+[m
[32m+[m[32m    $d = min(mb_substr_count($selector, " ") +[m[41m [m
[32m+[m[32m             mb_substr_count($selector, ">") +[m
[32m+[m[32m             mb_substr_count($selector, "+"), 255);[m
[32m+[m
[32m+[m[32m    //If a normal element name is at the begining of the string,[m
[32m+[m[32m    //a leading whitespace might have been removed on whitespace collapsing and removal[m
[32m+[m[32m    //therefore there might be one whitespace less as selected element names[m
[32m+[m[32m    //this can lead to a too small specificity[m
[32m+[m[32m    //see _css_selector_to_xpath[m
[32m+[m
[32m+[m[32m    if ( !in_array($selector[0], array(" ", ">", ".", "#", "+", ":", "[")) ) {[m
[32m+[m[41m    [m	[32m$d++;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    if (DEBUGCSS) {[m
[32m+[m[32m      /*DEBUGCSS*/	print "<pre>\n";[m
[32m+[m[32m      /*DEBUGCSS*/	printf("_specificity(): 0x%08x \"%s\"\n", ($a << 24) | ($b << 16) | ($c << 8) | ($d), $selector);[m
[32m+[m[32m      /*DEBUGCSS*/	print "</pre>";[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    return ($a << 24) | ($b << 16) | ($c << 8) | ($d);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * converts a CSS selector to an XPath query.[m
[32m+[m[32m   *[m
[32m+[m[32m   * @param string $selector[m
[32m+[m[32m   * @return string[m
[32m+[m[32m   */[m
[32m+[m[32m  private function _css_selector_to_xpath($selector, $first_pass = false) {[m
[32m+[m
[32m+[m[32m    // Collapse white space and strip whitespace around delimiters[m
[32m+[m[32m//     $search = array("/\\s+/", "/\\s+([.>#+:])\\s+/");[m
[32m+[m[32m//     $replace = array(" ", "\\1");[m
[32m+[m[32m//     $selector = preg_replace($search, $replace, trim($selector));[m
[32m+[m
[32m+[m[32m    // Initial query (non-absolute)[m
[32m+[m[32m    $query = "//";[m
[32m+[m[41m    [m
[32m+[m[32m    // Will contain :before and :after if they must be created[m
[32m+[m[32m    $pseudo_elements = array();[m
[32m+[m
[32m+[m[32m    // Parse the selector[m
[32m+[m[32m    //$s = preg_split("/([ :>.#+])/", $selector, -1, PREG_SPLIT_DELIM_CAPTURE);[m
[32m+[m
[32m+[m[32m    $delimiters = array(" ", ">", ".", "#", "+", ":", "[");[m
[32m+[m
[32m+[m[32m    // Add an implicit * at the beginning of the selector[m[41m [m
[32m+[m[32m    // if it begins with an attribute selector[m
[32m+[m[32m    if ( $selector[0] === "[" )[m
[32m+[m[32m      $selector = "*$selector";[m
[32m+[m[41m      [m
[32m+[m[32m    // Add an implicit space at the beginning of the selector if there is no[m
[32m+[m[32m    // delimiter there already.[m
[32m+[m[32m    if ( !in_array($selector[0], $delimiters) )[m
[32m+[m[32m      $selector = " $selector";[m
[32m+[m
[32m+[m[32m    $tok = "";[m
[32m+[m[32m    $len = mb_strlen($selector);[m
[32m+[m[32m    $i = 0;[m
[32m+[m
[32m+[m[32m    while ( $i < $len ) {[m
[32m+[m
[32m+[m[32m      $s = $selector[$i];[m
[32m+[m[32m      $i++;[m
[32m+[m
[32m+[m[32m      // Eat characters up to the next delimiter[m
[32m+[m[32m      $tok = "";[m
[32m+[m[32m      $in_attr = false;[m
[32m+[m[41m      [m
[32m+[m[32m      while ($i < $len) {[m
[32m+[m[32m        $c = $selector[$i];[m
[32m+[m[32m        $c_prev = $selector[$i-1];[m
[32m+[m[41m        [m
[32m+[m[32m        if ( !$in_attr && in_array($c, $delimiters) )[m
[32m+[m[32m          break;[m
[32m+[m[41m          [m
[32m+[m[32m        if ( $c_prev === "[" ) {[m
[32m+[m[32m          $in_attr = true;[m
[32m+[m[32m        }[m
[32m+[m[41m        [m
[32m+[m[32m        $tok .= $selector[$i++];[m
[32m+[m[32m      }[m
[32m+[m
[32m+[m[32m      switch ($s) {[m
[32m+[m
[32m+[m[32m      case " ":[m
[32m+[m[32m      case ">":[m
[32m+[m[32m        // All elements matching the next token that are direct children of[m
[32m+[m[32m        // the current token[m
[32m+[m[32m        $expr = $s === " " ? "descendant" : "child";[m
[32m+[m
[32m+[m[32m        if ( mb_substr($query, -1, 1) !== "/" )[m
[32m+[m[32m          $query .= "/";[m
[32m+[m
[32m+[m[32m        if ( !$tok )[m
[32m+[m[32m          $tok = "*";[m
[32m+[m
[32m+[m[32m        $query .= "$expr::$tok";[m
[32m+[m[32m        $tok = "";[m
[32m+[m[32m        break;[m
[32m+[m
[32m+[m[32m      case ".":[m
[32m+[m[32m      case "#":[m
[32m+[m[32m        // All elements matching the current token with a class/id equal to[m
[32m+[m[32m        // the _next_ token.[m
[32m+[m
[32m+[m[32m        $attr = $s === "." ? "class" : "id";[m
[32m+[m
[32m+[m[32m        // empty class/id == *[m
[32m+[m[32m        if ( mb_substr($query, -1, 1) === "/" )[m
[32m+[m[32m          $query .= "*";[m
[32m+[m
[32m+[m[32m        // Match multiple classes: $tok contains the current selected[m
[32m+[m[32m        // class.  Search for class attributes with class="$tok",[m
[32m+[m[32m        // class=".* $tok .*" and class=".* $tok"[m
[32m+[m
[32m+[m[32m        // This doesn't work because libxml only supports XPath 1.0...[m
[32m+[m[32m        //$query .= "[matches(@$attr,\"^${tok}\$|^${tok}[ ]+|[ ]+${tok}\$|[ ]+${tok}[ ]+\")]";[m
[32m+[m
[32m+[m[32m        // Query improvement by Michael Sheakoski <michael@mjsdigital.com>:[m
[32m+[m[32m        $query .= "[contains(concat(' ', @$attr, ' '), concat(' ', '$tok', ' '))]";[m
[32m+[m[32m        $tok = "";[m
[32m+[m[32m        break;[m
[32m+[m
[32m+[m[32m      case "+":[m
[32m+[m[32m        // All sibling elements that folow the current token[m
[32m+[m[32m        if ( mb_substr($query, -1, 1) !== "/" )[m
[32m+[m[32m          $query .= "/";[m
[32m+[m
[32m+[m[32m        $query .= "following-sibling::$tok";[m
[32m+[m[32m        $tok = "";[m
[32m+[m[32m        break;[m
[32m+[m
[32m+[m[32m      case ":":[m
[32m+[m[32m        // Pseudo-classes[m
[32m+[m[32m        switch ($tok) {[m
[32m+[m
[32m+[m[32m        case "first-child":[m
[32m+[m[32m          $query .= "[1]";[m
[32m+[m[32m          $tok = "";[m
[32m+[m[32m          break;[m
[32m+[m
[32m+[m[32m        case "last-child":[m
[32m+[m[32m          $query .= "[not(following-sibling::*)]";[m
[32m+[m[32m          $tok = "";[m
[32m+[m[32m          break;[m
[32m+[m
[32m+[m[32m        case "link":[m
[32m+[m[32m          $query .= "[@href]";[m
[32m+[m[32m          $tok = "";[m
[32m+[m[32m          break;[m
[32m+[m[41m          [m
[32m+[m[32m        case "first-line": // TODO[m
[32m+[m[32m        case "first-letter": // TODO[m
[32m+[m[41m        [m
[32m+[m[32m        // N/A[m
[32m+[m[32m        case "active":[m
[32m+[m[32m        case "visited":[m
[32m+[m[32m          $query .= "[@dummy]";[m
[32m+[m[32m          $tok = "";[m
[32m+[m[32m          break;[m
[32m+[m
[32m+[m[32m        /* Pseudo-elements */[m
[32m+[m[32m        case "before":[m
[32m+[m[32m        case "after":[m
[32m+[m[32m          if ( $first_pass )[m
[32m+[m[32m            $pseudo_elements[$tok] = $tok;[m
[32m+[m[32m          else[m
[32m+[m[32m            $query .= "/*[@$tok]";[m
[32m+[m[41m            [m
[32m+[m[32m          $tok = "";[m
[32m+[m[32m          break;[m
[32m+[m
[32m+[m[32m        case "empty":[m
[32m+[m[32m          $query .= "[not(*) and not(normalize-space())]";[m
[32m+[m[32m          $tok = "";[m
[32m+[m[32m          break;[m
[32m+[m[41m          [m
[32m+[m[32m        case "disabled":[m
[32m+[m[32m        case "checked":[m
[32m+[m[32m          $query .= "[@$tok]";[m
[32m+[m[32m          $tok = "";[m
[32m+[m[32m          break;[m
[32m+[m[41m          [m
[32m+[m[32m        case "enabled":[m
[32m+[m[32m          $query .= "[not(@disabled)]";[m
[32m+[m[32m          $tok = "";[m
[32m+[m[32m          break;[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        break;[m
[32m+[m
[32m+[m[32m      case "[":[m
[32m+[m[32m        // Attribute selectors.  All with an attribute matching the following token(s)[m
[32m+[m[32m        $attr_delimiters = array("=", "]", "~", "|", "$", "^", "*");[m
[32m+[m[32m        $tok_len = mb_strlen($tok);[m
[32m+[m[32m        $j = 0;[m
[32m+[m
[32m+[m[32m        $attr = "";[m
[32m+[m[32m        $op = "";[m
[32m+[m[32m        $value = "";[m
[32m+[m
[32m+[m[32m        while ( $j < $tok_len ) {[m
[32m+[m[32m          if ( in_array($tok[$j], $attr_delimiters) )[m
[32m+[m[32m            break;[m
[32m+[m[32m          $attr .= $tok[$j++];[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        switch ( $tok[$j] ) {[m
[32m+[m
[32m+[m[32m        case "~":[m
[32m+[m[32m        case "|":[m
[32m+[m[32m        case "$":[m
[32m+[m[32m        case "^":[m
[32m+[m[32m        case "*":[m
[32m+[m[32m          $op .= $tok[$j++];[m
[32m+[m
[32m+[m[32m          if ( $tok[$j] !== "=" )[m
[32m+[m[32m            throw new DOMPDF_Exception("Invalid CSS selector syntax: invalid attribute selector: $selector");[m
[32m+[m
[32m+[m[32m          $op .= $tok[$j];[m
[32m+[m[32m          break;[m
[32m+[m
[32m+[m[32m        case "=":[m
[32m+[m[32m          $op = "=";[m
[32m+[m[32m          break;[m
[32m+[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        // Read the attribute value, if required[m
[32m+[m[32m        if ( $op != "" ) {[m
[32m+[m[32m          $j++;[m
[32m+[m[32m          while ( $j < $tok_len ) {[m
[32m+[m[32m            if ( $tok[$j] === "]" )[m
[32m+[m[32m              break;[m
[32m+[m[32m            $value .= $tok[$j++];[m
[32m+[m[32m          }[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        if ( $attr == "" )[m
[32m+[m[32m          throw new DOMPDF_Exception("Invalid CSS selector syntax: missing attribute name");[m
[32m+[m
[32m+[m[32m        $value = trim($value, "\"'");[m
[32m+[m[41m        [m
[32m+[m[32m        switch ( $op ) {[m
[32m+[m
[32m+[m[32m        case "":[m
[32m+[m[32m          $query .=  "[@$attr]";[m
[32m+[m[32m          break;[m
[32m+[m
[32m+[m[32m        case "=":[m
[32m+[m[32m          $query .= "[@$attr=\"$value\"]";[m
[32m+[m[32m          break;[m
[32m+[m
[32m+[m[32m        case "~=":[m
[32m+[m[32m          // FIXME: this will break if $value contains quoted strings[m
[32m+[m[32m          // (e.g. [type~="a b c" "d e f"])[m
[32m+[m[32m          $values = explode(" ", $value);[m
[32m+[m[32m          $query .=  "[";[m
[32m+[m
[32m+[m[32m          foreach ( $values as $val )[m
[32m+[m[32m            $query .= "@$attr=\"$val\" or ";[m
[32m+[m
[32m+[m[32m          $query = rtrim($query, " or ") . "]";[m
[32m+[m[32m          break;[m
[32m+[m
[32m+[m[32m        case "|=":[m
[32m+[m[32m          $values = explode("-", $value);[m
[32m+[m[32m          $query .= "[";[m
[32m+[m
[32m+[m[32m          foreach ( $values as $val )[m
[32m+[m[32m            $query .= "starts-with(@$attr, \"$val\") or ";[m
[32m+[m
[32m+[m[32m          $query = rtrim($query, " or ") . "]";[m
[32m+[m[32m          break;[m
[32m+[m
[32m+[m[32m        case "$=":[m
[32m+[m[32m          $query .= "[substring(@$attr, string-length(@$attr)-".(strlen($value) - 1).")=\"$value\"]";[m
[32m+[m[32m          break;[m
[32m+[m[41m          [m
[32m+[m[32m        case "^=":[m
[32m+[m[32m          $query .= "[starts-with(@$attr,\"$value\")]";[m
[32m+[m[32m          break;[m
[32m+[m[41m          [m
[32m+[m[32m        case "*=":[m
[32m+[m[32m          $query .= "[contains(@$attr,\"$value\")]";[m
[32m+[m[32m          break;[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        break;[m
[32m+[m[32m      }[m
[32m+[m[32m    }[m
[32m+[m[32m    $i++;[m
[32m+[m
[32m+[m[32m//       case ":":[m
[32m+[m[32m//         // Pseudo selectors: ignore for now.  Partially handled directly[m
[32m+[m[32m//         // below.[m
[32m+[m
[32m+[m[32m//         // Skip until the next special character, leaving the token as-is[m
[32m+[m[32m//         while ( $i < $len ) {[m
[32m+[m[32m//           if ( in_array($selector[$i], $delimiters) )[m
[32m+[m[32m//             break;[m
[32m+[m[32m//           $i++;[m
[32m+[m[32m//         }[m
[32m+[m[32m//         break;[m
[32m+[m
[32m+[m[32m//       default:[m
[32m+[m[32m//         // Add the character to the token[m
[32m+[m[32m//         $tok .= $selector[$i++];[m
[32m+[m[32m//         break;[m
[32m+[m[32m//       }[m
[32m+[m
[32m+[m[32m//    }[m
[32m+[m
[32m+[m
[32m+[m[32m    // Trim the trailing '/' from the query[m
[32m+[m[32m    if ( mb_strlen($query) > 2 )[m
[32m+[m[32m      $query = rtrim($query, "/");[m
[32m+[m
[32m+[m[32m    return array("query" => $query, "pseudo_elements" => $pseudo_elements);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * applies all current styles to a particular document tree[m
[32m+[m[32m   *[m
[32m+[m[32m   * apply_styles() applies all currently loaded styles to the provided[m
[32m+[m[32m   * {@link Frame_Tree}.  Aside from parsing CSS, this is the main purpose[m
[32m+[m[32m   * of this class.[m
[32m+[m[32m   *[m
[32m+[m[32m   * @param Frame_Tree $tree[m
[32m+[m[32m   */[m
[32m+[m[32m  function apply_styles(Frame_Tree $tree) {[m
[32m+[m
[32m+[m[32m    // Use XPath to select nodes.  This would be easier if we could attach[m
[32m+[m[32m    // Frame objects directly to DOMNodes using the setUserData() method, but[m
[32m+[m[32m    // we can't do that just yet.  Instead, we set a _node attribute_ in[m
[32m+[m[32m    // Frame->set_id() and use that as a handle on the Frame object via[m
[32m+[m[32m    // Frame_Tree::$_registry.[m
[32m+[m
[32m+[m[32m    // We create a scratch array of styles indexed by frame id.  Once all[m
[32m+[m[32m    // styles have been assigned, we order the cached styles by specificity[m
[32m+[m[32m    // and create a final style object to assign to the frame.[m
[32m+[m
[32m+[m[32m    // FIXME: this is not particularly robust...[m
[32m+[m
[32m+[m[32m    $styles = array();[m
[32m+[m[32m    $xp = new DOMXPath($tree->get_dom());[m
[32m+[m[41m    [m
[32m+[m[32m    // Add generated content[m
[32m+[m[32m    foreach ($this->_styles as $selector => $style) {[m
[32m+[m[32m      if (strpos($selector, ":before") === false &&[m[41m [m
[32m+[m[32m          strpos($selector, ":after") === false) continue;[m
[32m+[m[41m      [m
[32m+[m[32m      $query = $this->_css_selector_to_xpath($selector, true);[m
[32m+[m[41m      [m
[32m+[m[32m      // Retrieve the nodes[m
[32m+[m[32m      $nodes = @$xp->query($query["query"]);[m
[32m+[m[32m      if ($nodes == null) {[m
[32m+[m[32m        record_warnings(E_USER_WARNING, "The CSS selector '$selector' is not valid", __FILE__, __LINE__);[m
[32m+[m[32m        continue;[m
[32m+[m[32m      }[m
[32m+[m[41m      [m
[32m+[m[32m      foreach ($nodes as $i => $node) {[m
[32m+[m[32m        foreach ($query["pseudo_elements"] as $pos) {[m
[32m+[m[32m          if (($src = $this->_image($style->content)) !== "none") {[m
[32m+[m[32m            $new_node = $node->ownerDocument->createElement("img_generated");[m
[32m+[m[32m            $new_node->setAttribute("src", $src);[m
[32m+[m[32m          }[m
[32m+[m[32m          else {[m
[32m+[m[32m            $new_node = $node->ownerDocument->createElement("dompdf_generated");[m
[32m+[m[32m          }[m
[32m+[m[32m          $new_node->setAttribute($pos, $pos);[m
[32m+[m[41m          [m
[32m+[m[32m          $tree->insert_node($node, $new_node, $pos);[m
[32m+[m[32m        }[m
[32m+[m[32m      }[m
[32m+[m[32m    }[m
[32m+[m[41m    [m
[32m+[m[32m    // Apply all styles in stylesheet[m
[32m+[m[32m    foreach ($this->_styles as $selector => $style) {[m
[32m+[m[32m      $query = $this->_css_selector_to_xpath($selector);[m
[32m+[m
[32m+[m[32m      // Retrieve the nodes[m
[32m+[m[32m      $nodes = @$xp->query($query["query"]);[m
[32m+[m[32m      if ($nodes == null) {[m
[32m+[m[32m        record_warnings(E_USER_WARNING, "The CSS selector '$selector' is not valid", __FILE__, __LINE__);[m
[32m+[m[32m        continue;[m
[32m+[m[32m      }[m
[32m+[m
[32m+[m[32m      foreach ($nodes as $node) {[m
[32m+[m[32m        // Retrieve the node id[m
[32m+[m[32m        if ( $node->nodeType != XML_ELEMENT_NODE ) // Only DOMElements get styles[m
[32m+[m[32m          continue;[m
[32m+[m
[32m+[m[32m        $id = $node->getAttribute("frame_id");[m
[32m+[m
[32m+[m[32m        // Assign the current style to the scratch array[m
[32m+[m[32m        $spec = $this->_specificity($selector);[m
[32m+[m[32m        $styles[$id][$spec][] = $style;[m
[32m+[m[32m      }[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    // Now create the styles and assign them to the appropriate frames.  (We[m
[32m+[m[32m    // iterate over the tree using an implicit Frame_Tree iterator.)[m
[32m+[m[32m    $root_flg = false;[m
[32m+[m[32m    foreach ($tree->get_frames() as $frame) {[m
[32m+[m[32m      // pre_r($frame->get_node()->nodeName . ":");[m
[32m+[m[32m      if ( !$root_flg && $this->_page_style ) {[m
[32m+[m[32m        $style = $this->_page_style;[m
[32m+[m[32m        $root_flg = true;[m
[32m+[m[32m      } else[m
[32m+[m[32m        $style = $this->create_style();[m
[32m+[m
[32m+[m[32m      // Find nearest DOMElement parent[m
[32m+[m[32m      $p = $frame;[m
[32m+[m[32m      while ( $p = $p->get_parent() )[m
[32m+[m[32m        if ($p->get_node()->nodeType == XML_ELEMENT_NODE )[m
[32m+[m[32m          break;[m
[32m+[m
[32m+[m[32m      // Styles can only be applied directly to DOMElements; anonymous[m
[32m+[m[32m      // frames inherit from their parent[m
[32m+[m[32m      if ( $frame->get_node()->nodeType != XML_ELEMENT_NODE ) {[m
[32m+[m[32m        if ( $p )[m
[32m+[m[32m          $style->inherit($p->get_style());[m
[32m+[m[32m        $frame->set_style($style);[m
[32m+[m[32m        continue;[m
[32m+[m[32m      }[m
[32m+[m
[32m+[m[32m      $id = $frame->get_id();[m
[32m+[m
[32m+[m[32m      // Handle HTML 4.0 attributes[m
[32m+[m[32m      Attribute_Translator::translate_attributes($frame);[m
[32m+[m
[32m+[m[32m      // Locate any additional style attributes[m
[32m+[m[32m      if ( ($str = $frame->get_node()->getAttribute("style")) !== "" ) {[m
[32m+[m[32m        // Destroy CSS comments[m
[32m+[m[32m        $str = preg_replace("'/\*.*?\*/'si", "", $str);[m
[32m+[m[41m        [m
[32m+[m[32m        $spec = $this->_specificity("!style attribute");[m
[32m+[m[32m        $styles[$id][$spec][] = $this->_parse_properties($str);[m
[32m+[m[32m      }[m
[32m+[m
[32m+[m[32m      // Grab the applicable styles[m
[32m+[m[32m      if ( isset($styles[$id]) ) {[m
[32m+[m
[32m+[m[32m        $applied_styles = $styles[ $frame->get_id() ];[m
[32m+[m
[32m+[m[32m        // Sort by specificity[m
[32m+[m[32m        ksort($applied_styles);[m
[32m+[m
[32m+[m[32m        if (DEBUGCSS) {[m
[32m+[m[32m          $debug_nodename = $frame->get_node()->nodeName;[m
[32m+[m[32m          print "<pre>\n[$debug_nodename\n";[m
[32m+[m[32m          foreach ($applied_styles as $spec => $arr) {[m
[32m+[m[32m            printf("specificity: 0x%08x\n",$spec);[m
[32m+[m[32m            foreach ($arr as $s) {[m
[32m+[m[32m              print "[\n";[m
[32m+[m[32m              $s->debug_print();[m
[32m+[m[32m              print "]\n";[m
[32m+[m[32m            }[m
[32m+[m[32m          }[m
[32m+[m[32m        }[m
[32m+[m[41m        [m
[32m+[m[32m        // Merge the new styles with the inherited styles[m
[32m+[m[32m        foreach ($applied_styles as $arr) {[m
[32m+[m[32m          foreach ($arr as $s)[m
[32m+[m[32m            $style->merge($s);[m
[32m+[m[32m        }[m
[32m+[m[32m      }[m
[32m+[m
[32m+[m[32m      // Inherit parent's styles if required[m
[32m+[m[32m      if ( $p ) {[m
[32m+[m
[32m+[m[32m        if (DEBUGCSS) {[m
[32m+[m[32m          print "inherit:\n";[m
[32m+[m[32m          print "[\n";[m
[32m+[m[32m          $p->get_style()->debug_print();[m
[32m+[m[32m          print "]\n";[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        $style->inherit( $p->get_style() );[m
[32m+[m[32m      }[m
[32m+[m
[32m+[m[32m      if (DEBUGCSS) {[m
[32m+[m[32m        print "DomElementStyle:\n";[m
[32m+[m[32m        print "[\n";[m
[32m+[m[32m        $style->debug_print();[m
[32m+[m[32m        print "]\n";[m
[32m+[m[32m        print "/$debug_nodename]\n</pre>";[m
[32m+[m[32m      }[m
[32m+[m
[32m+[m[32m      /*DEBUGCSS print: see below different print debugging method[m
[32m+[m[32m      pre_r($frame->get_node()->nodeName . ":");[m
[32m+[m[32m      echo "<pre>";[m
[32m+[m[32m      echo $style;[m
[32m+[m[32m      echo "</pre>";*/[m
[32m+[m[32m      $frame->set_style($style);[m
[32m+[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    // We're done!  Clean out the registry of all styles since we[m
[32m+[m[32m    // won't be needing this later.[m
[32m+[m[32m    foreach ( array_keys($this->_styles) as $key ) {[m
[32m+[m[32m      $this->_styles[$key] = null;[m
[32m+[m[32m      unset($this->_styles[$key]);[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * parse a CSS string using a regex parser[m
[32m+[m[32m   *[m
[32m+[m[32m   * Called by {@link Stylesheet::parse_css()}[m
[32m+[m[32m   *[m
[32m+[m[32m   * @param string $str[m
[32m+[m[32m   */[m
[32m+[m[32m  private function _parse_css($str) {[m
[32m+[m
[32m+[m[32m    $str = trim($str);[m
[32m+[m[41m    [m
[32m+[m[32m    // Destroy comments and remove HTML comments[m
[32m+[m[32m    $css = preg_replace(array([m
[32m+[m[32m      "'/\*.*?\*/'si",[m[41m [m
[32m+[m[32m      "/^<!--/",[m
[32m+[m[32m      "/-->$/"[m
[32m+[m[32m    ), "", $str);[m
[32m+[m
[32m+[m[32m    // FIXME: handle '{' within strings, e.g. [attr="string {}"][m
[32m+[m
[32m+[m[32m    // Something more legible:[m
[32m+[m[32m    $re =[m
[32m+[m[32m      "/\s*                                   # Skip leading whitespace                             \n".[m
[32m+[m[32m      "( @([^\s]+)\s+([^{;]*) (?:;|({)) )?    # Match @rules followed by ';' or '{'                 \n".[m
[32m+[m[32m      "(?(1)                                  # Only parse sub-sections if we're in an @rule...     \n".[m
[32m+[m[32m      "  (?(4)                                # ...and if there was a leading '{'                   \n".[m
[32m+[m[32m      "    \s*( (?:(?>[^{}]+) ({)?            # Parse rulesets and individual @page rules           \n".[m
[32m+[m[32m      "            (?(6) (?>[^}]*) }) \s*)+?  \n".[m
[32m+[m[32m      "       )                               \n".[m
[32m+[m[32m      "   })                                  # Balancing '}'                                \n".[m
[32m+[m[32m      "|                                      # Branch to match regular rules (not preceeded by '@')\n".[m
[32m+[m[32m      "([^{]*{[^}]*}))                        # Parse normal rulesets\n".[m
[32m+[m[32m      "/xs";[m
[32m+[m
[32m+[m[32m    if ( preg_match_all($re, $css, $matches, PREG_SET_ORDER) === false )[m
[32m+[m[32m      // An error occured[m
[32m+[m[32m      throw new DOMPDF_Exception("Error parsing css file: preg_match_all() failed.");[m
[32m+[m
[32m+[m[32m    // After matching, the array indicies are set as follows:[m
[32m+[m[32m    //[m
[32m+[m[32m    // [0] => complete text of match[m
[32m+[m[32m    // [1] => contains '@import ...;' or '@media {' if applicable[m
[32m+[m[32m    // [2] => text following @ for cases where [1] is set[m
[32m+[m[32m    // [3] => media types or full text following '@import ...;'[m
[32m+[m[32m    // [4] => '{', if present[m
[32m+[m[32m    // [5] => rulesets within media rules[m
[32m+[m[32m    // [6] => '{', within media rules[m
[32m+[m[32m    // [7] => individual rules, outside of media rules[m
[32m+[m[32m    //[m
[32m+[m[32m    //pre_r($matches);[m
[32m+[m[32m    foreach ( $matches as $match ) {[m
[32m+[m[32m      $match[2] = trim($match[2]);[m
[32m+[m
[32m+[m[32m      if ( $match[2] !== "" ) {[m
[32m+[m[32m        // Handle @rules[m
[32m+[m[32m        switch ($match[2]) {[m
[32m+[m
[32m+[m[32m        case "import":[m
[32m+[m[32m          $this->_parse_import($match[3]);[m
[32m+[m[32m          break;[m
[32m+[m
[32m+[m[32m        case "media":[m
[32m+[m[32m          $acceptedmedia = self::$ACCEPTED_GENERIC_MEDIA_TYPES;[m
[32m+[m[32m          if ( defined("DOMPDF_DEFAULT_MEDIA_TYPE") ) {[m
[32m+[m[32m            $acceptedmedia[] = DOMPDF_DEFAULT_MEDIA_TYPE;[m
[32m+[m[32m          } else {[m
[32m+[m[32m            $acceptedmedia[] = self::$ACCEPTED_DEFAULT_MEDIA_TYPE;[m
[32m+[m[32m          }[m
[32m+[m[32m          if ( in_array(mb_strtolower(trim($match[3])), $acceptedmedia ) ) {[m
[32m+[m[32m            $this->_parse_sections($match[5]);[m
[32m+[m[32m          }[m
[32m+[m[32m          break;[m
[32m+[m
[32m+[m[32m        case "page":[m
[32m+[m[32m          //This handles @page to be applied to page oriented media[m
[32m+[m[32m          //Note: This has a reduced syntax:[m
[32m+[m[32m          //@page { margin:1cm; color:blue; }[m
[32m+[m[32m          //Not a sequence of styles like a full.css, but only the properties[m
[32m+[m[32m          //of a single style, which is applied to the very first "root" frame before[m
[32m+[m[32m          //processing other styles of the frame.[m
[32m+[m[32m          //Working properties:[m
[32m+[m[32m          // margin (for margin around edge of paper)[m
[32m+[m[32m          // font-family (default font of pages)[m
[32m+[m[32m          // color (default text color of pages)[m
[32m+[m[32m          //Non working properties:[m
[32m+[m[32m          // border[m
[32m+[m[32m          // padding[m
[32m+[m[32m          // background-color[m
[32m+[m[32m          //Todo:Reason is unknown[m
[32m+[m[32m          //Other properties (like further font or border attributes) not tested.[m
[32m+[m[32m          //If a border or background color around each paper sheet is desired,[m
[32m+[m[32m          //assign it to the <body> tag, possibly only for the css of the correct media type.[m
[32m+[m
[32m+[m[32m          // If the page has a name, skip the style.[m
[32m+[m[32m          if ($match[3] !== "")[m
[32m+[m[32m            return;[m
[32m+[m
[32m+[m[32m          // Store the style for later...[m
[32m+[m[32m          if ( is_null($this->_page_style) )[m
[32m+[m[32m            $this->_page_style = $this->_parse_properties($match[5]);[m
[32m+[m[32m          else[m
[32m+[m[32m            $this->_page_style->merge($this->_parse_properties($match[5]));[m
[32m+[m[32m          break;[m
[32m+[m
[32m+[m[32m        case "font-face":[m
[32m+[m[32m          $this->_parse_font_face($match[5]);[m
[32m+[m[32m          break;[m
[32m+[m[41m          [m
[32m+[m[32m        default:[m
[32m+[m[32m          // ignore everything else[m
[32m+[m[32m          break;[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        continue;[m
[32m+[m[32m      }[m
[32m+[m
[32m+[m[32m      if ( $match[7] !== "" )[m
[32m+[m[32m        $this->_parse_sections($match[7]);[m
[32m+[m
[32m+[m[32m    }[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /* See also style.cls Style::_image(), refactoring?, works also for imported css files */[m
[32m+[m[32m  protected function _image($val) {[m
[32m+[m[32m    $DEBUGCSS=DEBUGCSS;[m
[32m+[m[41m    [m
[32m+[m[32m    if ( mb_strpos($val, "url") === false ) {[m
[32m+[m[32m      $path = "none"; //Don't resolve no image -> otherwise would prefix path and no longer recognize as none[m
[32m+[m[32m    }[m
[32m+[m[32m    else {[m
[32m+[m[32m      $val = preg_replace("/url\(['\"]?([^'\")]+)['\"]?\)/","\\1", trim($val));[m
[32m+[m
[32m+[m[32m      // Resolve the url now in the context of the current stylesheet[m
[32m+[m[32m      $parsed_url = explode_url($val);[m
[32m+[m[32m      if ( $parsed_url["protocol"] == "" && $this->get_protocol() == "" ) {[m
[32m+[m[32m        if ($parsed_url["path"][0] === '/' || $parsed_url["path"][0] === '\\' ) {[m
[32m+[m[32m          $path = $_SERVER["DOCUMENT_ROOT"].'/';[m
[32m+[m[32m        } else {[m
[32m+[m[32m          $path = $this->get_base_path();[m
[32m+[m[32m        }[m
[32m+[m[32m        $path .= $parsed_url["path"] . $parsed_url["file"];[m
[32m+[m[32m        $path = realpath($path);[m
[32m+[m[32m        // If realpath returns FALSE then specifically state that there is no background image[m
[32m+[m[32m        // FIXME: Is this causing problems for imported CSS files? There are some './none' references when running the test cases.[m
[32m+[m[32m        if (!$path) { $path = 'none'; }[m
[32m+[m[32m      } else {[m
[32m+[m[32m        $path = build_url($this->get_protocol(),[m
[32m+[m[32m                          $this->get_host(),[m
[32m+[m[32m                          $this->get_base_path(),[m
[32m+[m[32m                          $val);[m
[32m+[m[32m      }[m
[32m+[m[32m    }[m
[32m+[m[32m    if ($DEBUGCSS) {[m
[32m+[m[32m      print "<pre>[_image\n";[m
[32m+[m[32m      print_r($parsed_url);[m
[32m+[m[32m      print $this->get_protocol()."\n".$this->get_base_path()."\n".$path."\n";[m
[32m+[m[32m      print "_image]</pre>";;[m
[32m+[m[32m    }[m
[32m+[m[32m    return $path;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * parse @import{} sections[m
[32m+[m[32m   *[m
[32m+[m[32m   * @param string $url  the url of the imported CSS file[m
[32m+[m[32m   */[m
[32m+[m[32m  private function _parse_import($url) {[m
[32m+[m[32m    $arr = preg_split("/[\s\n,]/", $url,-1, PREG_SPLIT_NO_EMPTY);[m
[32m+[m[32m    $url = array_shift($arr);[m
[32m+[m[32m    $accept = false;[m
[32m+[m
[32m+[m[32m    if ( count($arr) > 0 ) {[m
[32m+[m
[32m+[m[32m      $acceptedmedia = self::$ACCEPTED_GENERIC_MEDIA_TYPES;[m
[32m+[m[32m      if ( defined("DOMPDF_DEFAULT_MEDIA_TYPE") ) {[m
[32m+[m[32m        $acceptedmedia[] = DOMPDF_DEFAULT_MEDIA_TYPE;[m
[32m+[m[32m      } else {[m
[32m+[m[32m        $acceptedmedia[] = self::$ACCEPTED_DEFAULT_MEDIA_TYPE;[m
[32m+[m[32m      }[m
[32m+[m[41m              [m
[32m+[m[32m      // @import url media_type [media_type...][m
[32m+[m[32m      foreach ( $arr as $type ) {[m
[32m+[m[32m        if ( in_array(mb_strtolower(trim($type)), $acceptedmedia) ) {[m
[32m+[m[32m          $accept = true;[m
[32m+[m[32m          break;[m
[32m+[m[32m        }[m
[32m+[m[32m      }[m
[32m+[m
[32m+[m[32m    } else {[m
[32m+[m[32m      // unconditional import[m
[32m+[m[32m      $accept = true;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    if ( $accept ) {[m
[32m+[m[32m      // Store our current base url properties in case the new url is elsewhere[m
[32m+[m[32m      $protocol = $this->_protocol;[m
[32m+[m[32m      $host = $this->_base_host;[m
[32m+[m[32m      $path = $this->_base_path;[m
[32m+[m[41m      [m
[32m+[m[32m      // $url = str_replace(array('"',"url", "(", ")"), "", $url);[m
[32m+[m[32m      // If the protocol is php, assume that we will import using file://[m
[32m+[m[32m      // $url = build_url($protocol == "php://" ? "file://" : $protocol, $host, $path, $url);[m
[32m+[m[32m      // Above does not work for subfolders and absolute urls.[m
[32m+[m[32m      // Todo: As above, do we need to replace php or file to an empty protocol for local files?[m
[32m+[m[41m      [m
[32m+[m[32m      $url = $this->_image($url);[m
[32m+[m[41m      [m
[32m+[m[32m      $this->load_css_file($url);[m
[32m+[m
[32m+[m[32m      // Restore the current base url[m
[32m+[m[32m      $this->_protocol = $protocol;[m
[32m+[m[32m      $this->_base_host = $host;[m
[32m+[m[32m      $this->_base_path = $path;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m  }[m
[32m+[m[41m  [m
[32m+[m[32m  /**[m
[32m+[m[32m   * parse @font-face{} sections[m
[32m+[m[32m   * http://www.w3.org/TR/css3-fonts/#the-font-face-rule[m
[32m+[m[32m   *[m[41m [m
[32m+[m[32m   * @param string $str CSS @font-face rules[m
[32m+[m[32m   * @return Style[m
[32m+[m[32m   */[m
[32m+[m[32m  private function _parse_font_face($str) {[m
[32m+[m[32m    $descriptors = $this->_parse_properties($str);[m
[32m+[m[41m    [m
[32m+[m[32m    preg_match_all("/(url|local)\s*\([\"\']?([^\"\'\)]+)[\"\']?\)\s*(format\s*\([\"\']?([^\"\'\)]+)[\"\']?\))?/i", $descriptors->src, $src);[m
[32m+[m[41m    [m
[32m+[m[32m    $sources = array();[m
[32m+[m[32m    foreach($src[0] as $i => $value) {[m
[32m+[m[32m      $sources[] = array([m
[32m+[m[32m        "local"  => strtolower($src[1][$i]) === "local",[m
[32m+[m[32m        "uri"    => $src[2][$i],[m
[32m+[m[32m        "format" => $src[4][$i],[m
[32m+[m[32m      );[m
[32m+[m[32m    }[m
[32m+[m[41m    [m
[32m+[m[32m    //@todo download font file, ttf2afm, etc[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * parse regular CSS blocks[m
[32m+[m[32m   *[m
[32m+[m[32m   * _parse_properties() creates a new Style object based on the provided[m
[32m+[m[32m   * CSS rules.[m
[32m+[m[32m   *[m
[32m+[m[32m   * @param string $str  CSS rules[m
[32m+[m[32m   * @return Style[m
[32m+[m[32m   */[m
[32m+[m[32m  private function _parse_properties($str) {[m
[32m+[m[32m    $properties = preg_split("/;(?=(?:[^\(]*\([^\)]*\))*(?![^\)]*\)))/", $str);[m
[32m+[m
[32m+[m[32m    if (DEBUGCSS) print '[_parse_properties';[m
[32m+[m
[32m+[m[32m    // Create the style[m
[32m+[m[32m    $style = new Style($this);[m
[32m+[m[32m    foreach ($properties as $prop) {[m
[32m+[m[32m      // If the $prop contains an url, the regex may be wrong[m
[32m+[m[32m      // @todo: fix the regex so that it works everytime[m
[32m+[m[32m      /*if (strpos($prop, "url(") === false) {[m
[32m+[m[32m        if (preg_match("/([a-z-]+)\s*:\s*[^:]+$/i", $prop, $m))[m
[32m+[m[32m          $prop = $m[0];[m
[32m+[m[32m      }*/[m
[32m+[m[32m      //A css property can have " ! important" appended (whitespace optional)[m
[32m+[m[32m      //strip this off to decode core of the property correctly.[m
[32m+[m[32m      //Pass on in the style to allow proper handling:[m
[32m+[m[32m      //!important properties can only be overridden by other !important ones.[m
[32m+[m[32m      //$style->$prop_name = is a shortcut of $style->__set($prop_name,$value);.[m
[32m+[m[32m      //If no specific set function available, set _props["prop_name"][m
[32m+[m[32m      //style is always copied completely, or $_props handled separately[m
[32m+[m[32m      //Therefore set a _important_props["prop_name"]=true to indicate the modifier[m
[32m+[m
[32m+[m[32m      /* Instead of short code, prefer the typical case with fast code[m
[32m+[m	[32m  $important = preg_match("/(.*?)!\s*important/",$prop,$match);[m
[32m+[m[32m      if ( $important ) {[m
[32m+[m[41m      [m	[32m$prop = $match[1];[m
[32m+[m[32m      }[m
[32m+[m[32m      $prop = trim($prop);[m
[32m+[m[32m      */[m
[32m+[m[32m      if (DEBUGCSS) print '(';[m
[32m+[m[41m [m	[32m  $important = false;[m
[32m+[m[32m      $prop = trim($prop);[m
[32m+[m[32m      if (substr($prop,-9) === 'important') {[m
[32m+[m[41m      [m	[32m$prop_tmp = rtrim(substr($prop,0,-9));[m
[32m+[m[41m      [m	[32mif (substr($prop_tmp,-1) === '!') {[m
[32m+[m[41m      [m		[32m$prop = rtrim(substr($prop_tmp,0,-1));[m
[32m+[m[41m      [m		[32m$important = true;[m
[32m+[m[41m      [m	[32m}[m
[32m+[m[32m      }[m
[32m+[m
[32m+[m[32m      if ($prop == "") {[m
[32m+[m[32m        if (DEBUGCSS) print 'empty)';[m
[32m+[m[32m        continue;[m
[32m+[m[32m      }[m
[32m+[m
[32m+[m[32m      $i = mb_strpos($prop, ":");[m
[32m+[m[32m      if ( $i === false ) {[m
[32m+[m[32m        if (DEBUGCSS) print 'novalue'.$prop.')';[m
[32m+[m[32m        continue;[m
[32m+[m[32m      }[m
[32m+[m
[32m+[m[32m      $prop_name = rtrim(mb_strtolower(mb_substr($prop, 0, $i)));[m
[32m+[m[32m      $value = ltrim(mb_substr($prop, $i+1));[m
[32m+[m[32m      if (DEBUGCSS) print $prop_name.':='.$value.($important?'!IMPORTANT':'').')';[m
[32m+[m[32m      //New style, anyway empty[m
[32m+[m[32m      //if ($important || !$style->important_get($prop_name) ) {[m
[32m+[m[32m      //$style->$prop_name = array($value,$important);[m
[32m+[m[32m      //assignment might be replaced by overloading through __set,[m
[32m+[m[32m      //and overloaded functions might check _important_props,[m
[32m+[m[32m      //therefore set _important_props first.[m
[32m+[m[32m      if ($important) {[m
[32m+[m[32m        $style->important_set($prop_name);[m
[32m+[m[32m      }[m
[32m+[m[32m      //For easier debugging, don't use overloading of assignments with __set[m
[32m+[m[32m      $style->$prop_name = $value;[m
[32m+[m[32m      //$style->props_set($prop_name, $value);[m
[32m+[m[32m    }[m
[32m+[m[32m    if (DEBUGCSS) print '_parse_properties]';[m
[32m+[m
[32m+[m[32m    return $style;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * parse selector + rulesets[m
[32m+[m[32m   *[m
[32m+[m[32m   * @param string $str  CSS selectors and rulesets[m
[32m+[m[32m   */[m
[32m+[m[32m  private function _parse_sections($str) {[m
[32m+[m[32m    // Pre-process: collapse all whitespace and strip whitespace around '>',[m
[32m+[m[32m    // '.', ':', '+', '#'[m
[32m+[m
[32m+[m[32m    $patterns = array("/[\\s\n]+/", "/\\s+([>.:+#])\\s+/");[m
[32m+[m[32m    $replacements = array(" ", "\\1");[m
[32m+[m[32m    $str = preg_replace($patterns, $replacements, $str);[m
[32m+[m
[32m+[m[32m    $sections = explode("}", $str);[m
[32m+[m[32m    if (DEBUGCSS) print '[_parse_sections';[m
[32m+[m[32m    foreach ($sections as $sect) {[m
[32m+[m[32m      $i = mb_strpos($sect, "{");[m
[32m+[m
[32m+[m[32m      $selectors = explode(",", mb_substr($sect, 0, $i));[m
[32m+[m[32m      if (DEBUGCSS) print '[section';[m
[32m+[m[32m      $style = $this->_parse_properties(trim(mb_substr($sect, $i+1)));[m
[32m+[m[41m      [m
[32m+[m[32m      // Assign it to the selected elements[m
[32m+[m[32m      foreach ($selectors as $selector) {[m
[32m+[m[32m        $selector = trim($selector);[m
[32m+[m
[32m+[m[32m        if ($selector == "") {[m
[32m+[m[32m          if (DEBUGCSS) print '#empty#';[m
[32m+[m[32m          continue;[m
[32m+[m[32m        }[m
[32m+[m[32m        if (DEBUGCSS) print '#'.$selector.'#';[m
[32m+[m[32m        //if (DEBUGCSS) { if (strpos($selector,'p') !== false) print '!!!p!!!#'; }[m
[32m+[m
[32m+[m[32m        $this->add_style($selector, $style);[m
[32m+[m[32m      }[m
[32m+[m[32m      if (DEBUGCSS) print 'section]';[m
[32m+[m[32m    }[m
[32m+[m[32m    if (DEBUGCSS) print '_parse_sections]';[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * dumps the entire stylesheet as a string[m
[32m+[m[32m   *[m
[32m+[m[32m   * Generates a string of each selector and associated style in the[m
[32m+[m[32m   * Stylesheet.  Useful for debugging.[m
[32m+[m[32m   *[m
[32m+[m[32m   * @return string[m
[32m+[m[32m   */[m
[32m+[m[32m  function __toString() {[m
[32m+[m[32m    $str = "";[m
[32m+[m[32m    foreach ($this->_styles as $selector => $style)[m
[32m+[m[32m      $str .= "$selector => " . $style->__toString() . "\n";[m
[32m+[m
[32m+[m[32m    return $str;[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[1mdiff --git a/application/third_party/dompdf/include/table_cell_frame_decorator.cls.php b/application/third_party/dompdf/include/table_cell_frame_decorator.cls.php[m
[1mnew file mode 100644[m
[1mindex 0000000..d23eaa4[m
[1m--- /dev/null[m
[1m+++ b/application/third_party/dompdf/include/table_cell_frame_decorator.cls.php[m
[36m@@ -0,0 +1,135 @@[m
[32m+[m[32m<?php[m
[32m+[m[32m/**[m
[32m+[m[32m * DOMPDF - PHP5 HTML to PDF renderer[m
[32m+[m[32m *[m
[32m+[m[32m * File: $RCSfile: table_cell_frame_decorator.cls.php,v $[m
[32m+[m[32m * Created on: 2004-07-29[m
[32m+[m[32m *[m
[32m+[m[32m * Copyright (c) 2004 - Benj Carson <benjcarson@digitaljunkies.ca>[m
[32m+[m[32m *[m
[32m+[m[32m * This library is free software; you can redistribute it and/or[m
[32m+[m[32m * modify it under the terms of the GNU Lesser General Public[m
[32m+[m[32m * License as published by the Free Software Foundation; either[m
[32m+[m[32m * version 2.1 of the License, or (at your option) any later version.[m
[32m+[m[32m *[m
[32m+[m[32m * This library is distributed in the hope that it will be useful,[m
[32m+[m[32m * but WITHOUT ANY WARRANTY; without even the implied warranty of[m
[32m+[m[32m * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU[m
[32m+[m[32m * Lesser General Public License for more details.[m
[32m+[m[32m *[m
[32m+[m[32m * You should have received a copy of the GNU Lesser General Public License[m
[32m+[m[32m * along with this library in the file LICENSE.LGPL; if not, write to the[m
[32m+[m[32m * Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA[m
[32m+[m[32m * 02111-1307 USA[m
[32m+[m[32m *[m
[32m+[m[32m * Alternatively, you may distribute this software under the terms of the[m
[32m+[m[32m * PHP License, version 3.0 or later.  A copy of this license should have[m
[32m+[m[32m * been distributed with this file in the file LICENSE.PHP .  If this is not[m
[32m+[m[32m * the case, you can obtain a copy at http://www.php.net/license/3_0.txt.[m
[32m+[m[32m *[m
[32m+[m[32m * The latest version of DOMPDF might be available at:[m
[32m+[m[32m * http://www.dompdf.com/[m
[32m+[m[32m *[m
[32m+[m[32m * @link http://www.dompdf.com/[m
[32m+[m[32m * @copyright 2004 Benj Carson[m
[32m+[m[32m * @author Benj Carson <benjcarson@digitaljunkies.ca>[m
[32m+[m[32m * @package dompdf[m
[32m+[m
[32m+[m[32m */[m
[32m+[m
[32m+[m[32m/* $Id: table_cell_frame_decorator.cls.php 216 2010-03-11 22:49:18Z ryan.masten $ */[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Decorates table cells for layout[m
[32m+[m[32m *[m
[32m+[m[32m * @access private[m
[32m+[m[32m * @package dompdf[m
[32m+[m[32m */[m
[32m+[m[32mclass Table_Cell_Frame_Decorator extends Block_Frame_Decorator {[m
[32m+[m[41m  [m
[32m+[m[32m  protected $_resolved_borders;[m
[32m+[m[32m  protected $_content_height;[m
[32m+[m[41m  [m
[32m+[m[32m  //........................................................................[m
[32m+[m
[32m+[m[32m  function __construct(Frame $frame, DOMPDF $dompdf) {[m
[32m+[m[32m    parent::__construct($frame, $dompdf);[m
[32m+[m[32m    $this->_resolved_borders = array();[m
[32m+[m[32m    $this->_content_height = 0;[m[41m    [m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  //........................................................................[m
[32m+[m
[32m+[m[32m  function reset() {[m
[32m+[m[32m    parent::reset();[m
[32m+[m[32m    $this->_resolved_borders = array();[m
[32m+[m[32m    $this->_content_height = 0;[m
[32m+[m[32m    $this->_frame->reset();[m[41m    [m
[32m+[m[32m  }[m
[32m+[m[41m  [m
[32m+[m[32m  function get_content_height() {[m
[32m+[m[32m    return $this->_content_height;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  function set_content_height($height) {[m
[32m+[m[32m    $this->_content_height = $height;[m
[32m+[m[32m  }[m
[32m+[m[41m  [m
[32m+[m[32m  function set_cell_height($height) {[m
[32m+[m[32m    $style = $this->get_style();[m
[32m+[m[32m    $v_space = $style->length_in_pt(array($style->margin_top,[m
[32m+[m[32m                                          $style->padding_top,[m
[32m+[m[32m                                          $style->border_top_width,[m
[32m+[m[32m                                          $style->border_bottom_width,[m
[32m+[m[32m                                          $style->padding_bottom,[m
[32m+[m[32m                                          $style->margin_bottom),[m
[32m+[m[32m                                    $style->width);[m
[32m+[m
[32m+[m[32m    $new_height = $height - $v_space;[m[41m    [m
[32m+[m[32m    $style->height = $new_height;[m
[32m+[m
[32m+[m[32m    if ( $new_height > $this->_content_height ) {[m
[32m+[m[32m      // Adjust our vertical alignment[m
[32m+[m[32m      $valign = $style->vertical_align;[m
[32m+[m
[32m+[m[32m      switch ($valign) {[m
[32m+[m
[32m+[m[32m      default:[m
[32m+[m[32m      case "baseline":[m
[32m+[m[32m        // FIXME: this isn't right[m
[32m+[m[41m        [m
[32m+[m[32m      case "top":[m
[32m+[m[32m        // Don't need to do anything[m
[32m+[m[32m        return;[m
[32m+[m
[32m+[m[32m      case "middle":[m
[32m+[m[32m        $delta = ($new_height - $this->_content_height) / 2;[m
[32m+[m[32m        break;[m
[32m+[m
[32m+[m[32m      case "bottom":[m
[32m+[m[32m        $delta = $new_height - $this->_content_height;[m
[32m+[m[32m        break;[m
[32m+[m
[32m+[m[32m      }[m
[32m+[m[41m   [m
[32m+[m[32m      // Move our children[m
[32m+[m[32m      foreach ( $this->get_lines() as $i => $line ) {[m
[32m+[m[32m        foreach ( $line["frames"] as $frame )[m
[32m+[m[32m          $frame->set_position( null, $frame->get_position("y") + $delta );[m
[32m+[m[32m      }[m
[32m+[m[32m   }[m
[32m+[m[41m        [m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  function set_resolved_border($side, $border_spec) {[m[41m    [m
[32m+[m[32m    $this->_resolved_borders[$side] = $border_spec;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  //........................................................................[m
[32m+[m
[32m+[m[32m  function get_resolved_border($side) {[m
[32m+[m[32m    return $this->_resolved_borders[$side];[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  function get_resolved_borders() { return $this->_resolved_borders; }[m
[32m+[m[32m}[m
[1mdiff --git a/application/third_party/dompdf/include/table_cell_frame_reflower.cls.php b/application/third_party/dompdf/include/table_cell_frame_reflower.cls.php[m
[1mnew file mode 100644[m
[1mindex 0000000..0393c85[m
[1m--- /dev/null[m
[1m+++ b/application/third_party/dompdf/include/table_cell_frame_reflower.cls.php[m
[36m@@ -0,0 +1,147 @@[m
[32m+[m[32m<?php[m
[32m+[m[32m/**[m
[32m+[m[32m * DOMPDF - PHP5 HTML to PDF renderer[m
[32m+[m[32m *[m
[32m+[m[32m * File: $RCSfile: table_cell_frame_reflower.cls.php,v $[m
[32m+[m[32m * Created on: 2004-06-07[m
[32m+[m[32m *[m
[32m+[m[32m * Copyright (c) 2004 - Benj Carson <benjcarson@digitaljunkies.ca>[m
[32m+[m[32m *[m
[32m+[m[32m * This library is free software; you can redistribute it and/or[m
[32m+[m[32m * modify it under the terms of the GNU Lesser General Public[m
[32m+[m[32m * License as published by the Free Software Foundation; either[m
[32m+[m[32m * version 2.1 of the License, or (at your option) any later version.[m
[32m+[m[32m *[m
[32m+[m[32m * This library is distributed in the hope that it will be useful,[m
[32m+[m[32m * but WITHOUT ANY WARRANTY; without even the implied warranty of[m
[32m+[m[32m * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU[m
[32m+[m[32m * Lesser General Public License for more details.[m
[32m+[m[32m *[m
[32m+[m[32m * You should have received a copy of the GNU Lesser General Public License[m
[32m+[m[32m * along with this library in the file LICENSE.LGPL; if not, write to the[m
[32m+[m[32m * Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA[m
[32m+[m[32m * 02111-1307 USA[m
[32m+[m[32m *[m
[32m+[m[32m * Alternatively, you may distribute this software under the terms of the[m
[32m+[m[32m * PHP License, version 3.0 or later.  A copy of this license should have[m
[32m+[m[32m * been distributed with this file in the file LICENSE.PHP .  If this is not[m
[32m+[m[32m * the case, you can obtain a copy at http://www.php.net/license/3_0.txt.[m
[32m+[m[32m *[m
[32m+[m[32m * The latest version of DOMPDF might be available at:[m
[32m+[m[32m * http://www.dompdf.com/[m
[32m+[m[32m *[m
[32m+[m[32m * @link http://www.dompdf.com/[m
[32m+[m[32m * @copyright 2004 Benj Carson[m
[32m+[m[32m * @author Benj Carson <benjcarson@digitaljunkies.ca>[m
[32m+[m[32m * @package dompdf[m
[32m+[m
[32m+[m[32m */[m
[32m+[m
[32m+[m[32m/* $Id: table_cell_frame_reflower.cls.php 358 2011-01-30 22:22:47Z fabien.menager $ */[m
[32m+[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Reflows table cells[m
[32m+[m[32m *[m
[32m+[m[32m * @access private[m
[32m+[m[32m * @package dompdf[m
[32m+[m[32m */[m
[32m+[m[32mclass Table_Cell_Frame_Reflower extends Block_Frame_Reflower {[m
[32m+[m
[32m+[m[32m  //........................................................................[m
[32m+[m
[32m+[m[32m  function __construct(Frame $frame) {[m
[32m+[m[32m    parent::__construct($frame);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  //........................................................................[m
[32m+[m
[32m+[m[32m  function reflow(Frame_Decorator $block = null) {[m
[32m+[m
[32m+[m[32m    $style = $this->_frame->get_style();[m
[32m+[m
[32m+[m[32m    $table = Table_Frame_Decorator::find_parent_table($this->_frame);[m
[32m+[m[32m    $cellmap = $table->get_cellmap();[m
[32m+[m
[32m+[m[32m    list($x, $y) = $cellmap->get_frame_position($this->_frame);[m
[32m+[m[32m    $this->_frame->set_position($x, $y);[m
[32m+[m
[32m+[m[32m    $cells = $cellmap->get_spanned_cells($this->_frame);[m
[32m+[m
[32m+[m[32m    $w = 0;[m
[32m+[m[32m    foreach ( $cells["columns"] as $i ) {[m
[32m+[m[32m      $col = $cellmap->get_column( $i );[m
[32m+[m[32m      $w += $col["used-width"];[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    //FIXME?[m
[32m+[m[32m    $h = $this->_frame->get_containing_block("h");[m
[32m+[m
[32m+[m[32m    $left_space = $style->length_in_pt(array($style->margin_left,[m
[32m+[m[32m                                             $style->padding_left,[m
[32m+[m[32m                                             $style->border_left_width),[m
[32m+[m[32m                                       $w);[m
[32m+[m
[32m+[m[32m    $right_space = $style->length_in_pt(array($style->padding_right,[m
[32m+[m[32m                                              $style->margin_right,[m
[32m+[m[32m                                              $style->border_right_width),[m
[32m+[m[32m                                        $w);[m
[32m+[m
[32m+[m[32m    $top_space = $style->length_in_pt(array($style->margin_top,[m
[32m+[m[32m                                            $style->padding_top,[m
[32m+[m[32m                                            $style->border_top_width),[m
[32m+[m[32m                                      $h);[m
[32m+[m[32m    $bottom_space = $style->length_in_pt(array($style->margin_bottom,[m
[32m+[m[32m                                               $style->padding_bottom,[m
[32m+[m[32m                                               $style->border_bottom_width),[m
[32m+[m[32m                                      $h);[m
[32m+[m
[32m+[m[32m    $style->width = $cb_w = $w - $left_space - $right_space;[m
[32m+[m
[32m+[m[32m    $content_x = $x + $left_space;[m
[32m+[m[32m    $content_y = $line_y = $y + $top_space;[m
[32m+[m
[32m+[m[32m    // Adjust the first line based on the text-indent property[m
[32m+[m[32m    $indent = $style->length_in_pt($style->text_indent, $w);[m
[32m+[m[32m    $this->_frame->increase_line_width($indent);[m
[32m+[m
[32m+[m[32m    // Set the y position of the first line in the cell[m
[32m+[m[32m    $page = $this->_frame->get_root();[m
[32m+[m[32m    $this->_frame->set_current_line($line_y);[m
[32m+[m[41m    [m
[32m+[m[32m    // Set the containing blocks and reflow each child[m
[32m+[m[32m    foreach ( $this->_frame->get_children() as $child ) {[m
[32m+[m[41m      [m
[32m+[m[32m      if ( $page->is_full() )[m
[32m+[m[32m        break;[m
[32m+[m[41m    [m
[32m+[m[32m      $child->set_containing_block($content_x, $content_y, $cb_w, $h);[m
[32m+[m[32m      $child->reflow($this->_frame);[m
[32m+[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    // Determine our height[m
[32m+[m[32m    $style_height = $style->length_in_pt($style->height, $h);[m
[32m+[m
[32m+[m[32m    $this->_frame->set_content_height($this->_calculate_content_height());[m
[32m+[m
[32m+[m[32m    $height = max($style_height, $this->_frame->get_content_height());[m
[32m+[m
[32m+[m[32m    // Let the cellmap know our height[m
[32m+[m[32m    $cell_height = $height / count($cells["rows"]);[m
[32m+[m
[32m+[m[32m    if ($style_height <= $height)[m
[32m+[m[32m      $cell_height += $top_space + $bottom_space;[m
[32m+[m
[32m+[m[32m    foreach ($cells["rows"] as $i)[m
[32m+[m[32m      $cellmap->set_row_height($i, $cell_height);[m
[32m+[m
[32m+[m[32m    $style->height = $height;[m
[32m+[m
[32m+[m[32m    $this->_text_align();[m
[32m+[m
[32m+[m[32m    $this->vertical_align();[m
[32m+[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m}[m
[1mdiff --git a/application/third_party/dompdf/include/table_cell_positioner.cls.php b/application/third_party/dompdf/include/table_cell_positioner.cls.php[m
[1mnew file mode 100644[m
[1mindex 0000000..29842ac[m
[1m--- /dev/null[m
[1m+++ b/application/third_party/dompdf/include/table_cell_positioner.cls.php[m
[36m@@ -0,0 +1,61 @@[m
[32m+[m[32m<?php[m
[32m+[m[32m/**[m
[32m+[m[32m * DOMPDF - PHP5 HTML to PDF renderer[m
[32m+[m[32m *[m
[32m+[m[32m * File: $RCSfile: table_cell_positioner.cls.php,v $[m
[32m+[m[32m * Created on: 2004-06-08[m
[32m+[m[32m *[m
[32m+[m[32m * Copyright (c) 2004 - Benj Carson <benjcarson@digitaljunkies.ca>[m
[32m+[m[32m *[m
[32m+[m[32m * This library is free software; you can redistribute it and/or[m
[32m+[m[32m * modify it under the terms of the GNU Lesser General Public[m
[32m+[m[32m * License as published by the Free Software Foundation; either[m
[32m+[m[32m * version 2.1 of the License, or (at your option) any later version.[m
[32m+[m[32m *[m
[32m+[m[32m * This library is distributed in the hope that it will be useful,[m
[32m+[m[32m * but WITHOUT ANY WARRANTY; without even the implied warranty of[m
[32m+[m[32m * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU[m
[32m+[m[32m * Lesser General Public License for more details.[m
[32m+[m[32m *[m
[32m+[m[32m * You should have received a copy of the GNU Lesser General Public License[m
[32m+[m[32m * along with this library in the file LICENSE.LGPL; if not, write to the[m
[32m+[m[32m * Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA[m
[32m+[m[32m * 02111-1307 USA[m
[32m+[m[32m *[m
[32m+[m[32m * Alternatively, you may distribute this software under the terms of the[m
[32m+[m[32m * PHP License, version 3.0 or later.  A copy of this license should have[m
[32m+[m[32m * been distributed with this file in the file LICENSE.PHP .  If this is not[m
[32m+[m[32m * the case, you can obtain a copy at http://www.php.net/license/3_0.txt.[m
[32m+[m[32m *[m
[32m+[m[32m * The latest version of DOMPDF might be available at:[m
[32m+[m[32m * http://www.dompdf.com/[m
[32m+[m[32m *[m
[32m+[m[32m * @link http://www.dompdf.com/[m
[32m+[m[32m * @copyright 2004 Benj Carson[m
[32m+[m[32m * @author Benj Carson <benjcarson@digitaljunkies.ca>[m
[32m+[m[32m * @package dompdf[m
[32m+[m
[32m+[m[32m */[m
[32m+[m
[32m+[m[32m/* $Id: table_cell_positioner.cls.php 216 2010-03-11 22:49:18Z ryan.masten $ */[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Positions table cells[m
[32m+[m[32m *[m
[32m+[m[32m * @access private[m
[32m+[m[32m * @package dompdf[m
[32m+[m[32m */[m
[32m+[m[32mclass Table_Cell_Positioner extends Positioner {[m
[32m+[m
[32m+[m[32m  function __construct(Frame_Decorator $frame) { parent::__construct($frame); }[m
[32m+[m[41m  [m
[32m+[m[32m  //........................................................................[m
[32m+[m
[32m+[m[32m  function position() {[m
[32m+[m
[32m+[m[32m    $table = Table_Frame_Decorator::find_parent_table($this->_frame);[m
[32m+[m[32m    $cellmap = $table->get_cellmap();[m
[32m+[m[32m    $this->_frame->set_position($cellmap->get_frame_position($this->_frame));[m
[32m+[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[1mdiff --git a/application/third_party/dompdf/include/table_cell_renderer.cls.php b/application/third_party/dompdf/include/table_cell_renderer.cls.php[m
[1mnew file mode 100644[m
[1mindex 0000000..5417032[m
[1m--- /dev/null[m
[1m+++ b/application/third_party/dompdf/include/table_cell_renderer.cls.php[m
[36m@@ -0,0 +1,185 @@[m
[32m+[m[32m<?php[m
[32m+[m[32m/**[m
[32m+[m[32m * DOMPDF - PHP5 HTML to PDF renderer[m
[32m+[m[32m *[m
[32m+[m[32m * File: $RCSfile: table_cell_renderer.cls.php,v $[m
[32m+[m[32m * Created on: 2004-06-09[m
[32m+[m[32m *[m
[32m+[m[32m * Copyright (c) 2004 - Benj Carson <benjcarson@digitaljunkies.ca>[m
[32m+[m[32m *[m
[32m+[m[32m * This library is free software; you can redistribute it and/or[m
[32m+[m[32m * modify it under the terms of the GNU Lesser General Public[m
[32m+[m[32m * License as published by the Free Software Foundation; either[m
[32m+[m[32m * version 2.1 of the License, or (at your option) any later version.[m
[32m+[m[32m *[m
[32m+[m[32m * This library is distributed in the hope that it will be useful,[m
[32m+[m[32m * but WITHOUT ANY WARRANTY; without even the implied warranty of[m
[32m+[m[32m * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU[m
[32m+[m[32m * Lesser General Public License for more details.[m
[32m+[m[32m *[m
[32m+[m[32m * You should have received a copy of the GNU Lesser General Public License[m
[32m+[m[32m * along with this library in the file LICENSE.LGPL; if not, write to the[m
[32m+[m[32m * Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA[m
[32m+[m[32m * 02111-1307 USA[m
[32m+[m[32m *[m
[32m+[m[32m * Alternatively, you may distribute this software under the terms of the[m
[32m+[m[32m * PHP License, version 3.0 or later.  A copy of this license should have[m
[32m+[m[32m * been distributed with this file in the file LICENSE.PHP .  If this is not[m
[32m+[m[32m * the case, you can obtain a copy at http://www.php.net/license/3_0.txt.[m
[32m+[m[32m *[m
[32m+[m[32m * The latest version of DOMPDF might be available at:[m
[32m+[m[32m * http://www.dompdf.com/[m
[32m+[m[32m *[m
[32m+[m[32m * @link http://www.dompdf.com/[m
[32m+[m[32m * @copyright 2004 Benj Carson[m
[32m+[m[32m * @author Benj Carson <benjcarson@digitaljunkies.ca>[m
[32m+[m[32m * @package dompdf[m
[32m+[m
[32m+[m[32m */[m
[32m+[m
[32m+[m[32m/* $Id: table_cell_renderer.cls.php 311 2010-09-05 20:02:01Z fabien.menager $ */[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Renders table cells[m
[32m+[m[32m *[m
[32m+[m[32m * @access private[m
[32m+[m[32m * @package dompdf[m
[32m+[m[32m */[m
[32m+[m[32mclass Table_Cell_Renderer extends Block_Renderer {[m
[32m+[m
[32m+[m[32m  //........................................................................[m
[32m+[m
[32m+[m[32m  function render(Frame $frame) {[m
[32m+[m[32m    $style = $frame->get_style();[m
[32m+[m
[32m+[m[32m    $this->_set_opacity( $frame->get_opacity( $style->opacity ) );[m
[32m+[m[41m    [m
[32m+[m[32m    // Draw our background, border and content[m
[32m+[m[32m    if ( ($bg = $style->background_color) !== "transparent" ) {[m
[32m+[m[32m      list($x, $y, $w, $h) = $frame->get_padding_box();[m
[32m+[m[32m      $this->_canvas->filled_rectangle( $x, $y, $w, $h, $bg );[m
[32m+[m[32m    }[m
[32m+[m[32m    else {[m
[32m+[m[32m      list($x, $y, $w, $h) = $frame->get_padding_box();[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    if ( ($url = $style->background_image) && $url !== "none" ) {[m
[32m+[m[32m      $this->_background_image($url, $x, $y, $w, $h, $style);[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    if ( $style->border_collapse !== "collapse" ) {[m
[32m+[m[32m      $this->_render_border($frame, "bevel");[m
[32m+[m[32m      $this->_render_outline($frame, "bevel");[m
[32m+[m[32m      return;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    // The collapsed case is slightly complicated...[m
[32m+[m[32m    // @todo Add support for outlines here[m
[32m+[m
[32m+[m[32m    $cellmap = Table_Frame_Decorator::find_parent_table($frame)->get_cellmap();[m
[32m+[m[32m    $cells = $cellmap->get_spanned_cells($frame);[m
[32m+[m[32m    $num_rows = $cellmap->get_num_rows();[m
[32m+[m[32m    $num_cols = $cellmap->get_num_cols();[m
[32m+[m
[32m+[m[32m    // Determine the top row spanned by this cell[m
[32m+[m[32m    $i = $cells["rows"][0];[m
[32m+[m[32m    $top_row = $cellmap->get_row($i);[m
[32m+[m
[32m+[m[32m    // Determine if this cell borders on the bottom of the table.  If so,[m
[32m+[m[32m    // then we draw its bottom border.  Otherwise the next row down will[m
[32m+[m[32m    // draw its top border instead.[m
[32m+[m[32m    if (in_array( $num_rows - 1, $cells["rows"])) {[m
[32m+[m[32m      $draw_bottom = true;[m
[32m+[m[32m      $bottom_row = $cellmap->get_row($num_rows - 1);[m
[32m+[m[32m    } else[m
[32m+[m[32m      $draw_bottom = false;[m
[32m+[m
[32m+[m
[32m+[m[32m    // Draw the horizontal borders[m
[32m+[m[32m    foreach ( $cells["columns"] as $j ) {[m
[32m+[m[32m      $bp = $cellmap->get_border_properties($i, $j);[m
[32m+[m
[32m+[m[32m      $y = $top_row["y"] - $bp["top"]["width"] / 2;[m
[32m+[m
[32m+[m[32m      $col = $cellmap->get_column($j);[m
[32m+[m[32m      $x = $col["x"] - $bp["left"]["width"] / 2;[m
[32m+[m[32m      $w = $col["used-width"] + ($bp["left"]["width"] + $bp["right"]["width"] ) / 2;[m
[32m+[m
[32m+[m[32m      if ( $bp["top"]["style"] !== "none" && $bp["top"]["width"] > 0 ) {[m
[32m+[m[32m        $widths = array($bp["top"]["width"],[m
[32m+[m[32m                        $bp["right"]["width"],[m
[32m+[m[32m                        $bp["bottom"]["width"],[m
[32m+[m[32m                        $bp["left"]["width"]);[m
[32m+[m[32m        $method = "_border_". $bp["top"]["style"];[m
[32m+[m[32m        $this->$method($x, $y, $w, $bp["top"]["color"], $widths, "top", "square");[m
[32m+[m[32m      }[m
[32m+[m
[32m+[m[32m      if ( $draw_bottom ) {[m
[32m+[m[32m        $bp = $cellmap->get_border_properties($num_rows - 1, $j);[m
[32m+[m[32m        if ( $bp["bottom"]["style"] === "none" || $bp["bottom"]["width"] <= 0 )[m
[32m+[m[32m          continue;[m
[32m+[m
[32m+[m[32m        $y = $bottom_row["y"] + $bottom_row["height"] + $bp["bottom"]["width"] / 2;[m
[32m+[m
[32m+[m[32m        $widths = array($bp["top"]["width"],[m
[32m+[m[32m                        $bp["right"]["width"],[m
[32m+[m[32m                        $bp["bottom"]["width"],[m
[32m+[m[32m                        $bp["left"]["width"]);[m
[32m+[m[32m        $method = "_border_". $bp["bottom"]["style"];[m
[32m+[m[32m        $this->$method($x, $y, $w, $bp["bottom"]["color"], $widths, "bottom", "square");[m
[32m+[m
[32m+[m[32m      }[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    $j = $cells["columns"][0];[m
[32m+[m
[32m+[m[32m    $left_col = $cellmap->get_column($j);[m
[32m+[m
[32m+[m[32m    if (in_array($num_cols - 1, $cells["columns"])) {[m
[32m+[m[32m      $draw_right = true;[m
[32m+[m[32m      $right_col = $cellmap->get_column($num_cols - 1);[m
[32m+[m[32m    } else[m
[32m+[m[32m      $draw_right = false;[m
[32m+[m
[32m+[m[32m    // Draw the vertical borders[m
[32m+[m[32m    foreach ( $cells["rows"] as $i ) {[m
[32m+[m[32m      $bp = $cellmap->get_border_properties($i, $j);[m
[32m+[m
[32m+[m[32m      $x = $left_col["x"] - $bp["left"]["width"] / 2;[m
[32m+[m
[32m+[m[32m      $row = $cellmap->get_row($i);[m
[32m+[m
[32m+[m[32m      $y = $row["y"] - $bp["top"]["width"] / 2;[m
[32m+[m[32m      $h = $row["height"] + ($bp["top"]["width"] + $bp["bottom"]["width"])/ 2;[m
[32m+[m
[32m+[m[32m      if ( $bp["left"]["style"] !== "none" && $bp["left"]["width"] > 0 ) {[m
[32m+[m
[32m+[m[32m        $widths = array($bp["top"]["width"],[m
[32m+[m[32m                        $bp["right"]["width"],[m
[32m+[m[32m                        $bp["bottom"]["width"],[m
[32m+[m[32m                        $bp["left"]["width"]);[m
[32m+[m
[32m+[m[32m        $method = "_border_" . $bp["left"]["style"];[m
[32m+[m[32m        $this->$method($x, $y, $h, $bp["left"]["color"], $widths, "left", "square");[m
[32m+[m[32m      }[m
[32m+[m
[32m+[m[32m      if ( $draw_right ) {[m
[32m+[m[32m        $bp = $cellmap->get_border_properties($i, $num_cols - 1);[m
[32m+[m[32m        if ( $bp["right"]["style"] === "none" || $bp["right"]["width"] <= 0 )[m
[32m+[m[32m          continue;[m
[32m+[m
[32m+[m[32m        $x = $right_col["x"] + $right_col["used-width"] + $bp["right"]["width"] / 2;[m
[32m+[m
[32m+[m[32m        $widths = array($bp["top"]["width"],[m
[32m+[m[32m                        $bp["right"]["width"],[m
[32m+[m[32m                        $bp["bottom"]["width"],[m
[32m+[m[32m                        $bp["left"]["width"]);[m
[32m+[m
[32m+[m[32m        $method = "_border_" . $bp["right"]["style"];[m
[32m+[m[32m        $this->$method($x, $y, $h, $bp["right"]["color"], $widths, "right", "square");[m
[32m+[m
[32m+[m[32m      }[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[1mdiff --git a/application/third_party/dompdf/include/table_frame_decorator.cls.php b/application/third_party/dompdf/include/table_frame_decorator.cls.php[m
[1mnew file mode 100644[m
[1mindex 0000000..713cce4[m
[1m--- /dev/null[m
[1m+++ b/application/third_party/dompdf/include/table_frame_decorator.cls.php[m
[36m@@ -0,0 +1,342 @@[m
[32m+[m[32m<?php[m
[32m+[m[32m/**[m
[32m+[m[32m * DOMPDF - PHP5 HTML to PDF renderer[m
[32m+[m[32m *[m
[32m+[m[32m * File: $RCSfile: table_frame_decorator.cls.php,v $[m
[32m+[m[32m * Created on: 2004-06-04[m
[32m+[m[32m *[m
[32m+[m[32m * Copyright (c) 2004 - Benj Carson <benjcarson@digitaljunkies.ca>[m
[32m+[m[32m *[m
[32m+[m[32m * This library is free software; you can redistribute it and/or[m
[32m+[m[32m * modify it under the terms of the GNU Lesser General Public[m
[32m+[m[32m * License as published by the Free Software Foundation; either[m
[32m+[m[32m * version 2.1 of the License, or (at your option) any later version.[m
[32m+[m[32m *[m
[32m+[m[32m * This library is distributed in the hope that it will be useful,[m
[32m+[m[32m * but WITHOUT ANY WARRANTY; without even the implied warranty of[m
[32m+[m[32m * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU[m
[32m+[m[32m * Lesser General Public License for more details.[m
[32m+[m[32m *[m
[32m+[m[32m * You should have received a copy of the GNU Lesser General Public License[m
[32m+[m[32m * along with this library in the file LICENSE.LGPL; if not, write to the[m
[32m+[m[32m * Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA[m
[32m+[m[32m * 02111-1307 USA[m
[32m+[m[32m *[m
[32m+[m[32m * Alternatively, you may distribute this software under the terms of the[m
[32m+[m[32m * PHP License, version 3.0 or later.  A copy of this license should have[m
[32m+[m[32m * been distributed with this file in the file LICENSE.PHP .  If this is not[m
[32m+[m[32m * the case, you can obtain a copy at http://www.php.net/license/3_0.txt.[m
[32m+[m[32m *[m
[32m+[m[32m * The latest version of DOMPDF might be available at:[m
[32m+[m[32m * http://www.dompdf.com/[m
[32m+[m[32m *[m
[32m+[m[32m * @link http://www.dompdf.com/[m
[32m+[m[32m * @copyright 2004 Benj Carson[m
[32m+[m[32m * @author Benj Carson <benjcarson@digitaljunkies.ca>[m
[32m+[m[32m * @package dompdf[m
[32m+[m
[32m+[m[32m */[m
[32m+[m
[32m+[m[32m/* $Id: table_frame_decorator.cls.php 317 2010-10-06 13:06:57Z fabien.menager $ */[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Decorates Frames for table layout[m
[32m+[m[32m *[m
[32m+[m[32m * @access private[m
[32m+[m[32m * @package dompdf[m
[32m+[m[32m */[m
[32m+[m[32mclass Table_Frame_Decorator extends Frame_Decorator {[m
[32m+[m[32m  static $VALID_CHILDREN = array("table-row-group",[m
[32m+[m[32m                                 "table-row",[m
[32m+[m[32m                                 "table-header-group",[m
[32m+[m[32m                                 "table-footer-group",[m
[32m+[m[32m                                 "table-column",[m
[32m+[m[32m                                 "table-column-group",[m
[32m+[m[32m                                 "table-caption",[m
[32m+[m[32m                                 "table-cell");[m
[32m+[m
[32m+[m[32m  static $ROW_GROUPS = array('table-row-group',[m
[32m+[m[32m                             'table-header-group',[m
[32m+[m[32m                             'table-footer-group');[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * The Cellmap object for this table.  The cellmap maps table cells[m
[32m+[m[32m   * to rows and columns, and aids in calculating column widths.[m
[32m+[m[32m   *[m
[32m+[m[32m   * @var Cellmap[m
[32m+[m[32m   */[m
[32m+[m[32m  protected $_cellmap;[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * The minimum width of the table, in pt[m
[32m+[m[32m   *[m
[32m+[m[32m   * @var float[m
[32m+[m[32m   */[m
[32m+[m[32m  protected $_min_width;[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * The maximum width of the table, in pt[m
[32m+[m[32m   *[m
[32m+[m[32m   * @var float[m
[32m+[m[32m   */[m
[32m+[m[32m  protected $_max_width;[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Table header rows.  Each table header is duplicated when a table[m
[32m+[m[32m   * spans pages.[m
[32m+[m[32m   *[m
[32m+[m[32m   * @var array[m
[32m+[m[32m   */[m
[32m+[m[32m  protected $_headers;[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Table footer rows.  Each table footer is duplicated when a table[m
[32m+[m[32m   * spans pages.[m
[32m+[m[32m   *[m
[32m+[m[32m   * @var array[m
[32m+[m[32m   */[m
[32m+[m[32m  protected $_footers;[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Class constructor[m
[32m+[m[32m   *[m
[32m+[m[32m   * @param Frame $frame the frame to decorate[m
[32m+[m[32m   */[m
[32m+[m[32m  function __construct(Frame $frame, DOMPDF $dompdf) {[m
[32m+[m[32m    parent::__construct($frame, $dompdf);[m
[32m+[m[32m    $this->_cellmap = new Cellmap($this);[m
[32m+[m[32m    $this->_min_width = null;[m
[32m+[m[32m    $this->_max_width = null;[m
[32m+[m[32m    $this->_headers = array();[m
[32m+[m[32m    $this->_footers = array();[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m
[32m+[m[32m  function reset() {[m
[32m+[m[32m    parent::reset();[m
[32m+[m[32m    $this->_cellmap->reset();[m
[32m+[m[32m    $this->_min_width = null;[m
[32m+[m[32m    $this->_max_width = null;[m
[32m+[m[32m    $this->_headers = array();[m
[32m+[m[32m    $this->_footers = array();[m
[32m+[m[32m    $this->_reflower->reset();[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  //........................................................................[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * split the table at $row.  $row and all subsequent rows will be[m
[32m+[m[32m   * added to the clone.  This method is overidden in order to remove[m
[32m+[m[32m   * frames from the cellmap properly.[m
[32m+[m[32m   *[m
[32m+[m[32m   * @param Frame $row[m
[32m+[m[32m   */[m
[32m+[m[32m  function split($child = null, $force_pagebreak = false) {[m
[32m+[m
[32m+[m[32m    if ( is_null($child) ) {[m
[32m+[m[32m      parent::split();[m
[32m+[m[32m      return;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    // If $child is a header or if it is the first non-header row, do[m
[32m+[m[32m    // not duplicate headers, simply move the table to the next page.[m
[32m+[m[32m    if ( count($this->_headers) && !in_array($child, $this->_headers, true) &&[m
[32m+[m[32m         !in_array($child->get_prev_sibling(), $this->_headers, true) ) {[m
[32m+[m
[32m+[m[32m      $first_header = null;[m
[32m+[m
[32m+[m[32m      // Insert copies of the table headers before $child[m
[32m+[m[32m      foreach ($this->_headers as $header) {[m
[32m+[m
[32m+[m[32m        $new_header = $header->deep_copy();[m
[32m+[m
[32m+[m[32m        if ( is_null($first_header) )[m
[32m+[m[32m          $first_header = $new_header;[m
[32m+[m
[32m+[m[32m        $this->insert_child_before($new_header, $child);[m
[32m+[m[32m      }[m
[32m+[m
[32m+[m[32m      parent::split($first_header);[m
[32m+[m
[32m+[m[32m    } else if ( in_array($child->get_style()->display, self::$ROW_GROUPS) ) {[m
[32m+[m
[32m+[m[32m      // Individual rows should have already been handled[m
[32m+[m[32m      parent::split($child);[m
[32m+[m
[32m+[m[32m    } else {[m
[32m+[m
[32m+[m[32m      $iter = $child;[m
[32m+[m
[32m+[m[32m      while ($iter) {[m
[32m+[m[32m        $this->_cellmap->remove_row($iter);[m
[32m+[m[32m        $iter = $iter->get_next_sibling();[m
[32m+[m[32m      }[m
[32m+[m
[32m+[m[32m      parent::split($child);[m
[32m+[m[32m    }[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Static function to locate the parent table of a frame[m
[32m+[m[32m   *[m
[32m+[m[32m   * @param Frame $frame[m
[32m+[m[32m   * @return Table_Frame_Decorator the table that is an ancestor of $frame[m
[32m+[m[32m   */[m
[32m+[m[32m  static function find_parent_table(Frame $frame) {[m
[32m+[m
[32m+[m[32m    while ( $frame = $frame->get_parent() )[m
[32m+[m[32m      if ( in_array($frame->get_style()->display, Style::$TABLE_TYPES) )[m
[32m+[m[32m        break;[m
[32m+[m
[32m+[m[32m    return $frame;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Return this table's Cellmap[m
[32m+[m[32m   *[m
[32m+[m[32m   * @return Cellmap[m
[32m+[m[32m   */[m
[32m+[m[32m  function get_cellmap() { return $this->_cellmap; }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Return the minimum width of this table[m
[32m+[m[32m   *[m
[32m+[m[32m   * @return float[m
[32m+[m[32m   */[m
[32m+[m[32m  function get_min_width() { return $this->_min_width; }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Return the maximum width of this table[m
[32m+[m[32m   *[m
[32m+[m[32m   * @return float[m
[32m+[m[32m   */[m
[32m+[m[32m  function get_max_width() { return $this->_max_width; }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Set the minimum width of the table[m
[32m+[m[32m   *[m
[32m+[m[32m   * @param float $width the new minimum width[m
[32m+[m[32m   */[m
[32m+[m[32m  function set_min_width($width) { $this->_min_width = $width; }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Set the maximum width of the table[m
[32m+[m[32m   *[m
[32m+[m[32m   * @param float $width the new maximum width[m
[32m+[m[32m   */[m
[32m+[m[32m  function set_max_width($width) { $this->_max_width = $width; }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Restructure tree so that the table has the correct structure.[m
[32m+[m[32m   * Invalid children (i.e. all non-table-rows) are moved below the[m
[32m+[m[32m   * table.[m
[32m+[m[32m   */[m
[32m+[m[32m  function normalise() {[m
[32m+[m
[32m+[m[32m    // Store frames generated by invalid tags and move them outside the table[m
[32m+[m[32m    $erroneous_frames = array();[m
[32m+[m[32m    $anon_row = false;[m
[32m+[m[32m    $iter = $this->get_first_child();[m
[32m+[m[32m    while ( $iter ) {[m
[32m+[m[32m      $child = $iter;[m
[32m+[m[32m      $iter = $iter->get_next_sibling();[m
[32m+[m
[32m+[m[32m      $display = $child->get_style()->display;[m
[32m+[m
[32m+[m[32m      if ( $anon_row ) {[m
[32m+[m
[32m+[m[32m        if ( $display === "table-row" ) {[m
[32m+[m[32m          // Add the previous anonymous row[m
[32m+[m[32m          $this->insert_child_before($table_row, $child);[m
[32m+[m
[32m+[m[32m          $table_row->normalise();[m
[32m+[m[32m          $child->normalise();[m
[32m+[m[32m          $anon_row = false;[m
[32m+[m[32m          continue;[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        // add the child to the anonymous row[m
[32m+[m[32m        $table_row->append_child($child);[m
[32m+[m[32m        continue;[m
[32m+[m
[32m+[m[32m      } else {[m
[32m+[m
[32m+[m[32m        if ( $display === "table-row" ) {[m
[32m+[m[32m          $child->normalise();[m
[32m+[m[32m          continue;[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        if ( $display === "table-cell") {[m
[32m+[m[32m          // Create an anonymous table row[m
[32m+[m[32m          $tr = $this->get_node()->ownerDocument->createElement("tr");[m
[32m+[m
[32m+[m[32m          $frame = new Frame($tr);[m
[32m+[m
[32m+[m[32m          $css = $this->get_style()->get_stylesheet();[m
[32m+[m[32m          $style = $css->create_style();[m
[32m+[m[32m          $style->inherit($this->get_style());[m
[32m+[m
[32m+[m[32m          // Lookup styles for tr tags.  If the user wants styles to work[m
[32m+[m[32m          // better, they should make the tr explicit... I'm not going to[m
[32m+[m[32m          // try to guess what they intended.[m
[32m+[m[32m          if ( $tr_style = $css->lookup("tr") )[m
[32m+[m[32m            $style->merge($tr_style);[m
[32m+[m
[32m+[m[32m          // Okay, I have absolutely no idea why I need this clone here, but[m
[32m+[m[32m          // if it's omitted, php (as of 2004-07-28) segfaults.[m
[32m+[m[32m          $frame->set_style(clone $style);[m
[32m+[m[32m          $table_row = Frame_Factory::decorate_frame($frame, $this->_dompdf);[m
[32m+[m[32m          $table_row->set_root($this->_root);[m
[32m+[m
[32m+[m[32m          // Add the cell to the row[m
[32m+[m[32m          $table_row->append_child($child);[m
[32m+[m
[32m+[m[32m          $anon_row = true;[m
[32m+[m[32m          continue;[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        if ( !in_array($display, self::$VALID_CHILDREN) ) {[m
[32m+[m[32m          $erroneous_frames[] = $child;[m
[32m+[m[32m          continue;[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        // Normalise other table parts (i.e. row groups)[m
[32m+[m[32m        foreach ($child->get_children() as $grandchild) {[m
[32m+[m[32m          if ( $grandchild->get_style()->display === "table-row" )[m
[32m+[m[32m            $grandchild->normalise();[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        // Add headers and footers[m
[32m+[m[32m        if ( $display === "table-header-group" )[m
[32m+[m[32m          $this->_headers[] = $child;[m
[32m+[m
[32m+[m[32m        else if ( $display === "table-footer-group" )[m
[32m+[m[32m          $this->_footers[] = $child;[m
[32m+[m[32m      }[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    if ( $anon_row ) {[m
[32m+[m[32m      // Add the row to the table[m
[32m+[m[32m      $this->_frame->append_child($table_row);[m
[32m+[m[32m      $table_row->normalise();[m
[32m+[m[32m      $this->_cellmap->add_row();[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    foreach ($erroneous_frames as $frame)[m
[32m+[m[32m      $this->move_after($frame);[m
[32m+[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  //........................................................................[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Moves the specified frame and it's corresponding node outside of[m
[32m+[m[32m   * the table.[m
[32m+[m[32m   *[m
[32m+[m[32m   * @param Frame $frame the frame to move[m
[32m+[m[32m   */[m
[32m+[m[32m  function move_after(Frame $frame) {[m
[32m+[m[32m    $this->get_parent()->insert_child_after($frame, $this);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m}[m
[1mdiff --git a/application/third_party/dompdf/include/table_frame_reflower.cls.php b/application/third_party/dompdf/include/table_frame_reflower.cls.php[m
[1mnew file mode 100644[m
[1mindex 0000000..5e4a9a1[m
[1m--- /dev/null[m
[1m+++ b/application/third_party/dompdf/include/table_frame_reflower.cls.php[m
[36m@@ -0,0 +1,574 @@[m
[32m+[m[32m<?php[m
[32m+[m[32m/**[m
[32m+[m[32m * DOMPDF - PHP5 HTML to PDF renderer[m
[32m+[m[32m *[m
[32m+[m[32m * File: $RCSfile: table_frame_reflower.cls.php,v $[m
[32m+[m[32m * Created on: 2004-06-17[m
[32m+[m[32m *[m
[32m+[m[32m * Copyright (c) 2004 - Benj Carson <benjcarson@digitaljunkies.ca>[m
[32m+[m[32m *[m
[32m+[m[32m * This library is free software; you can redistribute it and/or[m
[32m+[m[32m * modify it under the terms of the GNU Lesser General Public[m
[32m+[m[32m * License as published by the Free Software Foundation; either[m
[32m+[m[32m * version 2.1 of the License, or (at your option) any later version.[m
[32m+[m[32m *[m
[32m+[m[32m * This library is distributed in the hope that it will be useful,[m
[32m+[m[32m * but WITHOUT ANY WARRANTY; without even the implied warranty of[m
[32m+[m[32m * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU[m
[32m+[m[32m * Lesser General Public License for more details.[m
[32m+[m[32m *[m
[32m+[m[32m * You should have received a copy of the GNU Lesser General Public License[m
[32m+[m[32m * along with this library in the file LICENSE.LGPL; if not, write to the[m
[32m+[m[32m * Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA[m
[32m+[m[32m * 02111-1307 USA[m
[32m+[m[32m *[m
[32m+[m[32m * Alternatively, you may distribute this software under the terms of the[m
[32m+[m[32m * PHP License, version 3.0 or later.  A copy of this license should have[m
[32m+[m[32m * been distributed with this file in the file LICENSE.PHP .  If this is not[m
[32m+[m[32m * the case, you can obtain a copy at http://www.php.net/license/3_0.txt.[m
[32m+[m[32m *[m
[32m+[m[32m * The latest version of DOMPDF might be available at:[m
[32m+[m[32m * http://www.dompdf.com/[m
[32m+[m[32m *[m
[32m+[m[32m * @link http://www.dompdf.com/[m
[32m+[m[32m * @copyright 2004 Benj Carson[m
[32m+[m[32m * @author Benj Carson <benjcarson@digitaljunkies.ca>[m
[32m+[m[32m * @package dompdf[m
[32m+[m
[32m+[m[32m */[m
[32m+[m
[32m+[m[32m/* $Id: table_frame_reflower.cls.php 359 2011-02-05 12:15:06Z fabien.menager $ */[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Reflows tables[m
[32m+[m[32m *[m
[32m+[m[32m * @access private[m
[32m+[m[32m * @package dompdf[m
[32m+[m[32m */[m
[32m+[m[32mclass Table_Frame_Reflower extends Frame_Reflower {[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Cache of results between call to get_min_max_width and assign_widths[m
[32m+[m[32m   *[m
[32m+[m[32m   * @var array[m
[32m+[m[32m   */[m
[32m+[m[32m  protected $_state;[m
[32m+[m
[32m+[m[32m  function __construct(Table_Frame_Decorator $frame) {[m
[32m+[m[32m    $this->_state = null;[m
[32m+[m[32m    parent::__construct($frame);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * State is held here so it needs to be reset along with the decorator[m
[32m+[m[32m   */[m
[32m+[m[32m  function reset() {[m
[32m+[m[32m    $this->_state = null;[m
[32m+[m[32m    $this->_min_max_cache = null;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  //........................................................................[m
[32m+[m
[32m+[m[32m  protected function _assign_widths() {[m
[32m+[m[32m    $style = $this->_frame->get_style();[m
[32m+[m
[32m+[m[32m    // Find the min/max width of the table and sort the columns into[m
[32m+[m[32m    // absolute/percent/auto arrays[m
[32m+[m[32m    $min_width = $this->_state["min_width"];[m
[32m+[m[32m    $max_width = $this->_state["max_width"];[m
[32m+[m[32m    $percent_used = $this->_state["percent_used"];[m
[32m+[m[32m    $absolute_used = $this->_state["absolute_used"];[m
[32m+[m[32m    $auto_min = $this->_state["auto_min"];[m
[32m+[m
[32m+[m[32m    $absolute =& $this->_state["absolute"];[m
[32m+[m[32m    $percent =& $this->_state["percent"];[m
[32m+[m[32m    $auto =& $this->_state["auto"];[m
[32m+[m
[32m+[m[32m    // Determine the actual width of the table[m
[32m+[m[32m    $cb = $this->_frame->get_containing_block();[m
[32m+[m[32m    $columns =& $this->_frame->get_cellmap()->get_columns();[m
[32m+[m
[32m+[m[32m    $width = $style->width;[m
[32m+[m
[32m+[m[32m    // Calculate padding & border fudge factor[m
[32m+[m[32m    $left = $style->margin_left;[m
[32m+[m[32m    $right = $style->margin_right;[m
[32m+[m
[32m+[m[32m    $left  = $left  === "auto" ? 0 : $style->length_in_pt($left, $cb["w"]);[m
[32m+[m[32m    $right = $right === "auto" ? 0 : $style->length_in_pt($right, $cb["w"]);[m
[32m+[m
[32m+[m[32m    $delta = $left + $right + $style->length_in_pt(array($style->padding_left,[m
[32m+[m[32m                                                         $style->border_left_width,[m
[32m+[m[32m                                                         $style->border_right_width,[m
[32m+[m[32m                                                         $style->padding_right), $cb["w"]);[m
[32m+[m
[32m+[m[32m    $min_table_width = $style->length_in_pt( $style->min_width, $cb["w"] - $delta );[m
[32m+[m
[32m+[m[32m    // min & max widths already include borders & padding[m
[32m+[m[32m    $min_width -= $delta;[m
[32m+[m[32m    $max_width -= $delta;[m
[32m+[m[41m    [m
[32m+[m[32m    if ( $width !== "auto" ) {[m
[32m+[m
[32m+[m[32m      $preferred_width = $style->length_in_pt($width, $cb["w"]) - $delta;[m
[32m+[m
[32m+[m[32m      if ( $preferred_width < $min_table_width )[m
[32m+[m[32m        $preferred_width = $min_table_width;[m
[32m+[m
[32m+[m[32m      if ( $preferred_width > $min_width )[m
[32m+[m[32m        $width = $preferred_width;[m
[32m+[m[32m      else[m
[32m+[m[32m        $width = $min_width;[m
[32m+[m
[32m+[m[32m    } else {[m
[32m+[m
[32m+[m[32m      if ( $max_width + $delta < $cb["w"] )[m
[32m+[m[32m        $width = $max_width;[m
[32m+[m[32m      else if ( $cb["w"] - $delta > $min_width )[m
[32m+[m[32m        $width = $cb["w"] - $delta;[m
[32m+[m[32m      else[m
[32m+[m[32m        $width = $min_width;[m
[32m+[m
[32m+[m[32m      if ( $width < $min_table_width )[m
[32m+[m[32m        $width = $min_table_width;[m
[32m+[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    // Store our resolved width[m
[32m+[m[32m    $style->width = $width;[m
[32m+[m
[32m+[m[32m    $cellmap = $this->_frame->get_cellmap();[m
[32m+[m
[32m+[m[32m    // If the whole table fits on the page, then assign each column it's max width[m
[32m+[m[32m    if ( $width == $max_width ) {[m
[32m+[m
[32m+[m[32m      foreach (array_keys($columns) as $i)[m
[32m+[m[32m        $cellmap->set_column_width($i, $columns[$i]["max-width"]);[m
[32m+[m
[32m+[m[32m      return;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    // Determine leftover and assign it evenly to all columns[m
[32m+[m[32m    if ( $width > $min_width ) {[m
[32m+[m
[32m+[m[32m      // We have four cases to deal with:[m
[32m+[m[32m      //[m
[32m+[m[32m      // 1. All columns are auto--no widths have been specified.  In this[m
[32m+[m[32m      // case we distribute extra space across all columns weighted by max-width.[m
[32m+[m[32m      //[m
[32m+[m[32m      // 2. Only absolute widths have been specified.  In this case we[m
[32m+[m[32m      // distribute any extra space equally among 'width: auto' columns, or all[m
[32m+[m[32m      // columns if no auto columns have been specified.[m
[32m+[m[32m      //[m
[32m+[m[32m      // 3. Only percentage widths have been specified.  In this case we[m
[32m+[m[32m      // normalize the percentage values and distribute any remaining % to[m
[32m+[m[32m      // width: auto columns.  We then proceed to assign widths as fractions[m
[32m+[m[32m      // of the table width.[m
[32m+[m[32m      //[m
[32m+[m[32m      // 4. Both absolute and percentage widths have been specified.[m
[32m+[m
[32m+[m[32m      // Case 1:[m
[32m+[m[32m      if ( $absolute_used == 0 && $percent_used == 0 ) {[m
[32m+[m[32m        $increment = $width - $min_width;[m
[32m+[m
[32m+[m[32m        foreach (array_keys($columns) as $i)[m
[32m+[m[32m          $cellmap->set_column_width($i, $columns[$i]["min-width"] + $increment * ($columns[$i]["max-width"] / $max_width));[m
[32m+[m[32m        return;[m
[32m+[m[32m      }[m
[32m+[m
[32m+[m
[32m+[m[32m      // Case 2[m
[32m+[m[32m      if ( $absolute_used > 0 && $percent_used == 0 ) {[m
[32m+[m
[32m+[m[32m        if ( count($auto) > 0 )[m
[32m+[m[32m          $increment = ($width - $auto_min - $absolute_used) / count($auto);[m
[32m+[m
[32m+[m[32m        // Use the absolutely specified width or the increment[m
[32m+[m[32m        foreach (array_keys($columns) as $i) {[m
[32m+[m
[32m+[m[32m          if ( $columns[$i]["absolute"] > 0 && count($auto) )[m
[32m+[m[32m            $cellmap->set_column_width($i, $columns[$i]["min-width"]);[m
[32m+[m[32m          else if ( count($auto) )[m[41m [m
[32m+[m[32m            $cellmap->set_column_width($i, $columns[$i]["min-width"] + $increment);[m
[32m+[m[32m          else {[m
[32m+[m[32m            // All absolute columns[m
[32m+[m[32m            $increment = ($width - $absolute_used) * $columns[$i]["absolute"] / $absolute_used;[m
[32m+[m
[32m+[m[32m            $cellmap->set_column_width($i, $columns[$i]["min-width"] + $increment);[m
[32m+[m[32m          }[m
[32m+[m
[32m+[m[32m        }[m
[32m+[m[32m        return;[m
[32m+[m[32m      }[m
[32m+[m
[32m+[m
[32m+[m[32m      // Case 3:[m
[32m+[m[32m      if ( $absolute_used == 0 && $percent_used > 0 ) {[m
[32m+[m
[32m+[m[32m        $scale = null;[m
[32m+[m[32m        $remaining = null;[m
[32m+[m
[32m+[m[32m        // Scale percent values if the total percentage is > 100, or if all[m
[32m+[m[32m        // values are specified as percentages.[m
[32m+[m[32m        if ( $percent_used > 100 || count($auto) == 0)[m
[32m+[m[32m          $scale = 100 / $percent_used;[m
[32m+[m[32m        else[m
[32m+[m[32m          $scale = 1;[m
[32m+[m
[32m+[m[32m        // Account for the minimum space used by the unassigned auto columns[m
[32m+[m[32m        $used_width = $auto_min;[m
[32m+[m
[32m+[m[32m        foreach ($percent as $i) {[m
[32m+[m[32m          $columns[$i]["percent"] *= $scale;[m
[32m+[m
[32m+[m[32m          $slack = $width - $used_width;[m
[32m+[m
[32m+[m[32m          $w = min($columns[$i]["percent"] * $width/100, $slack);[m
[32m+[m
[32m+[m[32m          if ( $w < $columns[$i]["min-width"] )[m
[32m+[m[32m            $w = $columns[$i]["min-width"];[m
[32m+[m
[32m+[m[32m          $cellmap->set_column_width($i, $w);[m
[32m+[m[32m          $used_width += $w;[m
[32m+[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        // This works because $used_width includes the min-width of each[m
[32m+[m[32m        // unassigned column[m
[32m+[m[32m        if ( count($auto) > 0 ) {[m
[32m+[m[32m          $increment = ($width - $used_width) / count($auto);[m
[32m+[m
[32m+[m[32m          foreach ($auto as $i)[m
[32m+[m[32m            $cellmap->set_column_width($i, $columns[$i]["min-width"] + $increment);[m
[32m+[m
[32m+[m[32m        }[m
[32m+[m[32m        return;[m
[32m+[m[32m      }[m
[32m+[m
[32m+[m[32m      // Case 4:[m
[32m+[m
[32m+[m[32m      // First-come, first served[m
[32m+[m[32m      if ( $absolute_used > 0 && $percent_used > 0 ) {[m
[32m+[m
[32m+[m[32m        $used_width = $auto_min;[m
[32m+[m
[32m+[m[32m        foreach ($absolute as $i) {[m
[32m+[m[32m          $cellmap->set_column_width($i, $columns[$i]["min-width"]);[m
[32m+[m[32m          $used_width +=  $columns[$i]["min-width"];[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        // Scale percent values if the total percentage is > 100 or there[m
[32m+[m[32m        // are no auto values to take up slack[m
[32m+[m[32m        if ( $percent_used > 100 || count($auto) == 0 )[m
[32m+[m[32m          $scale = 100 / $percent_used;[m
[32m+[m[32m        else[m
[32m+[m[32m          $scale = 1;[m
[32m+[m
[32m+[m[32m        $remaining_width = $width - $used_width;[m
[32m+[m
[32m+[m[32m        foreach ($percent as $i) {[m
[32m+[m[32m          $slack = $remaining_width - $used_width;[m
[32m+[m
[32m+[m[32m          $columns[$i]["percent"] *= $scale;[m
[32m+[m[32m          $w = min($columns[$i]["percent"] * $remaining_width / 100, $slack);[m
[32m+[m
[32m+[m[32m          if ( $w < $columns[$i]["min-width"] )[m
[32m+[m[32m            $w = $columns[$i]["min-width"];[m
[32m+[m
[32m+[m[32m          $columns[$i]["used-width"] = $w;[m
[32m+[m[32m          $used_width += $w;[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        if ( count($auto) > 0 ) {[m
[32m+[m[32m          $increment = ($width - $used_width) / count($auto);[m
[32m+[m
[32m+[m[32m          foreach ($auto as $i)[m
[32m+[m[32m            $cellmap->set_column_width($i, $columns[$i]["min-width"] + $increment);[m
[32m+[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        return;[m
[32m+[m[32m      }[m
[32m+[m
[32m+[m
[32m+[m[32m    } else { // we are over constrained[m
[32m+[m
[32m+[m[32m      // Each column gets its minimum width[m
[32m+[m[32m      foreach (array_keys($columns) as $i)[m
[32m+[m[32m        $cellmap->set_column_width($i, $columns[$i]["min-width"]);[m
[32m+[m
[32m+[m[32m    }[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  //........................................................................[m
[32m+[m
[32m+[m[32m  // Determine the frame's height based on min/max height[m
[32m+[m[32m  protected function _calculate_height() {[m
[32m+[m
[32m+[m[32m    $style = $this->_frame->get_style();[m
[32m+[m[32m    $height = $style->height;[m
[32m+[m
[32m+[m[32m    $cellmap = $this->_frame->get_cellmap();[m
[32m+[m[32m    $cellmap->assign_frame_heights();[m
[32m+[m[32m    $rows = $cellmap->get_rows();[m
[32m+[m
[32m+[m[32m    // Determine our content height[m
[32m+[m[32m    $content_height = 0;[m
[32m+[m[32m    foreach ( $rows as $r )[m
[32m+[m[32m      $content_height += $r["height"];[m
[32m+[m
[32m+[m[32m    $cb = $this->_frame->get_containing_block();[m
[32m+[m
[32m+[m[32m    if ( !($style->overflow === "visible" ||[m
[32m+[m[32m           ($style->overflow === "hidden" && $height === "auto")) ) {[m
[32m+[m
[32m+[m[32m      // Only handle min/max height if the height is independent of the frame's content[m
[32m+[m
[32m+[m[32m      $min_height = $style->min_height;[m
[32m+[m[32m      $max_height = $style->max_height;[m
[32m+[m
[32m+[m[32m      if ( isset($cb["h"]) ) {[m
[32m+[m[32m        $min_height = $style->length_in_pt($min_height, $cb["h"]);[m
[32m+[m[32m        $max_height = $style->length_in_pt($max_height, $cb["h"]);[m
[32m+[m
[32m+[m[32m      } else if ( isset($cb["w"]) ) {[m
[32m+[m
[32m+[m[32m        if ( mb_strpos($min_height, "%") !== false )[m
[32m+[m[32m          $min_height = 0;[m
[32m+[m[32m        else[m
[32m+[m[32m          $min_height = $style->length_in_pt($min_height, $cb["w"]);[m
[32m+[m
[32m+[m[32m        if ( mb_strpos($max_height, "%") !== false )[m
[32m+[m[32m          $max_height = "none";[m
[32m+[m[32m        else[m
[32m+[m[32m          $max_height = $style->length_in_pt($max_height, $cb["w"]);[m
[32m+[m[32m      }[m
[32m+[m
[32m+[m[32m      if ( $max_height !== "none" && $min_height > $max_height )[m
[32m+[m[32m        // Swap 'em[m
[32m+[m[32m        list($max_height, $min_height) = array($min_height, $max_height);[m
[32m+[m
[32m+[m[32m      if ( $max_height !== "none" && $height > $max_height )[m
[32m+[m[32m        $height = $max_height;[m
[32m+[m
[32m+[m[32m      if ( $height < $min_height )[m
[32m+[m[32m        $height = $min_height;[m
[32m+[m
[32m+[m[32m    } else {[m
[32m+[m
[32m+[m[32m      // Use the content height or the height value, whichever is greater[m
[32m+[m[32m      if ( $height !== "auto" ) {[m
[32m+[m[32m        $height = $style->length_in_pt($height, $cb["h"]);[m
[32m+[m
[32m+[m[32m        if ( $height <= $content_height )[m
[32m+[m[32m          $height = $content_height;[m
[32m+[m[32m        else[m
[32m+[m[32m          $cellmap->set_frame_heights($height,$content_height);[m
[32m+[m
[32m+[m[32m      } else[m
[32m+[m[32m        $height = $content_height;[m
[32m+[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    return $height;[m
[32m+[m
[32m+[m[32m  }[m
[32m+[m[32m  //........................................................................[m
[32m+[m
[32m+[m[32m  function reflow(Frame_Decorator $block = null) {[m
[32m+[m[32m    $frame = $this->_frame;[m
[32m+[m[41m    [m
[32m+[m[32m    // Check if a page break is forced[m
[32m+[m[32m    $page = $frame->get_root();[m
[32m+[m[32m    $page->check_forced_page_break($frame);[m
[32m+[m
[32m+[m[32m    // Bail if the page is full[m
[32m+[m[32m    if ( $page->is_full() )[m
[32m+[m[32m      return;[m
[32m+[m[41m    [m
[32m+[m[32m    // Let the page know that we're reflowing a table so that splits[m
[32m+[m[32m    // are suppressed (simply setting page-break-inside: avoid won't[m
[32m+[m[32m    // work because we may have an arbitrary number of block elements[m
[32m+[m[32m    // inside tds.)[m
[32m+[m[32m    $page->table_reflow_start();[m
[32m+[m[41m    [m
[32m+[m[32m    // Collapse vertical margins, if required[m
[32m+[m[32m    $this->_collapse_margins();[m
[32m+[m
[32m+[m[32m    $frame->position();[m
[32m+[m
[32m+[m[32m    // Table layout algorithm:[m
[32m+[m[32m    // http://www.w3.org/TR/CSS21/tables.html#auto-table-layout[m
[32m+[m
[32m+[m[32m    if ( is_null($this->_state) )[m
[32m+[m[32m      $this->get_min_max_width();[m
[32m+[m
[32m+[m[32m    $cb = $frame->get_containing_block();[m
[32m+[m[32m    $style = $frame->get_style();[m
[32m+[m
[32m+[m[32m    // This is slightly inexact, but should be okay.  Add half the[m
[32m+[m[32m    // border-spacing to the table as padding.  The other half is added to[m
[32m+[m[32m    // the cells themselves.[m
[32m+[m[32m    if ( $style->border_collapse === "separate" ) {[m
[32m+[m[32m      list($h, $v) = $style->border_spacing;[m
[32m+[m
[32m+[m[32m      $v = $style->length_in_pt($v) / 2;[m
[32m+[m[32m      $h = $style->length_in_pt($h) / 2;[m
[32m+[m
[32m+[m[32m      $style->padding_left   = $style->length_in_pt($style->padding_left,   $cb["w"]) + $h;[m
[32m+[m[32m      $style->padding_right  = $style->length_in_pt($style->padding_right,  $cb["w"]) + $h;[m
[32m+[m[32m      $style->padding_top    = $style->length_in_pt($style->padding_top,    $cb["h"]) + $v;[m
[32m+[m[32m      $style->padding_bottom = $style->length_in_pt($style->padding_bottom, $cb["h"]) + $v;[m
[32m+[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    $this->_assign_widths();[m
[32m+[m
[32m+[m[32m    // Adjust left & right margins, if they are auto[m
[32m+[m[32m    $width = $style->width;[m
[32m+[m[32m    $left = $style->margin_left;[m
[32m+[m[32m    $right = $style->margin_right;[m
[32m+[m
[32m+[m[32m    $diff = $cb["w"] - $width;[m
[32m+[m
[32m+[m[32m    if ( $left === "auto" && $right === "auto" && $diff > 0 ) {[m
[32m+[m[32m      $left = $right = $diff / 2;[m
[32m+[m[32m      $style->margin_left = "$left pt";[m
[32m+[m[32m      $style->margin_right = "$right pt";[m
[32m+[m
[32m+[m[32m    } else {[m
[32m+[m[32m        if($left === "auto") {[m
[32m+[m[32m          $left = $style->length_in_pt($cb["w"] - $right - $width, $cb["w"]);[m
[32m+[m[32m        }[m
[32m+[m[32m        if($right === "auto") {[m
[32m+[m[32m          $left = $style->length_in_pt($left, $cb["w"]);[m
[32m+[m[32m        }[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m
[32m+[m[32m    list($x, $y) = $frame->get_position();[m
[32m+[m
[32m+[m[32m    // Determine the content edge[m
[32m+[m[32m    $content_x = $x + $left + $style->length_in_pt(array($style->padding_left,[m
[32m+[m[32m                                                         $style->border_left_width), $cb["w"]);[m
[32m+[m[32m    $content_y = $y + $style->length_in_pt(array($style->margin_top,[m
[32m+[m[32m                                                 $style->border_top_width,[m
[32m+[m[32m                                                 $style->padding_top), $cb["h"]);[m
[32m+[m
[32m+[m[32m    if ( isset($cb["h"]) )[m
[32m+[m[32m      $h = $cb["h"];[m
[32m+[m[32m    else[m
[32m+[m[32m      $h = null;[m
[32m+[m
[32m+[m
[32m+[m[32m    $cellmap = $frame->get_cellmap();[m
[32m+[m[32m    $col =& $cellmap->get_column(0);[m
[32m+[m[32m    $col["x"] = $content_x;[m
[32m+[m
[32m+[m[32m    $row =& $cellmap->get_row(0);[m
[32m+[m[32m    $row["y"] = $content_y;[m
[32m+[m
[32m+[m[32m    $cellmap->assign_x_positions();[m
[32m+[m
[32m+[m[32m    // Set the containing block of each child & reflow[m
[32m+[m[32m    foreach ( $frame->get_children() as $child ) {[m
[32m+[m
[32m+[m[32m      // Bail if the page is full[m
[32m+[m[32m      if ( !$page->in_nested_table() && $page->is_full() )[m
[32m+[m[32m        break;[m
[32m+[m
[32m+[m[32m      $child->set_containing_block($content_x, $content_y, $width, $h);[m
[32m+[m[32m      $child->reflow();[m
[32m+[m
[32m+[m[32m      if ( !$page->in_nested_table() )[m
[32m+[m[32m        // Check if a split has occured[m
[32m+[m[32m        $page->check_page_break($child);[m
[32m+[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    // Assign heights to our cells:[m
[32m+[m[32m    $style->height = $this->_calculate_height();[m
[32m+[m
[32m+[m[32m    if ( $style->border_collapse === "collapse" ) {[m
[32m+[m[32m      // Unset our borders because our cells are now using them[m
[32m+[m[32m      $style->border_style = "none";[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    $page->table_reflow_end();[m
[32m+[m
[32m+[m[32m    // Debugging:[m
[32m+[m[32m    //echo ($this->_frame->get_cellmap());[m
[32m+[m[41m    [m
[32m+[m[32m    if ( $block ) {[m
[32m+[m[32m      $block->add_frame_to_line($this->_frame);[m
[32m+[m[32m    }[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  //........................................................................[m
[32m+[m
[32m+[m[32m  function get_min_max_width() {[m
[32m+[m
[32m+[m[32m    if ( !is_null($this->_min_max_cache)  )[m
[32m+[m[32m      return $this->_min_max_cache;[m
[32m+[m
[32m+[m[32m    $style = $this->_frame->get_style();[m
[32m+[m
[32m+[m[32m    $this->_frame->normalise();[m
[32m+[m
[32m+[m[32m    // Add the cells to the cellmap (this will calcluate column widths as[m
[32m+[m[32m    // frames are added)[m
[32m+[m[32m    $this->_frame->get_cellmap()->add_frame($this->_frame);[m
[32m+[m
[32m+[m[32m    // Find the min/max width of the table and sort the columns into[m
[32m+[m[32m    // absolute/percent/auto arrays[m
[32m+[m[32m    $this->_state = array();[m
[32m+[m[32m    $this->_state["min_width"] = 0;[m
[32m+[m[32m    $this->_state["max_width"] = 0;[m
[32m+[m
[32m+[m[32m    $this->_state["percent_used"] = 0;[m
[32m+[m[32m    $this->_state["absolute_used"] = 0;[m
[32m+[m[32m    $this->_state["auto_min"] = 0;[m
[32m+[m
[32m+[m[32m    $this->_state["absolute"] = array();[m
[32m+[m[32m    $this->_state["percent"] = array();[m
[32m+[m[32m    $this->_state["auto"] = array();[m
[32m+[m
[32m+[m[32m    $columns =& $this->_frame->get_cellmap()->get_columns();[m
[32m+[m[32m    foreach (array_keys($columns) as $i) {[m
[32m+[m[32m      $this->_state["min_width"] += $columns[$i]["min-width"];[m
[32m+[m[32m      $this->_state["max_width"] += $columns[$i]["max-width"];[m
[32m+[m
[32m+[m[32m      if ( $columns[$i]["absolute"] > 0 ) {[m
[32m+[m[32m        $this->_state["absolute"][] = $i;[m
[32m+[m[32m        $this->_state["absolute_used"] += $columns[$i]["absolute"];[m
[32m+[m
[32m+[m[32m      } else if ( $columns[$i]["percent"] > 0 ) {[m
[32m+[m[32m        $this->_state["percent"][] = $i;[m
[32m+[m[32m        $this->_state["percent_used"] += $columns[$i]["percent"];[m
[32m+[m
[32m+[m[32m      } else {[m
[32m+[m[32m        $this->_state["auto"][] = $i;[m
[32m+[m[32m        $this->_state["auto_min"] += $columns[$i]["min-width"];[m
[32m+[m[32m      }[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    // Account for margins & padding[m
[32m+[m[32m    $dims = array($style->border_left_width,[m
[32m+[m[32m                  $style->border_right_width,[m
[32m+[m[32m                  $style->padding_left,[m
[32m+[m[32m                  $style->padding_right,[m
[32m+[m[32m                  $style->margin_left,[m
[32m+[m[32m                  $style->margin_right);[m
[32m+[m
[32m+[m[32m    if ( $style->border_collapse !== "collapse" )[m[41m [m
[32m+[m[32m      list($dims[]) = $style->border_spacing;[m
[32m+[m
[32m+[m[32m    $delta = $style->length_in_pt($dims, $this->_frame->get_containing_block("w"));[m
[32m+[m
[32m+[m[32m    $this->_state["min_width"] += $delta;[m
[32m+[m[32m    $this->_state["max_width"] += $delta;[m
[32m+[m
[32m+[m[32m    return $this->_min_max_cache = array($this->_state["min_width"], $this->_state["max_width"],[m
[32m+[m[32m                 "min" => $this->_state["min_width"], "max" => $this->_state["max_width"]);[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[1mdiff --git a/application/third_party/dompdf/include/table_row_frame_decorator.cls.php b/application/third_party/dompdf/include/table_row_frame_decorator.cls.php[m
[1mnew file mode 100644[m
[1mindex 0000000..1bf7911[m
[1m--- /dev/null[m
[1m+++ b/application/third_party/dompdf/include/table_row_frame_decorator.cls.php[m
[36m@@ -0,0 +1,81 @@[m
[32m+[m[32m<?php[m
[32m+[m[32m/**[m
[32m+[m[32m * DOMPDF - PHP5 HTML to PDF renderer[m
[32m+[m[32m *[m
[32m+[m[32m * File: $RCSfile: table_row_frame_decorator.cls.php,v $[m
[32m+[m[32m * Created on: 2004-06-07[m
[32m+[m[32m *[m
[32m+[m[32m * Copyright (c) 2004 - Benj Carson <benjcarson@digitaljunkies.ca>[m
[32m+[m[32m *[m
[32m+[m[32m * This library is free software; you can redistribute it and/or[m
[32m+[m[32m * modify it under the terms of the GNU Lesser General Public[m
[32m+[m[32m * License as published by the Free Software Foundation; either[m
[32m+[m[32m * version 2.1 of the License, or (at your option) any later version.[m
[32m+[m[32m *[m
[32m+[m[32m * This library is distributed in the hope that it will be useful,[m
[32m+[m[32m * but WITHOUT ANY WARRANTY; without even the implied warranty of[m
[32m+[m[32m * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU[m
[32m+[m[32m * Lesser General Public License for more details.[m
[32m+[m[32m *[m
[32m+[m[32m * You should have received a copy of the GNU Lesser General Public License[m
[32m+[m[32m * along with this library in the file LICENSE.LGPL; if not, write to the[m
[32m+[m[32m * Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA[m
[32m+[m[32m * 02111-1307 USA[m
[32m+[m[32m *[m
[32m+[m[32m * Alternatively, you may distribute this software under the terms of the[m
[32m+[m[32m * PHP License, version 3.0 or later.  A copy of this license should have[m
[32m+[m[32m * been distributed with this file in the file LICENSE.PHP .  If this is not[m
[32m+[m[32m * the case, you can obtain a copy at http://www.php.net/license/3_0.txt.[m
[32m+[m[32m *[m
[32m+[m[32m * The latest version of DOMPDF might be available at:[m
[32m+[m[32m * http://www.dompdf.com/[m
[32m+[m[32m *[m
[32m+[m[32m * @link http://www.dompdf.com/[m
[32m+[m[32m * @copyright 2004 Benj Carson[m
[32m+[m[32m * @author Benj Carson <benjcarson@digitaljunkies.ca>[m
[32m+[m[32m * @package dompdf[m
[32m+[m
[32m+[m[32m */[m
[32m+[m
[32m+[m[32m/* $Id: table_row_frame_decorator.cls.php 216 2010-03-11 22:49:18Z ryan.masten $ */[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Decorates Frames for table row layout[m
[32m+[m[32m *[m
[32m+[m[32m * @access private[m
[32m+[m[32m * @package dompdf[m
[32m+[m[32m */[m
[32m+[m[32mclass Table_Row_Frame_Decorator extends Frame_Decorator {[m
[32m+[m
[32m+[m[32m  // protected members[m
[32m+[m[41m  [m
[32m+[m[32m  function __construct(Frame $frame, DOMPDF $dompdf) {[m
[32m+[m[32m    parent::__construct($frame, $dompdf);[m
[32m+[m[32m  }[m
[32m+[m[41m  [m
[32m+[m[32m  //........................................................................[m[41m [m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Remove all non table-cell frames from this row and move them after[m
[32m+[m[32m   * the table.[m
[32m+[m[32m   */[m
[32m+[m[32m  function normalise() {[m
[32m+[m
[32m+[m[32m    // Find our table parent[m
[32m+[m[32m    $p = Table_Frame_Decorator::find_parent_table($this);[m
[32m+[m[41m    [m
[32m+[m[32m    $erroneous_frames = array();[m
[32m+[m[32m    foreach ($this->get_children() as $child) {[m[41m      [m
[32m+[m[32m      $display = $child->get_style()->display;[m
[32m+[m
[32m+[m[32m      if ( $display !== "table-cell" )[m
[32m+[m[32m        $erroneous_frames[] = $child;[m
[32m+[m[32m    }[m
[32m+[m[41m    [m
[32m+[m[32m    //  dump the extra nodes after the table.[m
[32m+[m[32m    foreach ($erroneous_frames as $frame)[m[41m [m
[32m+[m[32m      $p->move_after($frame);[m
[32m+[m[32m  }[m
[32m+[m[41m  [m
[32m+[m[41m  [m
[32m+[m[32m}[m
[1mdiff --git a/application/third_party/dompdf/include/table_row_frame_reflower.cls.php b/application/third_party/dompdf/include/table_row_frame_reflower.cls.php[m
[1mnew file mode 100644[m
[1mindex 0000000..d44d316[m
[1m--- /dev/null[m
[1m+++ b/application/third_party/dompdf/include/table_row_frame_reflower.cls.php[m
[36m@@ -0,0 +1,94 @@[m
[32m+[m[32m<?php[m
[32m+[m[32m/**[m
[32m+[m[32m * DOMPDF - PHP5 HTML to PDF renderer[m
[32m+[m[32m *[m
[32m+[m[32m * File: $RCSfile: table_row_frame_reflower.cls.php,v $[m
[32m+[m[32m * Created on: 2004-06-17[m
[32m+[m[32m *[m
[32m+[m[32m * Copyright (c) 2004 - Benj Carson <benjcarson@digitaljunkies.ca>[m
[32m+[m[32m *[m
[32m+[m[32m * This library is free software; you can redistribute it and/or[m
[32m+[m[32m * modify it under the terms of the GNU Lesser General Public[m
[32m+[m[32m * License as published by the Free Software Foundation; either[m
[32m+[m[32m * version 2.1 of the License, or (at your option) any later version.[m
[32m+[m[32m *[m
[32m+[m[32m * This library is distributed in the hope that it will be useful,[m
[32m+[m[32m * but WITHOUT ANY WARRANTY; without even the implied warranty of[m
[32m+[m[32m * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU[m
[32m+[m[32m * Lesser General Public License for more details.[m
[32m+[m[32m *[m
[32m+[m[32m * You should have received a copy of the GNU Lesser General Public License[m
[32m+[m[32m * along with this library in the file LICENSE.LGPL; if not, write to the[m
[32m+[m[32m * Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA[m
[32m+[m[32m * 02111-1307 USA[m
[32m+[m[32m *[m
[32m+[m[32m * Alternatively, you may distribute this software under the terms of the[m
[32m+[m[32m * PHP License, version 3.0 or later.  A copy of this license should have[m
[32m+[m[32m * been distributed with this file in the file LICENSE.PHP .  If this is not[m
[32m+[m[32m * the case, you can obtain a copy at http://www.php.net/license/3_0.txt.[m
[32m+[m[32m *[m
[32m+[m[32m * The latest version of DOMPDF might be available at:[m
[32m+[m[32m * http://www.dompdf.com/[m
[32m+[m[32m *[m
[32m+[m[32m * @link http://www.dompdf.com/[m
[32m+[m[32m * @copyright 2004 Benj Carson[m
[32m+[m[32m * @author Benj Carson <benjcarson@digitaljunkies.ca>[m
[32m+[m[32m * @package dompdf[m
[32m+[m
[32m+[m[32m */[m
[32m+[m
[32m+[m[32m/* $Id: table_row_frame_reflower.cls.php 357 2011-01-30 20:56:46Z fabien.menager $ */[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Reflows table rows[m
[32m+[m[32m *[m
[32m+[m[32m * @access private[m
[32m+[m[32m * @package dompdf[m
[32m+[m[32m */[m
[32m+[m[32mclass Table_Row_Frame_Reflower extends Frame_Reflower {[m
[32m+[m
[32m+[m
[32m+[m[32m  function __construct(Table_Row_Frame_Decorator $frame) {[m
[32m+[m[32m    parent::__construct($frame);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  //........................................................................[m
[32m+[m
[32m+[m[32m  function reflow(Frame_Decorator $block = null) {[m
[32m+[m[32m    $page = $this->_frame->get_root();[m
[32m+[m
[32m+[m[32m    if ( $page->is_full() )[m
[32m+[m[32m      return;[m
[32m+[m
[32m+[m[32m    $this->_frame->position();[m
[32m+[m[32m    $style = $this->_frame->get_style();[m
[32m+[m[32m    $cb = $this->_frame->get_containing_block();[m
[32m+[m
[32m+[m[32m    foreach ($this->_frame->get_children() as $child) {[m
[32m+[m
[32m+[m[32m      if ( $page->is_full() )[m
[32m+[m[32m        return;[m
[32m+[m
[32m+[m[32m      $child->set_containing_block($cb);[m
[32m+[m[32m      $child->reflow();[m
[32m+[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    if ( $page->is_full() )[m
[32m+[m[32m      return;[m
[32m+[m
[32m+[m[32m    $table = Table_Frame_Decorator::find_parent_table($this->_frame);[m
[32m+[m[32m    $cellmap = $table->get_cellmap();[m
[32m+[m[32m    $style->width = $cellmap->get_frame_width($this->_frame);[m
[32m+[m[32m    $style->height = $cellmap->get_frame_height($this->_frame);[m
[32m+[m
[32m+[m[32m    $this->_frame->set_position($cellmap->get_frame_position($this->_frame));[m
[32m+[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  //........................................................................[m
[32m+[m
[32m+[m[32m  function get_min_max_width() {[m
[32m+[m[32m    throw new DOMPDF_Exception("Min/max width is undefined for table rows");[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[1mdiff --git a/application/third_party/dompdf/include/table_row_group_frame_decorator.cls.php b/application/third_party/dompdf/include/table_row_group_frame_decorator.cls.php[m
[1mnew file mode 100644[m
[1mindex 0000000..10c64ba[m
[1m--- /dev/null[m
[1m+++ b/application/third_party/dompdf/include/table_row_group_frame_decorator.cls.php[m
[36m@@ -0,0 +1,96 @@[m
[32m+[m[32m<?php[m
[32m+[m[32m/**[m
[32m+[m[32m * DOMPDF - PHP5 HTML to PDF renderer[m
[32m+[m[32m *[m
[32m+[m[32m * File: $RCSfile: table_row_group_frame_decorator.cls.php,v $[m
[32m+[m[32m * Created on: 2004-06-02[m
[32m+[m[32m *[m
[32m+[m[32m * Copyright (c) 2004 - Benj Carson <benjcarson@digitaljunkies.ca>[m
[32m+[m[32m *[m
[32m+[m[32m * This library is free software; you can redistribute it and/or[m
[32m+[m[32m * modify it under the terms of the GNU Lesser General Public[m
[32m+[m[32m * License as published by the Free Software Foundation; either[m
[32m+[m[32m * version 2.1 of the License, or (at your option) any later version.[m
[32m+[m[32m *[m
[32m+[m[32m * This library is distributed in the hope that it will be useful,[m
[32m+[m[32m * but WITHOUT ANY WARRANTY; without even the implied warranty of[m
[32m+[m[32m * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU[m
[32m+[m[32m * Lesser General Public License for more details.[m
[32m+[m[32m *[m
[32m+[m[32m * You should have received a copy of the GNU Lesser General Public License[m
[32m+[m[32m * along with this library in the file LICENSE.LGPL; if not, write to the[m
[32m+[m[32m * Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA[m
[32m+[m[32m * 02111-1307 USA[m
[32m+[m[32m *[m
[32m+[m[32m * Alternatively, you may distribute this software under the terms of the[m
[32m+[m[32m * PHP License, version 3.0 or later.  A copy of this license should have[m
[32m+[m[32m * been distributed with this file in the file LICENSE.PHP .  If this is not[m
[32m+[m[32m * the case, you can obtain a copy at http://www.php.net/license/3_0.txt.[m
[32m+[m[32m *[m
[32m+[m[32m * The latest version of DOMPDF might be available at:[m
[32m+[m[32m * http://www.dompdf.com/[m
[32m+[m[32m *[m
[32m+[m[32m * @link http://www.dompdf.com/[m
[32m+[m[32m * @copyright 2004-6 Benj Carson[m
[32m+[m[32m * @author Benj Carson <benjcarson@digitaljunkies.ca>[m
[32m+[m[32m * @package dompdf[m
[32m+[m[32m */[m
[32m+[m
[32m+[m[32m/* $Id: table_row_group_frame_decorator.cls.php 317 2010-10-06 13:06:57Z fabien.menager $ */[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Table row group decorator[m
[32m+[m[32m *[m
[32m+[m[32m * Overrides split() method for tbody, thead & tfoot elements[m
[32m+[m[32m *[m
[32m+[m[32m * @access private[m
[32m+[m[32m * @package dompdf[m
[32m+[m[32m */[m
[32m+[m[32mclass Table_Row_Group_Frame_Decorator extends Frame_Decorator {[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Class constructor[m
[32m+[m[32m   *[m
[32m+[m[32m   * @param Frame $frame   Frame to decorate[m
[32m+[m[32m   * @param DOMPDF $dompdf Current dompdf instance[m
[32m+[m[32m   */[m
[32m+[m[32m  function __construct(Frame $frame, DOMPDF $dompdf) {[m
[32m+[m[32m    parent::__construct($frame, $dompdf);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Override split() to remove all child rows and this element from the cellmap[m
[32m+[m[32m   *[m
[32m+[m[32m   * @param Frame $child[m
[32m+[m[32m   */[m
[32m+[m[32m  function split($child = null, $force_pagebreak = false) {[m
[32m+[m
[32m+[m[32m    if ( is_null($child) ) {[m
[32m+[m[32m      parent::split();[m
[32m+[m[32m      return;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m
[32m+[m[32m    // Remove child & all subsequent rows from the cellmap[m
[32m+[m[32m    $cellmap = $this->get_parent()->get_cellmap();[m
[32m+[m[32m    $iter = $child;[m
[32m+[m
[32m+[m[32m    while ( $iter ) {[m
[32m+[m[32m      $cellmap->remove_row($iter);[m
[32m+[m[32m      $iter = $iter->get_next_sibling();[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    // If we are splitting at the first child remove the[m
[32m+[m[32m    // table-row-group from the cellmap as well[m
[32m+[m[32m    if ( $child === $this->get_first_child() ) {[m
[32m+[m[32m      $cellmap->remove_row_group($this);[m
[32m+[m[32m      parent::split();[m
[32m+[m[32m      return;[m
[32m+[m[32m    }[m
[32m+[m[41m    [m
[32m+[m[32m    $cellmap->update_row_group($this, $child->get_prev_sibling());[m
[32m+[m[32m    parent::split($child);[m
[32m+[m[41m    [m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[32m+[m[41m [m
[1mdiff --git a/application/third_party/dompdf/include/table_row_group_frame_reflower.cls.php b/application/third_party/dompdf/include/table_row_group_frame_reflower.cls.php[m
[1mnew file mode 100644[m
[1mindex 0000000..5298876[m
[1m--- /dev/null[m
[1m+++ b/application/third_party/dompdf/include/table_row_group_frame_reflower.cls.php[m
[36m@@ -0,0 +1,92 @@[m
[32m+[m[32m<?php[m
[32m+[m[32m/**[m
[32m+[m[32m * DOMPDF - PHP5 HTML to PDF renderer[m
[32m+[m[32m *[m
[32m+[m[32m * File: $RCSfile: table_row_group_frame_reflower.cls.php,v $[m
[32m+[m[32m * Created on: 2004-07-26[m
[32m+[m[32m *[m
[32m+[m[32m * Copyright (c) 2004 - Benj Carson <benjcarson@digitaljunkies.ca>[m
[32m+[m[32m *[m
[32m+[m[32m * This library is free software; you can redistribute it and/or[m
[32m+[m[32m * modify it under the terms of the GNU Lesser General Public[m
[32m+[m[32m * License as published by the Free Software Foundation; either[m
[32m+[m[32m * version 2.1 of the License, or (at your option) any later version.[m
[32m+[m[32m *[m
[32m+[m[32m * This library is distributed in the hope that it will be useful,[m
[32m+[m[32m * but WITHOUT ANY WARRANTY; without even the implied warranty of[m
[32m+[m[32m * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU[m
[32m+[m[32m * Lesser General Public License for more details.[m
[32m+[m[32m *[m
[32m+[m[32m * You should have received a copy of the GNU Lesser General Public License[m
[32m+[m[32m * along with this library in the file LICENSE.LGPL; if not, write to the[m
[32m+[m[32m * Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA[m
[32m+[m[32m * 02111-1307 USA[m
[32m+[m[32m *[m
[32m+[m[32m * Alternatively, you may distribute this software under the terms of the[m
[32m+[m[32m * PHP License, version 3.0 or later.  A copy of this license should have[m
[32m+[m[32m * been distributed with this file in the file LICENSE.PHP .  If this is not[m
[32m+[m[32m * the case, you can obtain a copy at http://www.php.net/license/3_0.txt.[m
[32m+[m[32m *[m
[32m+[m[32m * The latest version of DOMPDF might be available at:[m
[32m+[m[32m * http://www.dompdf.com/[m
[32m+[m[32m *[m
[32m+[m[32m * @link http://www.dompdf.com/[m
[32m+[m[32m * @copyright 2004 Benj Carson[m
[32m+[m[32m * @author Benj Carson <benjcarson@digitaljunkies.ca>[m
[32m+[m[32m * @package dompdf[m
[32m+[m
[32m+[m[32m */[m
[32m+[m
[32m+[m[32m/* $Id: table_row_group_frame_reflower.cls.php 357 2011-01-30 20:56:46Z fabien.menager $ */[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Reflows table row groups (e.g. tbody tags)[m
[32m+[m[32m *[m
[32m+[m[32m * @access private[m
[32m+[m[32m * @package dompdf[m
[32m+[m[32m */[m
[32m+[m[32mclass Table_Row_Group_Frame_Reflower extends Frame_Reflower {[m
[32m+[m
[32m+[m[32m  function __construct($frame) {[m
[32m+[m[32m    parent::__construct($frame);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  function reflow(Frame_Decorator $block = null) {[m
[32m+[m[32m    $page = $this->_frame->get_root();[m
[32m+[m
[32m+[m[32m    $style = $this->_frame->get_style();[m
[32m+[m[41m    [m
[32m+[m[32m    // Our width is equal to the width of our parent table[m
[32m+[m[32m    $table = Table_Frame_Decorator::find_parent_table($this->_frame);[m
[32m+[m[41m    [m
[32m+[m[32m    $cb = $this->_frame->get_containing_block();[m
[32m+[m[41m    [m
[32m+[m[32m    foreach ( $this->_frame->get_children() as $child) {[m
[32m+[m[32m      // Bail if the page is full[m
[32m+[m[32m      if ( $page->is_full() )[m
[32m+[m[32m        return;[m
[32m+[m
[32m+[m[32m      $child->set_containing_block($cb["x"], $cb["y"], $cb["w"], $cb["h"]);[m
[32m+[m[32m      $child->reflow();[m
[32m+[m
[32m+[m[32m      // Check if a split has occured[m
[32m+[m[32m      $page->check_page_break($child);[m
[32m+[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    if ( $page->is_full() )[m
[32m+[m[32m      return;[m
[32m+[m
[32m+[m[32m    $cellmap = $table->get_cellmap();[m
[32m+[m[32m    $style->width = $cellmap->get_frame_width($this->_frame);[m
[32m+[m[32m    $style->height = $cellmap->get_frame_height($this->_frame);[m
[32m+[m
[32m+[m[32m    $this->_frame->set_position($cellmap->get_frame_position($this->_frame));[m
[32m+[m[41m    [m
[32m+[m[32m    if ( $table->get_style()->border_collapse === "collapse" )[m[41m [m
[32m+[m[32m      // Unset our borders because our cells are now using them[m
[32m+[m[32m      $style->border_style = "none";[m
[32m+[m[41m [m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m}[m
[1mdiff --git a/application/third_party/dompdf/include/table_row_positioner.cls.php b/application/third_party/dompdf/include/table_row_positioner.cls.php[m
[1mnew file mode 100644[m
[1mindex 0000000..7a15929[m
[1m--- /dev/null[m
[1m+++ b/application/third_party/dompdf/include/table_row_positioner.cls.php[m
[36m@@ -0,0 +1,68 @@[m
[32m+[m[32m<?php[m
[32m+[m[32m/**[m
[32m+[m[32m * DOMPDF - PHP5 HTML to PDF renderer[m
[32m+[m[32m *[m
[32m+[m[32m * File: $RCSfile: table_row_positioner.cls.php,v $[m
[32m+[m[32m * Created on: 2004-06-08[m
[32m+[m[32m *[m
[32m+[m[32m * Copyright (c) 2004 - Benj Carson <benjcarson@digitaljunkies.ca>[m
[32m+[m[32m *[m
[32m+[m[32m * This library is free software; you can redistribute it and/or[m
[32m+[m[32m * modify it under the terms of the GNU Lesser General Public[m
[32m+[m[32m * License as published by the Free Software Foundation; either[m
[32m+[m[32m * version 2.1 of the License, or (at your option) any later version.[m
[32m+[m[32m *[m
[32m+[m[32m * This library is distributed in the hope that it will be useful,[m
[32m+[m[32m * but WITHOUT ANY WARRANTY; without even the implied warranty of[m
[32m+[m[32m * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU[m
[32m+[m[32m * Lesser General Public License for more details.[m
[32m+[m[32m *[m
[32m+[m[32m * You should have received a copy of the GNU Lesser General Public License[m
[32m+[m[32m * along with this library in the file LICENSE.LGPL; if not, write to the[m
[32m+[m[32m * Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA[m
[32m+[m[32m * 02111-1307 USA[m
[32m+[m[32m *[m
[32m+[m[32m * Alternatively, you may distribute this software under the terms of the[m
[32m+[m[32m * PHP License, version 3.0 or later.  A copy of this license should have[m
[32m+[m[32m * been distributed with this file in the file LICENSE.PHP .  If this is not[m
[32m+[m[32m * the case, you can obtain a copy at http://www.php.net/license/3_0.txt.[m
[32m+[m[32m *[m
[32m+[m[32m * The latest version of DOMPDF might be available at:[m
[32m+[m[32m * http://www.dompdf.com/[m
[32m+[m[32m *[m
[32m+[m[32m * @link http://www.dompdf.com/[m
[32m+[m[32m * @copyright 2004 Benj Carson[m
[32m+[m[32m * @author Benj Carson <benjcarson@digitaljunkies.ca>[m
[32m+[m[32m * @package dompdf[m
[32m+[m
[32m+[m[32m */[m
[32m+[m
[32m+[m[32m/* $Id: table_row_positioner.cls.php 216 2010-03-11 22:49:18Z ryan.masten $ */[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Positions table rows[m
[32m+[m[32m *[m
[32m+[m[32m * @access private[m
[32m+[m[32m * @package dompdf[m
[32m+[m[32m */[m
[32m+[m[32mclass Table_Row_Positioner extends Positioner {[m
[32m+[m
[32m+[m[32m  function __construct(Frame_Decorator $frame) { parent::__construct($frame); }[m
[32m+[m[41m  [m
[32m+[m[32m  //........................................................................[m
[32m+[m
[32m+[m[32m  function position() {[m
[32m+[m
[32m+[m[32m    $cb = $this->_frame->get_containing_block();[m[41m    [m
[32m+[m[32m    $p = $this->_frame->get_prev_sibling();[m
[32m+[m
[32m+[m[32m    if ( $p )[m[41m [m
[32m+[m[32m      $y = $p->get_position("y") + $p->get_margin_height();[m
[32m+[m
[32m+[m[32m    else[m
[32m+[m[32m      $y = $cb["y"];[m
[32m+[m
[32m+[m[32m    $this->_frame->set_position($cb["x"], $y);[m
[32m+[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[1mdiff --git a/application/third_party/dompdf/include/tcpdf_adapter.cls.php b/application/third_party/dompdf/include/tcpdf_adapter.cls.php[m
[1mnew file mode 100644[m
[1mindex 0000000..47ed71a[m
[1m--- /dev/null[m
[1m+++ b/application/third_party/dompdf/include/tcpdf_adapter.cls.php[m
[36m@@ -0,0 +1,498 @@[m
[32m+[m[32m<?php[m
[32m+[m[32m/**[m
[32m+[m[32m * DOMPDF - PHP5 HTML to PDF renderer[m
[32m+[m[32m *[m
[32m+[m[32m * File: $RCSfile$[m
[32m+[m[32m * Created on: 2004-08-04[m
[32m+[m[32m *[m
[32m+[m[32m * Copyright (c) 2004 - Benj Carson <benjcarson@digitaljunkies.ca>[m
[32m+[m[32m *[m
[32m+[m[32m * This library is free software; you can redistribute it and/or[m
[32m+[m[32m * modify it under the terms of the GNU Lesser General Public[m
[32m+[m[32m * License as published by the Free Software Foundation; either[m
[32m+[m[32m * version 2.1 of the License, or (at your option) any later version.[m
[32m+[m[32m *[m
[32m+[m[32m * This library is distributed in the hope that it will be useful,[m
[32m+[m[32m * but WITHOUT ANY WARRANTY; without even the implied warranty of[m
[32m+[m[32m * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU[m
[32m+[m[32m * Lesser General Public License for more details.[m
[32m+[m[32m *[m
[32m+[m[32m * You should have received a copy of the GNU Lesser General Public License[m
[32m+[m[32m * along with this library in the file LICENSE.LGPL; if not, write to the[m
[32m+[m[32m * Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA[m
[32m+[m[32m * 02111-1307 USA[m
[32m+[m[32m *[m
[32m+[m[32m * Alternatively, you may distribute this software under the terms of the[m
[32m+[m[32m * PHP License, version 3.0 or later.  A copy of this license should have[m
[32m+[m[32m * been distributed with this file in the file LICENSE.PHP .  If this is not[m
[32m+[m[32m * the case, you can obtain a copy at http://www.php.net/license/3_0.txt.[m
[32m+[m[32m *[m
[32m+[m[32m * The latest version of DOMPDF might be available at:[m
[32m+[m[32m * http://www.dompdf.com/[m
[32m+[m[32m *[m
[32m+[m[32m * @link http://www.dompdf.com/[m
[32m+[m[32m * @copyright 2004 Benj Carson[m
[32m+[m[32m * @author Benj Carson <benjcarson@digitaljunkies.ca>[m
[32m+[m[32m * @package dompdf[m
[32m+[m
[32m+[m[32m */[m
[32m+[m
[32m+[m[32m/* $Id: tcpdf_adapter.cls.php 311 2010-09-05 20:02:01Z fabien.menager $ */[m
[32m+[m
[32m+[m[32mrequire_once(DOMPDF_LIB_DIR . '/tcpdf/tcpdf.php');[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * TCPDF PDF Rendering interface[m
[32m+[m[32m *[m
[32m+[m[32m * TCPDF_Adapter provides a simple, stateless interface to TCPDF.[m
[32m+[m[32m *[m
[32m+[m[32m * Unless otherwise mentioned, all dimensions are in points (1/72 in).[m
[32m+[m[32m * The coordinate origin is in the top left corner and y values[m
[32m+[m[32m * increase downwards.[m
[32m+[m[32m *[m
[32m+[m[32m * See {@link http://tcpdf.sourceforge.net} for more information on[m
[32m+[m[32m * the underlying TCPDF class.[m
[32m+[m[32m *[m
[32m+[m[32m * @package dompdf[m
[32m+[m[32m */[m
[32m+[m[32mclass TCPDF_Adapter implements Canvas {[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Dimensions of paper sizes in points[m
[32m+[m[32m   *[m
[32m+[m[32m   * @var array;[m
[32m+[m[32m   */[m
[32m+[m[32m  static public $PAPER_SIZES = array(); // Set to[m
[32m+[m[32m                                        // CPDF_Adapter::$PAPER_SIZES below.[m
[32m+[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Instance of the TCPDF class[m
[32m+[m[32m   *[m
[32m+[m[32m   * @var TCPDF[m
[32m+[m[32m   */[m
[32m+[m[32m  private $_pdf;[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * PDF width in points[m
[32m+[m[32m   *[m
[32m+[m[32m   * @var float[m
[32m+[m[32m   */[m
[32m+[m[32m  private $_width;[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * PDF height in points[m
[32m+[m[32m   *[m
[32m+[m[32m   * @var float[m
[32m+[m[32m   */[m
[32m+[m[32m  private $_height;[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Last fill colour used[m
[32m+[m[32m   *[m
[32m+[m[32m   * @var array[m
[32m+[m[32m   */[m
[32m+[m[32m  private $_last_fill_color;[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Last stroke colour used[m
[32m+[m[32m   *[m
[32m+[m[32m   * @var array[m
[32m+[m[32m   */[m
[32m+[m[32m  private $_last_stroke_color;[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Last line width used[m
[32m+[m[32m   *[m
[32m+[m[32m   * @var float[m
[32m+[m[32m   */[m
[32m+[m[32m  private $_last_line_width;[m
[32m+[m[41m  [m
[32m+[m[32m  /**[m
[32m+[m[32m   * Total number of pages[m
[32m+[m[32m   *[m
[32m+[m[32m   * @var int[m
[32m+[m[32m   */[m
[32m+[m[32m  private $_page_count;[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Text to display on every page[m
[32m+[m[32m   *[m
[32m+[m[32m   * @var array[m
[32m+[m[32m   */[m
[32m+[m[32m  private $_page_text;[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Array of pages for accessing after initial rendering is complete[m
[32m+[m[32m   *[m
[32m+[m[32m   * @var array[m
[32m+[m[32m   */[m
[32m+[m[32m  private $_pages;[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Class constructor[m
[32m+[m[32m   *[m
[32m+[m[32m   * @param mixed $paper The size of paper to use either a string (see {@link CPDF_Adapter::$PAPER_SIZES}) or[m
[32m+[m[32m   *                     an array(xmin,ymin,xmax,ymax)[m
[32m+[m[32m   * @param string $orientation The orientation of the document (either 'landscape' or 'portrait')[m
[32m+[m[32m   */[m
[32m+[m[32m  function __construct($paper = "letter", $orientation = "portrait") {[m
[32m+[m[41m   [m
[32m+[m[32m    if ( is_array($paper) )[m
[32m+[m[32m      $size = $paper;[m
[32m+[m[32m    else if ( isset(self::$PAPER_SIZES[mb_strtolower($paper)]) )[m
[32m+[m[32m      $size = self::$PAPER_SIZE[$paper];[m
[32m+[m[32m    else[m
[32m+[m[32m      $size = self::$PAPER_SIZE["letter"];[m
[32m+[m
[32m+[m[32m    if ( mb_strtolower($orientation) === "landscape" ) {[m
[32m+[m[32m      list($size[2], $size[3]) = array($size[3], $size[2]);[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    $this->_width = $size[2] - $size[0];[m
[32m+[m[32m    $this->_height = $size[3] - $size[1];[m
[32m+[m
[32m+[m[32m    $this->_pdf = new TCPDF("P", "pt", array($this->_width, $this->_height));[m
[32m+[m[32m    $this->_pdf->Setcreator("DOMPDF Converter");[m
[32m+[m
[32m+[m[32m    $this->_pdf->AddPage();[m
[32m+[m
[32m+[m[32m    $this->_page_number = $this->_page_count = 1;[m
[32m+[m[32m    $this->_page_text = array();[m
[32m+[m
[32m+[m[32m    $this->_last_fill_color     =[m
[32m+[m[32m      $this->_last_stroke_color =[m
[32m+[m[32m      $this->_last_line_width   = null;[m
[32m+[m
[32m+[m[32m  }[m[41m  [m
[32m+[m[41m  [m
[32m+[m[32m  /**[m
[32m+[m[32m   * Remaps y coords from 4th to 1st quadrant[m
[32m+[m[32m   *[m
[32m+[m[32m   * @param float $y[m
[32m+[m[32m   * @return float[m
[32m+[m[32m   */[m
[32m+[m[32m  protected function y($y) { return $this->_height - $y; }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Sets the stroke colour[m
[32m+[m[32m   *[m
[32m+[m[32m   * @param array $color[m
[32m+[m[32m   */[m
[32m+[m[32m  protected function _set_stroke_colour($colour) {[m
[32m+[m[32m    $colour[0] = round(255 * $colour[0]);[m
[32m+[m[32m    $colour[1] = round(255 * $colour[1]);[m
[32m+[m[32m    $colour[2] = round(255 * $colour[2]);[m
[32m+[m
[32m+[m[32m    if ( is_null($this->_last_stroke_color) || $color != $this->_last_stroke_color ) {[m
[32m+[m[32m      $this->_pdf->SetDrawColor($color[0],$color[1],$color[2]);[m
[32m+[m[32m      $this->_last_stroke_color = $color;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Sets the fill colour[m
[32m+[m[32m   *[m
[32m+[m[32m   * @param array $color[m
[32m+[m[32m   */[m
[32m+[m[32m  protected function _set_fill_colour($colour) {[m
[32m+[m[32m    $colour[0] = round(255 * $colour[0]);[m
[32m+[m[32m    $colour[1] = round(255 * $colour[1]);[m
[32m+[m[32m    $colour[2] = round(255 * $colour[2]);[m
[32m+[m
[32m+[m[32m    if ( is_null($this->_last_fill_color) || $color != $this->_last_fill_color ) {[m
[32m+[m[32m      $this->_pdf->SetDrawColor($color[0],$color[1],$color[2]);[m
[32m+[m[32m      $this->_last_fill_color = $color;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Return the TCPDF instance[m
[32m+[m[32m   *[m
[32m+[m[32m   * @return TCPDF[m
[32m+[m[32m   */[m
[32m+[m[32m  function get_tcpdf() { return $this->_pdf; }[m
[32m+[m[41m  [m
[32m+[m[32m  /**[m
[32m+[m[32m   * Returns the current page number[m
[32m+[m[32m   *[m
[32m+[m[32m   * @return int[m
[32m+[m[32m   */[m
[32m+[m[32m  function get_page_number() {[m
[32m+[m[32m    return $this->_page_number;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Returns the total number of pages[m
[32m+[m[32m   *[m
[32m+[m[32m   * @return int[m
[32m+[m[32m   */[m
[32m+[m[32m  function get_page_count() {[m
[32m+[m[32m    return $this->_page_count;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Sets the total number of pages[m
[32m+[m[32m   *[m
[32m+[m[32m   * @param int $count[m
[32m+[m[32m   */[m
[32m+[m[32m  function set_page_count($count) {[m
[32m+[m[32m    $this->_page_count = (int)$count;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Draws a line from x1,y1 to x2,y2[m
[32m+[m[32m   *[m
[32m+[m[32m   * See {@link Style::munge_colour()} for the format of the colour array.[m
[32m+[m[32m   * See {@link Cpdf::setLineStyle()} for a description of the format of the[m
[32m+[m[32m   * $style parameter (aka dash).[m
[32m+[m[32m   *[m
[32m+[m[32m   * @param float $x1[m
[32m+[m[32m   * @param float $y1[m
[32m+[m[32m   * @param float $x2[m
[32m+[m[32m   * @param float $y2[m
[32m+[m[32m   * @param array $color[m
[32m+[m[32m   * @param float $width[m
[32m+[m[32m   * @param array $style[m
[32m+[m[32m   */[m
[32m+[m[32m  function line($x1, $y1, $x2, $y2, $color, $width, $style = null) {[m
[32m+[m
[32m+[m[32m    if ( is_null($this->_last_line_width) || $width != $this->_last_line_width ) {[m
[32m+[m[32m      $this->_pdf->SetLineWidth($width);[m
[32m+[m[32m      $this->_last_line_width = $width;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    $this->_set_stroke_colour($color);[m
[32m+[m
[32m+[m[32m    // FIXME: ugh, need to handle different styles here[m
[32m+[m[32m    $this->_pdf->line($x1, $y1, $x2, $y2);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Draws a rectangle at x1,y1 with width w and height h[m
[32m+[m[32m   *[m
[32m+[m[32m   * See {@link Style::munge_colour()} for the format of the colour array.[m
[32m+[m[32m   * See {@link Cpdf::setLineStyle()} for a description of the $style[m
[32m+[m[32m   * parameter (aka dash)[m
[32m+[m[32m   *[m
[32m+[m[32m   * @param float $x1[m
[32m+[m[32m   * @param float $y1[m
[32m+[m[32m   * @param float $w[m
[32m+[m[32m   * @param float $h[m
[32m+[m[32m   * @param array $color[m
[32m+[m[32m   * @param float $width[m
[32m+[m[32m   * @param array $style[m
[32m+[m[32m   */[m[41m   [m
[32m+[m[32m  function rectangle($x1, $y1, $w, $h, $color, $width, $style = null) {[m
[32m+[m
[32m+[m[32m    if ( is_null($this->_last_line_width) || $width != $this->_last_line_width ) {[m
[32m+[m[32m      $this->_pdf->SetLineWidth($width);[m
[32m+[m[32m      $this->_last_line_width = $width;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    $this->_set_stroke_colour($color);[m
[32m+[m[41m    [m
[32m+[m[32m    // FIXME: ugh, need to handle styles here[m
[32m+[m[32m    $this->_pdf->rect($x1, $y1, $w, $h);[m
[32m+[m[41m    [m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Draws a filled rectangle at x1,y1 with width w and height h[m
[32m+[m[32m   *[m
[32m+[m[32m   * See {@link Style::munge_colour()} for the format of the colour array.[m
[32m+[m[32m   *[m
[32m+[m[32m   * @param float $x1[m
[32m+[m[32m   * @param float $y1[m
[32m+[m[32m   * @param float $w[m
[32m+[m[32m   * @param float $h[m
[32m+[m[32m   * @param array $color[m
[32m+[m[32m   */[m[41m   [m
[32m+[m[32m  function filled_rectangle($x1, $y1, $w, $h, $color) {[m
[32m+[m
[32m+[m[32m    $this->_set_fill_colour($color);[m
[32m+[m[41m    [m
[32m+[m[32m    // FIXME: ugh, need to handle styles here[m
[32m+[m[32m    $this->_pdf->rect($x1, $y1, $w, $h, "F");[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Draws a polygon[m
[32m+[m[32m   *[m
[32m+[m[32m   * The polygon is formed by joining all the points stored in the $points[m
[32m+[m[32m   * array.  $points has the following structure:[m
[32m+[m[32m   * <code>[m
[32m+[m[32m   * array(0 => x1,[m
[32m+[m[32m   *       1 => y1,[m
[32m+[m[32m   *       2 => x2,[m
[32m+[m[32m   *       3 => y2,[m
[32m+[m[32m   *       ...[m
[32m+[m[32m   *       );[m
[32m+[m[32m   * </code>[m
[32m+[m[32m   *[m
[32m+[m[32m   * See {@link Style::munge_colour()} for the format of the colour array.[m
[32m+[m[32m   * See {@link Cpdf::setLineStyle()} for a description of the $style[m
[32m+[m[32m   * parameter (aka dash)[m[41m   [m
[32m+[m[32m   *[m
[32m+[m[32m   * @param array $points[m
[32m+[m[32m   * @param array $color[m
[32m+[m[32m   * @param float $width[m
[32m+[m[32m   * @param array $style[m
[32m+[m[32m   * @param bool  $fill  Fills the polygon if true[m
[32m+[m[32m   */[m
[32m+[m[32m  function polygon($points, $color, $width = null, $style = null, $fill = false) {[m
[32m+[m[32m    // FIXME[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Draws a circle at $x,$y with radius $r[m
[32m+[m[32m   *[m
[32m+[m[32m   * See {@link Style::munge_colour()} for the format of the colour array.[m
[32m+[m[32m   * See {@link Cpdf::setLineStyle()} for a description of the $style[m
[32m+[m[32m   * parameter (aka dash)[m
[32m+[m[32m   *[m
[32m+[m[32m   * @param float $x[m
[32m+[m[32m   * @param float $y[m
[32m+[m[32m   * @param float $r[m
[32m+[m[32m   * @param array $color[m
[32m+[m[32m   * @param float $width[m
[32m+[m[32m   * @param array $style[m
[32m+[m[32m   * @param bool $fill Fills the circle if true[m[41m   [m
[32m+[m[32m   */[m[41m   [m
[32m+[m[32m  function circle($x, $y, $r, $color, $width = null, $style = null, $fill = false) {[m
[32m+[m[32m    // FIXME[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Add an image to the pdf.[m
[32m+[m[32m   *[m
[32m+[m[32m   * The image is placed at the specified x and y coordinates with the[m
[32m+[m[32m   * given width and height.[m
[32m+[m[32m   *[m
[32m+[m[32m   * @param string $img_url the path to the image[m
[32m+[m[32m   * @param string $img_type the type (e.g. extension) of the image[m
[32m+[m[32m   * @param float $x x position[m
[32m+[m[32m   * @param float $y y position[m
[32m+[m[32m   * @param int $w width (in pixels)[m
[32m+[m[32m   * @param int $h height (in pixels)[m
[32m+[m[32m   */[m
[32m+[m[32m  function image($img_url, $img_type, $x, $y, $w, $h) {[m
[32m+[m[32m    // FIXME[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Writes text at the specified x and y coordinates[m
[32m+[m[32m   *[m
[32m+[m[32m   * See {@link Style::munge_colour()} for the format of the colour array.[m
[32m+[m[32m   *[m
[32m+[m[32m   * @param float $x[m
[32m+[m[32m   * @param float $y[m
[32m+[m[32m   * @param string $text the text to write[m
[32m+[m[32m   * @param string $font the font file to use[m
[32m+[m[32m   * @param float $size the font size, in points[m
[32m+[m[32m   * @param array $color[m
[32m+[m[32m   * @param float $adjust word spacing adjustment[m
[32m+[m[32m   */[m
[32m+[m[32m  function text($x, $y, $text, $font, $size, $color = array(0,0,0), $adjust = 0) {[m
[32m+[m[32m    // FIXME[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  function javascript($code) {[m
[32m+[m[32m    // FIXME[m
[32m+[m[32m  }[m
[32m+[m[41m  [m
[32m+[m[32m  /**[m
[32m+[m[32m   * Add a named destination (similar to <a name="foo">...</a> in html)[m
[32m+[m[32m   *[m
[32m+[m[32m   * @param string $anchorname The name of the named destination[m
[32m+[m[32m   */[m
[32m+[m[32m  function add_named_dest($anchorname) {[m
[32m+[m[32m    // FIXME[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Add a link to the pdf[m
[32m+[m[32m   *[m
[32m+[m[32m   * @param string $url The url to link to[m
[32m+[m[32m   * @param float  $x   The x position of the link[m
[32m+[m[32m   * @param float  $y   The y position of the link[m
[32m+[m[32m   * @param float  $width   The width of the link[m
[32m+[m[32m   * @param float  $height   The height of the link[m
[32m+[m[32m   */[m
[32m+[m[32m  function add_link($url, $x, $y, $width, $height) {[m
[32m+[m[32m    // FIXME[m
[32m+[m[32m  }[m
[32m+[m[41m  [m
[32m+[m[32m  /**[m
[32m+[m[32m   * Add meta information to the PDF[m
[32m+[m[32m   *[m
[32m+[m[32m   * @param string $label  label of the value (Creator, Producer, etc.)[m
[32m+[m[32m   * @param string $value  the text to set[m
[32m+[m[32m   */[m
[32m+[m[32m  function add_info($label, $value) {[m
[32m+[m[32m    $method = "Set$label";[m
[32m+[m[32m    if ( in_array("Title", "Author", "Keywords", "Subject") && method_exists($this->_pdf, $method) ) {[m
[32m+[m[32m      $this->_pdf->$method($value);[m
[32m+[m[32m    }[m
[32m+[m[32m  }[m
[32m+[m[41m  [m
[32m+[m[32m  /**[m
[32m+[m[32m   * Calculates text size, in points[m
[32m+[m[32m   *[m
[32m+[m[32m   * @param string $text the text to be sized[m
[32m+[m[32m   * @param string $font the desired font[m
[32m+[m[32m   * @param float  $size the desired font size[m
[32m+[m[32m   * @param float  $spacing word spacing, if any[m
[32m+[m[32m   * @return float[m
[32m+[m[32m   */[m
[32m+[m[32m  function get_text_width($text, $font, $size, $spacing = 0) {[m
[32m+[m[32m    // FIXME[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * Calculates font height, in points[m
[32m+[m[32m   *[m
[32m+[m[32m   * @param string $font[m
[32m+[m[32m   * @param float $size[m
[32m+[m[32m   * @return float[m
[32m+[m[32m   */[m
[32m+[m[32m  function get_font_height($font, $size) {[m
[32m+[m[32m    // FIXME[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[41m  [m
[32m+[m[32m  /**[m
[32m+[m[32m   * Starts a new page[m
[32m+[m[32m   *[m
[32m+[m[32m   * Subsequent drawing operations will appear